require.config({
    config: {
        'jsbuild':{"jquery/jquery-ui.js":"/*! jQuery UI - v1.10.4 - 2014-01-17\r\n* http://jqueryui.com\r\n* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js\r\n* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */\r\n\r\n(function( $, undefined ) {\r\n\r\nvar uuid = 0,\r\n\truniqueId = /^ui-id-\\d+$/;\r\n\r\n// $.ui might exist from components with no dependencies, e.g., $.ui.position\r\n$.ui = $.ui || {};\r\n\r\n$.extend( $.ui, {\r\n\tversion: \"1.10.4\",\r\n\r\n\tkeyCode: {\r\n\t\tBACKSPACE: 8,\r\n\t\tCOMMA: 188,\r\n\t\tDELETE: 46,\r\n\t\tDOWN: 40,\r\n\t\tEND: 35,\r\n\t\tENTER: 13,\r\n\t\tESCAPE: 27,\r\n\t\tHOME: 36,\r\n\t\tLEFT: 37,\r\n\t\tNUMPAD_ADD: 107,\r\n\t\tNUMPAD_DECIMAL: 110,\r\n\t\tNUMPAD_DIVIDE: 111,\r\n\t\tNUMPAD_ENTER: 108,\r\n\t\tNUMPAD_MULTIPLY: 106,\r\n\t\tNUMPAD_SUBTRACT: 109,\r\n\t\tPAGE_DOWN: 34,\r\n\t\tPAGE_UP: 33,\r\n\t\tPERIOD: 190,\r\n\t\tRIGHT: 39,\r\n\t\tSPACE: 32,\r\n\t\tTAB: 9,\r\n\t\tUP: 38\r\n\t}\r\n});\r\n\r\n// plugins\r\n$.fn.extend({\r\n\tfocus: (function( orig ) {\r\n\t\treturn function( delay, fn ) {\r\n\t\t\treturn typeof delay === \"number\" ?\r\n\t\t\t\tthis.each(function() {\r\n\t\t\t\t\tvar elem = this;\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t$( elem ).focus();\r\n\t\t\t\t\t\tif ( fn ) {\r\n\t\t\t\t\t\t\tfn.call( elem );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, delay );\r\n\t\t\t\t}) :\r\n\t\t\t\torig.apply( this, arguments );\r\n\t\t};\r\n\t})( $.fn.focus ),\r\n\r\n\tscrollParent: function() {\r\n\t\tvar scrollParent;\r\n\t\tif (($.ui.ie && (/(static|relative)/).test(this.css(\"position\"))) || (/absolute/).test(this.css(\"position\"))) {\r\n\t\t\tscrollParent = this.parents().filter(function() {\r\n\t\t\t\treturn (/(relative|absolute|fixed)/).test($.css(this,\"position\")) && (/(auto|scroll)/).test($.css(this,\"overflow\")+$.css(this,\"overflow-y\")+$.css(this,\"overflow-x\"));\r\n\t\t\t}).eq(0);\r\n\t\t} else {\r\n\t\t\tscrollParent = this.parents().filter(function() {\r\n\t\t\t\treturn (/(auto|scroll)/).test($.css(this,\"overflow\")+$.css(this,\"overflow-y\")+$.css(this,\"overflow-x\"));\r\n\t\t\t}).eq(0);\r\n\t\t}\r\n\r\n\t\treturn (/fixed/).test(this.css(\"position\")) || !scrollParent.length ? $(document) : scrollParent;\r\n\t},\r\n\r\n\tzIndex: function( zIndex ) {\r\n\t\tif ( zIndex !== undefined ) {\r\n\t\t\treturn this.css( \"zIndex\", zIndex );\r\n\t\t}\r\n\r\n\t\tif ( this.length ) {\r\n\t\t\tvar elem = $( this[ 0 ] ), position, value;\r\n\t\t\twhile ( elem.length && elem[ 0 ] !== document ) {\r\n\t\t\t\t// Ignore z-index if position is set to a value where z-index is ignored by the browser\r\n\t\t\t\t// This makes behavior of this function consistent across browsers\r\n\t\t\t\t// WebKit always returns auto if the element is positioned\r\n\t\t\t\tposition = elem.css( \"position\" );\r\n\t\t\t\tif ( position === \"absolute\" || position === \"relative\" || position === \"fixed\" ) {\r\n\t\t\t\t\t// IE returns 0 when zIndex is not specified\r\n\t\t\t\t\t// other browsers return a string\r\n\t\t\t\t\t// we ignore the case of nested elements with an explicit value of 0\r\n\t\t\t\t\t// <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\r\n\t\t\t\t\tvalue = parseInt( elem.css( \"zIndex\" ), 10 );\r\n\t\t\t\t\tif ( !isNaN( value ) && value !== 0 ) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telem = elem.parent();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t},\r\n\r\n\tuniqueId: function() {\r\n\t\treturn this.each(function() {\r\n\t\t\tif ( !this.id ) {\r\n\t\t\t\tthis.id = \"ui-id-\" + (++uuid);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tremoveUniqueId: function() {\r\n\t\treturn this.each(function() {\r\n\t\t\tif ( runiqueId.test( this.id ) ) {\r\n\t\t\t\t$( this ).removeAttr( \"id\" );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\n// selectors\r\nfunction focusable( element, isTabIndexNotNaN ) {\r\n\tvar map, mapName, img,\r\n\t\tnodeName = element.nodeName.toLowerCase();\r\n\tif ( \"area\" === nodeName ) {\r\n\t\tmap = element.parentNode;\r\n\t\tmapName = map.name;\r\n\t\tif ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\timg = $( \"img[usemap=#\" + mapName + \"]\" )[0];\r\n\t\treturn !!img && visible( img );\r\n\t}\r\n\treturn ( /input|select|textarea|button|object/.test( nodeName ) ?\r\n\t\t!element.disabled :\r\n\t\t\"a\" === nodeName ?\r\n\t\t\telement.href || isTabIndexNotNaN :\r\n\t\t\tisTabIndexNotNaN) &&\r\n\t\t// the element and all of its ancestors must be visible\r\n\t\tvisible( element );\r\n}\r\n\r\nfunction visible( element ) {\r\n\treturn $.expr.filters.visible( element ) &&\r\n\t\t!$( element ).parents().addBack().filter(function() {\r\n\t\t\treturn $.css( this, \"visibility\" ) === \"hidden\";\r\n\t\t}).length;\r\n}\r\n\r\n$.extend( $.expr[ \":\" ], {\r\n\tdata: $.expr.createPseudo ?\r\n\t\t$.expr.createPseudo(function( dataName ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn !!$.data( elem, dataName );\r\n\t\t\t};\r\n\t\t}) :\r\n\t\t// support: jQuery <1.8\r\n\t\tfunction( elem, i, match ) {\r\n\t\t\treturn !!$.data( elem, match[ 3 ] );\r\n\t\t},\r\n\r\n\tfocusable: function( element ) {\r\n\t\treturn focusable( element, !isNaN( $.attr( element, \"tabindex\" ) ) );\r\n\t},\r\n\r\n\ttabbable: function( element ) {\r\n\t\tvar tabIndex = $.attr( element, \"tabindex\" ),\r\n\t\t\tisTabIndexNaN = isNaN( tabIndex );\r\n\t\treturn ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );\r\n\t}\r\n});\r\n\r\n// support: jQuery <1.8\r\nif ( !$( \"<a>\" ).outerWidth( 1 ).jquery ) {\r\n\t$.each( [ \"Width\", \"Height\" ], function( i, name ) {\r\n\t\tvar side = name === \"Width\" ? [ \"Left\", \"Right\" ] : [ \"Top\", \"Bottom\" ],\r\n\t\t\ttype = name.toLowerCase(),\r\n\t\t\torig = {\r\n\t\t\t\tinnerWidth: $.fn.innerWidth,\r\n\t\t\t\tinnerHeight: $.fn.innerHeight,\r\n\t\t\t\touterWidth: $.fn.outerWidth,\r\n\t\t\t\touterHeight: $.fn.outerHeight\r\n\t\t\t};\r\n\r\n\t\tfunction reduce( elem, size, border, margin ) {\r\n\t\t\t$.each( side, function() {\r\n\t\t\t\tsize -= parseFloat( $.css( elem, \"padding\" + this ) ) || 0;\r\n\t\t\t\tif ( border ) {\r\n\t\t\t\t\tsize -= parseFloat( $.css( elem, \"border\" + this + \"Width\" ) ) || 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ( margin ) {\r\n\t\t\t\t\tsize -= parseFloat( $.css( elem, \"margin\" + this ) ) || 0;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn size;\r\n\t\t}\r\n\r\n\t\t$.fn[ \"inner\" + name ] = function( size ) {\r\n\t\t\tif ( size === undefined ) {\r\n\t\t\t\treturn orig[ \"inner\" + name ].call( this );\r\n\t\t\t}\r\n\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\t$( this ).css( type, reduce( this, size ) + \"px\" );\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn[ \"outer\" + name] = function( size, margin ) {\r\n\t\t\tif ( typeof size !== \"number\" ) {\r\n\t\t\t\treturn orig[ \"outer\" + name ].call( this, size );\r\n\t\t\t}\r\n\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\t$( this).css( type, reduce( this, size, true, margin ) + \"px\" );\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n}\r\n\r\n// support: jQuery <1.8\r\nif ( !$.fn.addBack ) {\r\n\t$.fn.addBack = function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t};\r\n}\r\n\r\n// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)\r\nif ( $( \"<a>\" ).data( \"a-b\", \"a\" ).removeData( \"a-b\" ).data( \"a-b\" ) ) {\r\n\t$.fn.removeData = (function( removeData ) {\r\n\t\treturn function( key ) {\r\n\t\t\tif ( arguments.length ) {\r\n\t\t\t\treturn removeData.call( this, $.camelCase( key ) );\r\n\t\t\t} else {\r\n\t\t\t\treturn removeData.call( this );\r\n\t\t\t}\r\n\t\t};\r\n\t})( $.fn.removeData );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// deprecated\r\n$.ui.ie = !!/msie [\\w.]+/.exec( navigator.userAgent.toLowerCase() );\r\n\r\n$.support.selectstart = \"onselectstart\" in document.createElement( \"div\" );\r\n$.fn.extend({\r\n\tdisableSelection: function() {\r\n\t\treturn this.bind( ( $.support.selectstart ? \"selectstart\" : \"mousedown\" ) +\r\n\t\t\t\".ui-disableSelection\", function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t});\r\n\t},\r\n\r\n\tenableSelection: function() {\r\n\t\treturn this.unbind( \".ui-disableSelection\" );\r\n\t}\r\n});\r\n\r\n$.extend( $.ui, {\r\n\t// $.ui.plugin is deprecated. Use $.widget() extensions instead.\r\n\tplugin: {\r\n\t\tadd: function( module, option, set ) {\r\n\t\t\tvar i,\r\n\t\t\t\tproto = $.ui[ module ].prototype;\r\n\t\t\tfor ( i in set ) {\r\n\t\t\t\tproto.plugins[ i ] = proto.plugins[ i ] || [];\r\n\t\t\t\tproto.plugins[ i ].push( [ option, set[ i ] ] );\r\n\t\t\t}\r\n\t\t},\r\n\t\tcall: function( instance, name, args ) {\r\n\t\t\tvar i,\r\n\t\t\t\tset = instance.plugins[ name ];\r\n\t\t\tif ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < set.length; i++ ) {\r\n\t\t\t\tif ( instance.options[ set[ i ][ 0 ] ] ) {\r\n\t\t\t\t\tset[ i ][ 1 ].apply( instance.element, args );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// only used by resizable\r\n\thasScroll: function( el, a ) {\r\n\r\n\t\t//If overflow is hidden, the element might have extra content, but the user wants to hide it\r\n\t\tif ( $( el ).css( \"overflow\" ) === \"hidden\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar scroll = ( a && a === \"left\" ) ? \"scrollLeft\" : \"scrollTop\",\r\n\t\t\thas = false;\r\n\r\n\t\tif ( el[ scroll ] > 0 ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// TODO: determine which cases actually cause this to happen\r\n\t\t// if the element doesn't have the scroll set, see if it's possible to\r\n\t\t// set the scroll\r\n\t\tel[ scroll ] = 1;\r\n\t\thas = ( el[ scroll ] > 0 );\r\n\t\tel[ scroll ] = 0;\r\n\t\treturn has;\r\n\t}\r\n});\r\n\r\n})( jQuery );\r\n\r\n(function( $, undefined ) {\r\n\r\nvar uuid = 0,\r\n\tslice = Array.prototype.slice,\r\n\t_cleanData = $.cleanData;\r\n$.cleanData = function( elems ) {\r\n\tfor ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {\r\n\t\ttry {\r\n\t\t\t$( elem ).triggerHandler( \"remove\" );\r\n\t\t// http://bugs.jquery.com/ticket/8235\r\n\t\t} catch( e ) {}\r\n\t}\r\n\t_cleanData( elems );\r\n};\r\n\r\n$.widget = function( name, base, prototype ) {\r\n\tvar fullName, existingConstructor, constructor, basePrototype,\r\n\t\t// proxiedPrototype allows the provided prototype to remain unmodified\r\n\t\t// so that it can be used as a mixin for multiple widgets (#8876)\r\n\t\tproxiedPrototype = {},\r\n\t\tnamespace = name.split( \".\" )[ 0 ];\r\n\r\n\tname = name.split( \".\" )[ 1 ];\r\n\tfullName = namespace + \"-\" + name;\r\n\r\n\tif ( !prototype ) {\r\n\t\tprototype = base;\r\n\t\tbase = $.Widget;\r\n\t}\r\n\r\n\t// create selector for plugin\r\n\t$.expr[ \":\" ][ fullName.toLowerCase() ] = function( elem ) {\r\n\t\treturn !!$.data( elem, fullName );\r\n\t};\r\n\r\n\t$[ namespace ] = $[ namespace ] || {};\r\n\texistingConstructor = $[ namespace ][ name ];\r\n\tconstructor = $[ namespace ][ name ] = function( options, element ) {\r\n\t\t// allow instantiation without \"new\" keyword\r\n\t\tif ( !this._createWidget ) {\r\n\t\t\treturn new constructor( options, element );\r\n\t\t}\r\n\r\n\t\t// allow instantiation without initializing for simple inheritance\r\n\t\t// must use \"new\" keyword (the code above always passes args)\r\n\t\tif ( arguments.length ) {\r\n\t\t\tthis._createWidget( options, element );\r\n\t\t}\r\n\t};\r\n\t// extend with the existing constructor to carry over any static properties\r\n\t$.extend( constructor, existingConstructor, {\r\n\t\tversion: prototype.version,\r\n\t\t// copy the object used to create the prototype in case we need to\r\n\t\t// redefine the widget later\r\n\t\t_proto: $.extend( {}, prototype ),\r\n\t\t// track widgets that inherit from this widget in case this widget is\r\n\t\t// redefined after a widget inherits from it\r\n\t\t_childConstructors: []\r\n\t});\r\n\r\n\tbasePrototype = new base();\r\n\t// we need to make the options hash a property directly on the new instance\r\n\t// otherwise we'll modify the options hash on the prototype that we're\r\n\t// inheriting from\r\n\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\r\n\t$.each( prototype, function( prop, value ) {\r\n\t\tif ( !$.isFunction( value ) ) {\r\n\t\t\tproxiedPrototype[ prop ] = value;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tproxiedPrototype[ prop ] = (function() {\r\n\t\t\tvar _super = function() {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\r\n\t\t\t\t},\r\n\t\t\t\t_superApply = function( args ) {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, args );\r\n\t\t\t\t};\r\n\t\t\treturn function() {\r\n\t\t\t\tvar __super = this._super,\r\n\t\t\t\t\t__superApply = this._superApply,\r\n\t\t\t\t\treturnValue;\r\n\r\n\t\t\t\tthis._super = _super;\r\n\t\t\t\tthis._superApply = _superApply;\r\n\r\n\t\t\t\treturnValue = value.apply( this, arguments );\r\n\r\n\t\t\t\tthis._super = __super;\r\n\t\t\t\tthis._superApply = __superApply;\r\n\r\n\t\t\t\treturn returnValue;\r\n\t\t\t};\r\n\t\t})();\r\n\t});\r\n\tconstructor.prototype = $.widget.extend( basePrototype, {\r\n\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\twidgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name\r\n\t}, proxiedPrototype, {\r\n\t\tconstructor: constructor,\r\n\t\tnamespace: namespace,\r\n\t\twidgetName: name,\r\n\t\twidgetFullName: fullName\r\n\t});\r\n\r\n\t// If this widget is being redefined then we need to find all widgets that\r\n\t// are inheriting from it and redefine all of them so that they inherit from\r\n\t// the new version of this widget. We're essentially trying to replace one\r\n\t// level in the prototype chain.\r\n\tif ( existingConstructor ) {\r\n\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\r\n\t\t\tvar childPrototype = child.prototype;\r\n\r\n\t\t\t// redefine the child widget using the same prototype that was\r\n\t\t\t// originally used, but inherit from the new version of the base\r\n\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor, child._proto );\r\n\t\t});\r\n\t\t// remove the list of existing child constructors from the old constructor\r\n\t\t// so the old child constructors can be garbage collected\r\n\t\tdelete existingConstructor._childConstructors;\r\n\t} else {\r\n\t\tbase._childConstructors.push( constructor );\r\n\t}\r\n\r\n\t$.widget.bridge( name, constructor );\r\n};\r\n\r\n$.widget.extend = function( target ) {\r\n\tvar input = slice.call( arguments, 1 ),\r\n\t\tinputIndex = 0,\r\n\t\tinputLength = input.length,\r\n\t\tkey,\r\n\t\tvalue;\r\n\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\r\n\t\tfor ( key in input[ inputIndex ] ) {\r\n\t\t\tvalue = input[ inputIndex ][ key ];\r\n\t\t\tif ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {\r\n\t\t\t\t// Clone objects\r\n\t\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\r\n\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\r\n\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t\t$.widget.extend( {}, value );\r\n\t\t\t\t// Copy everything else by reference\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget[ key ] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn target;\r\n};\r\n\r\n$.widget.bridge = function( name, object ) {\r\n\tvar fullName = object.prototype.widgetFullName || name;\r\n\t$.fn[ name ] = function( options ) {\r\n\t\tvar isMethodCall = typeof options === \"string\",\r\n\t\t\targs = slice.call( arguments, 1 ),\r\n\t\t\treturnValue = this;\r\n\r\n\t\t// allow multiple hashes to be passed on init\r\n\t\toptions = !isMethodCall && args.length ?\r\n\t\t\t$.widget.extend.apply( null, [ options ].concat(args) ) :\r\n\t\t\toptions;\r\n\r\n\t\tif ( isMethodCall ) {\r\n\t\t\tthis.each(function() {\r\n\t\t\t\tvar methodValue,\r\n\t\t\t\t\tinstance = $.data( this, fullName );\r\n\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\treturn $.error( \"cannot call methods on \" + name + \" prior to initialization; \" +\r\n\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t}\r\n\t\t\t\tif ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name + \" widget instance\" );\r\n\t\t\t\t}\r\n\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.each(function() {\r\n\t\t\t\tvar instance = $.data( this, fullName );\r\n\t\t\t\tif ( instance ) {\r\n\t\t\t\t\tinstance.option( options || {} )._init();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn returnValue;\r\n\t};\r\n};\r\n\r\n$.Widget = function( /* options, element */ ) {};\r\n$.Widget._childConstructors = [];\r\n\r\n$.Widget.prototype = {\r\n\twidgetName: \"widget\",\r\n\twidgetEventPrefix: \"\",\r\n\tdefaultElement: \"<div>\",\r\n\toptions: {\r\n\t\tdisabled: false,\r\n\r\n\t\t// callbacks\r\n\t\tcreate: null\r\n\t},\r\n\t_createWidget: function( options, element ) {\r\n\t\telement = $( element || this.defaultElement || this )[ 0 ];\r\n\t\tthis.element = $( element );\r\n\t\tthis.uuid = uuid++;\r\n\t\tthis.eventNamespace = \".\" + this.widgetName + this.uuid;\r\n\t\tthis.options = $.widget.extend( {},\r\n\t\t\tthis.options,\r\n\t\t\tthis._getCreateOptions(),\r\n\t\t\toptions );\r\n\r\n\t\tthis.bindings = $();\r\n\t\tthis.hoverable = $();\r\n\t\tthis.focusable = $();\r\n\r\n\t\tif ( element !== this ) {\r\n\t\t\t$.data( element, this.widgetFullName, this );\r\n\t\t\tthis._on( true, this.element, {\r\n\t\t\t\tremove: function( event ) {\r\n\t\t\t\t\tif ( event.target === element ) {\r\n\t\t\t\t\t\tthis.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.document = $( element.style ?\r\n\t\t\t\t// element within the document\r\n\t\t\t\telement.ownerDocument :\r\n\t\t\t\t// element is window or document\r\n\t\t\t\telement.document || element );\r\n\t\t\tthis.window = $( this.document[0].defaultView || this.document[0].parentWindow );\r\n\t\t}\r\n\r\n\t\tthis._create();\r\n\t\tthis._trigger( \"create\", null, this._getCreateEventData() );\r\n\t\tthis._init();\r\n\t},\r\n\t_getCreateOptions: $.noop,\r\n\t_getCreateEventData: $.noop,\r\n\t_create: $.noop,\r\n\t_init: $.noop,\r\n\r\n\tdestroy: function() {\r\n\t\tthis._destroy();\r\n\t\t// we can probably remove the unbind calls in 2.0\r\n\t\t// all event bindings should go through this._on()\r\n\t\tthis.element\r\n\t\t\t.unbind( this.eventNamespace )\r\n\t\t\t// 1.9 BC for #7810\r\n\t\t\t// TODO remove dual storage\r\n\t\t\t.removeData( this.widgetName )\r\n\t\t\t.removeData( this.widgetFullName )\r\n\t\t\t// support: jquery <1.6.3\r\n\t\t\t// http://bugs.jquery.com/ticket/9413\r\n\t\t\t.removeData( $.camelCase( this.widgetFullName ) );\r\n\t\tthis.widget()\r\n\t\t\t.unbind( this.eventNamespace )\r\n\t\t\t.removeAttr( \"aria-disabled\" )\r\n\t\t\t.removeClass(\r\n\t\t\t\tthis.widgetFullName + \"-disabled \" +\r\n\t\t\t\t\"ui-state-disabled\" );\r\n\r\n\t\t// clean up events and states\r\n\t\tthis.bindings.unbind( this.eventNamespace );\r\n\t\tthis.hoverable.removeClass( \"ui-state-hover\" );\r\n\t\tthis.focusable.removeClass( \"ui-state-focus\" );\r\n\t},\r\n\t_destroy: $.noop,\r\n\r\n\twidget: function() {\r\n\t\treturn this.element;\r\n\t},\r\n\r\n\toption: function( key, value ) {\r\n\t\tvar options = key,\r\n\t\t\tparts,\r\n\t\t\tcurOption,\r\n\t\t\ti;\r\n\r\n\t\tif ( arguments.length === 0 ) {\r\n\t\t\t// don't return a reference to the internal hash\r\n\t\t\treturn $.widget.extend( {}, this.options );\r\n\t\t}\r\n\r\n\t\tif ( typeof key === \"string\" ) {\r\n\t\t\t// handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n\t\t\toptions = {};\r\n\t\t\tparts = key.split( \".\" );\r\n\t\t\tkey = parts.shift();\r\n\t\t\tif ( parts.length ) {\r\n\t\t\t\tcurOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );\r\n\t\t\t\tfor ( i = 0; i < parts.length - 1; i++ ) {\r\n\t\t\t\t\tcurOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n\t\t\t\t\tcurOption = curOption[ parts[ i ] ];\r\n\t\t\t\t}\r\n\t\t\t\tkey = parts.pop();\r\n\t\t\t\tif ( arguments.length === 1 ) {\r\n\t\t\t\t\treturn curOption[ key ] === undefined ? null : curOption[ key ];\r\n\t\t\t\t}\r\n\t\t\t\tcurOption[ key ] = value;\r\n\t\t\t} else {\r\n\t\t\t\tif ( arguments.length === 1 ) {\r\n\t\t\t\t\treturn this.options[ key ] === undefined ? null : this.options[ key ];\r\n\t\t\t\t}\r\n\t\t\t\toptions[ key ] = value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._setOptions( options );\r\n\r\n\t\treturn this;\r\n\t},\r\n\t_setOptions: function( options ) {\r\n\t\tvar key;\r\n\r\n\t\tfor ( key in options ) {\r\n\t\t\tthis._setOption( key, options[ key ] );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t_setOption: function( key, value ) {\r\n\t\tthis.options[ key ] = value;\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis.widget()\r\n\t\t\t\t.toggleClass( this.widgetFullName + \"-disabled ui-state-disabled\", !!value )\r\n\t\t\t\t.attr( \"aria-disabled\", value );\r\n\t\t\tthis.hoverable.removeClass( \"ui-state-hover\" );\r\n\t\t\tthis.focusable.removeClass( \"ui-state-focus\" );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tenable: function() {\r\n\t\treturn this._setOption( \"disabled\", false );\r\n\t},\r\n\tdisable: function() {\r\n\t\treturn this._setOption( \"disabled\", true );\r\n\t},\r\n\r\n\t_on: function( suppressDisabledCheck, element, handlers ) {\r\n\t\tvar delegateElement,\r\n\t\t\tinstance = this;\r\n\r\n\t\t// no suppressDisabledCheck flag, shuffle arguments\r\n\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\r\n\t\t\thandlers = element;\r\n\t\t\telement = suppressDisabledCheck;\r\n\t\t\tsuppressDisabledCheck = false;\r\n\t\t}\r\n\r\n\t\t// no element argument, shuffle and use this.element\r\n\t\tif ( !handlers ) {\r\n\t\t\thandlers = element;\r\n\t\t\telement = this.element;\r\n\t\t\tdelegateElement = this.widget();\r\n\t\t} else {\r\n\t\t\t// accept selectors, DOM elements\r\n\t\t\telement = delegateElement = $( element );\r\n\t\t\tthis.bindings = this.bindings.add( element );\r\n\t\t}\r\n\r\n\t\t$.each( handlers, function( event, handler ) {\r\n\t\t\tfunction handlerProxy() {\r\n\t\t\t\t// allow widgets to customize the disabled handling\r\n\t\t\t\t// - disabled as an array instead of boolean\r\n\t\t\t\t// - disabled class as method for disabling individual parts\r\n\t\t\t\tif ( !suppressDisabledCheck &&\r\n\t\t\t\t\t\t( instance.options.disabled === true ||\r\n\t\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t}\r\n\r\n\t\t\t// copy the guid so direct unbinding works\r\n\t\t\tif ( typeof handler !== \"string\" ) {\r\n\t\t\t\thandlerProxy.guid = handler.guid =\r\n\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\r\n\t\t\t}\r\n\r\n\t\t\tvar match = event.match( /^(\\w+)\\s*(.*)$/ ),\r\n\t\t\t\teventName = match[1] + instance.eventNamespace,\r\n\t\t\t\tselector = match[2];\r\n\t\t\tif ( selector ) {\r\n\t\t\t\tdelegateElement.delegate( selector, eventName, handlerProxy );\r\n\t\t\t} else {\r\n\t\t\t\telement.bind( eventName, handlerProxy );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_off: function( element, eventName ) {\r\n\t\teventName = (eventName || \"\").split( \" \" ).join( this.eventNamespace + \" \" ) + this.eventNamespace;\r\n\t\telement.unbind( eventName ).undelegate( eventName );\r\n\t},\r\n\r\n\t_delay: function( handler, delay ) {\r\n\t\tfunction handlerProxy() {\r\n\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t.apply( instance, arguments );\r\n\t\t}\r\n\t\tvar instance = this;\r\n\t\treturn setTimeout( handlerProxy, delay || 0 );\r\n\t},\r\n\r\n\t_hoverable: function( element ) {\r\n\t\tthis.hoverable = this.hoverable.add( element );\r\n\t\tthis._on( element, {\r\n\t\t\tmouseenter: function( event ) {\r\n\t\t\t\t$( event.currentTarget ).addClass( \"ui-state-hover\" );\r\n\t\t\t},\r\n\t\t\tmouseleave: function( event ) {\r\n\t\t\t\t$( event.currentTarget ).removeClass( \"ui-state-hover\" );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_focusable: function( element ) {\r\n\t\tthis.focusable = this.focusable.add( element );\r\n\t\tthis._on( element, {\r\n\t\t\tfocusin: function( event ) {\r\n\t\t\t\t$( event.currentTarget ).addClass( \"ui-state-focus\" );\r\n\t\t\t},\r\n\t\t\tfocusout: function( event ) {\r\n\t\t\t\t$( event.currentTarget ).removeClass( \"ui-state-focus\" );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_trigger: function( type, event, data ) {\r\n\t\tvar prop, orig,\r\n\t\t\tcallback = this.options[ type ];\r\n\r\n\t\tdata = data || {};\r\n\t\tevent = $.Event( event );\r\n\t\tevent.type = ( type === this.widgetEventPrefix ?\r\n\t\t\ttype :\r\n\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\r\n\t\t// the original event may come from any element\r\n\t\t// so we need to reset the target on the new event\r\n\t\tevent.target = this.element[ 0 ];\r\n\r\n\t\t// copy original event properties over to the new event\r\n\t\torig = event.originalEvent;\r\n\t\tif ( orig ) {\r\n\t\t\tfor ( prop in orig ) {\r\n\t\t\t\tif ( !( prop in event ) ) {\r\n\t\t\t\t\tevent[ prop ] = orig[ prop ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.trigger( event, data );\r\n\t\treturn !( $.isFunction( callback ) &&\r\n\t\t\tcallback.apply( this.element[0], [ event ].concat( data ) ) === false ||\r\n\t\t\tevent.isDefaultPrevented() );\r\n\t}\r\n};\r\n\r\n$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\r\n\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\r\n\t\tif ( typeof options === \"string\" ) {\r\n\t\t\toptions = { effect: options };\r\n\t\t}\r\n\t\tvar hasOptions,\r\n\t\t\teffectName = !options ?\r\n\t\t\t\tmethod :\r\n\t\t\t\toptions === true || typeof options === \"number\" ?\r\n\t\t\t\t\tdefaultEffect :\r\n\t\t\t\t\toptions.effect || defaultEffect;\r\n\t\toptions = options || {};\r\n\t\tif ( typeof options === \"number\" ) {\r\n\t\t\toptions = { duration: options };\r\n\t\t}\r\n\t\thasOptions = !$.isEmptyObject( options );\r\n\t\toptions.complete = callback;\r\n\t\tif ( options.delay ) {\r\n\t\t\telement.delay( options.delay );\r\n\t\t}\r\n\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\r\n\t\t\telement[ method ]( options );\r\n\t\t} else if ( effectName !== method && element[ effectName ] ) {\r\n\t\t\telement[ effectName ]( options.duration, options.easing, callback );\r\n\t\t} else {\r\n\t\t\telement.queue(function( next ) {\r\n\t\t\t\t$( this )[ method ]();\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback.call( element[ 0 ] );\r\n\t\t\t\t}\r\n\t\t\t\tnext();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n});\r\n\r\n})( jQuery );\r\n\r\n(function( $, undefined ) {\r\n\r\nvar mouseHandled = false;\r\n$( document ).mouseup( function() {\r\n\tmouseHandled = false;\r\n});\r\n\r\n$.widget(\"ui.mouse\", {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\tcancel: \"input,textarea,button,select,option\",\r\n\t\tdistance: 1,\r\n\t\tdelay: 0\r\n\t},\r\n\t_mouseInit: function() {\r\n\t\tvar that = this;\r\n\r\n\t\tthis.element\r\n\t\t\t.bind(\"mousedown.\"+this.widgetName, function(event) {\r\n\t\t\t\treturn that._mouseDown(event);\r\n\t\t\t})\r\n\t\t\t.bind(\"click.\"+this.widgetName, function(event) {\r\n\t\t\t\tif (true === $.data(event.target, that.widgetName + \".preventClickEvent\")) {\r\n\t\t\t\t\t$.removeData(event.target, that.widgetName + \".preventClickEvent\");\r\n\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis.started = false;\r\n\t},\r\n\r\n\t// TODO: make sure destroying one instance of mouse doesn't mess with\r\n\t// other instances of mouse\r\n\t_mouseDestroy: function() {\r\n\t\tthis.element.unbind(\".\"+this.widgetName);\r\n\t\tif ( this._mouseMoveDelegate ) {\r\n\t\t\t$(document)\r\n\t\t\t\t.unbind(\"mousemove.\"+this.widgetName, this._mouseMoveDelegate)\r\n\t\t\t\t.unbind(\"mouseup.\"+this.widgetName, this._mouseUpDelegate);\r\n\t\t}\r\n\t},\r\n\r\n\t_mouseDown: function(event) {\r\n\t\t// don't let more than one widget handle mouseStart\r\n\t\tif( mouseHandled ) { return; }\r\n\r\n\t\t// we may have missed mouseup (out of window)\r\n\t\t(this._mouseStarted && this._mouseUp(event));\r\n\r\n\t\tthis._mouseDownEvent = event;\r\n\r\n\t\tvar that = this,\r\n\t\t\tbtnIsLeft = (event.which === 1),\r\n\t\t\t// event.target.nodeName works around a bug in IE 8 with\r\n\t\t\t// disabled inputs (#7620)\r\n\t\t\telIsCancel = (typeof this.options.cancel === \"string\" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);\r\n\t\tif (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthis.mouseDelayMet = !this.options.delay;\r\n\t\tif (!this.mouseDelayMet) {\r\n\t\t\tthis._mouseDelayTimer = setTimeout(function() {\r\n\t\t\t\tthat.mouseDelayMet = true;\r\n\t\t\t}, this.options.delay);\r\n\t\t}\r\n\r\n\t\tif (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\r\n\t\t\tthis._mouseStarted = (this._mouseStart(event) !== false);\r\n\t\t\tif (!this._mouseStarted) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Click event may never have fired (Gecko & Opera)\r\n\t\tif (true === $.data(event.target, this.widgetName + \".preventClickEvent\")) {\r\n\t\t\t$.removeData(event.target, this.widgetName + \".preventClickEvent\");\r\n\t\t}\r\n\r\n\t\t// these delegates are required to keep context\r\n\t\tthis._mouseMoveDelegate = function(event) {\r\n\t\t\treturn that._mouseMove(event);\r\n\t\t};\r\n\t\tthis._mouseUpDelegate = function(event) {\r\n\t\t\treturn that._mouseUp(event);\r\n\t\t};\r\n\t\t$(document)\r\n\t\t\t.bind(\"mousemove.\"+this.widgetName, this._mouseMoveDelegate)\r\n\t\t\t.bind(\"mouseup.\"+this.widgetName, this._mouseUpDelegate);\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tmouseHandled = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseMove: function(event) {\r\n\t\t// IE mouseup check - mouseup happened when mouse was out of window\r\n\t\tif ($.ui.ie && ( !document.documentMode || document.documentMode < 9 ) && !event.button) {\r\n\t\t\treturn this._mouseUp(event);\r\n\t\t}\r\n\r\n\t\tif (this._mouseStarted) {\r\n\t\t\tthis._mouseDrag(event);\r\n\t\t\treturn event.preventDefault();\r\n\t\t}\r\n\r\n\t\tif (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\r\n\t\t\tthis._mouseStarted =\r\n\t\t\t\t(this._mouseStart(this._mouseDownEvent, event) !== false);\r\n\t\t\t(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));\r\n\t\t}\r\n\r\n\t\treturn !this._mouseStarted;\r\n\t},\r\n\r\n\t_mouseUp: function(event) {\r\n\t\t$(document)\r\n\t\t\t.unbind(\"mousemove.\"+this.widgetName, this._mouseMoveDelegate)\r\n\t\t\t.unbind(\"mouseup.\"+this.widgetName, this._mouseUpDelegate);\r\n\r\n\t\tif (this._mouseStarted) {\r\n\t\t\tthis._mouseStarted = false;\r\n\r\n\t\t\tif (event.target === this._mouseDownEvent.target) {\r\n\t\t\t\t$.data(event.target, this.widgetName + \".preventClickEvent\", true);\r\n\t\t\t}\r\n\r\n\t\t\tthis._mouseStop(event);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseDistanceMet: function(event) {\r\n\t\treturn (Math.max(\r\n\t\t\t\tMath.abs(this._mouseDownEvent.pageX - event.pageX),\r\n\t\t\t\tMath.abs(this._mouseDownEvent.pageY - event.pageY)\r\n\t\t\t) >= this.options.distance\r\n\t\t);\r\n\t},\r\n\r\n\t_mouseDelayMet: function(/* event */) {\r\n\t\treturn this.mouseDelayMet;\r\n\t},\r\n\r\n\t// These are placeholder methods, to be overridden by extending plugin\r\n\t_mouseStart: function(/* event */) {},\r\n\t_mouseDrag: function(/* event */) {},\r\n\t_mouseStop: function(/* event */) {},\r\n\t_mouseCapture: function(/* event */) { return true; }\r\n});\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.widget(\"ui.draggable\", $.ui.mouse, {\r\n\tversion: \"1.10.4\",\r\n\twidgetEventPrefix: \"drag\",\r\n\toptions: {\r\n\t\taddClasses: true,\r\n\t\tappendTo: \"parent\",\r\n\t\taxis: false,\r\n\t\tconnectToSortable: false,\r\n\t\tcontainment: false,\r\n\t\tcursor: \"auto\",\r\n\t\tcursorAt: false,\r\n\t\tgrid: false,\r\n\t\thandle: false,\r\n\t\thelper: \"original\",\r\n\t\tiframeFix: false,\r\n\t\topacity: false,\r\n\t\trefreshPositions: false,\r\n\t\trevert: false,\r\n\t\trevertDuration: 500,\r\n\t\tscope: \"default\",\r\n\t\tscroll: true,\r\n\t\tscrollSensitivity: 20,\r\n\t\tscrollSpeed: 20,\r\n\t\tsnap: false,\r\n\t\tsnapMode: \"both\",\r\n\t\tsnapTolerance: 20,\r\n\t\tstack: false,\r\n\t\tzIndex: false,\r\n\r\n\t\t// callbacks\r\n\t\tdrag: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\t_create: function() {\r\n\r\n\t\tif (this.options.helper === \"original\" && !(/^(?:r|a|f)/).test(this.element.css(\"position\"))) {\r\n\t\t\tthis.element[0].style.position = \"relative\";\r\n\t\t}\r\n\t\tif (this.options.addClasses){\r\n\t\t\tthis.element.addClass(\"ui-draggable\");\r\n\t\t}\r\n\t\tif (this.options.disabled){\r\n\t\t\tthis.element.addClass(\"ui-draggable-disabled\");\r\n\t\t}\r\n\r\n\t\tthis._mouseInit();\r\n\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element.removeClass( \"ui-draggable ui-draggable-dragging ui-draggable-disabled\" );\r\n\t\tthis._mouseDestroy();\r\n\t},\r\n\r\n\t_mouseCapture: function(event) {\r\n\r\n\t\tvar o = this.options;\r\n\r\n\t\t// among others, prevent a drag on a resizable-handle\r\n\t\tif (this.helper || o.disabled || $(event.target).closest(\".ui-resizable-handle\").length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Quit if we're not on a valid handle\r\n\t\tthis.handle = this._getHandle(event);\r\n\t\tif (!this.handle) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t$(o.iframeFix === true ? \"iframe\" : o.iframeFix).each(function() {\r\n\t\t\t$(\"<div class='ui-draggable-iframeFix' style='background: #fff;'></div>\")\r\n\t\t\t.css({\r\n\t\t\t\twidth: this.offsetWidth+\"px\", height: this.offsetHeight+\"px\",\r\n\t\t\t\tposition: \"absolute\", opacity: \"0.001\", zIndex: 1000\r\n\t\t\t})\r\n\t\t\t.css($(this).offset())\r\n\t\t\t.appendTo(\"body\");\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_mouseStart: function(event) {\r\n\r\n\t\tvar o = this.options;\r\n\r\n\t\t//Create and append the visible helper\r\n\t\tthis.helper = this._createHelper(event);\r\n\r\n\t\tthis.helper.addClass(\"ui-draggable-dragging\");\r\n\r\n\t\t//Cache the helper size\r\n\t\tthis._cacheHelperProportions();\r\n\r\n\t\t//If ddmanager is used for droppables, set the global draggable\r\n\t\tif($.ui.ddmanager) {\r\n\t\t\t$.ui.ddmanager.current = this;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * - Position generation -\r\n\t\t * This block generates everything position related - it's the core of draggables.\r\n\t\t */\r\n\r\n\t\t//Cache the margins of the original element\r\n\t\tthis._cacheMargins();\r\n\r\n\t\t//Store the helper's css position\r\n\t\tthis.cssPosition = this.helper.css( \"position\" );\r\n\t\tthis.scrollParent = this.helper.scrollParent();\r\n\t\tthis.offsetParent = this.helper.offsetParent();\r\n\t\tthis.offsetParentCssPosition = this.offsetParent.css( \"position\" );\r\n\r\n\t\t//The element's absolute position on the page minus margins\r\n\t\tthis.offset = this.positionAbs = this.element.offset();\r\n\t\tthis.offset = {\r\n\t\t\ttop: this.offset.top - this.margins.top,\r\n\t\t\tleft: this.offset.left - this.margins.left\r\n\t\t};\r\n\r\n\t\t//Reset scroll cache\r\n\t\tthis.offset.scroll = false;\r\n\r\n\t\t$.extend(this.offset, {\r\n\t\t\tclick: { //Where the click happened, relative to the element\r\n\t\t\t\tleft: event.pageX - this.offset.left,\r\n\t\t\t\ttop: event.pageY - this.offset.top\r\n\t\t\t},\r\n\t\t\tparent: this._getParentOffset(),\r\n\t\t\trelative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\r\n\t\t});\r\n\r\n\t\t//Generate the original position\r\n\t\tthis.originalPosition = this.position = this._generatePosition(event);\r\n\t\tthis.originalPageX = event.pageX;\r\n\t\tthis.originalPageY = event.pageY;\r\n\r\n\t\t//Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\r\n\t\t(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));\r\n\r\n\t\t//Set a containment if given in the options\r\n\t\tthis._setContainment();\r\n\r\n\t\t//Trigger event + callbacks\r\n\t\tif(this._trigger(\"start\", event) === false) {\r\n\t\t\tthis._clear();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Recache the helper size\r\n\t\tthis._cacheHelperProportions();\r\n\r\n\t\t//Prepare the droppable offsets\r\n\t\tif ($.ui.ddmanager && !o.dropBehaviour) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets(this, event);\r\n\t\t}\r\n\r\n\r\n\t\tthis._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position\r\n\r\n\t\t//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.dragStart(this, event);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseDrag: function(event, noPropagation) {\r\n\t\t// reset any necessary cached properties (see #5009)\r\n\t\tif ( this.offsetParentCssPosition === \"fixed\" ) {\r\n\t\t\tthis.offset.parent = this._getParentOffset();\r\n\t\t}\r\n\r\n\t\t//Compute the helpers position\r\n\t\tthis.position = this._generatePosition(event);\r\n\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\r\n\r\n\t\t//Call plugins and callbacks and use the resulting position if something is returned\r\n\t\tif (!noPropagation) {\r\n\t\t\tvar ui = this._uiHash();\r\n\t\t\tif(this._trigger(\"drag\", event, ui) === false) {\r\n\t\t\t\tthis._mouseUp({});\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.position = ui.position;\r\n\t\t}\r\n\r\n\t\tif(!this.options.axis || this.options.axis !== \"y\") {\r\n\t\t\tthis.helper[0].style.left = this.position.left+\"px\";\r\n\t\t}\r\n\t\tif(!this.options.axis || this.options.axis !== \"x\") {\r\n\t\t\tthis.helper[0].style.top = this.position.top+\"px\";\r\n\t\t}\r\n\t\tif($.ui.ddmanager) {\r\n\t\t\t$.ui.ddmanager.drag(this, event);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function(event) {\r\n\r\n\t\t//If we are using droppables, inform the manager about the drop\r\n\t\tvar that = this,\r\n\t\t\tdropped = false;\r\n\t\tif ($.ui.ddmanager && !this.options.dropBehaviour) {\r\n\t\t\tdropped = $.ui.ddmanager.drop(this, event);\r\n\t\t}\r\n\r\n\t\t//if a drop comes from outside (a sortable)\r\n\t\tif(this.dropped) {\r\n\t\t\tdropped = this.dropped;\r\n\t\t\tthis.dropped = false;\r\n\t\t}\r\n\r\n\t\t//if the original element is no longer in the DOM don't bother to continue (see #8269)\r\n\t\tif ( this.options.helper === \"original\" && !$.contains( this.element[ 0 ].ownerDocument, this.element[ 0 ] ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif((this.options.revert === \"invalid\" && !dropped) || (this.options.revert === \"valid\" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {\r\n\t\t\t$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {\r\n\t\t\t\tif(that._trigger(\"stop\", event) !== false) {\r\n\t\t\t\t\tthat._clear();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif(this._trigger(\"stop\", event) !== false) {\r\n\t\t\t\tthis._clear();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseUp: function(event) {\r\n\t\t//Remove frame helpers\r\n\t\t$(\"div.ui-draggable-iframeFix\").each(function() {\r\n\t\t\tthis.parentNode.removeChild(this);\r\n\t\t});\r\n\r\n\t\t//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)\r\n\t\tif( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.dragStop(this, event);\r\n\t\t}\r\n\r\n\t\treturn $.ui.mouse.prototype._mouseUp.call(this, event);\r\n\t},\r\n\r\n\tcancel: function() {\r\n\r\n\t\tif(this.helper.is(\".ui-draggable-dragging\")) {\r\n\t\t\tthis._mouseUp({});\r\n\t\t} else {\r\n\t\t\tthis._clear();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t_getHandle: function(event) {\r\n\t\treturn this.options.handle ?\r\n\t\t\t!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :\r\n\t\t\ttrue;\r\n\t},\r\n\r\n\t_createHelper: function(event) {\r\n\r\n\t\tvar o = this.options,\r\n\t\t\thelper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper === \"clone\" ? this.element.clone().removeAttr(\"id\") : this.element);\r\n\r\n\t\tif(!helper.parents(\"body\").length) {\r\n\t\t\thelper.appendTo((o.appendTo === \"parent\" ? this.element[0].parentNode : o.appendTo));\r\n\t\t}\r\n\r\n\t\tif(helper[0] !== this.element[0] && !(/(fixed|absolute)/).test(helper.css(\"position\"))) {\r\n\t\t\thelper.css(\"position\", \"absolute\");\r\n\t\t}\r\n\r\n\t\treturn helper;\r\n\r\n\t},\r\n\r\n\t_adjustOffsetFromHelper: function(obj) {\r\n\t\tif (typeof obj === \"string\") {\r\n\t\t\tobj = obj.split(\" \");\r\n\t\t}\r\n\t\tif ($.isArray(obj)) {\r\n\t\t\tobj = {left: +obj[0], top: +obj[1] || 0};\r\n\t\t}\r\n\t\tif (\"left\" in obj) {\r\n\t\t\tthis.offset.click.left = obj.left + this.margins.left;\r\n\t\t}\r\n\t\tif (\"right\" in obj) {\r\n\t\t\tthis.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\r\n\t\t}\r\n\t\tif (\"top\" in obj) {\r\n\t\t\tthis.offset.click.top = obj.top + this.margins.top;\r\n\t\t}\r\n\t\tif (\"bottom\" in obj) {\r\n\t\t\tthis.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\r\n\t\t}\r\n\t},\r\n\r\n\t_getParentOffset: function() {\r\n\r\n\t\t//Get the offsetParent and cache its position\r\n\t\tvar po = this.offsetParent.offset();\r\n\r\n\t\t// This is a special case where we need to modify a offset calculated on start, since the following happened:\r\n\t\t// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent\r\n\t\t// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that\r\n\t\t//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag\r\n\t\tif(this.cssPosition === \"absolute\" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {\r\n\t\t\tpo.left += this.scrollParent.scrollLeft();\r\n\t\t\tpo.top += this.scrollParent.scrollTop();\r\n\t\t}\r\n\r\n\t\t//This needs to be actually done for all browsers, since pageX/pageY includes this information\r\n\t\t//Ugly IE fix\r\n\t\tif((this.offsetParent[0] === document.body) ||\r\n\t\t\t(this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === \"html\" && $.ui.ie)) {\r\n\t\t\tpo = { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: po.top + (parseInt(this.offsetParent.css(\"borderTopWidth\"),10) || 0),\r\n\t\t\tleft: po.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"),10) || 0)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_getRelativeOffset: function() {\r\n\r\n\t\tif(this.cssPosition === \"relative\") {\r\n\t\t\tvar p = this.element.position();\r\n\t\t\treturn {\r\n\t\t\t\ttop: p.top - (parseInt(this.helper.css(\"top\"),10) || 0) + this.scrollParent.scrollTop(),\r\n\t\t\t\tleft: p.left - (parseInt(this.helper.css(\"left\"),10) || 0) + this.scrollParent.scrollLeft()\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_cacheMargins: function() {\r\n\t\tthis.margins = {\r\n\t\t\tleft: (parseInt(this.element.css(\"marginLeft\"),10) || 0),\r\n\t\t\ttop: (parseInt(this.element.css(\"marginTop\"),10) || 0),\r\n\t\t\tright: (parseInt(this.element.css(\"marginRight\"),10) || 0),\r\n\t\t\tbottom: (parseInt(this.element.css(\"marginBottom\"),10) || 0)\r\n\t\t};\r\n\t},\r\n\r\n\t_cacheHelperProportions: function() {\r\n\t\tthis.helperProportions = {\r\n\t\t\twidth: this.helper.outerWidth(),\r\n\t\t\theight: this.helper.outerHeight()\r\n\t\t};\r\n\t},\r\n\r\n\t_setContainment: function() {\r\n\r\n\t\tvar over, c, ce,\r\n\t\t\to = this.options;\r\n\r\n\t\tif ( !o.containment ) {\r\n\t\t\tthis.containment = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment === \"window\" ) {\r\n\t\t\tthis.containment = [\r\n\t\t\t\t$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,\r\n\t\t\t\t$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,\r\n\t\t\t\t$( window ).scrollLeft() + $( window ).width() - this.helperProportions.width - this.margins.left,\r\n\t\t\t\t$( window ).scrollTop() + ( $( window ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment === \"document\") {\r\n\t\t\tthis.containment = [\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\t$( document ).width() - this.helperProportions.width - this.margins.left,\r\n\t\t\t\t( $( document ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment.constructor === Array ) {\r\n\t\t\tthis.containment = o.containment;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment === \"parent\" ) {\r\n\t\t\to.containment = this.helper[ 0 ].parentNode;\r\n\t\t}\r\n\r\n\t\tc = $( o.containment );\r\n\t\tce = c[ 0 ];\r\n\r\n\t\tif( !ce ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tover = c.css( \"overflow\" ) !== \"hidden\";\r\n\r\n\t\tthis.containment = [\r\n\t\t\t( parseInt( c.css( \"borderLeftWidth\" ), 10 ) || 0 ) + ( parseInt( c.css( \"paddingLeft\" ), 10 ) || 0 ),\r\n\t\t\t( parseInt( c.css( \"borderTopWidth\" ), 10 ) || 0 ) + ( parseInt( c.css( \"paddingTop\" ), 10 ) || 0 ) ,\r\n\t\t\t( over ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) - ( parseInt( c.css( \"borderRightWidth\" ), 10 ) || 0 ) - ( parseInt( c.css( \"paddingRight\" ), 10 ) || 0 ) - this.helperProportions.width - this.margins.left - this.margins.right,\r\n\t\t\t( over ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) - ( parseInt( c.css( \"borderBottomWidth\" ), 10 ) || 0 ) - ( parseInt( c.css( \"paddingBottom\" ), 10 ) || 0 ) - this.helperProportions.height - this.margins.top  - this.margins.bottom\r\n\t\t];\r\n\t\tthis.relative_container = c;\r\n\t},\r\n\r\n\t_convertPositionTo: function(d, pos) {\r\n\r\n\t\tif(!pos) {\r\n\t\t\tpos = this.position;\r\n\t\t}\r\n\r\n\t\tvar mod = d === \"absolute\" ? 1 : -1,\r\n\t\t\tscroll = this.cssPosition === \"absolute\" && !( this.scrollParent[ 0 ] !== document && $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent;\r\n\r\n\t\t//Cache the scroll\r\n\t\tif (!this.offset.scroll) {\r\n\t\t\tthis.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\t\t\t\tpos.top\t+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.relative.top * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.top * mod -\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : this.offset.scroll.top ) * mod )\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\t\t\t\tpos.left +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.relative.left * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.left * mod\t-\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left ) * mod )\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_generatePosition: function(event) {\r\n\r\n\t\tvar containment, co, top, left,\r\n\t\t\to = this.options,\r\n\t\t\tscroll = this.cssPosition === \"absolute\" && !( this.scrollParent[ 0 ] !== document && $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent,\r\n\t\t\tpageX = event.pageX,\r\n\t\t\tpageY = event.pageY;\r\n\r\n\t\t//Cache the scroll\r\n\t\tif (!this.offset.scroll) {\r\n\t\t\tthis.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * - Position constraining -\r\n\t\t * Constrain the position to a mix of grid, containment.\r\n\t\t */\r\n\r\n\t\t// If we are not dragging yet, we won't check for options\r\n\t\tif ( this.originalPosition ) {\r\n\t\t\tif ( this.containment ) {\r\n\t\t\t\tif ( this.relative_container ){\r\n\t\t\t\t\tco = this.relative_container.offset();\r\n\t\t\t\t\tcontainment = [\r\n\t\t\t\t\t\tthis.containment[ 0 ] + co.left,\r\n\t\t\t\t\t\tthis.containment[ 1 ] + co.top,\r\n\t\t\t\t\t\tthis.containment[ 2 ] + co.left,\r\n\t\t\t\t\t\tthis.containment[ 3 ] + co.top\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcontainment = this.containment;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(event.pageX - this.offset.click.left < containment[0]) {\r\n\t\t\t\t\tpageX = containment[0] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif(event.pageY - this.offset.click.top < containment[1]) {\r\n\t\t\t\t\tpageY = containment[1] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t\tif(event.pageX - this.offset.click.left > containment[2]) {\r\n\t\t\t\t\tpageX = containment[2] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif(event.pageY - this.offset.click.top > containment[3]) {\r\n\t\t\t\t\tpageY = containment[3] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(o.grid) {\r\n\t\t\t\t//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)\r\n\t\t\t\ttop = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;\r\n\t\t\t\tpageY = containment ? ((top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3]) ? top : ((top - this.offset.click.top >= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;\r\n\r\n\t\t\t\tleft = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;\r\n\t\t\t\tpageX = containment ? ((left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2]) ? left : ((left - this.offset.click.left >= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\t\t\t\tpageY -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.click.top\t-\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.relative.top -\t\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.top +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : this.offset.scroll.top )\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\t\t\t\tpageX -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.click.left -\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.relative.left -\t\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.left +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left )\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_clear: function() {\r\n\t\tthis.helper.removeClass(\"ui-draggable-dragging\");\r\n\t\tif(this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {\r\n\t\t\tthis.helper.remove();\r\n\t\t}\r\n\t\tthis.helper = null;\r\n\t\tthis.cancelHelperRemoval = false;\r\n\t},\r\n\r\n\t// From now on bulk stuff - mainly helpers\r\n\r\n\t_trigger: function(type, event, ui) {\r\n\t\tui = ui || this._uiHash();\r\n\t\t$.ui.plugin.call(this, type, [event, ui]);\r\n\t\t//The absolute position has to be recalculated after plugins\r\n\t\tif(type === \"drag\") {\r\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\r\n\t\t}\r\n\t\treturn $.Widget.prototype._trigger.call(this, type, event, ui);\r\n\t},\r\n\r\n\tplugins: {},\r\n\r\n\t_uiHash: function() {\r\n\t\treturn {\r\n\t\t\thelper: this.helper,\r\n\t\t\tposition: this.position,\r\n\t\t\toriginalPosition: this.originalPosition,\r\n\t\t\toffset: this.positionAbs\r\n\t\t};\r\n\t}\r\n\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"connectToSortable\", {\r\n\tstart: function(event, ui) {\r\n\r\n\t\tvar inst = $(this).data(\"ui-draggable\"), o = inst.options,\r\n\t\t\tuiSortable = $.extend({}, ui, { item: inst.element });\r\n\t\tinst.sortables = [];\r\n\t\t$(o.connectToSortable).each(function() {\r\n\t\t\tvar sortable = $.data(this, \"ui-sortable\");\r\n\t\t\tif (sortable && !sortable.options.disabled) {\r\n\t\t\t\tinst.sortables.push({\r\n\t\t\t\t\tinstance: sortable,\r\n\t\t\t\t\tshouldRevert: sortable.options.revert\r\n\t\t\t\t});\r\n\t\t\t\tsortable.refreshPositions();\t// Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).\r\n\t\t\t\tsortable._trigger(\"activate\", event, uiSortable);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\tstop: function(event, ui) {\r\n\r\n\t\t//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper\r\n\t\tvar inst = $(this).data(\"ui-draggable\"),\r\n\t\t\tuiSortable = $.extend({}, ui, { item: inst.element });\r\n\r\n\t\t$.each(inst.sortables, function() {\r\n\t\t\tif(this.instance.isOver) {\r\n\r\n\t\t\t\tthis.instance.isOver = 0;\r\n\r\n\t\t\t\tinst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance\r\n\t\t\t\tthis.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)\r\n\r\n\t\t\t\t//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: \"valid/invalid\"\r\n\t\t\t\tif(this.shouldRevert) {\r\n\t\t\t\t\tthis.instance.options.revert = this.shouldRevert;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Trigger the stop of the sortable\r\n\t\t\t\tthis.instance._mouseStop(event);\r\n\r\n\t\t\t\tthis.instance.options.helper = this.instance.options._helper;\r\n\r\n\t\t\t\t//If the helper has been the original item, restore properties in the sortable\r\n\t\t\t\tif(inst.options.helper === \"original\") {\r\n\t\t\t\t\tthis.instance.currentItem.css({ top: \"auto\", left: \"auto\" });\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance\r\n\t\t\t\tthis.instance._trigger(\"deactivate\", event, uiSortable);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t},\r\n\tdrag: function(event, ui) {\r\n\r\n\t\tvar inst = $(this).data(\"ui-draggable\"), that = this;\r\n\r\n\t\t$.each(inst.sortables, function() {\r\n\r\n\t\t\tvar innermostIntersecting = false,\r\n\t\t\t\tthisSortable = this;\r\n\r\n\t\t\t//Copy over some variables to allow calling the sortable's native _intersectsWith\r\n\t\t\tthis.instance.positionAbs = inst.positionAbs;\r\n\t\t\tthis.instance.helperProportions = inst.helperProportions;\r\n\t\t\tthis.instance.offset.click = inst.offset.click;\r\n\r\n\t\t\tif(this.instance._intersectsWith(this.instance.containerCache)) {\r\n\t\t\t\tinnermostIntersecting = true;\r\n\t\t\t\t$.each(inst.sortables, function () {\r\n\t\t\t\t\tthis.instance.positionAbs = inst.positionAbs;\r\n\t\t\t\t\tthis.instance.helperProportions = inst.helperProportions;\r\n\t\t\t\t\tthis.instance.offset.click = inst.offset.click;\r\n\t\t\t\t\tif (this !== thisSortable &&\r\n\t\t\t\t\t\tthis.instance._intersectsWith(this.instance.containerCache) &&\r\n\t\t\t\t\t\t$.contains(thisSortable.instance.element[0], this.instance.element[0])\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tinnermostIntersecting = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn innermostIntersecting;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(innermostIntersecting) {\r\n\t\t\t\t//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once\r\n\t\t\t\tif(!this.instance.isOver) {\r\n\r\n\t\t\t\t\tthis.instance.isOver = 1;\r\n\t\t\t\t\t//Now we fake the start of dragging for the sortable instance,\r\n\t\t\t\t\t//by cloning the list group item, appending it to the sortable and using it as inst.currentItem\r\n\t\t\t\t\t//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)\r\n\t\t\t\t\tthis.instance.currentItem = $(that).clone().removeAttr(\"id\").appendTo(this.instance.element).data(\"ui-sortable-item\", true);\r\n\t\t\t\t\tthis.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it\r\n\t\t\t\t\tthis.instance.options.helper = function() { return ui.helper[0]; };\r\n\r\n\t\t\t\t\tevent.target = this.instance.currentItem[0];\r\n\t\t\t\t\tthis.instance._mouseCapture(event, true);\r\n\t\t\t\t\tthis.instance._mouseStart(event, true, true);\r\n\r\n\t\t\t\t\t//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes\r\n\t\t\t\t\tthis.instance.offset.click.top = inst.offset.click.top;\r\n\t\t\t\t\tthis.instance.offset.click.left = inst.offset.click.left;\r\n\t\t\t\t\tthis.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;\r\n\t\t\t\t\tthis.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;\r\n\r\n\t\t\t\t\tinst._trigger(\"toSortable\", event);\r\n\t\t\t\t\tinst.dropped = this.instance.element; //draggable revert needs that\r\n\t\t\t\t\t//hack so receive/update callbacks work (mostly)\r\n\t\t\t\t\tinst.currentItem = inst.element;\r\n\t\t\t\t\tthis.instance.fromOutside = inst;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable\r\n\t\t\t\tif(this.instance.currentItem) {\r\n\t\t\t\t\tthis.instance._mouseDrag(event);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//If it doesn't intersect with the sortable, and it intersected before,\r\n\t\t\t\t//we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval\r\n\t\t\t\tif(this.instance.isOver) {\r\n\r\n\t\t\t\t\tthis.instance.isOver = 0;\r\n\t\t\t\t\tthis.instance.cancelHelperRemoval = true;\r\n\r\n\t\t\t\t\t//Prevent reverting on this forced stop\r\n\t\t\t\t\tthis.instance.options.revert = false;\r\n\r\n\t\t\t\t\t// The out event needs to be triggered independently\r\n\t\t\t\t\tthis.instance._trigger(\"out\", event, this.instance._uiHash(this.instance));\r\n\r\n\t\t\t\t\tthis.instance._mouseStop(event, true);\r\n\t\t\t\t\tthis.instance.options.helper = this.instance.options._helper;\r\n\r\n\t\t\t\t\t//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size\r\n\t\t\t\t\tthis.instance.currentItem.remove();\r\n\t\t\t\t\tif(this.instance.placeholder) {\r\n\t\t\t\t\t\tthis.instance.placeholder.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tinst._trigger(\"fromSortable\", event);\r\n\t\t\t\t\tinst.dropped = false; //draggable revert needs that\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"cursor\", {\r\n\tstart: function() {\r\n\t\tvar t = $(\"body\"), o = $(this).data(\"ui-draggable\").options;\r\n\t\tif (t.css(\"cursor\")) {\r\n\t\t\to._cursor = t.css(\"cursor\");\r\n\t\t}\r\n\t\tt.css(\"cursor\", o.cursor);\r\n\t},\r\n\tstop: function() {\r\n\t\tvar o = $(this).data(\"ui-draggable\").options;\r\n\t\tif (o._cursor) {\r\n\t\t\t$(\"body\").css(\"cursor\", o._cursor);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"opacity\", {\r\n\tstart: function(event, ui) {\r\n\t\tvar t = $(ui.helper), o = $(this).data(\"ui-draggable\").options;\r\n\t\tif(t.css(\"opacity\")) {\r\n\t\t\to._opacity = t.css(\"opacity\");\r\n\t\t}\r\n\t\tt.css(\"opacity\", o.opacity);\r\n\t},\r\n\tstop: function(event, ui) {\r\n\t\tvar o = $(this).data(\"ui-draggable\").options;\r\n\t\tif(o._opacity) {\r\n\t\t\t$(ui.helper).css(\"opacity\", o._opacity);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"scroll\", {\r\n\tstart: function() {\r\n\t\tvar i = $(this).data(\"ui-draggable\");\r\n\t\tif(i.scrollParent[0] !== document && i.scrollParent[0].tagName !== \"HTML\") {\r\n\t\t\ti.overflowOffset = i.scrollParent.offset();\r\n\t\t}\r\n\t},\r\n\tdrag: function( event ) {\r\n\r\n\t\tvar i = $(this).data(\"ui-draggable\"), o = i.options, scrolled = false;\r\n\r\n\t\tif(i.scrollParent[0] !== document && i.scrollParent[0].tagName !== \"HTML\") {\r\n\r\n\t\t\tif(!o.axis || o.axis !== \"x\") {\r\n\t\t\t\tif((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {\r\n\t\t\t\t\ti.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;\r\n\t\t\t\t} else if(event.pageY - i.overflowOffset.top < o.scrollSensitivity) {\r\n\t\t\t\t\ti.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!o.axis || o.axis !== \"y\") {\r\n\t\t\t\tif((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {\r\n\t\t\t\t\ti.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;\r\n\t\t\t\t} else if(event.pageX - i.overflowOffset.left < o.scrollSensitivity) {\r\n\t\t\t\t\ti.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif(!o.axis || o.axis !== \"x\") {\r\n\t\t\t\tif(event.pageY - $(document).scrollTop() < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\r\n\t\t\t\t} else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!o.axis || o.axis !== \"y\") {\r\n\t\t\t\tif(event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\r\n\t\t\t\t} else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets(i, event);\r\n\t\t}\r\n\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"snap\", {\r\n\tstart: function() {\r\n\r\n\t\tvar i = $(this).data(\"ui-draggable\"),\r\n\t\t\to = i.options;\r\n\r\n\t\ti.snapElements = [];\r\n\r\n\t\t$(o.snap.constructor !== String ? ( o.snap.items || \":data(ui-draggable)\" ) : o.snap).each(function() {\r\n\t\t\tvar $t = $(this),\r\n\t\t\t\t$o = $t.offset();\r\n\t\t\tif(this !== i.element[0]) {\r\n\t\t\t\ti.snapElements.push({\r\n\t\t\t\t\titem: this,\r\n\t\t\t\t\twidth: $t.outerWidth(), height: $t.outerHeight(),\r\n\t\t\t\t\ttop: $o.top, left: $o.left\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\tdrag: function(event, ui) {\r\n\r\n\t\tvar ts, bs, ls, rs, l, r, t, b, i, first,\r\n\t\t\tinst = $(this).data(\"ui-draggable\"),\r\n\t\t\to = inst.options,\r\n\t\t\td = o.snapTolerance,\r\n\t\t\tx1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,\r\n\t\t\ty1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;\r\n\r\n\t\tfor (i = inst.snapElements.length - 1; i >= 0; i--){\r\n\r\n\t\t\tl = inst.snapElements[i].left;\r\n\t\t\tr = l + inst.snapElements[i].width;\r\n\t\t\tt = inst.snapElements[i].top;\r\n\t\t\tb = t + inst.snapElements[i].height;\r\n\r\n\t\t\tif ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains( inst.snapElements[ i ].item.ownerDocument, inst.snapElements[ i ].item ) ) {\r\n\t\t\t\tif(inst.snapElements[i].snapping) {\r\n\t\t\t\t\t(inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));\r\n\t\t\t\t}\r\n\t\t\t\tinst.snapElements[i].snapping = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(o.snapMode !== \"inner\") {\r\n\t\t\t\tts = Math.abs(t - y2) <= d;\r\n\t\t\t\tbs = Math.abs(b - y1) <= d;\r\n\t\t\t\tls = Math.abs(l - x2) <= d;\r\n\t\t\t\trs = Math.abs(r - x1) <= d;\r\n\t\t\t\tif(ts) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo(\"relative\", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;\r\n\t\t\t\t}\r\n\t\t\t\tif(bs) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo(\"relative\", { top: b, left: 0 }).top - inst.margins.top;\r\n\t\t\t\t}\r\n\t\t\t\tif(ls) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo(\"relative\", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;\r\n\t\t\t\t}\r\n\t\t\t\tif(rs) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo(\"relative\", { top: 0, left: r }).left - inst.margins.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfirst = (ts || bs || ls || rs);\r\n\r\n\t\t\tif(o.snapMode !== \"outer\") {\r\n\t\t\t\tts = Math.abs(t - y1) <= d;\r\n\t\t\t\tbs = Math.abs(b - y2) <= d;\r\n\t\t\t\tls = Math.abs(l - x1) <= d;\r\n\t\t\t\trs = Math.abs(r - x2) <= d;\r\n\t\t\t\tif(ts) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo(\"relative\", { top: t, left: 0 }).top - inst.margins.top;\r\n\t\t\t\t}\r\n\t\t\t\tif(bs) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo(\"relative\", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;\r\n\t\t\t\t}\r\n\t\t\t\tif(ls) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo(\"relative\", { top: 0, left: l }).left - inst.margins.left;\r\n\t\t\t\t}\r\n\t\t\t\tif(rs) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo(\"relative\", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {\r\n\t\t\t\t(inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));\r\n\t\t\t}\r\n\t\t\tinst.snapElements[i].snapping = (ts || bs || ls || rs || first);\r\n\r\n\t\t}\r\n\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"stack\", {\r\n\tstart: function() {\r\n\t\tvar min,\r\n\t\t\to = this.data(\"ui-draggable\").options,\r\n\t\t\tgroup = $.makeArray($(o.stack)).sort(function(a,b) {\r\n\t\t\t\treturn (parseInt($(a).css(\"zIndex\"),10) || 0) - (parseInt($(b).css(\"zIndex\"),10) || 0);\r\n\t\t\t});\r\n\r\n\t\tif (!group.length) { return; }\r\n\r\n\t\tmin = parseInt($(group[0]).css(\"zIndex\"), 10) || 0;\r\n\t\t$(group).each(function(i) {\r\n\t\t\t$(this).css(\"zIndex\", min + i);\r\n\t\t});\r\n\t\tthis.css(\"zIndex\", (min + group.length));\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"draggable\", \"zIndex\", {\r\n\tstart: function(event, ui) {\r\n\t\tvar t = $(ui.helper), o = $(this).data(\"ui-draggable\").options;\r\n\t\tif(t.css(\"zIndex\")) {\r\n\t\t\to._zIndex = t.css(\"zIndex\");\r\n\t\t}\r\n\t\tt.css(\"zIndex\", o.zIndex);\r\n\t},\r\n\tstop: function(event, ui) {\r\n\t\tvar o = $(this).data(\"ui-draggable\").options;\r\n\t\tif(o._zIndex) {\r\n\t\t\t$(ui.helper).css(\"zIndex\", o._zIndex);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\nfunction isOverAxis( x, reference, size ) {\r\n\treturn ( x > reference ) && ( x < ( reference + size ) );\r\n}\r\n\r\n$.widget(\"ui.droppable\", {\r\n\tversion: \"1.10.4\",\r\n\twidgetEventPrefix: \"drop\",\r\n\toptions: {\r\n\t\taccept: \"*\",\r\n\t\tactiveClass: false,\r\n\t\taddClasses: true,\r\n\t\tgreedy: false,\r\n\t\thoverClass: false,\r\n\t\tscope: \"default\",\r\n\t\ttolerance: \"intersect\",\r\n\r\n\t\t// callbacks\r\n\t\tactivate: null,\r\n\t\tdeactivate: null,\r\n\t\tdrop: null,\r\n\t\tout: null,\r\n\t\tover: null\r\n\t},\r\n\t_create: function() {\r\n\r\n\t\tvar proportions,\r\n\t\t\to = this.options,\r\n\t\t\taccept = o.accept;\r\n\r\n\t\tthis.isover = false;\r\n\t\tthis.isout = true;\r\n\r\n\t\tthis.accept = $.isFunction(accept) ? accept : function(d) {\r\n\t\t\treturn d.is(accept);\r\n\t\t};\r\n\r\n\t\tthis.proportions = function( /* valueToWrite */ ) {\r\n\t\t\tif ( arguments.length ) {\r\n\t\t\t\t// Store the droppable's proportions\r\n\t\t\t\tproportions = arguments[ 0 ];\r\n\t\t\t} else {\r\n\t\t\t\t// Retrieve or derive the droppable's proportions\r\n\t\t\t\treturn proportions ?\r\n\t\t\t\t\tproportions :\r\n\t\t\t\t\tproportions = {\r\n\t\t\t\t\t\twidth: this.element[ 0 ].offsetWidth,\r\n\t\t\t\t\t\theight: this.element[ 0 ].offsetHeight\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Add the reference and positions to the manager\r\n\t\t$.ui.ddmanager.droppables[o.scope] = $.ui.ddmanager.droppables[o.scope] || [];\r\n\t\t$.ui.ddmanager.droppables[o.scope].push(this);\r\n\r\n\t\t(o.addClasses && this.element.addClass(\"ui-droppable\"));\r\n\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar i = 0,\r\n\t\t\tdrop = $.ui.ddmanager.droppables[this.options.scope];\r\n\r\n\t\tfor ( ; i < drop.length; i++ ) {\r\n\t\t\tif ( drop[i] === this ) {\r\n\t\t\t\tdrop.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.removeClass(\"ui-droppable ui-droppable-disabled\");\r\n\t},\r\n\r\n\t_setOption: function(key, value) {\r\n\r\n\t\tif(key === \"accept\") {\r\n\t\t\tthis.accept = $.isFunction(value) ? value : function(d) {\r\n\t\t\t\treturn d.is(value);\r\n\t\t\t};\r\n\t\t}\r\n\t\t$.Widget.prototype._setOption.apply(this, arguments);\r\n\t},\r\n\r\n\t_activate: function(event) {\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\t\tif(this.options.activeClass) {\r\n\t\t\tthis.element.addClass(this.options.activeClass);\r\n\t\t}\r\n\t\tif(draggable){\r\n\t\t\tthis._trigger(\"activate\", event, this.ui(draggable));\r\n\t\t}\r\n\t},\r\n\r\n\t_deactivate: function(event) {\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\t\tif(this.options.activeClass) {\r\n\t\t\tthis.element.removeClass(this.options.activeClass);\r\n\t\t}\r\n\t\tif(draggable){\r\n\t\t\tthis._trigger(\"deactivate\", event, this.ui(draggable));\r\n\t\t}\r\n\t},\r\n\r\n\t_over: function(event) {\r\n\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\r\n\t\t// Bail if draggable and droppable are same element\r\n\t\tif (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {\r\n\t\t\tif(this.options.hoverClass) {\r\n\t\t\t\tthis.element.addClass(this.options.hoverClass);\r\n\t\t\t}\r\n\t\t\tthis._trigger(\"over\", event, this.ui(draggable));\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_out: function(event) {\r\n\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\r\n\t\t// Bail if draggable and droppable are same element\r\n\t\tif (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {\r\n\t\t\tif(this.options.hoverClass) {\r\n\t\t\t\tthis.element.removeClass(this.options.hoverClass);\r\n\t\t\t}\r\n\t\t\tthis._trigger(\"out\", event, this.ui(draggable));\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_drop: function(event,custom) {\r\n\r\n\t\tvar draggable = custom || $.ui.ddmanager.current,\r\n\t\t\tchildrenIntersection = false;\r\n\r\n\t\t// Bail if draggable and droppable are same element\r\n\t\tif (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function() {\r\n\t\t\tvar inst = $.data(this, \"ui-droppable\");\r\n\t\t\tif(\r\n\t\t\t\tinst.options.greedy &&\r\n\t\t\t\t!inst.options.disabled &&\r\n\t\t\t\tinst.options.scope === draggable.options.scope &&\r\n\t\t\t\tinst.accept.call(inst.element[0], (draggable.currentItem || draggable.element)) &&\r\n\t\t\t\t$.ui.intersect(draggable, $.extend(inst, { offset: inst.element.offset() }), inst.options.tolerance)\r\n\t\t\t) { childrenIntersection = true; return false; }\r\n\t\t});\r\n\t\tif(childrenIntersection) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {\r\n\t\t\tif(this.options.activeClass) {\r\n\t\t\t\tthis.element.removeClass(this.options.activeClass);\r\n\t\t\t}\r\n\t\t\tif(this.options.hoverClass) {\r\n\t\t\t\tthis.element.removeClass(this.options.hoverClass);\r\n\t\t\t}\r\n\t\t\tthis._trigger(\"drop\", event, this.ui(draggable));\r\n\t\t\treturn this.element;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tui: function(c) {\r\n\t\treturn {\r\n\t\t\tdraggable: (c.currentItem || c.element),\r\n\t\t\thelper: c.helper,\r\n\t\t\tposition: c.position,\r\n\t\t\toffset: c.positionAbs\r\n\t\t};\r\n\t}\r\n\r\n});\r\n\r\n$.ui.intersect = function(draggable, droppable, toleranceMode) {\r\n\r\n\tif (!droppable.offset) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar draggableLeft, draggableTop,\r\n\t\tx1 = (draggable.positionAbs || draggable.position.absolute).left,\r\n\t\ty1 = (draggable.positionAbs || draggable.position.absolute).top,\r\n\t\tx2 = x1 + draggable.helperProportions.width,\r\n\t\ty2 = y1 + draggable.helperProportions.height,\r\n\t\tl = droppable.offset.left,\r\n\t\tt = droppable.offset.top,\r\n\t\tr = l + droppable.proportions().width,\r\n\t\tb = t + droppable.proportions().height;\r\n\r\n\tswitch (toleranceMode) {\r\n\t\tcase \"fit\":\r\n\t\t\treturn (l <= x1 && x2 <= r && t <= y1 && y2 <= b);\r\n\t\tcase \"intersect\":\r\n\t\t\treturn (l < x1 + (draggable.helperProportions.width / 2) && // Right Half\r\n\t\t\t\tx2 - (draggable.helperProportions.width / 2) < r && // Left Half\r\n\t\t\t\tt < y1 + (draggable.helperProportions.height / 2) && // Bottom Half\r\n\t\t\t\ty2 - (draggable.helperProportions.height / 2) < b ); // Top Half\r\n\t\tcase \"pointer\":\r\n\t\t\tdraggableLeft = ((draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left);\r\n\t\t\tdraggableTop = ((draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top);\r\n\t\t\treturn isOverAxis( draggableTop, t, droppable.proportions().height ) && isOverAxis( draggableLeft, l, droppable.proportions().width );\r\n\t\tcase \"touch\":\r\n\t\t\treturn (\r\n\t\t\t\t(y1 >= t && y1 <= b) ||\t// Top edge touching\r\n\t\t\t\t(y2 >= t && y2 <= b) ||\t// Bottom edge touching\r\n\t\t\t\t(y1 < t && y2 > b)\t\t// Surrounded vertically\r\n\t\t\t) && (\r\n\t\t\t\t(x1 >= l && x1 <= r) ||\t// Left edge touching\r\n\t\t\t\t(x2 >= l && x2 <= r) ||\t// Right edge touching\r\n\t\t\t\t(x1 < l && x2 > r)\t\t// Surrounded horizontally\r\n\t\t\t);\r\n\t\tdefault:\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n};\r\n\r\n/*\r\n\tThis manager tracks offsets of draggables and droppables\r\n*/\r\n$.ui.ddmanager = {\r\n\tcurrent: null,\r\n\tdroppables: { \"default\": [] },\r\n\tprepareOffsets: function(t, event) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tm = $.ui.ddmanager.droppables[t.options.scope] || [],\r\n\t\t\ttype = event ? event.type : null, // workaround for #2317\r\n\t\t\tlist = (t.currentItem || t.element).find(\":data(ui-droppable)\").addBack();\r\n\r\n\t\tdroppablesLoop: for (i = 0; i < m.length; i++) {\r\n\r\n\t\t\t//No disabled and non-accepted\r\n\t\t\tif(m[i].options.disabled || (t && !m[i].accept.call(m[i].element[0],(t.currentItem || t.element)))) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Filter out elements in the current dragged item\r\n\t\t\tfor (j=0; j < list.length; j++) {\r\n\t\t\t\tif(list[j] === m[i].element[0]) {\r\n\t\t\t\t\tm[i].proportions().height = 0;\r\n\t\t\t\t\tcontinue droppablesLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tm[i].visible = m[i].element.css(\"display\") !== \"none\";\r\n\t\t\tif(!m[i].visible) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t//Activate the droppable if used directly from draggables\r\n\t\t\tif(type === \"mousedown\") {\r\n\t\t\t\tm[i]._activate.call(m[i], event);\r\n\t\t\t}\r\n\r\n\t\t\tm[ i ].offset = m[ i ].element.offset();\r\n\t\t\tm[ i ].proportions({ width: m[ i ].element[ 0 ].offsetWidth, height: m[ i ].element[ 0 ].offsetHeight });\r\n\r\n\t\t}\r\n\r\n\t},\r\n\tdrop: function(draggable, event) {\r\n\r\n\t\tvar dropped = false;\r\n\t\t// Create a copy of the droppables in case the list changes during the drop (#9116)\r\n\t\t$.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function() {\r\n\r\n\t\t\tif(!this.options) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.options.disabled && this.visible && $.ui.intersect(draggable, this, this.options.tolerance)) {\r\n\t\t\t\tdropped = this._drop.call(this, event) || dropped;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.options.disabled && this.visible && this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {\r\n\t\t\t\tthis.isout = true;\r\n\t\t\t\tthis.isover = false;\r\n\t\t\t\tthis._deactivate.call(this, event);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t\treturn dropped;\r\n\r\n\t},\r\n\tdragStart: function( draggable, event ) {\r\n\t\t//Listen for scrolling so that if the dragging causes scrolling the position of the droppables can be recalculated (see #5003)\r\n\t\tdraggable.element.parentsUntil( \"body\" ).bind( \"scroll.droppable\", function() {\r\n\t\t\tif( !draggable.options.refreshPositions ) {\r\n\t\t\t\t$.ui.ddmanager.prepareOffsets( draggable, event );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tdrag: function(draggable, event) {\r\n\r\n\t\t//If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.\r\n\t\tif(draggable.options.refreshPositions) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets(draggable, event);\r\n\t\t}\r\n\r\n\t\t//Run through all droppables and check their positions based on specific tolerance options\r\n\t\t$.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {\r\n\r\n\t\t\tif(this.options.disabled || this.greedyChild || !this.visible) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar parentInstance, scope, parent,\r\n\t\t\t\tintersects = $.ui.intersect(draggable, this, this.options.tolerance),\r\n\t\t\t\tc = !intersects && this.isover ? \"isout\" : (intersects && !this.isover ? \"isover\" : null);\r\n\t\t\tif(!c) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.greedy) {\r\n\t\t\t\t// find droppable parents with same scope\r\n\t\t\t\tscope = this.options.scope;\r\n\t\t\t\tparent = this.element.parents(\":data(ui-droppable)\").filter(function () {\r\n\t\t\t\t\treturn $.data(this, \"ui-droppable\").options.scope === scope;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (parent.length) {\r\n\t\t\t\t\tparentInstance = $.data(parent[0], \"ui-droppable\");\r\n\t\t\t\t\tparentInstance.greedyChild = (c === \"isover\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// we just moved into a greedy child\r\n\t\t\tif (parentInstance && c === \"isover\") {\r\n\t\t\t\tparentInstance.isover = false;\r\n\t\t\t\tparentInstance.isout = true;\r\n\t\t\t\tparentInstance._out.call(parentInstance, event);\r\n\t\t\t}\r\n\r\n\t\t\tthis[c] = true;\r\n\t\t\tthis[c === \"isout\" ? \"isover\" : \"isout\"] = false;\r\n\t\t\tthis[c === \"isover\" ? \"_over\" : \"_out\"].call(this, event);\r\n\r\n\t\t\t// we just moved out of a greedy child\r\n\t\t\tif (parentInstance && c === \"isout\") {\r\n\t\t\t\tparentInstance.isout = false;\r\n\t\t\t\tparentInstance.isover = true;\r\n\t\t\t\tparentInstance._over.call(parentInstance, event);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\tdragStop: function( draggable, event ) {\r\n\t\tdraggable.element.parentsUntil( \"body\" ).unbind( \"scroll.droppable\" );\r\n\t\t//Call prepareOffsets one final time since IE does not fire return scroll events when overflow was caused by drag (see #5003)\r\n\t\tif( !draggable.options.refreshPositions ) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets( draggable, event );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\nfunction num(v) {\r\n\treturn parseInt(v, 10) || 0;\r\n}\r\n\r\nfunction isNumber(value) {\r\n\treturn !isNaN(parseInt(value, 10));\r\n}\r\n\r\n$.widget(\"ui.resizable\", $.ui.mouse, {\r\n\tversion: \"1.10.4\",\r\n\twidgetEventPrefix: \"resize\",\r\n\toptions: {\r\n\t\talsoResize: false,\r\n\t\tanimate: false,\r\n\t\tanimateDuration: \"slow\",\r\n\t\tanimateEasing: \"swing\",\r\n\t\taspectRatio: false,\r\n\t\tautoHide: false,\r\n\t\tcontainment: false,\r\n\t\tghost: false,\r\n\t\tgrid: false,\r\n\t\thandles: \"e,s,se\",\r\n\t\thelper: false,\r\n\t\tmaxHeight: null,\r\n\t\tmaxWidth: null,\r\n\t\tminHeight: 10,\r\n\t\tminWidth: 10,\r\n\t\t// See #7960\r\n\t\tzIndex: 90,\r\n\r\n\t\t// callbacks\r\n\t\tresize: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\t_create: function() {\r\n\r\n\t\tvar n, i, handle, axis, hname,\r\n\t\t\tthat = this,\r\n\t\t\to = this.options;\r\n\t\tthis.element.addClass(\"ui-resizable\");\r\n\r\n\t\t$.extend(this, {\r\n\t\t\t_aspectRatio: !!(o.aspectRatio),\r\n\t\t\taspectRatio: o.aspectRatio,\r\n\t\t\toriginalElement: this.element,\r\n\t\t\t_proportionallyResizeElements: [],\r\n\t\t\t_helper: o.helper || o.ghost || o.animate ? o.helper || \"ui-resizable-helper\" : null\r\n\t\t});\r\n\r\n\t\t//Wrap the element if it cannot hold child nodes\r\n\t\tif(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {\r\n\r\n\t\t\t//Create a wrapper element and set the wrapper to the new current internal element\r\n\t\t\tthis.element.wrap(\r\n\t\t\t\t$(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({\r\n\t\t\t\t\tposition: this.element.css(\"position\"),\r\n\t\t\t\t\twidth: this.element.outerWidth(),\r\n\t\t\t\t\theight: this.element.outerHeight(),\r\n\t\t\t\t\ttop: this.element.css(\"top\"),\r\n\t\t\t\t\tleft: this.element.css(\"left\")\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\t//Overwrite the original this.element\r\n\t\t\tthis.element = this.element.parent().data(\r\n\t\t\t\t\"ui-resizable\", this.element.data(\"ui-resizable\")\r\n\t\t\t);\r\n\r\n\t\t\tthis.elementIsWrapper = true;\r\n\r\n\t\t\t//Move margins to the wrapper\r\n\t\t\tthis.element.css({ marginLeft: this.originalElement.css(\"marginLeft\"), marginTop: this.originalElement.css(\"marginTop\"), marginRight: this.originalElement.css(\"marginRight\"), marginBottom: this.originalElement.css(\"marginBottom\") });\r\n\t\t\tthis.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0});\r\n\r\n\t\t\t//Prevent Safari textarea resize\r\n\t\t\tthis.originalResizeStyle = this.originalElement.css(\"resize\");\r\n\t\t\tthis.originalElement.css(\"resize\", \"none\");\r\n\r\n\t\t\t//Push the actual element to our proportionallyResize internal array\r\n\t\t\tthis._proportionallyResizeElements.push(this.originalElement.css({ position: \"static\", zoom: 1, display: \"block\" }));\r\n\r\n\t\t\t// avoid IE jump (hard set the margin)\r\n\t\t\tthis.originalElement.css({ margin: this.originalElement.css(\"margin\") });\r\n\r\n\t\t\t// fix handlers offset\r\n\t\t\tthis._proportionallyResize();\r\n\r\n\t\t}\r\n\r\n\t\tthis.handles = o.handles || (!$(\".ui-resizable-handle\", this.element).length ? \"e,s,se\" : { n: \".ui-resizable-n\", e: \".ui-resizable-e\", s: \".ui-resizable-s\", w: \".ui-resizable-w\", se: \".ui-resizable-se\", sw: \".ui-resizable-sw\", ne: \".ui-resizable-ne\", nw: \".ui-resizable-nw\" });\r\n\t\tif(this.handles.constructor === String) {\r\n\r\n\t\t\tif ( this.handles === \"all\") {\r\n\t\t\t\tthis.handles = \"n,e,s,w,se,sw,ne,nw\";\r\n\t\t\t}\r\n\r\n\t\t\tn = this.handles.split(\",\");\r\n\t\t\tthis.handles = {};\r\n\r\n\t\t\tfor(i = 0; i < n.length; i++) {\r\n\r\n\t\t\t\thandle = $.trim(n[i]);\r\n\t\t\t\thname = \"ui-resizable-\"+handle;\r\n\t\t\t\taxis = $(\"<div class='ui-resizable-handle \" + hname + \"'></div>\");\r\n\r\n\t\t\t\t// Apply zIndex to all handles - see #7960\r\n\t\t\t\taxis.css({ zIndex: o.zIndex });\r\n\r\n\t\t\t\t//TODO : What's going on here?\r\n\t\t\t\tif (\"se\" === handle) {\r\n\t\t\t\t\taxis.addClass(\"ui-icon ui-icon-gripsmall-diagonal-se\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Insert into internal handles object and append to element\r\n\t\t\t\tthis.handles[handle] = \".ui-resizable-\"+handle;\r\n\t\t\t\tthis.element.append(axis);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._renderAxis = function(target) {\r\n\r\n\t\t\tvar i, axis, padPos, padWrapper;\r\n\r\n\t\t\ttarget = target || this.element;\r\n\r\n\t\t\tfor(i in this.handles) {\r\n\r\n\t\t\t\tif(this.handles[i].constructor === String) {\r\n\t\t\t\t\tthis.handles[i] = $(this.handles[i], this.element).show();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Apply pad to wrapper element, needed to fix axis position (textarea, inputs, scrolls)\r\n\t\t\t\tif (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {\r\n\r\n\t\t\t\t\taxis = $(this.handles[i], this.element);\r\n\r\n\t\t\t\t\t//Checking the correct pad and border\r\n\t\t\t\t\tpadWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();\r\n\r\n\t\t\t\t\t//The padding type i have to apply...\r\n\t\t\t\t\tpadPos = [ \"padding\",\r\n\t\t\t\t\t\t/ne|nw|n/.test(i) ? \"Top\" :\r\n\t\t\t\t\t\t/se|sw|s/.test(i) ? \"Bottom\" :\r\n\t\t\t\t\t\t/^e$/.test(i) ? \"Right\" : \"Left\" ].join(\"\");\r\n\r\n\t\t\t\t\ttarget.css(padPos, padWrapper);\r\n\r\n\t\t\t\t\tthis._proportionallyResize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//TODO: What's that good for? There's not anything to be executed left\r\n\t\t\t\tif(!$(this.handles[i]).length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//TODO: make renderAxis a prototype function\r\n\t\tthis._renderAxis(this.element);\r\n\r\n\t\tthis._handles = $(\".ui-resizable-handle\", this.element)\r\n\t\t\t.disableSelection();\r\n\r\n\t\t//Matching axis name\r\n\t\tthis._handles.mouseover(function() {\r\n\t\t\tif (!that.resizing) {\r\n\t\t\t\tif (this.className) {\r\n\t\t\t\t\taxis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);\r\n\t\t\t\t}\r\n\t\t\t\t//Axis, default = se\r\n\t\t\t\tthat.axis = axis && axis[1] ? axis[1] : \"se\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//If we want to auto hide the elements\r\n\t\tif (o.autoHide) {\r\n\t\t\tthis._handles.hide();\r\n\t\t\t$(this.element)\r\n\t\t\t\t.addClass(\"ui-resizable-autohide\")\r\n\t\t\t\t.mouseenter(function() {\r\n\t\t\t\t\tif (o.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(this).removeClass(\"ui-resizable-autohide\");\r\n\t\t\t\t\tthat._handles.show();\r\n\t\t\t\t})\r\n\t\t\t\t.mouseleave(function(){\r\n\t\t\t\t\tif (o.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!that.resizing) {\r\n\t\t\t\t\t\t$(this).addClass(\"ui-resizable-autohide\");\r\n\t\t\t\t\t\tthat._handles.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t//Initialize the mouse interaction\r\n\t\tthis._mouseInit();\r\n\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\r\n\t\tthis._mouseDestroy();\r\n\r\n\t\tvar wrapper,\r\n\t\t\t_destroy = function(exp) {\r\n\t\t\t\t$(exp).removeClass(\"ui-resizable ui-resizable-disabled ui-resizable-resizing\")\r\n\t\t\t\t\t.removeData(\"resizable\").removeData(\"ui-resizable\").unbind(\".resizable\").find(\".ui-resizable-handle\").remove();\r\n\t\t\t};\r\n\r\n\t\t//TODO: Unwrap at same DOM position\r\n\t\tif (this.elementIsWrapper) {\r\n\t\t\t_destroy(this.element);\r\n\t\t\twrapper = this.element;\r\n\t\t\tthis.originalElement.css({\r\n\t\t\t\tposition: wrapper.css(\"position\"),\r\n\t\t\t\twidth: wrapper.outerWidth(),\r\n\t\t\t\theight: wrapper.outerHeight(),\r\n\t\t\t\ttop: wrapper.css(\"top\"),\r\n\t\t\t\tleft: wrapper.css(\"left\")\r\n\t\t\t}).insertAfter( wrapper );\r\n\t\t\twrapper.remove();\r\n\t\t}\r\n\r\n\t\tthis.originalElement.css(\"resize\", this.originalResizeStyle);\r\n\t\t_destroy(this.originalElement);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_mouseCapture: function(event) {\r\n\t\tvar i, handle,\r\n\t\t\tcapture = false;\r\n\r\n\t\tfor (i in this.handles) {\r\n\t\t\thandle = $(this.handles[i])[0];\r\n\t\t\tif (handle === event.target || $.contains(handle, event.target)) {\r\n\t\t\t\tcapture = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn !this.options.disabled && capture;\r\n\t},\r\n\r\n\t_mouseStart: function(event) {\r\n\r\n\t\tvar curleft, curtop, cursor,\r\n\t\t\to = this.options,\r\n\t\t\tiniPos = this.element.position(),\r\n\t\t\tel = this.element;\r\n\r\n\t\tthis.resizing = true;\r\n\r\n\t\t// bugfix for http://dev.jquery.com/ticket/1749\r\n\t\tif ( (/absolute/).test( el.css(\"position\") ) ) {\r\n\t\t\tel.css({ position: \"absolute\", top: el.css(\"top\"), left: el.css(\"left\") });\r\n\t\t} else if (el.is(\".ui-draggable\")) {\r\n\t\t\tel.css({ position: \"absolute\", top: iniPos.top, left: iniPos.left });\r\n\t\t}\r\n\r\n\t\tthis._renderProxy();\r\n\r\n\t\tcurleft = num(this.helper.css(\"left\"));\r\n\t\tcurtop = num(this.helper.css(\"top\"));\r\n\r\n\t\tif (o.containment) {\r\n\t\t\tcurleft += $(o.containment).scrollLeft() || 0;\r\n\t\t\tcurtop += $(o.containment).scrollTop() || 0;\r\n\t\t}\r\n\r\n\t\t//Store needed variables\r\n\t\tthis.offset = this.helper.offset();\r\n\t\tthis.position = { left: curleft, top: curtop };\r\n\t\tthis.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: el.width(), height: el.height() };\r\n\t\tthis.originalSize = this._helper ? { width: el.outerWidth(), height: el.outerHeight() } : { width: el.width(), height: el.height() };\r\n\t\tthis.originalPosition = { left: curleft, top: curtop };\r\n\t\tthis.sizeDiff = { width: el.outerWidth() - el.width(), height: el.outerHeight() - el.height() };\r\n\t\tthis.originalMousePosition = { left: event.pageX, top: event.pageY };\r\n\r\n\t\t//Aspect Ratio\r\n\t\tthis.aspectRatio = (typeof o.aspectRatio === \"number\") ? o.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);\r\n\r\n\t\tcursor = $(\".ui-resizable-\" + this.axis).css(\"cursor\");\r\n\t\t$(\"body\").css(\"cursor\", cursor === \"auto\" ? this.axis + \"-resize\" : cursor);\r\n\r\n\t\tel.addClass(\"ui-resizable-resizing\");\r\n\t\tthis._propagate(\"start\", event);\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseDrag: function(event) {\r\n\r\n\t\t//Increase performance, avoid regex\r\n\t\tvar data,\r\n\t\t\tel = this.helper, props = {},\r\n\t\t\tsmp = this.originalMousePosition,\r\n\t\t\ta = this.axis,\r\n\t\t\tprevTop = this.position.top,\r\n\t\t\tprevLeft = this.position.left,\r\n\t\t\tprevWidth = this.size.width,\r\n\t\t\tprevHeight = this.size.height,\r\n\t\t\tdx = (event.pageX-smp.left)||0,\r\n\t\t\tdy = (event.pageY-smp.top)||0,\r\n\t\t\ttrigger = this._change[a];\r\n\r\n\t\tif (!trigger) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Calculate the attrs that will be change\r\n\t\tdata = trigger.apply(this, [event, dx, dy]);\r\n\r\n\t\t// Put this in the mouseDrag handler since the user can start pressing shift while resizing\r\n\t\tthis._updateVirtualBoundaries(event.shiftKey);\r\n\t\tif (this._aspectRatio || event.shiftKey) {\r\n\t\t\tdata = this._updateRatio(data, event);\r\n\t\t}\r\n\r\n\t\tdata = this._respectSize(data, event);\r\n\r\n\t\tthis._updateCache(data);\r\n\r\n\t\t// plugins callbacks need to be called first\r\n\t\tthis._propagate(\"resize\", event);\r\n\r\n\t\tif (this.position.top !== prevTop) {\r\n\t\t\tprops.top = this.position.top + \"px\";\r\n\t\t}\r\n\t\tif (this.position.left !== prevLeft) {\r\n\t\t\tprops.left = this.position.left + \"px\";\r\n\t\t}\r\n\t\tif (this.size.width !== prevWidth) {\r\n\t\t\tprops.width = this.size.width + \"px\";\r\n\t\t}\r\n\t\tif (this.size.height !== prevHeight) {\r\n\t\t\tprops.height = this.size.height + \"px\";\r\n\t\t}\r\n\t\tel.css(props);\r\n\r\n\t\tif (!this._helper && this._proportionallyResizeElements.length) {\r\n\t\t\tthis._proportionallyResize();\r\n\t\t}\r\n\r\n\t\t// Call the user callback if the element was resized\r\n\t\tif ( ! $.isEmptyObject(props) ) {\r\n\t\t\tthis._trigger(\"resize\", event, this.ui());\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function(event) {\r\n\r\n\t\tthis.resizing = false;\r\n\t\tvar pr, ista, soffseth, soffsetw, s, left, top,\r\n\t\t\to = this.options, that = this;\r\n\r\n\t\tif(this._helper) {\r\n\r\n\t\t\tpr = this._proportionallyResizeElements;\r\n\t\t\tista = pr.length && (/textarea/i).test(pr[0].nodeName);\r\n\t\t\tsoffseth = ista && $.ui.hasScroll(pr[0], \"left\") /* TODO - jump height */ ? 0 : that.sizeDiff.height;\r\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width;\r\n\r\n\t\t\ts = { width: (that.helper.width()  - soffsetw), height: (that.helper.height() - soffseth) };\r\n\t\t\tleft = (parseInt(that.element.css(\"left\"), 10) + (that.position.left - that.originalPosition.left)) || null;\r\n\t\t\ttop = (parseInt(that.element.css(\"top\"), 10) + (that.position.top - that.originalPosition.top)) || null;\r\n\r\n\t\t\tif (!o.animate) {\r\n\t\t\t\tthis.element.css($.extend(s, { top: top, left: left }));\r\n\t\t\t}\r\n\r\n\t\t\tthat.helper.height(that.size.height);\r\n\t\t\tthat.helper.width(that.size.width);\r\n\r\n\t\t\tif (this._helper && !o.animate) {\r\n\t\t\t\tthis._proportionallyResize();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$(\"body\").css(\"cursor\", \"auto\");\r\n\r\n\t\tthis.element.removeClass(\"ui-resizable-resizing\");\r\n\r\n\t\tthis._propagate(\"stop\", event);\r\n\r\n\t\tif (this._helper) {\r\n\t\t\tthis.helper.remove();\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\t_updateVirtualBoundaries: function(forceAspectRatio) {\r\n\t\tvar pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,\r\n\t\t\to = this.options;\r\n\r\n\t\tb = {\r\n\t\t\tminWidth: isNumber(o.minWidth) ? o.minWidth : 0,\r\n\t\t\tmaxWidth: isNumber(o.maxWidth) ? o.maxWidth : Infinity,\r\n\t\t\tminHeight: isNumber(o.minHeight) ? o.minHeight : 0,\r\n\t\t\tmaxHeight: isNumber(o.maxHeight) ? o.maxHeight : Infinity\r\n\t\t};\r\n\r\n\t\tif(this._aspectRatio || forceAspectRatio) {\r\n\t\t\t// We want to create an enclosing box whose aspect ration is the requested one\r\n\t\t\t// First, compute the \"projected\" size for each dimension based on the aspect ratio and other dimension\r\n\t\t\tpMinWidth = b.minHeight * this.aspectRatio;\r\n\t\t\tpMinHeight = b.minWidth / this.aspectRatio;\r\n\t\t\tpMaxWidth = b.maxHeight * this.aspectRatio;\r\n\t\t\tpMaxHeight = b.maxWidth / this.aspectRatio;\r\n\r\n\t\t\tif(pMinWidth > b.minWidth) {\r\n\t\t\t\tb.minWidth = pMinWidth;\r\n\t\t\t}\r\n\t\t\tif(pMinHeight > b.minHeight) {\r\n\t\t\t\tb.minHeight = pMinHeight;\r\n\t\t\t}\r\n\t\t\tif(pMaxWidth < b.maxWidth) {\r\n\t\t\t\tb.maxWidth = pMaxWidth;\r\n\t\t\t}\r\n\t\t\tif(pMaxHeight < b.maxHeight) {\r\n\t\t\t\tb.maxHeight = pMaxHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._vBoundaries = b;\r\n\t},\r\n\r\n\t_updateCache: function(data) {\r\n\t\tthis.offset = this.helper.offset();\r\n\t\tif (isNumber(data.left)) {\r\n\t\t\tthis.position.left = data.left;\r\n\t\t}\r\n\t\tif (isNumber(data.top)) {\r\n\t\t\tthis.position.top = data.top;\r\n\t\t}\r\n\t\tif (isNumber(data.height)) {\r\n\t\t\tthis.size.height = data.height;\r\n\t\t}\r\n\t\tif (isNumber(data.width)) {\r\n\t\t\tthis.size.width = data.width;\r\n\t\t}\r\n\t},\r\n\r\n\t_updateRatio: function( data ) {\r\n\r\n\t\tvar cpos = this.position,\r\n\t\t\tcsize = this.size,\r\n\t\t\ta = this.axis;\r\n\r\n\t\tif (isNumber(data.height)) {\r\n\t\t\tdata.width = (data.height * this.aspectRatio);\r\n\t\t} else if (isNumber(data.width)) {\r\n\t\t\tdata.height = (data.width / this.aspectRatio);\r\n\t\t}\r\n\r\n\t\tif (a === \"sw\") {\r\n\t\t\tdata.left = cpos.left + (csize.width - data.width);\r\n\t\t\tdata.top = null;\r\n\t\t}\r\n\t\tif (a === \"nw\") {\r\n\t\t\tdata.top = cpos.top + (csize.height - data.height);\r\n\t\t\tdata.left = cpos.left + (csize.width - data.width);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t},\r\n\r\n\t_respectSize: function( data ) {\r\n\r\n\t\tvar o = this._vBoundaries,\r\n\t\t\ta = this.axis,\r\n\t\t\tismaxw = isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width), ismaxh = isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),\r\n\t\t\tisminw = isNumber(data.width) && o.minWidth && (o.minWidth > data.width), isminh = isNumber(data.height) && o.minHeight && (o.minHeight > data.height),\r\n\t\t\tdw = this.originalPosition.left + this.originalSize.width,\r\n\t\t\tdh = this.position.top + this.size.height,\r\n\t\t\tcw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);\r\n\t\tif (isminw) {\r\n\t\t\tdata.width = o.minWidth;\r\n\t\t}\r\n\t\tif (isminh) {\r\n\t\t\tdata.height = o.minHeight;\r\n\t\t}\r\n\t\tif (ismaxw) {\r\n\t\t\tdata.width = o.maxWidth;\r\n\t\t}\r\n\t\tif (ismaxh) {\r\n\t\t\tdata.height = o.maxHeight;\r\n\t\t}\r\n\r\n\t\tif (isminw && cw) {\r\n\t\t\tdata.left = dw - o.minWidth;\r\n\t\t}\r\n\t\tif (ismaxw && cw) {\r\n\t\t\tdata.left = dw - o.maxWidth;\r\n\t\t}\r\n\t\tif (isminh && ch) {\r\n\t\t\tdata.top = dh - o.minHeight;\r\n\t\t}\r\n\t\tif (ismaxh && ch) {\r\n\t\t\tdata.top = dh - o.maxHeight;\r\n\t\t}\r\n\r\n\t\t// fixing jump error on top/left - bug #2330\r\n\t\tif (!data.width && !data.height && !data.left && data.top) {\r\n\t\t\tdata.top = null;\r\n\t\t} else if (!data.width && !data.height && !data.top && data.left) {\r\n\t\t\tdata.left = null;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t},\r\n\r\n\t_proportionallyResize: function() {\r\n\r\n\t\tif (!this._proportionallyResizeElements.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar i, j, borders, paddings, prel,\r\n\t\t\telement = this.helper || this.element;\r\n\r\n\t\tfor ( i=0; i < this._proportionallyResizeElements.length; i++) {\r\n\r\n\t\t\tprel = this._proportionallyResizeElements[i];\r\n\r\n\t\t\tif (!this.borderDif) {\r\n\t\t\t\tthis.borderDif = [];\r\n\t\t\t\tborders = [prel.css(\"borderTopWidth\"), prel.css(\"borderRightWidth\"), prel.css(\"borderBottomWidth\"), prel.css(\"borderLeftWidth\")];\r\n\t\t\t\tpaddings = [prel.css(\"paddingTop\"), prel.css(\"paddingRight\"), prel.css(\"paddingBottom\"), prel.css(\"paddingLeft\")];\r\n\r\n\t\t\t\tfor ( j = 0; j < borders.length; j++ ) {\r\n\t\t\t\t\tthis.borderDif[ j ] = ( parseInt( borders[ j ], 10 ) || 0 ) + ( parseInt( paddings[ j ], 10 ) || 0 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprel.css({\r\n\t\t\t\theight: (element.height() - this.borderDif[0] - this.borderDif[2]) || 0,\r\n\t\t\t\twidth: (element.width() - this.borderDif[1] - this.borderDif[3]) || 0\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_renderProxy: function() {\r\n\r\n\t\tvar el = this.element, o = this.options;\r\n\t\tthis.elementOffset = el.offset();\r\n\r\n\t\tif(this._helper) {\r\n\r\n\t\t\tthis.helper = this.helper || $(\"<div style='overflow:hidden;'></div>\");\r\n\r\n\t\t\tthis.helper.addClass(this._helper).css({\r\n\t\t\t\twidth: this.element.outerWidth() - 1,\r\n\t\t\t\theight: this.element.outerHeight() - 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tleft: this.elementOffset.left +\"px\",\r\n\t\t\t\ttop: this.elementOffset.top +\"px\",\r\n\t\t\t\tzIndex: ++o.zIndex //TODO: Don't modify option\r\n\t\t\t});\r\n\r\n\t\t\tthis.helper\r\n\t\t\t\t.appendTo(\"body\")\r\n\t\t\t\t.disableSelection();\r\n\r\n\t\t} else {\r\n\t\t\tthis.helper = this.element;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_change: {\r\n\t\te: function(event, dx) {\r\n\t\t\treturn { width: this.originalSize.width + dx };\r\n\t\t},\r\n\t\tw: function(event, dx) {\r\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\r\n\t\t\treturn { left: sp.left + dx, width: cs.width - dx };\r\n\t\t},\r\n\t\tn: function(event, dx, dy) {\r\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\r\n\t\t\treturn { top: sp.top + dy, height: cs.height - dy };\r\n\t\t},\r\n\t\ts: function(event, dx, dy) {\r\n\t\t\treturn { height: this.originalSize.height + dy };\r\n\t\t},\r\n\t\tse: function(event, dx, dy) {\r\n\t\t\treturn $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));\r\n\t\t},\r\n\t\tsw: function(event, dx, dy) {\r\n\t\t\treturn $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));\r\n\t\t},\r\n\t\tne: function(event, dx, dy) {\r\n\t\t\treturn $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));\r\n\t\t},\r\n\t\tnw: function(event, dx, dy) {\r\n\t\t\treturn $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));\r\n\t\t}\r\n\t},\r\n\r\n\t_propagate: function(n, event) {\r\n\t\t$.ui.plugin.call(this, n, [event, this.ui()]);\r\n\t\t(n !== \"resize\" && this._trigger(n, event, this.ui()));\r\n\t},\r\n\r\n\tplugins: {},\r\n\r\n\tui: function() {\r\n\t\treturn {\r\n\t\t\toriginalElement: this.originalElement,\r\n\t\t\telement: this.element,\r\n\t\t\thelper: this.helper,\r\n\t\t\tposition: this.position,\r\n\t\t\tsize: this.size,\r\n\t\t\toriginalSize: this.originalSize,\r\n\t\t\toriginalPosition: this.originalPosition\r\n\t\t};\r\n\t}\r\n\r\n});\r\n\r\n/*\r\n * Resizable Extensions\r\n */\r\n\r\n$.ui.plugin.add(\"resizable\", \"animate\", {\r\n\r\n\tstop: function( event ) {\r\n\t\tvar that = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\tpr = that._proportionallyResizeElements,\r\n\t\t\tista = pr.length && (/textarea/i).test(pr[0].nodeName),\r\n\t\t\tsoffseth = ista && $.ui.hasScroll(pr[0], \"left\") /* TODO - jump height */ ? 0 : that.sizeDiff.height,\r\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width,\r\n\t\t\tstyle = { width: (that.size.width - soffsetw), height: (that.size.height - soffseth) },\r\n\t\t\tleft = (parseInt(that.element.css(\"left\"), 10) + (that.position.left - that.originalPosition.left)) || null,\r\n\t\t\ttop = (parseInt(that.element.css(\"top\"), 10) + (that.position.top - that.originalPosition.top)) || null;\r\n\r\n\t\tthat.element.animate(\r\n\t\t\t$.extend(style, top && left ? { top: top, left: left } : {}), {\r\n\t\t\t\tduration: o.animateDuration,\r\n\t\t\t\teasing: o.animateEasing,\r\n\t\t\t\tstep: function() {\r\n\r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t\t\twidth: parseInt(that.element.css(\"width\"), 10),\r\n\t\t\t\t\t\theight: parseInt(that.element.css(\"height\"), 10),\r\n\t\t\t\t\t\ttop: parseInt(that.element.css(\"top\"), 10),\r\n\t\t\t\t\t\tleft: parseInt(that.element.css(\"left\"), 10)\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (pr && pr.length) {\r\n\t\t\t\t\t\t$(pr[0]).css({ width: data.width, height: data.height });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// propagating resize, and updating values for each animation step\r\n\t\t\t\t\tthat._updateCache(data);\r\n\t\t\t\t\tthat._propagate(\"resize\", event);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n});\r\n\r\n$.ui.plugin.add(\"resizable\", \"containment\", {\r\n\r\n\tstart: function() {\r\n\t\tvar element, p, co, ch, cw, width, height,\r\n\t\t\tthat = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\tel = that.element,\r\n\t\t\toc = o.containment,\r\n\t\t\tce = (oc instanceof $) ? oc.get(0) : (/parent/.test(oc)) ? el.parent().get(0) : oc;\r\n\r\n\t\tif (!ce) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthat.containerElement = $(ce);\r\n\r\n\t\tif (/document/.test(oc) || oc === document) {\r\n\t\t\tthat.containerOffset = { left: 0, top: 0 };\r\n\t\t\tthat.containerPosition = { left: 0, top: 0 };\r\n\r\n\t\t\tthat.parentData = {\r\n\t\t\t\telement: $(document), left: 0, top: 0,\r\n\t\t\t\twidth: $(document).width(), height: $(document).height() || document.body.parentNode.scrollHeight\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// i'm a node, so compute top, left, right, bottom\r\n\t\telse {\r\n\t\t\telement = $(ce);\r\n\t\t\tp = [];\r\n\t\t\t$([ \"Top\", \"Right\", \"Left\", \"Bottom\" ]).each(function(i, name) { p[i] = num(element.css(\"padding\" + name)); });\r\n\r\n\t\t\tthat.containerOffset = element.offset();\r\n\t\t\tthat.containerPosition = element.position();\r\n\t\t\tthat.containerSize = { height: (element.innerHeight() - p[3]), width: (element.innerWidth() - p[1]) };\r\n\r\n\t\t\tco = that.containerOffset;\r\n\t\t\tch = that.containerSize.height;\r\n\t\t\tcw = that.containerSize.width;\r\n\t\t\twidth = ($.ui.hasScroll(ce, \"left\") ? ce.scrollWidth : cw );\r\n\t\t\theight = ($.ui.hasScroll(ce) ? ce.scrollHeight : ch);\r\n\r\n\t\t\tthat.parentData = {\r\n\t\t\t\telement: ce, left: co.left, top: co.top, width: width, height: height\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\tresize: function( event ) {\r\n\t\tvar woset, hoset, isParent, isOffsetRelative,\r\n\t\t\tthat = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\tco = that.containerOffset, cp = that.position,\r\n\t\t\tpRatio = that._aspectRatio || event.shiftKey,\r\n\t\t\tcop = { top:0, left:0 }, ce = that.containerElement;\r\n\r\n\t\tif (ce[0] !== document && (/static/).test(ce.css(\"position\"))) {\r\n\t\t\tcop = co;\r\n\t\t}\r\n\r\n\t\tif (cp.left < (that._helper ? co.left : 0)) {\r\n\t\t\tthat.size.width = that.size.width + (that._helper ? (that.position.left - co.left) : (that.position.left - cop.left));\r\n\t\t\tif (pRatio) {\r\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\r\n\t\t\t}\r\n\t\t\tthat.position.left = o.helper ? co.left : 0;\r\n\t\t}\r\n\r\n\t\tif (cp.top < (that._helper ? co.top : 0)) {\r\n\t\t\tthat.size.height = that.size.height + (that._helper ? (that.position.top - co.top) : that.position.top);\r\n\t\t\tif (pRatio) {\r\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\r\n\t\t\t}\r\n\t\t\tthat.position.top = that._helper ? co.top : 0;\r\n\t\t}\r\n\r\n\t\tthat.offset.left = that.parentData.left+that.position.left;\r\n\t\tthat.offset.top = that.parentData.top+that.position.top;\r\n\r\n\t\twoset = Math.abs( (that._helper ? that.offset.left - cop.left : (that.offset.left - cop.left)) + that.sizeDiff.width );\r\n\t\thoset = Math.abs( (that._helper ? that.offset.top - cop.top : (that.offset.top - co.top)) + that.sizeDiff.height );\r\n\r\n\t\tisParent = that.containerElement.get(0) === that.element.parent().get(0);\r\n\t\tisOffsetRelative = /relative|absolute/.test(that.containerElement.css(\"position\"));\r\n\r\n\t\tif ( isParent && isOffsetRelative ) {\r\n\t\t\twoset -= Math.abs( that.parentData.left );\r\n\t\t}\r\n\r\n\t\tif (woset + that.size.width >= that.parentData.width) {\r\n\t\t\tthat.size.width = that.parentData.width - woset;\r\n\t\t\tif (pRatio) {\r\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hoset + that.size.height >= that.parentData.height) {\r\n\t\t\tthat.size.height = that.parentData.height - hoset;\r\n\t\t\tif (pRatio) {\r\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function(){\r\n\t\tvar that = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\tco = that.containerOffset,\r\n\t\t\tcop = that.containerPosition,\r\n\t\t\tce = that.containerElement,\r\n\t\t\thelper = $(that.helper),\r\n\t\t\tho = helper.offset(),\r\n\t\t\tw = helper.outerWidth() - that.sizeDiff.width,\r\n\t\t\th = helper.outerHeight() - that.sizeDiff.height;\r\n\r\n\t\tif (that._helper && !o.animate && (/relative/).test(ce.css(\"position\"))) {\r\n\t\t\t$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });\r\n\t\t}\r\n\r\n\t\tif (that._helper && !o.animate && (/static/).test(ce.css(\"position\"))) {\r\n\t\t\t$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });\r\n\t\t}\r\n\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"resizable\", \"alsoResize\", {\r\n\r\n\tstart: function () {\r\n\t\tvar that = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\t_store = function (exp) {\r\n\t\t\t\t$(exp).each(function() {\r\n\t\t\t\t\tvar el = $(this);\r\n\t\t\t\t\tel.data(\"ui-resizable-alsoresize\", {\r\n\t\t\t\t\t\twidth: parseInt(el.width(), 10), height: parseInt(el.height(), 10),\r\n\t\t\t\t\t\tleft: parseInt(el.css(\"left\"), 10), top: parseInt(el.css(\"top\"), 10)\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\tif (typeof(o.alsoResize) === \"object\" && !o.alsoResize.parentNode) {\r\n\t\t\tif (o.alsoResize.length) { o.alsoResize = o.alsoResize[0]; _store(o.alsoResize); }\r\n\t\t\telse { $.each(o.alsoResize, function (exp) { _store(exp); }); }\r\n\t\t}else{\r\n\t\t\t_store(o.alsoResize);\r\n\t\t}\r\n\t},\r\n\r\n\tresize: function (event, ui) {\r\n\t\tvar that = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\tos = that.originalSize,\r\n\t\t\top = that.originalPosition,\r\n\t\t\tdelta = {\r\n\t\t\t\theight: (that.size.height - os.height) || 0, width: (that.size.width - os.width) || 0,\r\n\t\t\t\ttop: (that.position.top - op.top) || 0, left: (that.position.left - op.left) || 0\r\n\t\t\t},\r\n\r\n\t\t\t_alsoResize = function (exp, c) {\r\n\t\t\t\t$(exp).each(function() {\r\n\t\t\t\t\tvar el = $(this), start = $(this).data(\"ui-resizable-alsoresize\"), style = {},\r\n\t\t\t\t\t\tcss = c && c.length ? c : el.parents(ui.originalElement[0]).length ? [\"width\", \"height\"] : [\"width\", \"height\", \"top\", \"left\"];\r\n\r\n\t\t\t\t\t$.each(css, function (i, prop) {\r\n\t\t\t\t\t\tvar sum = (start[prop]||0) + (delta[prop]||0);\r\n\t\t\t\t\t\tif (sum && sum >= 0) {\r\n\t\t\t\t\t\t\tstyle[prop] = sum || null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tel.css(style);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\tif (typeof(o.alsoResize) === \"object\" && !o.alsoResize.nodeType) {\r\n\t\t\t$.each(o.alsoResize, function (exp, c) { _alsoResize(exp, c); });\r\n\t\t}else{\r\n\t\t\t_alsoResize(o.alsoResize);\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function () {\r\n\t\t$(this).removeData(\"resizable-alsoresize\");\r\n\t}\r\n});\r\n\r\n$.ui.plugin.add(\"resizable\", \"ghost\", {\r\n\r\n\tstart: function() {\r\n\r\n\t\tvar that = $(this).data(\"ui-resizable\"), o = that.options, cs = that.size;\r\n\r\n\t\tthat.ghost = that.originalElement.clone();\r\n\t\tthat.ghost\r\n\t\t\t.css({ opacity: 0.25, display: \"block\", position: \"relative\", height: cs.height, width: cs.width, margin: 0, left: 0, top: 0 })\r\n\t\t\t.addClass(\"ui-resizable-ghost\")\r\n\t\t\t.addClass(typeof o.ghost === \"string\" ? o.ghost : \"\");\r\n\r\n\t\tthat.ghost.appendTo(that.helper);\r\n\r\n\t},\r\n\r\n\tresize: function(){\r\n\t\tvar that = $(this).data(\"ui-resizable\");\r\n\t\tif (that.ghost) {\r\n\t\t\tthat.ghost.css({ position: \"relative\", height: that.size.height, width: that.size.width });\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function() {\r\n\t\tvar that = $(this).data(\"ui-resizable\");\r\n\t\tif (that.ghost && that.helper) {\r\n\t\t\tthat.helper.get(0).removeChild(that.ghost.get(0));\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n$.ui.plugin.add(\"resizable\", \"grid\", {\r\n\r\n\tresize: function() {\r\n\t\tvar that = $(this).data(\"ui-resizable\"),\r\n\t\t\to = that.options,\r\n\t\t\tcs = that.size,\r\n\t\t\tos = that.originalSize,\r\n\t\t\top = that.originalPosition,\r\n\t\t\ta = that.axis,\r\n\t\t\tgrid = typeof o.grid === \"number\" ? [o.grid, o.grid] : o.grid,\r\n\t\t\tgridX = (grid[0]||1),\r\n\t\t\tgridY = (grid[1]||1),\r\n\t\t\tox = Math.round((cs.width - os.width) / gridX) * gridX,\r\n\t\t\toy = Math.round((cs.height - os.height) / gridY) * gridY,\r\n\t\t\tnewWidth = os.width + ox,\r\n\t\t\tnewHeight = os.height + oy,\r\n\t\t\tisMaxWidth = o.maxWidth && (o.maxWidth < newWidth),\r\n\t\t\tisMaxHeight = o.maxHeight && (o.maxHeight < newHeight),\r\n\t\t\tisMinWidth = o.minWidth && (o.minWidth > newWidth),\r\n\t\t\tisMinHeight = o.minHeight && (o.minHeight > newHeight);\r\n\r\n\t\to.grid = grid;\r\n\r\n\t\tif (isMinWidth) {\r\n\t\t\tnewWidth = newWidth + gridX;\r\n\t\t}\r\n\t\tif (isMinHeight) {\r\n\t\t\tnewHeight = newHeight + gridY;\r\n\t\t}\r\n\t\tif (isMaxWidth) {\r\n\t\t\tnewWidth = newWidth - gridX;\r\n\t\t}\r\n\t\tif (isMaxHeight) {\r\n\t\t\tnewHeight = newHeight - gridY;\r\n\t\t}\r\n\r\n\t\tif (/^(se|s|e)$/.test(a)) {\r\n\t\t\tthat.size.width = newWidth;\r\n\t\t\tthat.size.height = newHeight;\r\n\t\t} else if (/^(ne)$/.test(a)) {\r\n\t\t\tthat.size.width = newWidth;\r\n\t\t\tthat.size.height = newHeight;\r\n\t\t\tthat.position.top = op.top - oy;\r\n\t\t} else if (/^(sw)$/.test(a)) {\r\n\t\t\tthat.size.width = newWidth;\r\n\t\t\tthat.size.height = newHeight;\r\n\t\t\tthat.position.left = op.left - ox;\r\n\t\t} else {\r\n\t\t\tif ( newHeight - gridY > 0 ) {\r\n\t\t\t\tthat.size.height = newHeight;\r\n\t\t\t\tthat.position.top = op.top - oy;\r\n\t\t\t} else {\r\n\t\t\t\tthat.size.height = gridY;\r\n\t\t\t\tthat.position.top = op.top + os.height - gridY;\r\n\t\t\t}\r\n\t\t\tif ( newWidth - gridX > 0 ) {\r\n\t\t\t\tthat.size.width = newWidth;\r\n\t\t\t\tthat.position.left = op.left - ox;\r\n\t\t\t} else {\r\n\t\t\t\tthat.size.width = gridX;\r\n\t\t\t\tthat.position.left = op.left + os.width - gridX;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.widget(\"ui.selectable\", $.ui.mouse, {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\tappendTo: \"body\",\r\n\t\tautoRefresh: true,\r\n\t\tdistance: 0,\r\n\t\tfilter: \"*\",\r\n\t\ttolerance: \"touch\",\r\n\r\n\t\t// callbacks\r\n\t\tselected: null,\r\n\t\tselecting: null,\r\n\t\tstart: null,\r\n\t\tstop: null,\r\n\t\tunselected: null,\r\n\t\tunselecting: null\r\n\t},\r\n\t_create: function() {\r\n\t\tvar selectees,\r\n\t\t\tthat = this;\r\n\r\n\t\tthis.element.addClass(\"ui-selectable\");\r\n\r\n\t\tthis.dragged = false;\r\n\r\n\t\t// cache selectee children based on filter\r\n\t\tthis.refresh = function() {\r\n\t\t\tselectees = $(that.options.filter, that.element[0]);\r\n\t\t\tselectees.addClass(\"ui-selectee\");\r\n\t\t\tselectees.each(function() {\r\n\t\t\t\tvar $this = $(this),\r\n\t\t\t\t\tpos = $this.offset();\r\n\t\t\t\t$.data(this, \"selectable-item\", {\r\n\t\t\t\t\telement: this,\r\n\t\t\t\t\t$element: $this,\r\n\t\t\t\t\tleft: pos.left,\r\n\t\t\t\t\ttop: pos.top,\r\n\t\t\t\t\tright: pos.left + $this.outerWidth(),\r\n\t\t\t\t\tbottom: pos.top + $this.outerHeight(),\r\n\t\t\t\t\tstartselected: false,\r\n\t\t\t\t\tselected: $this.hasClass(\"ui-selected\"),\r\n\t\t\t\t\tselecting: $this.hasClass(\"ui-selecting\"),\r\n\t\t\t\t\tunselecting: $this.hasClass(\"ui-unselecting\")\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\t\tthis.refresh();\r\n\r\n\t\tthis.selectees = selectees.addClass(\"ui-selectee\");\r\n\r\n\t\tthis._mouseInit();\r\n\r\n\t\tthis.helper = $(\"<div class='ui-selectable-helper'></div>\");\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.selectees\r\n\t\t\t.removeClass(\"ui-selectee\")\r\n\t\t\t.removeData(\"selectable-item\");\r\n\t\tthis.element\r\n\t\t\t.removeClass(\"ui-selectable ui-selectable-disabled\");\r\n\t\tthis._mouseDestroy();\r\n\t},\r\n\r\n\t_mouseStart: function(event) {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tthis.opos = [event.pageX, event.pageY];\r\n\r\n\t\tif (this.options.disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.selectees = $(options.filter, this.element[0]);\r\n\r\n\t\tthis._trigger(\"start\", event);\r\n\r\n\t\t$(options.appendTo).append(this.helper);\r\n\t\t// position helper (lasso)\r\n\t\tthis.helper.css({\r\n\t\t\t\"left\": event.pageX,\r\n\t\t\t\"top\": event.pageY,\r\n\t\t\t\"width\": 0,\r\n\t\t\t\"height\": 0\r\n\t\t});\r\n\r\n\t\tif (options.autoRefresh) {\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\tthis.selectees.filter(\".ui-selected\").each(function() {\r\n\t\t\tvar selectee = $.data(this, \"selectable-item\");\r\n\t\t\tselectee.startselected = true;\r\n\t\t\tif (!event.metaKey && !event.ctrlKey) {\r\n\t\t\t\tselectee.$element.removeClass(\"ui-selected\");\r\n\t\t\t\tselectee.selected = false;\r\n\t\t\t\tselectee.$element.addClass(\"ui-unselecting\");\r\n\t\t\t\tselectee.unselecting = true;\r\n\t\t\t\t// selectable UNSELECTING callback\r\n\t\t\t\tthat._trigger(\"unselecting\", event, {\r\n\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$(event.target).parents().addBack().each(function() {\r\n\t\t\tvar doSelect,\r\n\t\t\t\tselectee = $.data(this, \"selectable-item\");\r\n\t\t\tif (selectee) {\r\n\t\t\t\tdoSelect = (!event.metaKey && !event.ctrlKey) || !selectee.$element.hasClass(\"ui-selected\");\r\n\t\t\t\tselectee.$element\r\n\t\t\t\t\t.removeClass(doSelect ? \"ui-unselecting\" : \"ui-selected\")\r\n\t\t\t\t\t.addClass(doSelect ? \"ui-selecting\" : \"ui-unselecting\");\r\n\t\t\t\tselectee.unselecting = !doSelect;\r\n\t\t\t\tselectee.selecting = doSelect;\r\n\t\t\t\tselectee.selected = doSelect;\r\n\t\t\t\t// selectable (UN)SELECTING callback\r\n\t\t\t\tif (doSelect) {\r\n\t\t\t\t\tthat._trigger(\"selecting\", event, {\r\n\t\t\t\t\t\tselecting: selectee.element\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthat._trigger(\"unselecting\", event, {\r\n\t\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\r\n\t_mouseDrag: function(event) {\r\n\r\n\t\tthis.dragged = true;\r\n\r\n\t\tif (this.options.disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tmp,\r\n\t\t\tthat = this,\r\n\t\t\toptions = this.options,\r\n\t\t\tx1 = this.opos[0],\r\n\t\t\ty1 = this.opos[1],\r\n\t\t\tx2 = event.pageX,\r\n\t\t\ty2 = event.pageY;\r\n\r\n\t\tif (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }\r\n\t\tif (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\t\tthis.helper.css({left: x1, top: y1, width: x2-x1, height: y2-y1});\r\n\r\n\t\tthis.selectees.each(function() {\r\n\t\t\tvar selectee = $.data(this, \"selectable-item\"),\r\n\t\t\t\thit = false;\r\n\r\n\t\t\t//prevent helper from being selected if appendTo: selectable\r\n\t\t\tif (!selectee || selectee.element === that.element[0]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.tolerance === \"touch\") {\r\n\t\t\t\thit = ( !(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1) );\r\n\t\t\t} else if (options.tolerance === \"fit\") {\r\n\t\t\t\thit = (selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2);\r\n\t\t\t}\r\n\r\n\t\t\tif (hit) {\r\n\t\t\t\t// SELECT\r\n\t\t\t\tif (selectee.selected) {\r\n\t\t\t\t\tselectee.$element.removeClass(\"ui-selected\");\r\n\t\t\t\t\tselectee.selected = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (selectee.unselecting) {\r\n\t\t\t\t\tselectee.$element.removeClass(\"ui-unselecting\");\r\n\t\t\t\t\tselectee.unselecting = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!selectee.selecting) {\r\n\t\t\t\t\tselectee.$element.addClass(\"ui-selecting\");\r\n\t\t\t\t\tselectee.selecting = true;\r\n\t\t\t\t\t// selectable SELECTING callback\r\n\t\t\t\t\tthat._trigger(\"selecting\", event, {\r\n\t\t\t\t\t\tselecting: selectee.element\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// UNSELECT\r\n\t\t\t\tif (selectee.selecting) {\r\n\t\t\t\t\tif ((event.metaKey || event.ctrlKey) && selectee.startselected) {\r\n\t\t\t\t\t\tselectee.$element.removeClass(\"ui-selecting\");\r\n\t\t\t\t\t\tselectee.selecting = false;\r\n\t\t\t\t\t\tselectee.$element.addClass(\"ui-selected\");\r\n\t\t\t\t\t\tselectee.selected = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tselectee.$element.removeClass(\"ui-selecting\");\r\n\t\t\t\t\t\tselectee.selecting = false;\r\n\t\t\t\t\t\tif (selectee.startselected) {\r\n\t\t\t\t\t\t\tselectee.$element.addClass(\"ui-unselecting\");\r\n\t\t\t\t\t\t\tselectee.unselecting = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// selectable UNSELECTING callback\r\n\t\t\t\t\t\tthat._trigger(\"unselecting\", event, {\r\n\t\t\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (selectee.selected) {\r\n\t\t\t\t\tif (!event.metaKey && !event.ctrlKey && !selectee.startselected) {\r\n\t\t\t\t\t\tselectee.$element.removeClass(\"ui-selected\");\r\n\t\t\t\t\t\tselectee.selected = false;\r\n\r\n\t\t\t\t\t\tselectee.$element.addClass(\"ui-unselecting\");\r\n\t\t\t\t\t\tselectee.unselecting = true;\r\n\t\t\t\t\t\t// selectable UNSELECTING callback\r\n\t\t\t\t\t\tthat._trigger(\"unselecting\", event, {\r\n\t\t\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function(event) {\r\n\t\tvar that = this;\r\n\r\n\t\tthis.dragged = false;\r\n\r\n\t\t$(\".ui-unselecting\", this.element[0]).each(function() {\r\n\t\t\tvar selectee = $.data(this, \"selectable-item\");\r\n\t\t\tselectee.$element.removeClass(\"ui-unselecting\");\r\n\t\t\tselectee.unselecting = false;\r\n\t\t\tselectee.startselected = false;\r\n\t\t\tthat._trigger(\"unselected\", event, {\r\n\t\t\t\tunselected: selectee.element\r\n\t\t\t});\r\n\t\t});\r\n\t\t$(\".ui-selecting\", this.element[0]).each(function() {\r\n\t\t\tvar selectee = $.data(this, \"selectable-item\");\r\n\t\t\tselectee.$element.removeClass(\"ui-selecting\").addClass(\"ui-selected\");\r\n\t\t\tselectee.selecting = false;\r\n\t\t\tselectee.selected = true;\r\n\t\t\tselectee.startselected = true;\r\n\t\t\tthat._trigger(\"selected\", event, {\r\n\t\t\t\tselected: selectee.element\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis._trigger(\"stop\", event);\r\n\r\n\t\tthis.helper.remove();\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n});\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\nfunction isOverAxis( x, reference, size ) {\r\n\treturn ( x > reference ) && ( x < ( reference + size ) );\r\n}\r\n\r\nfunction isFloating(item) {\r\n\treturn (/left|right/).test(item.css(\"float\")) || (/inline|table-cell/).test(item.css(\"display\"));\r\n}\r\n\r\n$.widget(\"ui.sortable\", $.ui.mouse, {\r\n\tversion: \"1.10.4\",\r\n\twidgetEventPrefix: \"sort\",\r\n\tready: false,\r\n\toptions: {\r\n\t\tappendTo: \"parent\",\r\n\t\taxis: false,\r\n\t\tconnectWith: false,\r\n\t\tcontainment: false,\r\n\t\tcursor: \"auto\",\r\n\t\tcursorAt: false,\r\n\t\tdropOnEmpty: true,\r\n\t\tforcePlaceholderSize: false,\r\n\t\tforceHelperSize: false,\r\n\t\tgrid: false,\r\n\t\thandle: false,\r\n\t\thelper: \"original\",\r\n\t\titems: \"> *\",\r\n\t\topacity: false,\r\n\t\tplaceholder: false,\r\n\t\trevert: false,\r\n\t\tscroll: true,\r\n\t\tscrollSensitivity: 20,\r\n\t\tscrollSpeed: 20,\r\n\t\tscope: \"default\",\r\n\t\ttolerance: \"intersect\",\r\n\t\tzIndex: 1000,\r\n\r\n\t\t// callbacks\r\n\t\tactivate: null,\r\n\t\tbeforeStop: null,\r\n\t\tchange: null,\r\n\t\tdeactivate: null,\r\n\t\tout: null,\r\n\t\tover: null,\r\n\t\treceive: null,\r\n\t\tremove: null,\r\n\t\tsort: null,\r\n\t\tstart: null,\r\n\t\tstop: null,\r\n\t\tupdate: null\r\n\t},\r\n\t_create: function() {\r\n\r\n\t\tvar o = this.options;\r\n\t\tthis.containerCache = {};\r\n\t\tthis.element.addClass(\"ui-sortable\");\r\n\r\n\t\t//Get the items\r\n\t\tthis.refresh();\r\n\r\n\t\t//Let's determine if the items are being displayed horizontally\r\n\t\tthis.floating = this.items.length ? o.axis === \"x\" || isFloating(this.items[0].item) : false;\r\n\r\n\t\t//Let's determine the parent's offset\r\n\t\tthis.offset = this.element.offset();\r\n\r\n\t\t//Initialize mouse events for interaction\r\n\t\tthis._mouseInit();\r\n\r\n\t\t//We're ready to go\r\n\t\tthis.ready = true;\r\n\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element\r\n\t\t\t.removeClass(\"ui-sortable ui-sortable-disabled\");\r\n\t\tthis._mouseDestroy();\r\n\r\n\t\tfor ( var i = this.items.length - 1; i >= 0; i-- ) {\r\n\t\t\tthis.items[i].item.removeData(this.widgetName + \"-item\");\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_setOption: function(key, value){\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis.options[ key ] = value;\r\n\r\n\t\t\tthis.widget().toggleClass( \"ui-sortable-disabled\", !!value );\r\n\t\t} else {\r\n\t\t\t// Don't call widget base _setOption for disable as it adds ui-state-disabled class\r\n\t\t\t$.Widget.prototype._setOption.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\r\n\t_mouseCapture: function(event, overrideHandle) {\r\n\t\tvar currentItem = null,\r\n\t\t\tvalidHandle = false,\r\n\t\t\tthat = this;\r\n\r\n\t\tif (this.reverting) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(this.options.disabled || this.options.type === \"static\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//We have to refresh the items data once first\r\n\t\tthis._refreshItems(event);\r\n\r\n\t\t//Find out if the clicked node (or one of its parents) is a actual item in this.items\r\n\t\t$(event.target).parents().each(function() {\r\n\t\t\tif($.data(this, that.widgetName + \"-item\") === that) {\r\n\t\t\t\tcurrentItem = $(this);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif($.data(event.target, that.widgetName + \"-item\") === that) {\r\n\t\t\tcurrentItem = $(event.target);\r\n\t\t}\r\n\r\n\t\tif(!currentItem) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(this.options.handle && !overrideHandle) {\r\n\t\t\t$(this.options.handle, currentItem).find(\"*\").addBack().each(function() {\r\n\t\t\t\tif(this === event.target) {\r\n\t\t\t\t\tvalidHandle = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(!validHandle) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.currentItem = currentItem;\r\n\t\tthis._removeCurrentsFromItems();\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_mouseStart: function(event, overrideHandle, noActivation) {\r\n\r\n\t\tvar i, body,\r\n\t\t\to = this.options;\r\n\r\n\t\tthis.currentContainer = this;\r\n\r\n\t\t//We only need to call refreshPositions, because the refreshItems call has been moved to mouseCapture\r\n\t\tthis.refreshPositions();\r\n\r\n\t\t//Create and append the visible helper\r\n\t\tthis.helper = this._createHelper(event);\r\n\r\n\t\t//Cache the helper size\r\n\t\tthis._cacheHelperProportions();\r\n\r\n\t\t/*\r\n\t\t * - Position generation -\r\n\t\t * This block generates everything position related - it's the core of draggables.\r\n\t\t */\r\n\r\n\t\t//Cache the margins of the original element\r\n\t\tthis._cacheMargins();\r\n\r\n\t\t//Get the next scrolling parent\r\n\t\tthis.scrollParent = this.helper.scrollParent();\r\n\r\n\t\t//The element's absolute position on the page minus margins\r\n\t\tthis.offset = this.currentItem.offset();\r\n\t\tthis.offset = {\r\n\t\t\ttop: this.offset.top - this.margins.top,\r\n\t\t\tleft: this.offset.left - this.margins.left\r\n\t\t};\r\n\r\n\t\t$.extend(this.offset, {\r\n\t\t\tclick: { //Where the click happened, relative to the element\r\n\t\t\t\tleft: event.pageX - this.offset.left,\r\n\t\t\t\ttop: event.pageY - this.offset.top\r\n\t\t\t},\r\n\t\t\tparent: this._getParentOffset(),\r\n\t\t\trelative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\r\n\t\t});\r\n\r\n\t\t// Only after we got the offset, we can change the helper's position to absolute\r\n\t\t// TODO: Still need to figure out a way to make relative sorting possible\r\n\t\tthis.helper.css(\"position\", \"absolute\");\r\n\t\tthis.cssPosition = this.helper.css(\"position\");\r\n\r\n\t\t//Generate the original position\r\n\t\tthis.originalPosition = this._generatePosition(event);\r\n\t\tthis.originalPageX = event.pageX;\r\n\t\tthis.originalPageY = event.pageY;\r\n\r\n\t\t//Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\r\n\t\t(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));\r\n\r\n\t\t//Cache the former DOM position\r\n\t\tthis.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] };\r\n\r\n\t\t//If the helper is not the original, hide the original so it's not playing any role during the drag, won't cause anything bad this way\r\n\t\tif(this.helper[0] !== this.currentItem[0]) {\r\n\t\t\tthis.currentItem.hide();\r\n\t\t}\r\n\r\n\t\t//Create the placeholder\r\n\t\tthis._createPlaceholder();\r\n\r\n\t\t//Set a containment if given in the options\r\n\t\tif(o.containment) {\r\n\t\t\tthis._setContainment();\r\n\t\t}\r\n\r\n\t\tif( o.cursor && o.cursor !== \"auto\" ) { // cursor option\r\n\t\t\tbody = this.document.find( \"body\" );\r\n\r\n\t\t\t// support: IE\r\n\t\t\tthis.storedCursor = body.css( \"cursor\" );\r\n\t\t\tbody.css( \"cursor\", o.cursor );\r\n\r\n\t\t\tthis.storedStylesheet = $( \"<style>*{ cursor: \"+o.cursor+\" !important; }</style>\" ).appendTo( body );\r\n\t\t}\r\n\r\n\t\tif(o.opacity) { // opacity option\r\n\t\t\tif (this.helper.css(\"opacity\")) {\r\n\t\t\t\tthis._storedOpacity = this.helper.css(\"opacity\");\r\n\t\t\t}\r\n\t\t\tthis.helper.css(\"opacity\", o.opacity);\r\n\t\t}\r\n\r\n\t\tif(o.zIndex) { // zIndex option\r\n\t\t\tif (this.helper.css(\"zIndex\")) {\r\n\t\t\t\tthis._storedZIndex = this.helper.css(\"zIndex\");\r\n\t\t\t}\r\n\t\t\tthis.helper.css(\"zIndex\", o.zIndex);\r\n\t\t}\r\n\r\n\t\t//Prepare scrolling\r\n\t\tif(this.scrollParent[0] !== document && this.scrollParent[0].tagName !== \"HTML\") {\r\n\t\t\tthis.overflowOffset = this.scrollParent.offset();\r\n\t\t}\r\n\r\n\t\t//Call callbacks\r\n\t\tthis._trigger(\"start\", event, this._uiHash());\r\n\r\n\t\t//Recache the helper size\r\n\t\tif(!this._preserveHelperProportions) {\r\n\t\t\tthis._cacheHelperProportions();\r\n\t\t}\r\n\r\n\r\n\t\t//Post \"activate\" events to possible containers\r\n\t\tif( !noActivation ) {\r\n\t\t\tfor ( i = this.containers.length - 1; i >= 0; i-- ) {\r\n\t\t\t\tthis.containers[ i ]._trigger( \"activate\", event, this._uiHash( this ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Prepare possible droppables\r\n\t\tif($.ui.ddmanager) {\r\n\t\t\t$.ui.ddmanager.current = this;\r\n\t\t}\r\n\r\n\t\tif ($.ui.ddmanager && !o.dropBehaviour) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets(this, event);\r\n\t\t}\r\n\r\n\t\tthis.dragging = true;\r\n\r\n\t\tthis.helper.addClass(\"ui-sortable-helper\");\r\n\t\tthis._mouseDrag(event); //Execute the drag once - this causes the helper not to be visible before getting its correct position\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_mouseDrag: function(event) {\r\n\t\tvar i, item, itemElement, intersection,\r\n\t\t\to = this.options,\r\n\t\t\tscrolled = false;\r\n\r\n\t\t//Compute the helpers position\r\n\t\tthis.position = this._generatePosition(event);\r\n\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\r\n\r\n\t\tif (!this.lastPositionAbs) {\r\n\t\t\tthis.lastPositionAbs = this.positionAbs;\r\n\t\t}\r\n\r\n\t\t//Do scrolling\r\n\t\tif(this.options.scroll) {\r\n\t\t\tif(this.scrollParent[0] !== document && this.scrollParent[0].tagName !== \"HTML\") {\r\n\r\n\t\t\t\tif((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {\r\n\t\t\t\t\tthis.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;\r\n\t\t\t\t} else if(event.pageY - this.overflowOffset.top < o.scrollSensitivity) {\r\n\t\t\t\t\tthis.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {\r\n\t\t\t\t\tthis.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;\r\n\t\t\t\t} else if(event.pageX - this.overflowOffset.left < o.scrollSensitivity) {\r\n\t\t\t\t\tthis.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif(event.pageY - $(document).scrollTop() < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\r\n\t\t\t\t} else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\r\n\t\t\t\t} else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {\r\n\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\r\n\t\t\t\t$.ui.ddmanager.prepareOffsets(this, event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Regenerate the absolute position used for position checks\r\n\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\r\n\r\n\t\t//Set the helper position\r\n\t\tif(!this.options.axis || this.options.axis !== \"y\") {\r\n\t\t\tthis.helper[0].style.left = this.position.left+\"px\";\r\n\t\t}\r\n\t\tif(!this.options.axis || this.options.axis !== \"x\") {\r\n\t\t\tthis.helper[0].style.top = this.position.top+\"px\";\r\n\t\t}\r\n\r\n\t\t//Rearrange\r\n\t\tfor (i = this.items.length - 1; i >= 0; i--) {\r\n\r\n\t\t\t//Cache variables and intersection, continue if no intersection\r\n\t\t\titem = this.items[i];\r\n\t\t\titemElement = item.item[0];\r\n\t\t\tintersection = this._intersectsWithPointer(item);\r\n\t\t\tif (!intersection) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Only put the placeholder inside the current Container, skip all\r\n\t\t\t// items from other containers. This works because when moving\r\n\t\t\t// an item from one container to another the\r\n\t\t\t// currentContainer is switched before the placeholder is moved.\r\n\t\t\t//\r\n\t\t\t// Without this, moving items in \"sub-sortables\" can cause\r\n\t\t\t// the placeholder to jitter beetween the outer and inner container.\r\n\t\t\tif (item.instance !== this.currentContainer) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// cannot intersect with itself\r\n\t\t\t// no useless actions that have been done before\r\n\t\t\t// no action if the item moved is the parent of the item checked\r\n\t\t\tif (itemElement !== this.currentItem[0] &&\r\n\t\t\t\tthis.placeholder[intersection === 1 ? \"next\" : \"prev\"]()[0] !== itemElement &&\r\n\t\t\t\t!$.contains(this.placeholder[0], itemElement) &&\r\n\t\t\t\t(this.options.type === \"semi-dynamic\" ? !$.contains(this.element[0], itemElement) : true)\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis.direction = intersection === 1 ? \"down\" : \"up\";\r\n\r\n\t\t\t\tif (this.options.tolerance === \"pointer\" || this._intersectsWithSides(item)) {\r\n\t\t\t\t\tthis._rearrange(event, item);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Post events to containers\r\n\t\tthis._contactContainers(event);\r\n\r\n\t\t//Interconnect with droppables\r\n\t\tif($.ui.ddmanager) {\r\n\t\t\t$.ui.ddmanager.drag(this, event);\r\n\t\t}\r\n\r\n\t\t//Call callbacks\r\n\t\tthis._trigger(\"sort\", event, this._uiHash());\r\n\r\n\t\tthis.lastPositionAbs = this.positionAbs;\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\t_mouseStop: function(event, noPropagation) {\r\n\r\n\t\tif(!event) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//If we are using droppables, inform the manager about the drop\r\n\t\tif ($.ui.ddmanager && !this.options.dropBehaviour) {\r\n\t\t\t$.ui.ddmanager.drop(this, event);\r\n\t\t}\r\n\r\n\t\tif(this.options.revert) {\r\n\t\t\tvar that = this,\r\n\t\t\t\tcur = this.placeholder.offset(),\r\n\t\t\t\taxis = this.options.axis,\r\n\t\t\t\tanimation = {};\r\n\r\n\t\t\tif ( !axis || axis === \"x\" ) {\r\n\t\t\t\tanimation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft);\r\n\t\t\t}\r\n\t\t\tif ( !axis || axis === \"y\" ) {\r\n\t\t\t\tanimation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop);\r\n\t\t\t}\r\n\t\t\tthis.reverting = true;\r\n\t\t\t$(this.helper).animate( animation, parseInt(this.options.revert, 10) || 500, function() {\r\n\t\t\t\tthat._clear(event);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis._clear(event, noPropagation);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tcancel: function() {\r\n\r\n\t\tif(this.dragging) {\r\n\r\n\t\t\tthis._mouseUp({ target: null });\r\n\r\n\t\t\tif(this.options.helper === \"original\") {\r\n\t\t\t\tthis.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.currentItem.show();\r\n\t\t\t}\r\n\r\n\t\t\t//Post deactivating events to containers\r\n\t\t\tfor (var i = this.containers.length - 1; i >= 0; i--){\r\n\t\t\t\tthis.containers[i]._trigger(\"deactivate\", null, this._uiHash(this));\r\n\t\t\t\tif(this.containers[i].containerCache.over) {\r\n\t\t\t\t\tthis.containers[i]._trigger(\"out\", null, this._uiHash(this));\r\n\t\t\t\t\tthis.containers[i].containerCache.over = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this.placeholder) {\r\n\t\t\t//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!\r\n\t\t\tif(this.placeholder[0].parentNode) {\r\n\t\t\t\tthis.placeholder[0].parentNode.removeChild(this.placeholder[0]);\r\n\t\t\t}\r\n\t\t\tif(this.options.helper !== \"original\" && this.helper && this.helper[0].parentNode) {\r\n\t\t\t\tthis.helper.remove();\r\n\t\t\t}\r\n\r\n\t\t\t$.extend(this, {\r\n\t\t\t\thelper: null,\r\n\t\t\t\tdragging: false,\r\n\t\t\t\treverting: false,\r\n\t\t\t\t_noFinalSort: null\r\n\t\t\t});\r\n\r\n\t\t\tif(this.domPosition.prev) {\r\n\t\t\t\t$(this.domPosition.prev).after(this.currentItem);\r\n\t\t\t} else {\r\n\t\t\t\t$(this.domPosition.parent).prepend(this.currentItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tserialize: function(o) {\r\n\r\n\t\tvar items = this._getItemsAsjQuery(o && o.connected),\r\n\t\t\tstr = [];\r\n\t\to = o || {};\r\n\r\n\t\t$(items).each(function() {\r\n\t\t\tvar res = ($(o.item || this).attr(o.attribute || \"id\") || \"\").match(o.expression || (/(.+)[\\-=_](.+)/));\r\n\t\t\tif (res) {\r\n\t\t\t\tstr.push((o.key || res[1]+\"[]\")+\"=\"+(o.key && o.expression ? res[1] : res[2]));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!str.length && o.key) {\r\n\t\t\tstr.push(o.key + \"=\");\r\n\t\t}\r\n\r\n\t\treturn str.join(\"&\");\r\n\r\n\t},\r\n\r\n\ttoArray: function(o) {\r\n\r\n\t\tvar items = this._getItemsAsjQuery(o && o.connected),\r\n\t\t\tret = [];\r\n\r\n\t\to = o || {};\r\n\r\n\t\titems.each(function() { ret.push($(o.item || this).attr(o.attribute || \"id\") || \"\"); });\r\n\t\treturn ret;\r\n\r\n\t},\r\n\r\n\t/* Be careful with the following core functions */\r\n\t_intersectsWith: function(item) {\r\n\r\n\t\tvar x1 = this.positionAbs.left,\r\n\t\t\tx2 = x1 + this.helperProportions.width,\r\n\t\t\ty1 = this.positionAbs.top,\r\n\t\t\ty2 = y1 + this.helperProportions.height,\r\n\t\t\tl = item.left,\r\n\t\t\tr = l + item.width,\r\n\t\t\tt = item.top,\r\n\t\t\tb = t + item.height,\r\n\t\t\tdyClick = this.offset.click.top,\r\n\t\t\tdxClick = this.offset.click.left,\r\n\t\t\tisOverElementHeight = ( this.options.axis === \"x\" ) || ( ( y1 + dyClick ) > t && ( y1 + dyClick ) < b ),\r\n\t\t\tisOverElementWidth = ( this.options.axis === \"y\" ) || ( ( x1 + dxClick ) > l && ( x1 + dxClick ) < r ),\r\n\t\t\tisOverElement = isOverElementHeight && isOverElementWidth;\r\n\r\n\t\tif ( this.options.tolerance === \"pointer\" ||\r\n\t\t\tthis.options.forcePointerForContainers ||\r\n\t\t\t(this.options.tolerance !== \"pointer\" && this.helperProportions[this.floating ? \"width\" : \"height\"] > item[this.floating ? \"width\" : \"height\"])\r\n\t\t) {\r\n\t\t\treturn isOverElement;\r\n\t\t} else {\r\n\r\n\t\t\treturn (l < x1 + (this.helperProportions.width / 2) && // Right Half\r\n\t\t\t\tx2 - (this.helperProportions.width / 2) < r && // Left Half\r\n\t\t\t\tt < y1 + (this.helperProportions.height / 2) && // Bottom Half\r\n\t\t\t\ty2 - (this.helperProportions.height / 2) < b ); // Top Half\r\n\r\n\t\t}\r\n\t},\r\n\r\n\t_intersectsWithPointer: function(item) {\r\n\r\n\t\tvar isOverElementHeight = (this.options.axis === \"x\") || isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),\r\n\t\t\tisOverElementWidth = (this.options.axis === \"y\") || isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),\r\n\t\t\tisOverElement = isOverElementHeight && isOverElementWidth,\r\n\t\t\tverticalDirection = this._getDragVerticalDirection(),\r\n\t\t\thorizontalDirection = this._getDragHorizontalDirection();\r\n\r\n\t\tif (!isOverElement) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.floating ?\r\n\t\t\t( ((horizontalDirection && horizontalDirection === \"right\") || verticalDirection === \"down\") ? 2 : 1 )\r\n\t\t\t: ( verticalDirection && (verticalDirection === \"down\" ? 2 : 1) );\r\n\r\n\t},\r\n\r\n\t_intersectsWithSides: function(item) {\r\n\r\n\t\tvar isOverBottomHalf = isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height/2), item.height),\r\n\t\t\tisOverRightHalf = isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width/2), item.width),\r\n\t\t\tverticalDirection = this._getDragVerticalDirection(),\r\n\t\t\thorizontalDirection = this._getDragHorizontalDirection();\r\n\r\n\t\tif (this.floating && horizontalDirection) {\r\n\t\t\treturn ((horizontalDirection === \"right\" && isOverRightHalf) || (horizontalDirection === \"left\" && !isOverRightHalf));\r\n\t\t} else {\r\n\t\t\treturn verticalDirection && ((verticalDirection === \"down\" && isOverBottomHalf) || (verticalDirection === \"up\" && !isOverBottomHalf));\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_getDragVerticalDirection: function() {\r\n\t\tvar delta = this.positionAbs.top - this.lastPositionAbs.top;\r\n\t\treturn delta !== 0 && (delta > 0 ? \"down\" : \"up\");\r\n\t},\r\n\r\n\t_getDragHorizontalDirection: function() {\r\n\t\tvar delta = this.positionAbs.left - this.lastPositionAbs.left;\r\n\t\treturn delta !== 0 && (delta > 0 ? \"right\" : \"left\");\r\n\t},\r\n\r\n\trefresh: function(event) {\r\n\t\tthis._refreshItems(event);\r\n\t\tthis.refreshPositions();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_connectWith: function() {\r\n\t\tvar options = this.options;\r\n\t\treturn options.connectWith.constructor === String ? [options.connectWith] : options.connectWith;\r\n\t},\r\n\r\n\t_getItemsAsjQuery: function(connected) {\r\n\r\n\t\tvar i, j, cur, inst,\r\n\t\t\titems = [],\r\n\t\t\tqueries = [],\r\n\t\t\tconnectWith = this._connectWith();\r\n\r\n\t\tif(connectWith && connected) {\r\n\t\t\tfor (i = connectWith.length - 1; i >= 0; i--){\r\n\t\t\t\tcur = $(connectWith[i]);\r\n\t\t\t\tfor ( j = cur.length - 1; j >= 0; j--){\r\n\t\t\t\t\tinst = $.data(cur[j], this.widgetFullName);\r\n\t\t\t\t\tif(inst && inst !== this && !inst.options.disabled) {\r\n\t\t\t\t\t\tqueries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), inst]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tqueries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : $(this.options.items, this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), this]);\r\n\r\n\t\tfunction addItems() {\r\n\t\t\titems.push( this );\r\n\t\t}\r\n\t\tfor (i = queries.length - 1; i >= 0; i--){\r\n\t\t\tqueries[i][0].each( addItems );\r\n\t\t}\r\n\r\n\t\treturn $(items);\r\n\r\n\t},\r\n\r\n\t_removeCurrentsFromItems: function() {\r\n\r\n\t\tvar list = this.currentItem.find(\":data(\" + this.widgetName + \"-item)\");\r\n\r\n\t\tthis.items = $.grep(this.items, function (item) {\r\n\t\t\tfor (var j=0; j < list.length; j++) {\r\n\t\t\t\tif(list[j] === item.item[0]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t},\r\n\r\n\t_refreshItems: function(event) {\r\n\r\n\t\tthis.items = [];\r\n\t\tthis.containers = [this];\r\n\r\n\t\tvar i, j, cur, inst, targetData, _queries, item, queriesLength,\r\n\t\t\titems = this.items,\r\n\t\t\tqueries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, { item: this.currentItem }) : $(this.options.items, this.element), this]],\r\n\t\t\tconnectWith = this._connectWith();\r\n\r\n\t\tif(connectWith && this.ready) { //Shouldn't be run the first time through due to massive slow-down\r\n\t\t\tfor (i = connectWith.length - 1; i >= 0; i--){\r\n\t\t\t\tcur = $(connectWith[i]);\r\n\t\t\t\tfor (j = cur.length - 1; j >= 0; j--){\r\n\t\t\t\t\tinst = $.data(cur[j], this.widgetFullName);\r\n\t\t\t\t\tif(inst && inst !== this && !inst.options.disabled) {\r\n\t\t\t\t\t\tqueries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, { item: this.currentItem }) : $(inst.options.items, inst.element), inst]);\r\n\t\t\t\t\t\tthis.containers.push(inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = queries.length - 1; i >= 0; i--) {\r\n\t\t\ttargetData = queries[i][1];\r\n\t\t\t_queries = queries[i][0];\r\n\r\n\t\t\tfor (j=0, queriesLength = _queries.length; j < queriesLength; j++) {\r\n\t\t\t\titem = $(_queries[j]);\r\n\r\n\t\t\t\titem.data(this.widgetName + \"-item\", targetData); // Data for target checking (mouse manager)\r\n\r\n\t\t\t\titems.push({\r\n\t\t\t\t\titem: item,\r\n\t\t\t\t\tinstance: targetData,\r\n\t\t\t\t\twidth: 0, height: 0,\r\n\t\t\t\t\tleft: 0, top: 0\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trefreshPositions: function(fast) {\r\n\r\n\t\t//This has to be redone because due to the item being moved out/into the offsetParent, the offsetParent's position will change\r\n\t\tif(this.offsetParent && this.helper) {\r\n\t\t\tthis.offset.parent = this._getParentOffset();\r\n\t\t}\r\n\r\n\t\tvar i, item, t, p;\r\n\r\n\t\tfor (i = this.items.length - 1; i >= 0; i--){\r\n\t\t\titem = this.items[i];\r\n\r\n\t\t\t//We ignore calculating positions of all connected containers when we're not over them\r\n\t\t\tif(item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;\r\n\r\n\t\t\tif (!fast) {\r\n\t\t\t\titem.width = t.outerWidth();\r\n\t\t\t\titem.height = t.outerHeight();\r\n\t\t\t}\r\n\r\n\t\t\tp = t.offset();\r\n\t\t\titem.left = p.left;\r\n\t\t\titem.top = p.top;\r\n\t\t}\r\n\r\n\t\tif(this.options.custom && this.options.custom.refreshContainers) {\r\n\t\t\tthis.options.custom.refreshContainers.call(this);\r\n\t\t} else {\r\n\t\t\tfor (i = this.containers.length - 1; i >= 0; i--){\r\n\t\t\t\tp = this.containers[i].element.offset();\r\n\t\t\t\tthis.containers[i].containerCache.left = p.left;\r\n\t\t\t\tthis.containers[i].containerCache.top = p.top;\r\n\t\t\t\tthis.containers[i].containerCache.width\t= this.containers[i].element.outerWidth();\r\n\t\t\t\tthis.containers[i].containerCache.height = this.containers[i].element.outerHeight();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_createPlaceholder: function(that) {\r\n\t\tthat = that || this;\r\n\t\tvar className,\r\n\t\t\to = that.options;\r\n\r\n\t\tif(!o.placeholder || o.placeholder.constructor === String) {\r\n\t\t\tclassName = o.placeholder;\r\n\t\t\to.placeholder = {\r\n\t\t\t\telement: function() {\r\n\r\n\t\t\t\t\tvar nodeName = that.currentItem[0].nodeName.toLowerCase(),\r\n\t\t\t\t\t\telement = $( \"<\" + nodeName + \">\", that.document[0] )\r\n\t\t\t\t\t\t\t.addClass(className || that.currentItem[0].className+\" ui-sortable-placeholder\")\r\n\t\t\t\t\t\t\t.removeClass(\"ui-sortable-helper\");\r\n\r\n\t\t\t\t\tif ( nodeName === \"tr\" ) {\r\n\t\t\t\t\t\tthat.currentItem.children().each(function() {\r\n\t\t\t\t\t\t\t$( \"<td>&#160;</td>\", that.document[0] )\r\n\t\t\t\t\t\t\t\t.attr( \"colspan\", $( this ).attr( \"colspan\" ) || 1 )\r\n\t\t\t\t\t\t\t\t.appendTo( element );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if ( nodeName === \"img\" ) {\r\n\t\t\t\t\t\telement.attr( \"src\", that.currentItem.attr( \"src\" ) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( !className ) {\r\n\t\t\t\t\t\telement.css( \"visibility\", \"hidden\" );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t},\r\n\t\t\t\tupdate: function(container, p) {\r\n\r\n\t\t\t\t\t// 1. If a className is set as 'placeholder option, we don't force sizes - the class is responsible for that\r\n\t\t\t\t\t// 2. The option 'forcePlaceholderSize can be enabled to force it even if a class name is specified\r\n\t\t\t\t\tif(className && !o.forcePlaceholderSize) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//If the element doesn't have a actual height by itself (without styles coming from a stylesheet), it receives the inline height from the dragged item\r\n\t\t\t\t\tif(!p.height()) { p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css(\"paddingTop\")||0, 10) - parseInt(that.currentItem.css(\"paddingBottom\")||0, 10)); }\r\n\t\t\t\t\tif(!p.width()) { p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css(\"paddingLeft\")||0, 10) - parseInt(that.currentItem.css(\"paddingRight\")||0, 10)); }\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t//Create the placeholder\r\n\t\tthat.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));\r\n\r\n\t\t//Append it after the actual current item\r\n\t\tthat.currentItem.after(that.placeholder);\r\n\r\n\t\t//Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)\r\n\t\to.placeholder.update(that, that.placeholder);\r\n\r\n\t},\r\n\r\n\t_contactContainers: function(event) {\r\n\t\tvar i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, base, cur, nearBottom, floating,\r\n\t\t\tinnermostContainer = null,\r\n\t\t\tinnermostIndex = null;\r\n\r\n\t\t// get innermost container that intersects with item\r\n\t\tfor (i = this.containers.length - 1; i >= 0; i--) {\r\n\r\n\t\t\t// never consider a container that's located within the item itself\r\n\t\t\tif($.contains(this.currentItem[0], this.containers[i].element[0])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._intersectsWith(this.containers[i].containerCache)) {\r\n\r\n\t\t\t\t// if we've already found a container and it's more \"inner\" than this, then continue\r\n\t\t\t\tif(innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinnermostContainer = this.containers[i];\r\n\t\t\t\tinnermostIndex = i;\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// container doesn't intersect. trigger \"out\" event if necessary\r\n\t\t\t\tif(this.containers[i].containerCache.over) {\r\n\t\t\t\t\tthis.containers[i]._trigger(\"out\", event, this._uiHash(this));\r\n\t\t\t\t\tthis.containers[i].containerCache.over = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// if no intersecting containers found, return\r\n\t\tif(!innermostContainer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// move the item into the container if it's not there already\r\n\t\tif(this.containers.length === 1) {\r\n\t\t\tif (!this.containers[innermostIndex].containerCache.over) {\r\n\t\t\t\tthis.containers[innermostIndex]._trigger(\"over\", event, this._uiHash(this));\r\n\t\t\t\tthis.containers[innermostIndex].containerCache.over = 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t//When entering a new container, we will find the item with the least distance and append our item near it\r\n\t\t\tdist = 10000;\r\n\t\t\titemWithLeastDistance = null;\r\n\t\t\tfloating = innermostContainer.floating || isFloating(this.currentItem);\r\n\t\t\tposProperty = floating ? \"left\" : \"top\";\r\n\t\t\tsizeProperty = floating ? \"width\" : \"height\";\r\n\t\t\tbase = this.positionAbs[posProperty] + this.offset.click[posProperty];\r\n\t\t\tfor (j = this.items.length - 1; j >= 0; j--) {\r\n\t\t\t\tif(!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.items[j].item[0] === this.currentItem[0]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (floating && !isOverAxis(this.positionAbs.top + this.offset.click.top, this.items[j].top, this.items[j].height)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcur = this.items[j].item.offset()[posProperty];\r\n\t\t\t\tnearBottom = false;\r\n\t\t\t\tif(Math.abs(cur - base) > Math.abs(cur + this.items[j][sizeProperty] - base)){\r\n\t\t\t\t\tnearBottom = true;\r\n\t\t\t\t\tcur += this.items[j][sizeProperty];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(Math.abs(cur - base) < dist) {\r\n\t\t\t\t\tdist = Math.abs(cur - base); itemWithLeastDistance = this.items[j];\r\n\t\t\t\t\tthis.direction = nearBottom ? \"up\": \"down\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Check if dropOnEmpty is enabled\r\n\t\t\tif(!itemWithLeastDistance && !this.options.dropOnEmpty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.currentContainer === this.containers[innermostIndex]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\titemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);\r\n\t\t\tthis._trigger(\"change\", event, this._uiHash());\r\n\t\t\tthis.containers[innermostIndex]._trigger(\"change\", event, this._uiHash(this));\r\n\t\t\tthis.currentContainer = this.containers[innermostIndex];\r\n\r\n\t\t\t//Update the placeholder\r\n\t\t\tthis.options.placeholder.update(this.currentContainer, this.placeholder);\r\n\r\n\t\t\tthis.containers[innermostIndex]._trigger(\"over\", event, this._uiHash(this));\r\n\t\t\tthis.containers[innermostIndex].containerCache.over = 1;\r\n\t\t}\r\n\r\n\r\n\t},\r\n\r\n\t_createHelper: function(event) {\r\n\r\n\t\tvar o = this.options,\r\n\t\t\thelper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : (o.helper === \"clone\" ? this.currentItem.clone() : this.currentItem);\r\n\r\n\t\t//Add the helper to the DOM if that didn't happen already\r\n\t\tif(!helper.parents(\"body\").length) {\r\n\t\t\t$(o.appendTo !== \"parent\" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);\r\n\t\t}\r\n\r\n\t\tif(helper[0] === this.currentItem[0]) {\r\n\t\t\tthis._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css(\"position\"), top: this.currentItem.css(\"top\"), left: this.currentItem.css(\"left\") };\r\n\t\t}\r\n\r\n\t\tif(!helper[0].style.width || o.forceHelperSize) {\r\n\t\t\thelper.width(this.currentItem.width());\r\n\t\t}\r\n\t\tif(!helper[0].style.height || o.forceHelperSize) {\r\n\t\t\thelper.height(this.currentItem.height());\r\n\t\t}\r\n\r\n\t\treturn helper;\r\n\r\n\t},\r\n\r\n\t_adjustOffsetFromHelper: function(obj) {\r\n\t\tif (typeof obj === \"string\") {\r\n\t\t\tobj = obj.split(\" \");\r\n\t\t}\r\n\t\tif ($.isArray(obj)) {\r\n\t\t\tobj = {left: +obj[0], top: +obj[1] || 0};\r\n\t\t}\r\n\t\tif (\"left\" in obj) {\r\n\t\t\tthis.offset.click.left = obj.left + this.margins.left;\r\n\t\t}\r\n\t\tif (\"right\" in obj) {\r\n\t\t\tthis.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\r\n\t\t}\r\n\t\tif (\"top\" in obj) {\r\n\t\t\tthis.offset.click.top = obj.top + this.margins.top;\r\n\t\t}\r\n\t\tif (\"bottom\" in obj) {\r\n\t\t\tthis.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\r\n\t\t}\r\n\t},\r\n\r\n\t_getParentOffset: function() {\r\n\r\n\r\n\t\t//Get the offsetParent and cache its position\r\n\t\tthis.offsetParent = this.helper.offsetParent();\r\n\t\tvar po = this.offsetParent.offset();\r\n\r\n\t\t// This is a special case where we need to modify a offset calculated on start, since the following happened:\r\n\t\t// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent\r\n\t\t// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that\r\n\t\t//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag\r\n\t\tif(this.cssPosition === \"absolute\" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {\r\n\t\t\tpo.left += this.scrollParent.scrollLeft();\r\n\t\t\tpo.top += this.scrollParent.scrollTop();\r\n\t\t}\r\n\r\n\t\t// This needs to be actually done for all browsers, since pageX/pageY includes this information\r\n\t\t// with an ugly IE fix\r\n\t\tif( this.offsetParent[0] === document.body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === \"html\" && $.ui.ie)) {\r\n\t\t\tpo = { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: po.top + (parseInt(this.offsetParent.css(\"borderTopWidth\"),10) || 0),\r\n\t\t\tleft: po.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"),10) || 0)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_getRelativeOffset: function() {\r\n\r\n\t\tif(this.cssPosition === \"relative\") {\r\n\t\t\tvar p = this.currentItem.position();\r\n\t\t\treturn {\r\n\t\t\t\ttop: p.top - (parseInt(this.helper.css(\"top\"),10) || 0) + this.scrollParent.scrollTop(),\r\n\t\t\t\tleft: p.left - (parseInt(this.helper.css(\"left\"),10) || 0) + this.scrollParent.scrollLeft()\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_cacheMargins: function() {\r\n\t\tthis.margins = {\r\n\t\t\tleft: (parseInt(this.currentItem.css(\"marginLeft\"),10) || 0),\r\n\t\t\ttop: (parseInt(this.currentItem.css(\"marginTop\"),10) || 0)\r\n\t\t};\r\n\t},\r\n\r\n\t_cacheHelperProportions: function() {\r\n\t\tthis.helperProportions = {\r\n\t\t\twidth: this.helper.outerWidth(),\r\n\t\t\theight: this.helper.outerHeight()\r\n\t\t};\r\n\t},\r\n\r\n\t_setContainment: function() {\r\n\r\n\t\tvar ce, co, over,\r\n\t\t\to = this.options;\r\n\t\tif(o.containment === \"parent\") {\r\n\t\t\to.containment = this.helper[0].parentNode;\r\n\t\t}\r\n\t\tif(o.containment === \"document\" || o.containment === \"window\") {\r\n\t\t\tthis.containment = [\r\n\t\t\t\t0 - this.offset.relative.left - this.offset.parent.left,\r\n\t\t\t\t0 - this.offset.relative.top - this.offset.parent.top,\r\n\t\t\t\t$(o.containment === \"document\" ? document : window).width() - this.helperProportions.width - this.margins.left,\r\n\t\t\t\t($(o.containment === \"document\" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tif(!(/^(document|window|parent)$/).test(o.containment)) {\r\n\t\t\tce = $(o.containment)[0];\r\n\t\t\tco = $(o.containment).offset();\r\n\t\t\tover = ($(ce).css(\"overflow\") !== \"hidden\");\r\n\r\n\t\t\tthis.containment = [\r\n\t\t\t\tco.left + (parseInt($(ce).css(\"borderLeftWidth\"),10) || 0) + (parseInt($(ce).css(\"paddingLeft\"),10) || 0) - this.margins.left,\r\n\t\t\t\tco.top + (parseInt($(ce).css(\"borderTopWidth\"),10) || 0) + (parseInt($(ce).css(\"paddingTop\"),10) || 0) - this.margins.top,\r\n\t\t\t\tco.left+(over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css(\"borderLeftWidth\"),10) || 0) - (parseInt($(ce).css(\"paddingRight\"),10) || 0) - this.helperProportions.width - this.margins.left,\r\n\t\t\t\tco.top+(over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css(\"borderTopWidth\"),10) || 0) - (parseInt($(ce).css(\"paddingBottom\"),10) || 0) - this.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_convertPositionTo: function(d, pos) {\r\n\r\n\t\tif(!pos) {\r\n\t\t\tpos = this.position;\r\n\t\t}\r\n\t\tvar mod = d === \"absolute\" ? 1 : -1,\r\n\t\t\tscroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,\r\n\t\t\tscrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\t\t\t\tpos.top\t+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.relative.top * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.top * mod -\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\t\t\t\tpos.left +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.relative.left * mod +\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.left * mod\t-\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_generatePosition: function(event) {\r\n\r\n\t\tvar top, left,\r\n\t\t\to = this.options,\r\n\t\t\tpageX = event.pageX,\r\n\t\t\tpageY = event.pageY,\r\n\t\t\tscroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);\r\n\r\n\t\t// This is another very weird special case that only happens for relative elements:\r\n\t\t// 1. If the css position is relative\r\n\t\t// 2. and the scroll parent is the document or similar to the offset parent\r\n\t\t// we have to refresh the relative offset during the scroll so there are no jumps\r\n\t\tif(this.cssPosition === \"relative\" && !(this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0])) {\r\n\t\t\tthis.offset.relative = this._getRelativeOffset();\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * - Position constraining -\r\n\t\t * Constrain the position to a mix of grid, containment.\r\n\t\t */\r\n\r\n\t\tif(this.originalPosition) { //If we are not dragging yet, we won't check for options\r\n\r\n\t\t\tif(this.containment) {\r\n\t\t\t\tif(event.pageX - this.offset.click.left < this.containment[0]) {\r\n\t\t\t\t\tpageX = this.containment[0] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif(event.pageY - this.offset.click.top < this.containment[1]) {\r\n\t\t\t\t\tpageY = this.containment[1] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t\tif(event.pageX - this.offset.click.left > this.containment[2]) {\r\n\t\t\t\t\tpageX = this.containment[2] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif(event.pageY - this.offset.click.top > this.containment[3]) {\r\n\t\t\t\t\tpageY = this.containment[3] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(o.grid) {\r\n\t\t\t\ttop = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];\r\n\t\t\t\tpageY = this.containment ? ( (top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3]) ? top : ((top - this.offset.click.top >= this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;\r\n\r\n\t\t\t\tleft = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];\r\n\t\t\t\tpageX = this.containment ? ( (left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2]) ? left : ((left - this.offset.click.left >= this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\t\t\t\tpageY -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.click.top -\t\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.relative.top\t-\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.top +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\t\t\t\tpageX -\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The absolute mouse position\r\n\t\t\t\tthis.offset.click.left -\t\t\t\t\t\t\t\t\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.relative.left\t-\t\t\t\t\t\t\t\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.parent.left +\t\t\t\t\t\t\t\t\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_rearrange: function(event, i, a, hardRefresh) {\r\n\r\n\t\ta ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === \"down\" ? i.item[0] : i.item[0].nextSibling));\r\n\r\n\t\t//Various things done here to improve the performance:\r\n\t\t// 1. we create a setTimeout, that calls refreshPositions\r\n\t\t// 2. on the instance, we have a counter variable, that get's higher after every append\r\n\t\t// 3. on the local scope, we copy the counter variable, and check in the timeout, if it's still the same\r\n\t\t// 4. this lets only the last addition to the timeout stack through\r\n\t\tthis.counter = this.counter ? ++this.counter : 1;\r\n\t\tvar counter = this.counter;\r\n\r\n\t\tthis._delay(function() {\r\n\t\t\tif(counter === this.counter) {\r\n\t\t\t\tthis.refreshPositions(!hardRefresh); //Precompute after each DOM insertion, NOT on mousemove\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\r\n\t_clear: function(event, noPropagation) {\r\n\r\n\t\tthis.reverting = false;\r\n\t\t// We delay all events that have to be triggered to after the point where the placeholder has been removed and\r\n\t\t// everything else normalized again\r\n\t\tvar i,\r\n\t\t\tdelayedTriggers = [];\r\n\r\n\t\t// We first have to update the dom position of the actual currentItem\r\n\t\t// Note: don't do it if the current item is already removed (by a user), or it gets reappended (see #4088)\r\n\t\tif(!this._noFinalSort && this.currentItem.parent().length) {\r\n\t\t\tthis.placeholder.before(this.currentItem);\r\n\t\t}\r\n\t\tthis._noFinalSort = null;\r\n\r\n\t\tif(this.helper[0] === this.currentItem[0]) {\r\n\t\t\tfor(i in this._storedCSS) {\r\n\t\t\t\tif(this._storedCSS[i] === \"auto\" || this._storedCSS[i] === \"static\") {\r\n\t\t\t\t\tthis._storedCSS[i] = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\");\r\n\t\t} else {\r\n\t\t\tthis.currentItem.show();\r\n\t\t}\r\n\r\n\t\tif(this.fromOutside && !noPropagation) {\r\n\t\t\tdelayedTriggers.push(function(event) { this._trigger(\"receive\", event, this._uiHash(this.fromOutside)); });\r\n\t\t}\r\n\t\tif((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(\".ui-sortable-helper\")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {\r\n\t\t\tdelayedTriggers.push(function(event) { this._trigger(\"update\", event, this._uiHash()); }); //Trigger update callback if the DOM position has changed\r\n\t\t}\r\n\r\n\t\t// Check if the items Container has Changed and trigger appropriate\r\n\t\t// events.\r\n\t\tif (this !== this.currentContainer) {\r\n\t\t\tif(!noPropagation) {\r\n\t\t\t\tdelayedTriggers.push(function(event) { this._trigger(\"remove\", event, this._uiHash()); });\r\n\t\t\t\tdelayedTriggers.push((function(c) { return function(event) { c._trigger(\"receive\", event, this._uiHash(this)); };  }).call(this, this.currentContainer));\r\n\t\t\t\tdelayedTriggers.push((function(c) { return function(event) { c._trigger(\"update\", event, this._uiHash(this));  }; }).call(this, this.currentContainer));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t//Post events to containers\r\n\t\tfunction delayEvent( type, instance, container ) {\r\n\t\t\treturn function( event ) {\r\n\t\t\t\tcontainer._trigger( type, event, instance._uiHash( instance ) );\r\n\t\t\t};\r\n\t\t}\r\n\t\tfor (i = this.containers.length - 1; i >= 0; i--){\r\n\t\t\tif (!noPropagation) {\r\n\t\t\t\tdelayedTriggers.push( delayEvent( \"deactivate\", this, this.containers[ i ] ) );\r\n\t\t\t}\r\n\t\t\tif(this.containers[i].containerCache.over) {\r\n\t\t\t\tdelayedTriggers.push( delayEvent( \"out\", this, this.containers[ i ] ) );\r\n\t\t\t\tthis.containers[i].containerCache.over = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Do what was originally in plugins\r\n\t\tif ( this.storedCursor ) {\r\n\t\t\tthis.document.find( \"body\" ).css( \"cursor\", this.storedCursor );\r\n\t\t\tthis.storedStylesheet.remove();\r\n\t\t}\r\n\t\tif(this._storedOpacity) {\r\n\t\t\tthis.helper.css(\"opacity\", this._storedOpacity);\r\n\t\t}\r\n\t\tif(this._storedZIndex) {\r\n\t\t\tthis.helper.css(\"zIndex\", this._storedZIndex === \"auto\" ? \"\" : this._storedZIndex);\r\n\t\t}\r\n\r\n\t\tthis.dragging = false;\r\n\t\tif(this.cancelHelperRemoval) {\r\n\t\t\tif(!noPropagation) {\r\n\t\t\t\tthis._trigger(\"beforeStop\", event, this._uiHash());\r\n\t\t\t\tfor (i=0; i < delayedTriggers.length; i++) {\r\n\t\t\t\t\tdelayedTriggers[i].call(this, event);\r\n\t\t\t\t} //Trigger all delayed events\r\n\t\t\t\tthis._trigger(\"stop\", event, this._uiHash());\r\n\t\t\t}\r\n\r\n\t\t\tthis.fromOutside = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(!noPropagation) {\r\n\t\t\tthis._trigger(\"beforeStop\", event, this._uiHash());\r\n\t\t}\r\n\r\n\t\t//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!\r\n\t\tthis.placeholder[0].parentNode.removeChild(this.placeholder[0]);\r\n\r\n\t\tif(this.helper[0] !== this.currentItem[0]) {\r\n\t\t\tthis.helper.remove();\r\n\t\t}\r\n\t\tthis.helper = null;\r\n\r\n\t\tif(!noPropagation) {\r\n\t\t\tfor (i=0; i < delayedTriggers.length; i++) {\r\n\t\t\t\tdelayedTriggers[i].call(this, event);\r\n\t\t\t} //Trigger all delayed events\r\n\t\t\tthis._trigger(\"stop\", event, this._uiHash());\r\n\t\t}\r\n\r\n\t\tthis.fromOutside = false;\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_trigger: function() {\r\n\t\tif ($.Widget.prototype._trigger.apply(this, arguments) === false) {\r\n\t\t\tthis.cancel();\r\n\t\t}\r\n\t},\r\n\r\n\t_uiHash: function(_inst) {\r\n\t\tvar inst = _inst || this;\r\n\t\treturn {\r\n\t\t\thelper: inst.helper,\r\n\t\t\tplaceholder: inst.placeholder || $([]),\r\n\t\t\tposition: inst.position,\r\n\t\t\toriginalPosition: inst.originalPosition,\r\n\t\t\toffset: inst.positionAbs,\r\n\t\t\titem: inst.currentItem,\r\n\t\t\tsender: _inst ? _inst.element : null\r\n\t\t};\r\n\t}\r\n\r\n});\r\n\r\n})(jQuery);\r\n\r\n(function($, undefined) {\r\n\r\nvar dataSpace = \"ui-effects-\";\r\n\r\n$.effects = {\r\n\teffect: {}\r\n};\r\n\r\n/*!\r\n * jQuery Color Animations v2.1.2\r\n * https://github.com/jquery/jquery-color\r\n *\r\n * Copyright 2013 jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n *\r\n * Date: Wed Jan 16 08:47:09 2013 -0600\r\n */\r\n(function( jQuery, undefined ) {\r\n\r\n\tvar stepHooks = \"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",\r\n\r\n\t// plusequals test for += 100 -= 100\r\n\trplusequals = /^([\\-+])=\\s*(\\d+\\.?\\d*)/,\r\n\t// a set of RE's that can match strings and generate color tuples.\r\n\tstringParsers = [{\r\n\t\t\tre: /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\r\n\t\t\tparse: function( execResult ) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\texecResult[ 1 ],\r\n\t\t\t\t\texecResult[ 2 ],\r\n\t\t\t\t\texecResult[ 3 ],\r\n\t\t\t\t\texecResult[ 4 ]\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tre: /rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\r\n\t\t\tparse: function( execResult ) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\texecResult[ 1 ] * 2.55,\r\n\t\t\t\t\texecResult[ 2 ] * 2.55,\r\n\t\t\t\t\texecResult[ 3 ] * 2.55,\r\n\t\t\t\t\texecResult[ 4 ]\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t// this regex ignores A-F because it's compared against an already lowercased string\r\n\t\t\tre: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,\r\n\t\t\tparse: function( execResult ) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tparseInt( execResult[ 1 ], 16 ),\r\n\t\t\t\t\tparseInt( execResult[ 2 ], 16 ),\r\n\t\t\t\t\tparseInt( execResult[ 3 ], 16 )\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t// this regex ignores A-F because it's compared against an already lowercased string\r\n\t\t\tre: /#([a-f0-9])([a-f0-9])([a-f0-9])/,\r\n\t\t\tparse: function( execResult ) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\tparseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),\r\n\t\t\t\t\tparseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),\r\n\t\t\t\t\tparseInt( execResult[ 3 ] + execResult[ 3 ], 16 )\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tre: /hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\r\n\t\t\tspace: \"hsla\",\r\n\t\t\tparse: function( execResult ) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\texecResult[ 1 ],\r\n\t\t\t\t\texecResult[ 2 ] / 100,\r\n\t\t\t\t\texecResult[ 3 ] / 100,\r\n\t\t\t\t\texecResult[ 4 ]\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}],\r\n\r\n\t// jQuery.Color( )\r\n\tcolor = jQuery.Color = function( color, green, blue, alpha ) {\r\n\t\treturn new jQuery.Color.fn.parse( color, green, blue, alpha );\r\n\t},\r\n\tspaces = {\r\n\t\trgba: {\r\n\t\t\tprops: {\r\n\t\t\t\tred: {\r\n\t\t\t\t\tidx: 0,\r\n\t\t\t\t\ttype: \"byte\"\r\n\t\t\t\t},\r\n\t\t\t\tgreen: {\r\n\t\t\t\t\tidx: 1,\r\n\t\t\t\t\ttype: \"byte\"\r\n\t\t\t\t},\r\n\t\t\t\tblue: {\r\n\t\t\t\t\tidx: 2,\r\n\t\t\t\t\ttype: \"byte\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thsla: {\r\n\t\t\tprops: {\r\n\t\t\t\thue: {\r\n\t\t\t\t\tidx: 0,\r\n\t\t\t\t\ttype: \"degrees\"\r\n\t\t\t\t},\r\n\t\t\t\tsaturation: {\r\n\t\t\t\t\tidx: 1,\r\n\t\t\t\t\ttype: \"percent\"\r\n\t\t\t\t},\r\n\t\t\t\tlightness: {\r\n\t\t\t\t\tidx: 2,\r\n\t\t\t\t\ttype: \"percent\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tpropTypes = {\r\n\t\t\"byte\": {\r\n\t\t\tfloor: true,\r\n\t\t\tmax: 255\r\n\t\t},\r\n\t\t\"percent\": {\r\n\t\t\tmax: 1\r\n\t\t},\r\n\t\t\"degrees\": {\r\n\t\t\tmod: 360,\r\n\t\t\tfloor: true\r\n\t\t}\r\n\t},\r\n\tsupport = color.support = {},\r\n\r\n\t// element for support tests\r\n\tsupportElem = jQuery( \"<p>\" )[ 0 ],\r\n\r\n\t// colors = jQuery.Color.names\r\n\tcolors,\r\n\r\n\t// local aliases of functions called often\r\n\teach = jQuery.each;\r\n\r\n// determine rgba support immediately\r\nsupportElem.style.cssText = \"background-color:rgba(1,1,1,.5)\";\r\nsupport.rgba = supportElem.style.backgroundColor.indexOf( \"rgba\" ) > -1;\r\n\r\n// define cache name and alpha properties\r\n// for rgba and hsla spaces\r\neach( spaces, function( spaceName, space ) {\r\n\tspace.cache = \"_\" + spaceName;\r\n\tspace.props.alpha = {\r\n\t\tidx: 3,\r\n\t\ttype: \"percent\",\r\n\t\tdef: 1\r\n\t};\r\n});\r\n\r\nfunction clamp( value, prop, allowEmpty ) {\r\n\tvar type = propTypes[ prop.type ] || {};\r\n\r\n\tif ( value == null ) {\r\n\t\treturn (allowEmpty || !prop.def) ? null : prop.def;\r\n\t}\r\n\r\n\t// ~~ is an short way of doing floor for positive numbers\r\n\tvalue = type.floor ? ~~value : parseFloat( value );\r\n\r\n\t// IE will pass in empty strings as value for alpha,\r\n\t// which will hit this case\r\n\tif ( isNaN( value ) ) {\r\n\t\treturn prop.def;\r\n\t}\r\n\r\n\tif ( type.mod ) {\r\n\t\t// we add mod before modding to make sure that negatives values\r\n\t\t// get converted properly: -10 -> 350\r\n\t\treturn (value + type.mod) % type.mod;\r\n\t}\r\n\r\n\t// for now all property types without mod have min and max\r\n\treturn 0 > value ? 0 : type.max < value ? type.max : value;\r\n}\r\n\r\nfunction stringParse( string ) {\r\n\tvar inst = color(),\r\n\t\trgba = inst._rgba = [];\r\n\r\n\tstring = string.toLowerCase();\r\n\r\n\teach( stringParsers, function( i, parser ) {\r\n\t\tvar parsed,\r\n\t\t\tmatch = parser.re.exec( string ),\r\n\t\t\tvalues = match && parser.parse( match ),\r\n\t\t\tspaceName = parser.space || \"rgba\";\r\n\r\n\t\tif ( values ) {\r\n\t\t\tparsed = inst[ spaceName ]( values );\r\n\r\n\t\t\t// if this was an rgba parse the assignment might happen twice\r\n\t\t\t// oh well....\r\n\t\t\tinst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];\r\n\t\t\trgba = inst._rgba = parsed._rgba;\r\n\r\n\t\t\t// exit each( stringParsers ) here because we matched\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\r\n\t// Found a stringParser that handled it\r\n\tif ( rgba.length ) {\r\n\r\n\t\t// if this came from a parsed string, force \"transparent\" when alpha is 0\r\n\t\t// chrome, (and maybe others) return \"transparent\" as rgba(0,0,0,0)\r\n\t\tif ( rgba.join() === \"0,0,0,0\" ) {\r\n\t\t\tjQuery.extend( rgba, colors.transparent );\r\n\t\t}\r\n\t\treturn inst;\r\n\t}\r\n\r\n\t// named colors\r\n\treturn colors[ string ];\r\n}\r\n\r\ncolor.fn = jQuery.extend( color.prototype, {\r\n\tparse: function( red, green, blue, alpha ) {\r\n\t\tif ( red === undefined ) {\r\n\t\t\tthis._rgba = [ null, null, null, null ];\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( red.jquery || red.nodeType ) {\r\n\t\t\tred = jQuery( red ).css( green );\r\n\t\t\tgreen = undefined;\r\n\t\t}\r\n\r\n\t\tvar inst = this,\r\n\t\t\ttype = jQuery.type( red ),\r\n\t\t\trgba = this._rgba = [];\r\n\r\n\t\t// more than 1 argument specified - assume ( red, green, blue, alpha )\r\n\t\tif ( green !== undefined ) {\r\n\t\t\tred = [ red, green, blue, alpha ];\r\n\t\t\ttype = \"array\";\r\n\t\t}\r\n\r\n\t\tif ( type === \"string\" ) {\r\n\t\t\treturn this.parse( stringParse( red ) || colors._default );\r\n\t\t}\r\n\r\n\t\tif ( type === \"array\" ) {\r\n\t\t\teach( spaces.rgba.props, function( key, prop ) {\r\n\t\t\t\trgba[ prop.idx ] = clamp( red[ prop.idx ], prop );\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif ( type === \"object\" ) {\r\n\t\t\tif ( red instanceof color ) {\r\n\t\t\t\teach( spaces, function( spaceName, space ) {\r\n\t\t\t\t\tif ( red[ space.cache ] ) {\r\n\t\t\t\t\t\tinst[ space.cache ] = red[ space.cache ].slice();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\teach( spaces, function( spaceName, space ) {\r\n\t\t\t\t\tvar cache = space.cache;\r\n\t\t\t\t\teach( space.props, function( key, prop ) {\r\n\r\n\t\t\t\t\t\t// if the cache doesn't exist, and we know how to convert\r\n\t\t\t\t\t\tif ( !inst[ cache ] && space.to ) {\r\n\r\n\t\t\t\t\t\t\t// if the value was null, we don't need to copy it\r\n\t\t\t\t\t\t\t// if the key was alpha, we don't need to copy it either\r\n\t\t\t\t\t\t\tif ( key === \"alpha\" || red[ key ] == null ) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tinst[ cache ] = space.to( inst._rgba );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// this is the only case where we allow nulls for ALL properties.\r\n\t\t\t\t\t\t// call clamp with alwaysAllowEmpty\r\n\t\t\t\t\t\tinst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// everything defined but alpha?\r\n\t\t\t\t\tif ( inst[ cache ] && jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {\r\n\t\t\t\t\t\t// use the default of 1\r\n\t\t\t\t\t\tinst[ cache ][ 3 ] = 1;\r\n\t\t\t\t\t\tif ( space.from ) {\r\n\t\t\t\t\t\t\tinst._rgba = space.from( inst[ cache ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tis: function( compare ) {\r\n\t\tvar is = color( compare ),\r\n\t\t\tsame = true,\r\n\t\t\tinst = this;\r\n\r\n\t\teach( spaces, function( _, space ) {\r\n\t\t\tvar localCache,\r\n\t\t\t\tisCache = is[ space.cache ];\r\n\t\t\tif (isCache) {\r\n\t\t\t\tlocalCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];\r\n\t\t\t\teach( space.props, function( _, prop ) {\r\n\t\t\t\t\tif ( isCache[ prop.idx ] != null ) {\r\n\t\t\t\t\t\tsame = ( isCache[ prop.idx ] === localCache[ prop.idx ] );\r\n\t\t\t\t\t\treturn same;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn same;\r\n\t\t});\r\n\t\treturn same;\r\n\t},\r\n\t_space: function() {\r\n\t\tvar used = [],\r\n\t\t\tinst = this;\r\n\t\teach( spaces, function( spaceName, space ) {\r\n\t\t\tif ( inst[ space.cache ] ) {\r\n\t\t\t\tused.push( spaceName );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn used.pop();\r\n\t},\r\n\ttransition: function( other, distance ) {\r\n\t\tvar end = color( other ),\r\n\t\t\tspaceName = end._space(),\r\n\t\t\tspace = spaces[ spaceName ],\r\n\t\t\tstartColor = this.alpha() === 0 ? color( \"transparent\" ) : this,\r\n\t\t\tstart = startColor[ space.cache ] || space.to( startColor._rgba ),\r\n\t\t\tresult = start.slice();\r\n\r\n\t\tend = end[ space.cache ];\r\n\t\teach( space.props, function( key, prop ) {\r\n\t\t\tvar index = prop.idx,\r\n\t\t\t\tstartValue = start[ index ],\r\n\t\t\t\tendValue = end[ index ],\r\n\t\t\t\ttype = propTypes[ prop.type ] || {};\r\n\r\n\t\t\t// if null, don't override start value\r\n\t\t\tif ( endValue === null ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// if null - use end\r\n\t\t\tif ( startValue === null ) {\r\n\t\t\t\tresult[ index ] = endValue;\r\n\t\t\t} else {\r\n\t\t\t\tif ( type.mod ) {\r\n\t\t\t\t\tif ( endValue - startValue > type.mod / 2 ) {\r\n\t\t\t\t\t\tstartValue += type.mod;\r\n\t\t\t\t\t} else if ( startValue - endValue > type.mod / 2 ) {\r\n\t\t\t\t\t\tstartValue -= type.mod;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresult[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this[ spaceName ]( result );\r\n\t},\r\n\tblend: function( opaque ) {\r\n\t\t// if we are already opaque - return ourself\r\n\t\tif ( this._rgba[ 3 ] === 1 ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar rgb = this._rgba.slice(),\r\n\t\t\ta = rgb.pop(),\r\n\t\t\tblend = color( opaque )._rgba;\r\n\r\n\t\treturn color( jQuery.map( rgb, function( v, i ) {\r\n\t\t\treturn ( 1 - a ) * blend[ i ] + a * v;\r\n\t\t}));\r\n\t},\r\n\ttoRgbaString: function() {\r\n\t\tvar prefix = \"rgba(\",\r\n\t\t\trgba = jQuery.map( this._rgba, function( v, i ) {\r\n\t\t\t\treturn v == null ? ( i > 2 ? 1 : 0 ) : v;\r\n\t\t\t});\r\n\r\n\t\tif ( rgba[ 3 ] === 1 ) {\r\n\t\t\trgba.pop();\r\n\t\t\tprefix = \"rgb(\";\r\n\t\t}\r\n\r\n\t\treturn prefix + rgba.join() + \")\";\r\n\t},\r\n\ttoHslaString: function() {\r\n\t\tvar prefix = \"hsla(\",\r\n\t\t\thsla = jQuery.map( this.hsla(), function( v, i ) {\r\n\t\t\t\tif ( v == null ) {\r\n\t\t\t\t\tv = i > 2 ? 1 : 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// catch 1 and 2\r\n\t\t\t\tif ( i && i < 3 ) {\r\n\t\t\t\t\tv = Math.round( v * 100 ) + \"%\";\r\n\t\t\t\t}\r\n\t\t\t\treturn v;\r\n\t\t\t});\r\n\r\n\t\tif ( hsla[ 3 ] === 1 ) {\r\n\t\t\thsla.pop();\r\n\t\t\tprefix = \"hsl(\";\r\n\t\t}\r\n\t\treturn prefix + hsla.join() + \")\";\r\n\t},\r\n\ttoHexString: function( includeAlpha ) {\r\n\t\tvar rgba = this._rgba.slice(),\r\n\t\t\talpha = rgba.pop();\r\n\r\n\t\tif ( includeAlpha ) {\r\n\t\t\trgba.push( ~~( alpha * 255 ) );\r\n\t\t}\r\n\r\n\t\treturn \"#\" + jQuery.map( rgba, function( v ) {\r\n\r\n\t\t\t// default to 0 when nulls exist\r\n\t\t\tv = ( v || 0 ).toString( 16 );\r\n\t\t\treturn v.length === 1 ? \"0\" + v : v;\r\n\t\t}).join(\"\");\r\n\t},\r\n\ttoString: function() {\r\n\t\treturn this._rgba[ 3 ] === 0 ? \"transparent\" : this.toRgbaString();\r\n\t}\r\n});\r\ncolor.fn.parse.prototype = color.fn;\r\n\r\n// hsla conversions adapted from:\r\n// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021\r\n\r\nfunction hue2rgb( p, q, h ) {\r\n\th = ( h + 1 ) % 1;\r\n\tif ( h * 6 < 1 ) {\r\n\t\treturn p + (q - p) * h * 6;\r\n\t}\r\n\tif ( h * 2 < 1) {\r\n\t\treturn q;\r\n\t}\r\n\tif ( h * 3 < 2 ) {\r\n\t\treturn p + (q - p) * ((2/3) - h) * 6;\r\n\t}\r\n\treturn p;\r\n}\r\n\r\nspaces.hsla.to = function ( rgba ) {\r\n\tif ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {\r\n\t\treturn [ null, null, null, rgba[ 3 ] ];\r\n\t}\r\n\tvar r = rgba[ 0 ] / 255,\r\n\t\tg = rgba[ 1 ] / 255,\r\n\t\tb = rgba[ 2 ] / 255,\r\n\t\ta = rgba[ 3 ],\r\n\t\tmax = Math.max( r, g, b ),\r\n\t\tmin = Math.min( r, g, b ),\r\n\t\tdiff = max - min,\r\n\t\tadd = max + min,\r\n\t\tl = add * 0.5,\r\n\t\th, s;\r\n\r\n\tif ( min === max ) {\r\n\t\th = 0;\r\n\t} else if ( r === max ) {\r\n\t\th = ( 60 * ( g - b ) / diff ) + 360;\r\n\t} else if ( g === max ) {\r\n\t\th = ( 60 * ( b - r ) / diff ) + 120;\r\n\t} else {\r\n\t\th = ( 60 * ( r - g ) / diff ) + 240;\r\n\t}\r\n\r\n\t// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%\r\n\t// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)\r\n\tif ( diff === 0 ) {\r\n\t\ts = 0;\r\n\t} else if ( l <= 0.5 ) {\r\n\t\ts = diff / add;\r\n\t} else {\r\n\t\ts = diff / ( 2 - add );\r\n\t}\r\n\treturn [ Math.round(h) % 360, s, l, a == null ? 1 : a ];\r\n};\r\n\r\nspaces.hsla.from = function ( hsla ) {\r\n\tif ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {\r\n\t\treturn [ null, null, null, hsla[ 3 ] ];\r\n\t}\r\n\tvar h = hsla[ 0 ] / 360,\r\n\t\ts = hsla[ 1 ],\r\n\t\tl = hsla[ 2 ],\r\n\t\ta = hsla[ 3 ],\r\n\t\tq = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,\r\n\t\tp = 2 * l - q;\r\n\r\n\treturn [\r\n\t\tMath.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),\r\n\t\tMath.round( hue2rgb( p, q, h ) * 255 ),\r\n\t\tMath.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),\r\n\t\ta\r\n\t];\r\n};\r\n\r\n\r\neach( spaces, function( spaceName, space ) {\r\n\tvar props = space.props,\r\n\t\tcache = space.cache,\r\n\t\tto = space.to,\r\n\t\tfrom = space.from;\r\n\r\n\t// makes rgba() and hsla()\r\n\tcolor.fn[ spaceName ] = function( value ) {\r\n\r\n\t\t// generate a cache for this space if it doesn't exist\r\n\t\tif ( to && !this[ cache ] ) {\r\n\t\t\tthis[ cache ] = to( this._rgba );\r\n\t\t}\r\n\t\tif ( value === undefined ) {\r\n\t\t\treturn this[ cache ].slice();\r\n\t\t}\r\n\r\n\t\tvar ret,\r\n\t\t\ttype = jQuery.type( value ),\r\n\t\t\tarr = ( type === \"array\" || type === \"object\" ) ? value : arguments,\r\n\t\t\tlocal = this[ cache ].slice();\r\n\r\n\t\teach( props, function( key, prop ) {\r\n\t\t\tvar val = arr[ type === \"object\" ? key : prop.idx ];\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = local[ prop.idx ];\r\n\t\t\t}\r\n\t\t\tlocal[ prop.idx ] = clamp( val, prop );\r\n\t\t});\r\n\r\n\t\tif ( from ) {\r\n\t\t\tret = color( from( local ) );\r\n\t\t\tret[ cache ] = local;\r\n\t\t\treturn ret;\r\n\t\t} else {\r\n\t\t\treturn color( local );\r\n\t\t}\r\n\t};\r\n\r\n\t// makes red() green() blue() alpha() hue() saturation() lightness()\r\n\teach( props, function( key, prop ) {\r\n\t\t// alpha is included in more than one space\r\n\t\tif ( color.fn[ key ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcolor.fn[ key ] = function( value ) {\r\n\t\t\tvar vtype = jQuery.type( value ),\r\n\t\t\t\tfn = ( key === \"alpha\" ? ( this._hsla ? \"hsla\" : \"rgba\" ) : spaceName ),\r\n\t\t\t\tlocal = this[ fn ](),\r\n\t\t\t\tcur = local[ prop.idx ],\r\n\t\t\t\tmatch;\r\n\r\n\t\t\tif ( vtype === \"undefined\" ) {\r\n\t\t\t\treturn cur;\r\n\t\t\t}\r\n\r\n\t\t\tif ( vtype === \"function\" ) {\r\n\t\t\t\tvalue = value.call( this, cur );\r\n\t\t\t\tvtype = jQuery.type( value );\r\n\t\t\t}\r\n\t\t\tif ( value == null && prop.empty ) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tif ( vtype === \"string\" ) {\r\n\t\t\t\tmatch = rplusequals.exec( value );\r\n\t\t\t\tif ( match ) {\r\n\t\t\t\t\tvalue = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === \"+\" ? 1 : -1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlocal[ prop.idx ] = value;\r\n\t\t\treturn this[ fn ]( local );\r\n\t\t};\r\n\t});\r\n});\r\n\r\n// add cssHook and .fx.step function for each named hook.\r\n// accept a space separated string of properties\r\ncolor.hook = function( hook ) {\r\n\tvar hooks = hook.split( \" \" );\r\n\teach( hooks, function( i, hook ) {\r\n\t\tjQuery.cssHooks[ hook ] = {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar parsed, curElem,\r\n\t\t\t\t\tbackgroundColor = \"\";\r\n\r\n\t\t\t\tif ( value !== \"transparent\" && ( jQuery.type( value ) !== \"string\" || ( parsed = stringParse( value ) ) ) ) {\r\n\t\t\t\t\tvalue = color( parsed || value );\r\n\t\t\t\t\tif ( !support.rgba && value._rgba[ 3 ] !== 1 ) {\r\n\t\t\t\t\t\tcurElem = hook === \"backgroundColor\" ? elem.parentNode : elem;\r\n\t\t\t\t\t\twhile (\r\n\t\t\t\t\t\t\t(backgroundColor === \"\" || backgroundColor === \"transparent\") &&\r\n\t\t\t\t\t\t\tcurElem && curElem.style\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tbackgroundColor = jQuery.css( curElem, \"backgroundColor\" );\r\n\t\t\t\t\t\t\t\tcurElem = curElem.parentNode;\r\n\t\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvalue = value.blend( backgroundColor && backgroundColor !== \"transparent\" ?\r\n\t\t\t\t\t\t\tbackgroundColor :\r\n\t\t\t\t\t\t\t\"_default\" );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvalue = value.toRgbaString();\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\telem.style[ hook ] = value;\r\n\t\t\t\t} catch( e ) {\r\n\t\t\t\t\t// wrapped to prevent IE from throwing errors on \"invalid\" values like 'auto' or 'inherit'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tjQuery.fx.step[ hook ] = function( fx ) {\r\n\t\t\tif ( !fx.colorInit ) {\r\n\t\t\t\tfx.start = color( fx.elem, hook );\r\n\t\t\t\tfx.end = color( fx.end );\r\n\t\t\t\tfx.colorInit = true;\r\n\t\t\t}\r\n\t\t\tjQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );\r\n\t\t};\r\n\t});\r\n\r\n};\r\n\r\ncolor.hook( stepHooks );\r\n\r\njQuery.cssHooks.borderColor = {\r\n\texpand: function( value ) {\r\n\t\tvar expanded = {};\r\n\r\n\t\teach( [ \"Top\", \"Right\", \"Bottom\", \"Left\" ], function( i, part ) {\r\n\t\t\texpanded[ \"border\" + part + \"Color\" ] = value;\r\n\t\t});\r\n\t\treturn expanded;\r\n\t}\r\n};\r\n\r\n// Basic color names only.\r\n// Usage of any of the other color names requires adding yourself or including\r\n// jquery.color.svg-names.js.\r\ncolors = jQuery.Color.names = {\r\n\t// 4.1. Basic color keywords\r\n\taqua: \"#00ffff\",\r\n\tblack: \"#000000\",\r\n\tblue: \"#0000ff\",\r\n\tfuchsia: \"#ff00ff\",\r\n\tgray: \"#808080\",\r\n\tgreen: \"#008000\",\r\n\tlime: \"#00ff00\",\r\n\tmaroon: \"#800000\",\r\n\tnavy: \"#000080\",\r\n\tolive: \"#808000\",\r\n\tpurple: \"#800080\",\r\n\tred: \"#ff0000\",\r\n\tsilver: \"#c0c0c0\",\r\n\tteal: \"#008080\",\r\n\twhite: \"#ffffff\",\r\n\tyellow: \"#ffff00\",\r\n\r\n\t// 4.2.3. \"transparent\" color keyword\r\n\ttransparent: [ null, null, null, 0 ],\r\n\r\n\t_default: \"#ffffff\"\r\n};\r\n\r\n})( jQuery );\r\n\r\n\r\n/******************************************************************************/\r\n/****************************** CLASS ANIMATIONS ******************************/\r\n/******************************************************************************/\r\n(function() {\r\n\r\nvar classAnimationActions = [ \"add\", \"remove\", \"toggle\" ],\r\n\tshorthandStyles = {\r\n\t\tborder: 1,\r\n\t\tborderBottom: 1,\r\n\t\tborderColor: 1,\r\n\t\tborderLeft: 1,\r\n\t\tborderRight: 1,\r\n\t\tborderTop: 1,\r\n\t\tborderWidth: 1,\r\n\t\tmargin: 1,\r\n\t\tpadding: 1\r\n\t};\r\n\r\n$.each([ \"borderLeftStyle\", \"borderRightStyle\", \"borderBottomStyle\", \"borderTopStyle\" ], function( _, prop ) {\r\n\t$.fx.step[ prop ] = function( fx ) {\r\n\t\tif ( fx.end !== \"none\" && !fx.setAttr || fx.pos === 1 && !fx.setAttr ) {\r\n\t\t\tjQuery.style( fx.elem, prop, fx.end );\r\n\t\t\tfx.setAttr = true;\r\n\t\t}\r\n\t};\r\n});\r\n\r\nfunction getElementStyles( elem ) {\r\n\tvar key, len,\r\n\t\tstyle = elem.ownerDocument.defaultView ?\r\n\t\t\telem.ownerDocument.defaultView.getComputedStyle( elem, null ) :\r\n\t\t\telem.currentStyle,\r\n\t\tstyles = {};\r\n\r\n\tif ( style && style.length && style[ 0 ] && style[ style[ 0 ] ] ) {\r\n\t\tlen = style.length;\r\n\t\twhile ( len-- ) {\r\n\t\t\tkey = style[ len ];\r\n\t\t\tif ( typeof style[ key ] === \"string\" ) {\r\n\t\t\t\tstyles[ $.camelCase( key ) ] = style[ key ];\r\n\t\t\t}\r\n\t\t}\r\n\t// support: Opera, IE <9\r\n\t} else {\r\n\t\tfor ( key in style ) {\r\n\t\t\tif ( typeof style[ key ] === \"string\" ) {\r\n\t\t\t\tstyles[ key ] = style[ key ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn styles;\r\n}\r\n\r\n\r\nfunction styleDifference( oldStyle, newStyle ) {\r\n\tvar diff = {},\r\n\t\tname, value;\r\n\r\n\tfor ( name in newStyle ) {\r\n\t\tvalue = newStyle[ name ];\r\n\t\tif ( oldStyle[ name ] !== value ) {\r\n\t\t\tif ( !shorthandStyles[ name ] ) {\r\n\t\t\t\tif ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {\r\n\t\t\t\t\tdiff[ name ] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn diff;\r\n}\r\n\r\n// support: jQuery <1.8\r\nif ( !$.fn.addBack ) {\r\n\t$.fn.addBack = function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t};\r\n}\r\n\r\n$.effects.animateClass = function( value, duration, easing, callback ) {\r\n\tvar o = $.speed( duration, easing, callback );\r\n\r\n\treturn this.queue( function() {\r\n\t\tvar animated = $( this ),\r\n\t\t\tbaseClass = animated.attr( \"class\" ) || \"\",\r\n\t\t\tapplyClassChange,\r\n\t\t\tallAnimations = o.children ? animated.find( \"*\" ).addBack() : animated;\r\n\r\n\t\t// map the animated objects to store the original styles.\r\n\t\tallAnimations = allAnimations.map(function() {\r\n\t\t\tvar el = $( this );\r\n\t\t\treturn {\r\n\t\t\t\tel: el,\r\n\t\t\t\tstart: getElementStyles( this )\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// apply class change\r\n\t\tapplyClassChange = function() {\r\n\t\t\t$.each( classAnimationActions, function(i, action) {\r\n\t\t\t\tif ( value[ action ] ) {\r\n\t\t\t\t\tanimated[ action + \"Class\" ]( value[ action ] );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\tapplyClassChange();\r\n\r\n\t\t// map all animated objects again - calculate new styles and diff\r\n\t\tallAnimations = allAnimations.map(function() {\r\n\t\t\tthis.end = getElementStyles( this.el[ 0 ] );\r\n\t\t\tthis.diff = styleDifference( this.start, this.end );\r\n\t\t\treturn this;\r\n\t\t});\r\n\r\n\t\t// apply original class\r\n\t\tanimated.attr( \"class\", baseClass );\r\n\r\n\t\t// map all animated objects again - this time collecting a promise\r\n\t\tallAnimations = allAnimations.map(function() {\r\n\t\t\tvar styleInfo = this,\r\n\t\t\t\tdfd = $.Deferred(),\r\n\t\t\t\topts = $.extend({}, o, {\r\n\t\t\t\t\tqueue: false,\r\n\t\t\t\t\tcomplete: function() {\r\n\t\t\t\t\t\tdfd.resolve( styleInfo );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.el.animate( this.diff, opts );\r\n\t\t\treturn dfd.promise();\r\n\t\t});\r\n\r\n\t\t// once all animations have completed:\r\n\t\t$.when.apply( $, allAnimations.get() ).done(function() {\r\n\r\n\t\t\t// set the final class\r\n\t\t\tapplyClassChange();\r\n\r\n\t\t\t// for each animated element,\r\n\t\t\t// clear all css properties that were animated\r\n\t\t\t$.each( arguments, function() {\r\n\t\t\t\tvar el = this.el;\r\n\t\t\t\t$.each( this.diff, function(key) {\r\n\t\t\t\t\tel.css( key, \"\" );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// this is guarnteed to be there if you use jQuery.speed()\r\n\t\t\t// it also handles dequeuing the next anim...\r\n\t\t\to.complete.call( animated[ 0 ] );\r\n\t\t});\r\n\t});\r\n};\r\n\r\n$.fn.extend({\r\n\taddClass: (function( orig ) {\r\n\t\treturn function( classNames, speed, easing, callback ) {\r\n\t\t\treturn speed ?\r\n\t\t\t\t$.effects.animateClass.call( this,\r\n\t\t\t\t\t{ add: classNames }, speed, easing, callback ) :\r\n\t\t\t\torig.apply( this, arguments );\r\n\t\t};\r\n\t})( $.fn.addClass ),\r\n\r\n\tremoveClass: (function( orig ) {\r\n\t\treturn function( classNames, speed, easing, callback ) {\r\n\t\t\treturn arguments.length > 1 ?\r\n\t\t\t\t$.effects.animateClass.call( this,\r\n\t\t\t\t\t{ remove: classNames }, speed, easing, callback ) :\r\n\t\t\t\torig.apply( this, arguments );\r\n\t\t};\r\n\t})( $.fn.removeClass ),\r\n\r\n\ttoggleClass: (function( orig ) {\r\n\t\treturn function( classNames, force, speed, easing, callback ) {\r\n\t\t\tif ( typeof force === \"boolean\" || force === undefined ) {\r\n\t\t\t\tif ( !speed ) {\r\n\t\t\t\t\t// without speed parameter\r\n\t\t\t\t\treturn orig.apply( this, arguments );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn $.effects.animateClass.call( this,\r\n\t\t\t\t\t\t(force ? { add: classNames } : { remove: classNames }),\r\n\t\t\t\t\t\tspeed, easing, callback );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// without force parameter\r\n\t\t\t\treturn $.effects.animateClass.call( this,\r\n\t\t\t\t\t{ toggle: classNames }, force, speed, easing );\r\n\t\t\t}\r\n\t\t};\r\n\t})( $.fn.toggleClass ),\r\n\r\n\tswitchClass: function( remove, add, speed, easing, callback) {\r\n\t\treturn $.effects.animateClass.call( this, {\r\n\t\t\tadd: add,\r\n\t\t\tremove: remove\r\n\t\t}, speed, easing, callback );\r\n\t}\r\n});\r\n\r\n})();\r\n\r\n/******************************************************************************/\r\n/*********************************** EFFECTS **********************************/\r\n/******************************************************************************/\r\n\r\n(function() {\r\n\r\n$.extend( $.effects, {\r\n\tversion: \"1.10.4\",\r\n\r\n\t// Saves a set of properties in a data storage\r\n\tsave: function( element, set ) {\r\n\t\tfor( var i=0; i < set.length; i++ ) {\r\n\t\t\tif ( set[ i ] !== null ) {\r\n\t\t\t\telement.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Restores a set of previously saved properties from a data storage\r\n\trestore: function( element, set ) {\r\n\t\tvar val, i;\r\n\t\tfor( i=0; i < set.length; i++ ) {\r\n\t\t\tif ( set[ i ] !== null ) {\r\n\t\t\t\tval = element.data( dataSpace + set[ i ] );\r\n\t\t\t\t// support: jQuery 1.6.2\r\n\t\t\t\t// http://bugs.jquery.com/ticket/9917\r\n\t\t\t\t// jQuery 1.6.2 incorrectly returns undefined for any falsy value.\r\n\t\t\t\t// We can't differentiate between \"\" and 0 here, so we just assume\r\n\t\t\t\t// empty string since it's likely to be a more common value...\r\n\t\t\t\tif ( val === undefined ) {\r\n\t\t\t\t\tval = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telement.css( set[ i ], val );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsetMode: function( el, mode ) {\r\n\t\tif (mode === \"toggle\") {\r\n\t\t\tmode = el.is( \":hidden\" ) ? \"show\" : \"hide\";\r\n\t\t}\r\n\t\treturn mode;\r\n\t},\r\n\r\n\t// Translates a [top,left] array into a baseline value\r\n\t// this should be a little more flexible in the future to handle a string & hash\r\n\tgetBaseline: function( origin, original ) {\r\n\t\tvar y, x;\r\n\t\tswitch ( origin[ 0 ] ) {\r\n\t\t\tcase \"top\": y = 0; break;\r\n\t\t\tcase \"middle\": y = 0.5; break;\r\n\t\t\tcase \"bottom\": y = 1; break;\r\n\t\t\tdefault: y = origin[ 0 ] / original.height;\r\n\t\t}\r\n\t\tswitch ( origin[ 1 ] ) {\r\n\t\t\tcase \"left\": x = 0; break;\r\n\t\t\tcase \"center\": x = 0.5; break;\r\n\t\t\tcase \"right\": x = 1; break;\r\n\t\t\tdefault: x = origin[ 1 ] / original.width;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t},\r\n\r\n\t// Wraps the element around a wrapper that copies position properties\r\n\tcreateWrapper: function( element ) {\r\n\r\n\t\t// if the element is already wrapped, return it\r\n\t\tif ( element.parent().is( \".ui-effects-wrapper\" )) {\r\n\t\t\treturn element.parent();\r\n\t\t}\r\n\r\n\t\t// wrap the element\r\n\t\tvar props = {\r\n\t\t\t\twidth: element.outerWidth(true),\r\n\t\t\t\theight: element.outerHeight(true),\r\n\t\t\t\t\"float\": element.css( \"float\" )\r\n\t\t\t},\r\n\t\t\twrapper = $( \"<div></div>\" )\r\n\t\t\t\t.addClass( \"ui-effects-wrapper\" )\r\n\t\t\t\t.css({\r\n\t\t\t\t\tfontSize: \"100%\",\r\n\t\t\t\t\tbackground: \"transparent\",\r\n\t\t\t\t\tborder: \"none\",\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0\r\n\t\t\t\t}),\r\n\t\t\t// Store the size in case width/height are defined in % - Fixes #5245\r\n\t\t\tsize = {\r\n\t\t\t\twidth: element.width(),\r\n\t\t\t\theight: element.height()\r\n\t\t\t},\r\n\t\t\tactive = document.activeElement;\r\n\r\n\t\t// support: Firefox\r\n\t\t// Firefox incorrectly exposes anonymous content\r\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=561664\r\n\t\ttry {\r\n\t\t\tactive.id;\r\n\t\t} catch( e ) {\r\n\t\t\tactive = document.body;\r\n\t\t}\r\n\r\n\t\telement.wrap( wrapper );\r\n\r\n\t\t// Fixes #7595 - Elements lose focus when wrapped.\r\n\t\tif ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {\r\n\t\t\t$( active ).focus();\r\n\t\t}\r\n\r\n\t\twrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element\r\n\r\n\t\t// transfer positioning properties to the wrapper\r\n\t\tif ( element.css( \"position\" ) === \"static\" ) {\r\n\t\t\twrapper.css({ position: \"relative\" });\r\n\t\t\telement.css({ position: \"relative\" });\r\n\t\t} else {\r\n\t\t\t$.extend( props, {\r\n\t\t\t\tposition: element.css( \"position\" ),\r\n\t\t\t\tzIndex: element.css( \"z-index\" )\r\n\t\t\t});\r\n\t\t\t$.each([ \"top\", \"left\", \"bottom\", \"right\" ], function(i, pos) {\r\n\t\t\t\tprops[ pos ] = element.css( pos );\r\n\t\t\t\tif ( isNaN( parseInt( props[ pos ], 10 ) ) ) {\r\n\t\t\t\t\tprops[ pos ] = \"auto\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\telement.css({\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: \"auto\",\r\n\t\t\t\tbottom: \"auto\"\r\n\t\t\t});\r\n\t\t}\r\n\t\telement.css(size);\r\n\r\n\t\treturn wrapper.css( props ).show();\r\n\t},\r\n\r\n\tremoveWrapper: function( element ) {\r\n\t\tvar active = document.activeElement;\r\n\r\n\t\tif ( element.parent().is( \".ui-effects-wrapper\" ) ) {\r\n\t\t\telement.parent().replaceWith( element );\r\n\r\n\t\t\t// Fixes #7595 - Elements lose focus when wrapped.\r\n\t\t\tif ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {\r\n\t\t\t\t$( active ).focus();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn element;\r\n\t},\r\n\r\n\tsetTransition: function( element, list, factor, value ) {\r\n\t\tvalue = value || {};\r\n\t\t$.each( list, function( i, x ) {\r\n\t\t\tvar unit = element.cssUnit( x );\r\n\t\t\tif ( unit[ 0 ] > 0 ) {\r\n\t\t\t\tvalue[ x ] = unit[ 0 ] * factor + unit[ 1 ];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn value;\r\n\t}\r\n});\r\n\r\n// return an effect options object for the given parameters:\r\nfunction _normalizeArguments( effect, options, speed, callback ) {\r\n\r\n\t// allow passing all options as the first parameter\r\n\tif ( $.isPlainObject( effect ) ) {\r\n\t\toptions = effect;\r\n\t\teffect = effect.effect;\r\n\t}\r\n\r\n\t// convert to an object\r\n\teffect = { effect: effect };\r\n\r\n\t// catch (effect, null, ...)\r\n\tif ( options == null ) {\r\n\t\toptions = {};\r\n\t}\r\n\r\n\t// catch (effect, callback)\r\n\tif ( $.isFunction( options ) ) {\r\n\t\tcallback = options;\r\n\t\tspeed = null;\r\n\t\toptions = {};\r\n\t}\r\n\r\n\t// catch (effect, speed, ?)\r\n\tif ( typeof options === \"number\" || $.fx.speeds[ options ] ) {\r\n\t\tcallback = speed;\r\n\t\tspeed = options;\r\n\t\toptions = {};\r\n\t}\r\n\r\n\t// catch (effect, options, callback)\r\n\tif ( $.isFunction( speed ) ) {\r\n\t\tcallback = speed;\r\n\t\tspeed = null;\r\n\t}\r\n\r\n\t// add options to effect\r\n\tif ( options ) {\r\n\t\t$.extend( effect, options );\r\n\t}\r\n\r\n\tspeed = speed || options.duration;\r\n\teffect.duration = $.fx.off ? 0 :\r\n\t\ttypeof speed === \"number\" ? speed :\r\n\t\tspeed in $.fx.speeds ? $.fx.speeds[ speed ] :\r\n\t\t$.fx.speeds._default;\r\n\r\n\teffect.complete = callback || options.complete;\r\n\r\n\treturn effect;\r\n}\r\n\r\nfunction standardAnimationOption( option ) {\r\n\t// Valid standard speeds (nothing, number, named speed)\r\n\tif ( !option || typeof option === \"number\" || $.fx.speeds[ option ] ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Invalid strings - treat as \"normal\" speed\r\n\tif ( typeof option === \"string\" && !$.effects.effect[ option ] ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Complete callback\r\n\tif ( $.isFunction( option ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Options hash (but not naming an effect)\r\n\tif ( typeof option === \"object\" && !option.effect ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Didn't match any standard API\r\n\treturn false;\r\n}\r\n\r\n$.fn.extend({\r\n\teffect: function( /* effect, options, speed, callback */ ) {\r\n\t\tvar args = _normalizeArguments.apply( this, arguments ),\r\n\t\t\tmode = args.mode,\r\n\t\t\tqueue = args.queue,\r\n\t\t\teffectMethod = $.effects.effect[ args.effect ];\r\n\r\n\t\tif ( $.fx.off || !effectMethod ) {\r\n\t\t\t// delegate to the original method (e.g., .show()) if possible\r\n\t\t\tif ( mode ) {\r\n\t\t\t\treturn this[ mode ]( args.duration, args.complete );\r\n\t\t\t} else {\r\n\t\t\t\treturn this.each( function() {\r\n\t\t\t\t\tif ( args.complete ) {\r\n\t\t\t\t\t\targs.complete.call( this );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction run( next ) {\r\n\t\t\tvar elem = $( this ),\r\n\t\t\t\tcomplete = args.complete,\r\n\t\t\t\tmode = args.mode;\r\n\r\n\t\t\tfunction done() {\r\n\t\t\t\tif ( $.isFunction( complete ) ) {\r\n\t\t\t\t\tcomplete.call( elem[0] );\r\n\t\t\t\t}\r\n\t\t\t\tif ( $.isFunction( next ) ) {\r\n\t\t\t\t\tnext();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If the element already has the correct final state, delegate to\r\n\t\t\t// the core methods so the internal tracking of \"olddisplay\" works.\r\n\t\t\tif ( elem.is( \":hidden\" ) ? mode === \"hide\" : mode === \"show\" ) {\r\n\t\t\t\telem[ mode ]();\r\n\t\t\t\tdone();\r\n\t\t\t} else {\r\n\t\t\t\teffectMethod.call( elem[0], args, done );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn queue === false ? this.each( run ) : this.queue( queue || \"fx\", run );\r\n\t},\r\n\r\n\tshow: (function( orig ) {\r\n\t\treturn function( option ) {\r\n\t\t\tif ( standardAnimationOption( option ) ) {\r\n\t\t\t\treturn orig.apply( this, arguments );\r\n\t\t\t} else {\r\n\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\r\n\t\t\t\targs.mode = \"show\";\r\n\t\t\t\treturn this.effect.call( this, args );\r\n\t\t\t}\r\n\t\t};\r\n\t})( $.fn.show ),\r\n\r\n\thide: (function( orig ) {\r\n\t\treturn function( option ) {\r\n\t\t\tif ( standardAnimationOption( option ) ) {\r\n\t\t\t\treturn orig.apply( this, arguments );\r\n\t\t\t} else {\r\n\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\r\n\t\t\t\targs.mode = \"hide\";\r\n\t\t\t\treturn this.effect.call( this, args );\r\n\t\t\t}\r\n\t\t};\r\n\t})( $.fn.hide ),\r\n\r\n\ttoggle: (function( orig ) {\r\n\t\treturn function( option ) {\r\n\t\t\tif ( standardAnimationOption( option ) || typeof option === \"boolean\" ) {\r\n\t\t\t\treturn orig.apply( this, arguments );\r\n\t\t\t} else {\r\n\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\r\n\t\t\t\targs.mode = \"toggle\";\r\n\t\t\t\treturn this.effect.call( this, args );\r\n\t\t\t}\r\n\t\t};\r\n\t})( $.fn.toggle ),\r\n\r\n\t// helper functions\r\n\tcssUnit: function(key) {\r\n\t\tvar style = this.css( key ),\r\n\t\t\tval = [];\r\n\r\n\t\t$.each( [ \"em\", \"px\", \"%\", \"pt\" ], function( i, unit ) {\r\n\t\t\tif ( style.indexOf( unit ) > 0 ) {\r\n\t\t\t\tval = [ parseFloat( style ), unit ];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn val;\r\n\t}\r\n});\r\n\r\n})();\r\n\r\n/******************************************************************************/\r\n/*********************************** EASING ***********************************/\r\n/******************************************************************************/\r\n\r\n(function() {\r\n\r\n// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)\r\n\r\nvar baseEasings = {};\r\n\r\n$.each( [ \"Quad\", \"Cubic\", \"Quart\", \"Quint\", \"Expo\" ], function( i, name ) {\r\n\tbaseEasings[ name ] = function( p ) {\r\n\t\treturn Math.pow( p, i + 2 );\r\n\t};\r\n});\r\n\r\n$.extend( baseEasings, {\r\n\tSine: function ( p ) {\r\n\t\treturn 1 - Math.cos( p * Math.PI / 2 );\r\n\t},\r\n\tCirc: function ( p ) {\r\n\t\treturn 1 - Math.sqrt( 1 - p * p );\r\n\t},\r\n\tElastic: function( p ) {\r\n\t\treturn p === 0 || p === 1 ? p :\r\n\t\t\t-Math.pow( 2, 8 * (p - 1) ) * Math.sin( ( (p - 1) * 80 - 7.5 ) * Math.PI / 15 );\r\n\t},\r\n\tBack: function( p ) {\r\n\t\treturn p * p * ( 3 * p - 2 );\r\n\t},\r\n\tBounce: function ( p ) {\r\n\t\tvar pow2,\r\n\t\t\tbounce = 4;\r\n\r\n\t\twhile ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\r\n\t\treturn 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );\r\n\t}\r\n});\r\n\r\n$.each( baseEasings, function( name, easeIn ) {\r\n\t$.easing[ \"easeIn\" + name ] = easeIn;\r\n\t$.easing[ \"easeOut\" + name ] = function( p ) {\r\n\t\treturn 1 - easeIn( 1 - p );\r\n\t};\r\n\t$.easing[ \"easeInOut\" + name ] = function( p ) {\r\n\t\treturn p < 0.5 ?\r\n\t\t\teaseIn( p * 2 ) / 2 :\r\n\t\t\t1 - easeIn( p * -2 + 2 ) / 2;\r\n\t};\r\n});\r\n\r\n})();\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\nvar uid = 0,\r\n\thideProps = {},\r\n\tshowProps = {};\r\n\r\nhideProps.height = hideProps.paddingTop = hideProps.paddingBottom =\r\n\thideProps.borderTopWidth = hideProps.borderBottomWidth = \"hide\";\r\nshowProps.height = showProps.paddingTop = showProps.paddingBottom =\r\n\tshowProps.borderTopWidth = showProps.borderBottomWidth = \"show\";\r\n\r\n$.widget( \"ui.accordion\", {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\tactive: 0,\r\n\t\tanimate: {},\r\n\t\tcollapsible: false,\r\n\t\tevent: \"click\",\r\n\t\theader: \"> li > :first-child,> :not(li):even\",\r\n\t\theightStyle: \"auto\",\r\n\t\ticons: {\r\n\t\t\tactiveHeader: \"ui-icon-triangle-1-s\",\r\n\t\t\theader: \"ui-icon-triangle-1-e\"\r\n\t\t},\r\n\r\n\t\t// callbacks\r\n\t\tactivate: null,\r\n\t\tbeforeActivate: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar options = this.options;\r\n\t\tthis.prevShow = this.prevHide = $();\r\n\t\tthis.element.addClass( \"ui-accordion ui-widget ui-helper-reset\" )\r\n\t\t\t// ARIA\r\n\t\t\t.attr( \"role\", \"tablist\" );\r\n\r\n\t\t// don't allow collapsible: false and active: false / null\r\n\t\tif ( !options.collapsible && (options.active === false || options.active == null) ) {\r\n\t\t\toptions.active = 0;\r\n\t\t}\r\n\r\n\t\tthis._processPanels();\r\n\t\t// handle negative values\r\n\t\tif ( options.active < 0 ) {\r\n\t\t\toptions.active += this.headers.length;\r\n\t\t}\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_getCreateEventData: function() {\r\n\t\treturn {\r\n\t\t\theader: this.active,\r\n\t\t\tpanel: !this.active.length ? $() : this.active.next(),\r\n\t\t\tcontent: !this.active.length ? $() : this.active.next()\r\n\t\t};\r\n\t},\r\n\r\n\t_createIcons: function() {\r\n\t\tvar icons = this.options.icons;\r\n\t\tif ( icons ) {\r\n\t\t\t$( \"<span>\" )\r\n\t\t\t\t.addClass( \"ui-accordion-header-icon ui-icon \" + icons.header )\r\n\t\t\t\t.prependTo( this.headers );\r\n\t\t\tthis.active.children( \".ui-accordion-header-icon\" )\r\n\t\t\t\t.removeClass( icons.header )\r\n\t\t\t\t.addClass( icons.activeHeader );\r\n\t\t\tthis.headers.addClass( \"ui-accordion-icons\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_destroyIcons: function() {\r\n\t\tthis.headers\r\n\t\t\t.removeClass( \"ui-accordion-icons\" )\r\n\t\t\t.children( \".ui-accordion-header-icon\" )\r\n\t\t\t\t.remove();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar contents;\r\n\r\n\t\t// clean up main element\r\n\t\tthis.element\r\n\t\t\t.removeClass( \"ui-accordion ui-widget ui-helper-reset\" )\r\n\t\t\t.removeAttr( \"role\" );\r\n\r\n\t\t// clean up headers\r\n\t\tthis.headers\r\n\t\t\t.removeClass( \"ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top\" )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"aria-expanded\" )\r\n\t\t\t.removeAttr( \"aria-selected\" )\r\n\t\t\t.removeAttr( \"aria-controls\" )\r\n\t\t\t.removeAttr( \"tabIndex\" )\r\n\t\t\t.each(function() {\r\n\t\t\t\tif ( /^ui-accordion/.test( this.id ) ) {\r\n\t\t\t\t\tthis.removeAttribute( \"id\" );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tthis._destroyIcons();\r\n\r\n\t\t// clean up content panels\r\n\t\tcontents = this.headers.next()\r\n\t\t\t.css( \"display\", \"\" )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"aria-hidden\" )\r\n\t\t\t.removeAttr( \"aria-labelledby\" )\r\n\t\t\t.removeClass( \"ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled\" )\r\n\t\t\t.each(function() {\r\n\t\t\t\tif ( /^ui-accordion/.test( this.id ) ) {\r\n\t\t\t\t\tthis.removeAttribute( \"id\" );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tif ( this.options.heightStyle !== \"content\" ) {\r\n\t\t\tcontents.css( \"height\", \"\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"active\" ) {\r\n\t\t\t// _activate() will handle invalid values and update this.options\r\n\t\t\tthis._activate( value );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === \"event\" ) {\r\n\t\t\tif ( this.options.event ) {\r\n\t\t\t\tthis._off( this.headers, this.options.event );\r\n\t\t\t}\r\n\t\t\tthis._setupEvents( value );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\t// setting collapsible: false while collapsed; open first panel\r\n\t\tif ( key === \"collapsible\" && !value && this.options.active === false ) {\r\n\t\t\tthis._activate( 0 );\r\n\t\t}\r\n\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tthis._destroyIcons();\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis._createIcons();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// #5332 - opacity doesn't cascade to positioned elements in IE\r\n\t\t// so we need to add the disabled class to the headers and panels\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis.headers.add( this.headers.next() )\r\n\t\t\t\t.toggleClass( \"ui-state-disabled\", !!value );\r\n\t\t}\r\n\t},\r\n\r\n\t_keydown: function( event ) {\r\n\t\tif ( event.altKey || event.ctrlKey ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar keyCode = $.ui.keyCode,\r\n\t\t\tlength = this.headers.length,\r\n\t\t\tcurrentIndex = this.headers.index( event.target ),\r\n\t\t\ttoFocus = false;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\t\tcase keyCode.RIGHT:\r\n\t\t\tcase keyCode.DOWN:\r\n\t\t\t\ttoFocus = this.headers[ ( currentIndex + 1 ) % length ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase keyCode.LEFT:\r\n\t\t\tcase keyCode.UP:\r\n\t\t\t\ttoFocus = this.headers[ ( currentIndex - 1 + length ) % length ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase keyCode.SPACE:\r\n\t\t\tcase keyCode.ENTER:\r\n\t\t\t\tthis._eventHandler( event );\r\n\t\t\t\tbreak;\r\n\t\t\tcase keyCode.HOME:\r\n\t\t\t\ttoFocus = this.headers[ 0 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase keyCode.END:\r\n\t\t\t\ttoFocus = this.headers[ length - 1 ];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ( toFocus ) {\r\n\t\t\t$( event.target ).attr( \"tabIndex\", -1 );\r\n\t\t\t$( toFocus ).attr( \"tabIndex\", 0 );\r\n\t\t\ttoFocus.focus();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t_panelKeyDown : function( event ) {\r\n\t\tif ( event.keyCode === $.ui.keyCode.UP && event.ctrlKey ) {\r\n\t\t\t$( event.currentTarget ).prev().focus();\r\n\t\t}\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar options = this.options;\r\n\t\tthis._processPanels();\r\n\r\n\t\t// was collapsed or no panel\r\n\t\tif ( ( options.active === false && options.collapsible === true ) || !this.headers.length ) {\r\n\t\t\toptions.active = false;\r\n\t\t\tthis.active = $();\r\n\t\t// active false only when collapsible is true\r\n\t\t} else if ( options.active === false ) {\r\n\t\t\tthis._activate( 0 );\r\n\t\t// was active, but active panel is gone\r\n\t\t} else if ( this.active.length && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {\r\n\t\t\t// all remaining panel are disabled\r\n\t\t\tif ( this.headers.length === this.headers.find(\".ui-state-disabled\").length ) {\r\n\t\t\t\toptions.active = false;\r\n\t\t\t\tthis.active = $();\r\n\t\t\t// activate previous panel\r\n\t\t\t} else {\r\n\t\t\t\tthis._activate( Math.max( 0, options.active - 1 ) );\r\n\t\t\t}\r\n\t\t// was active, active panel still exists\r\n\t\t} else {\r\n\t\t\t// make sure active index is correct\r\n\t\t\toptions.active = this.headers.index( this.active );\r\n\t\t}\r\n\r\n\t\tthis._destroyIcons();\r\n\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_processPanels: function() {\r\n\t\tthis.headers = this.element.find( this.options.header )\r\n\t\t\t.addClass( \"ui-accordion-header ui-helper-reset ui-state-default ui-corner-all\" );\r\n\r\n\t\tthis.headers.next()\r\n\t\t\t.addClass( \"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\" )\r\n\t\t\t.filter(\":not(.ui-accordion-content-active)\")\r\n\t\t\t.hide();\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tvar maxHeight,\r\n\t\t\toptions = this.options,\r\n\t\t\theightStyle = options.heightStyle,\r\n\t\t\tparent = this.element.parent(),\r\n\t\t\taccordionId = this.accordionId = \"ui-accordion-\" +\r\n\t\t\t\t(this.element.attr( \"id\" ) || ++uid);\r\n\r\n\t\tthis.active = this._findActive( options.active )\r\n\t\t\t.addClass( \"ui-accordion-header-active ui-state-active ui-corner-top\" )\r\n\t\t\t.removeClass( \"ui-corner-all\" );\r\n\t\tthis.active.next()\r\n\t\t\t.addClass( \"ui-accordion-content-active\" )\r\n\t\t\t.show();\r\n\r\n\t\tthis.headers\r\n\t\t\t.attr( \"role\", \"tab\" )\r\n\t\t\t.each(function( i ) {\r\n\t\t\t\tvar header = $( this ),\r\n\t\t\t\t\theaderId = header.attr( \"id\" ),\r\n\t\t\t\t\tpanel = header.next(),\r\n\t\t\t\t\tpanelId = panel.attr( \"id\" );\r\n\t\t\t\tif ( !headerId ) {\r\n\t\t\t\t\theaderId = accordionId + \"-header-\" + i;\r\n\t\t\t\t\theader.attr( \"id\", headerId );\r\n\t\t\t\t}\r\n\t\t\t\tif ( !panelId ) {\r\n\t\t\t\t\tpanelId = accordionId + \"-panel-\" + i;\r\n\t\t\t\t\tpanel.attr( \"id\", panelId );\r\n\t\t\t\t}\r\n\t\t\t\theader.attr( \"aria-controls\", panelId );\r\n\t\t\t\tpanel.attr( \"aria-labelledby\", headerId );\r\n\t\t\t})\r\n\t\t\t.next()\r\n\t\t\t\t.attr( \"role\", \"tabpanel\" );\r\n\r\n\t\tthis.headers\r\n\t\t\t.not( this.active )\r\n\t\t\t.attr({\r\n\t\t\t\t\"aria-selected\": \"false\",\r\n\t\t\t\t\"aria-expanded\": \"false\",\r\n\t\t\t\ttabIndex: -1\r\n\t\t\t})\r\n\t\t\t.next()\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t\"aria-hidden\": \"true\"\r\n\t\t\t\t})\r\n\t\t\t\t.hide();\r\n\r\n\t\t// make sure at least one header is in the tab order\r\n\t\tif ( !this.active.length ) {\r\n\t\t\tthis.headers.eq( 0 ).attr( \"tabIndex\", 0 );\r\n\t\t} else {\r\n\t\t\tthis.active.attr({\r\n\t\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\t\ttabIndex: 0\r\n\t\t\t})\r\n\t\t\t.next()\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t\"aria-hidden\": \"false\"\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._createIcons();\r\n\r\n\t\tthis._setupEvents( options.event );\r\n\r\n\t\tif ( heightStyle === \"fill\" ) {\r\n\t\t\tmaxHeight = parent.height();\r\n\t\t\tthis.element.siblings( \":visible\" ).each(function() {\r\n\t\t\t\tvar elem = $( this ),\r\n\t\t\t\t\tposition = elem.css( \"position\" );\r\n\r\n\t\t\t\tif ( position === \"absolute\" || position === \"fixed\" ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tmaxHeight -= elem.outerHeight( true );\r\n\t\t\t});\r\n\r\n\t\t\tthis.headers.each(function() {\r\n\t\t\t\tmaxHeight -= $( this ).outerHeight( true );\r\n\t\t\t});\r\n\r\n\t\t\tthis.headers.next()\r\n\t\t\t\t.each(function() {\r\n\t\t\t\t\t$( this ).height( Math.max( 0, maxHeight -\r\n\t\t\t\t\t\t$( this ).innerHeight() + $( this ).height() ) );\r\n\t\t\t\t})\r\n\t\t\t\t.css( \"overflow\", \"auto\" );\r\n\t\t} else if ( heightStyle === \"auto\" ) {\r\n\t\t\tmaxHeight = 0;\r\n\t\t\tthis.headers.next()\r\n\t\t\t\t.each(function() {\r\n\t\t\t\t\tmaxHeight = Math.max( maxHeight, $( this ).css( \"height\", \"\" ).height() );\r\n\t\t\t\t})\r\n\t\t\t\t.height( maxHeight );\r\n\t\t}\r\n\t},\r\n\r\n\t_activate: function( index ) {\r\n\t\tvar active = this._findActive( index )[ 0 ];\r\n\r\n\t\t// trying to activate the already active panel\r\n\t\tif ( active === this.active[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// trying to collapse, simulate a click on the currently active header\r\n\t\tactive = active || this.active[ 0 ];\r\n\r\n\t\tthis._eventHandler({\r\n\t\t\ttarget: active,\r\n\t\t\tcurrentTarget: active,\r\n\t\t\tpreventDefault: $.noop\r\n\t\t});\r\n\t},\r\n\r\n\t_findActive: function( selector ) {\r\n\t\treturn typeof selector === \"number\" ? this.headers.eq( selector ) : $();\r\n\t},\r\n\r\n\t_setupEvents: function( event ) {\r\n\t\tvar events = {\r\n\t\t\tkeydown: \"_keydown\"\r\n\t\t};\r\n\t\tif ( event ) {\r\n\t\t\t$.each( event.split(\" \"), function( index, eventName ) {\r\n\t\t\t\tevents[ eventName ] = \"_eventHandler\";\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._off( this.headers.add( this.headers.next() ) );\r\n\t\tthis._on( this.headers, events );\r\n\t\tthis._on( this.headers.next(), { keydown: \"_panelKeyDown\" });\r\n\t\tthis._hoverable( this.headers );\r\n\t\tthis._focusable( this.headers );\r\n\t},\r\n\r\n\t_eventHandler: function( event ) {\r\n\t\tvar options = this.options,\r\n\t\t\tactive = this.active,\r\n\t\t\tclicked = $( event.currentTarget ),\r\n\t\t\tclickedIsActive = clicked[ 0 ] === active[ 0 ],\r\n\t\t\tcollapsing = clickedIsActive && options.collapsible,\r\n\t\t\ttoShow = collapsing ? $() : clicked.next(),\r\n\t\t\ttoHide = active.next(),\r\n\t\t\teventData = {\r\n\t\t\t\toldHeader: active,\r\n\t\t\t\toldPanel: toHide,\r\n\t\t\t\tnewHeader: collapsing ? $() : clicked,\r\n\t\t\t\tnewPanel: toShow\r\n\t\t\t};\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (\r\n\t\t\t\t// click on active header, but not collapsible\r\n\t\t\t\t( clickedIsActive && !options.collapsible ) ||\r\n\t\t\t\t// allow canceling activation\r\n\t\t\t\t( this._trigger( \"beforeActivate\", event, eventData ) === false ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions.active = collapsing ? false : this.headers.index( clicked );\r\n\r\n\t\t// when the call to ._toggle() comes after the class changes\r\n\t\t// it causes a very odd bug in IE 8 (see #6720)\r\n\t\tthis.active = clickedIsActive ? $() : clicked;\r\n\t\tthis._toggle( eventData );\r\n\r\n\t\t// switch classes\r\n\t\t// corner classes on the previously active header stay after the animation\r\n\t\tactive.removeClass( \"ui-accordion-header-active ui-state-active\" );\r\n\t\tif ( options.icons ) {\r\n\t\t\tactive.children( \".ui-accordion-header-icon\" )\r\n\t\t\t\t.removeClass( options.icons.activeHeader )\r\n\t\t\t\t.addClass( options.icons.header );\r\n\t\t}\r\n\r\n\t\tif ( !clickedIsActive ) {\r\n\t\t\tclicked\r\n\t\t\t\t.removeClass( \"ui-corner-all\" )\r\n\t\t\t\t.addClass( \"ui-accordion-header-active ui-state-active ui-corner-top\" );\r\n\t\t\tif ( options.icons ) {\r\n\t\t\t\tclicked.children( \".ui-accordion-header-icon\" )\r\n\t\t\t\t\t.removeClass( options.icons.header )\r\n\t\t\t\t\t.addClass( options.icons.activeHeader );\r\n\t\t\t}\r\n\r\n\t\t\tclicked\r\n\t\t\t\t.next()\r\n\t\t\t\t.addClass( \"ui-accordion-content-active\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_toggle: function( data ) {\r\n\t\tvar toShow = data.newPanel,\r\n\t\t\ttoHide = this.prevShow.length ? this.prevShow : data.oldPanel;\r\n\r\n\t\t// handle activating a panel during the animation for another activation\r\n\t\tthis.prevShow.add( this.prevHide ).stop( true, true );\r\n\t\tthis.prevShow = toShow;\r\n\t\tthis.prevHide = toHide;\r\n\r\n\t\tif ( this.options.animate ) {\r\n\t\t\tthis._animate( toShow, toHide, data );\r\n\t\t} else {\r\n\t\t\ttoHide.hide();\r\n\t\t\ttoShow.show();\r\n\t\t\tthis._toggleComplete( data );\r\n\t\t}\r\n\r\n\t\ttoHide.attr({\r\n\t\t\t\"aria-hidden\": \"true\"\r\n\t\t});\r\n\t\ttoHide.prev().attr( \"aria-selected\", \"false\" );\r\n\t\t// if we're switching panels, remove the old header from the tab order\r\n\t\t// if we're opening from collapsed state, remove the previous header from the tab order\r\n\t\t// if we're collapsing, then keep the collapsing header in the tab order\r\n\t\tif ( toShow.length && toHide.length ) {\r\n\t\t\ttoHide.prev().attr({\r\n\t\t\t\t\"tabIndex\": -1,\r\n\t\t\t\t\"aria-expanded\": \"false\"\r\n\t\t\t});\r\n\t\t} else if ( toShow.length ) {\r\n\t\t\tthis.headers.filter(function() {\r\n\t\t\t\treturn $( this ).attr( \"tabIndex\" ) === 0;\r\n\t\t\t})\r\n\t\t\t.attr( \"tabIndex\", -1 );\r\n\t\t}\r\n\r\n\t\ttoShow\r\n\t\t\t.attr( \"aria-hidden\", \"false\" )\r\n\t\t\t.prev()\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\t\ttabIndex: 0,\r\n\t\t\t\t\t\"aria-expanded\": \"true\"\r\n\t\t\t\t});\r\n\t},\r\n\r\n\t_animate: function( toShow, toHide, data ) {\r\n\t\tvar total, easing, duration,\r\n\t\t\tthat = this,\r\n\t\t\tadjust = 0,\r\n\t\t\tdown = toShow.length &&\r\n\t\t\t\t( !toHide.length || ( toShow.index() < toHide.index() ) ),\r\n\t\t\tanimate = this.options.animate || {},\r\n\t\t\toptions = down && animate.down || animate,\r\n\t\t\tcomplete = function() {\r\n\t\t\t\tthat._toggleComplete( data );\r\n\t\t\t};\r\n\r\n\t\tif ( typeof options === \"number\" ) {\r\n\t\t\tduration = options;\r\n\t\t}\r\n\t\tif ( typeof options === \"string\" ) {\r\n\t\t\teasing = options;\r\n\t\t}\r\n\t\t// fall back from options to animation in case of partial down settings\r\n\t\teasing = easing || options.easing || animate.easing;\r\n\t\tduration = duration || options.duration || animate.duration;\r\n\r\n\t\tif ( !toHide.length ) {\r\n\t\t\treturn toShow.animate( showProps, duration, easing, complete );\r\n\t\t}\r\n\t\tif ( !toShow.length ) {\r\n\t\t\treturn toHide.animate( hideProps, duration, easing, complete );\r\n\t\t}\r\n\r\n\t\ttotal = toShow.show().outerHeight();\r\n\t\ttoHide.animate( hideProps, {\r\n\t\t\tduration: duration,\r\n\t\t\teasing: easing,\r\n\t\t\tstep: function( now, fx ) {\r\n\t\t\t\tfx.now = Math.round( now );\r\n\t\t\t}\r\n\t\t});\r\n\t\ttoShow\r\n\t\t\t.hide()\r\n\t\t\t.animate( showProps, {\r\n\t\t\t\tduration: duration,\r\n\t\t\t\teasing: easing,\r\n\t\t\t\tcomplete: complete,\r\n\t\t\t\tstep: function( now, fx ) {\r\n\t\t\t\t\tfx.now = Math.round( now );\r\n\t\t\t\t\tif ( fx.prop !== \"height\" ) {\r\n\t\t\t\t\t\tadjust += fx.now;\r\n\t\t\t\t\t} else if ( that.options.heightStyle !== \"content\" ) {\r\n\t\t\t\t\t\tfx.now = Math.round( total - toHide.outerHeight() - adjust );\r\n\t\t\t\t\t\tadjust = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t},\r\n\r\n\t_toggleComplete: function( data ) {\r\n\t\tvar toHide = data.oldPanel;\r\n\r\n\t\ttoHide\r\n\t\t\t.removeClass( \"ui-accordion-content-active\" )\r\n\t\t\t.prev()\r\n\t\t\t\t.removeClass( \"ui-corner-top\" )\r\n\t\t\t\t.addClass( \"ui-corner-all\" );\r\n\r\n\t\t// Work around for rendering bug in IE (#5421)\r\n\t\tif ( toHide.length ) {\r\n\t\t\ttoHide.parent()[0].className = toHide.parent()[0].className;\r\n\t\t}\r\n\t\tthis._trigger( \"activate\", null, data );\r\n\t}\r\n});\r\n\r\n})( jQuery );\r\n\r\n(function( $, undefined ) {\r\n\r\n$.widget( \"ui.autocomplete\", {\r\n\tversion: \"1.10.4\",\r\n\tdefaultElement: \"<input>\",\r\n\toptions: {\r\n\t\tappendTo: null,\r\n\t\tautoFocus: false,\r\n\t\tdelay: 300,\r\n\t\tminLength: 1,\r\n\t\tposition: {\r\n\t\t\tmy: \"left top\",\r\n\t\t\tat: \"left bottom\",\r\n\t\t\tcollision: \"none\"\r\n\t\t},\r\n\t\tsource: null,\r\n\r\n\t\t// callbacks\r\n\t\tchange: null,\r\n\t\tclose: null,\r\n\t\tfocus: null,\r\n\t\topen: null,\r\n\t\tresponse: null,\r\n\t\tsearch: null,\r\n\t\tselect: null\r\n\t},\r\n\r\n\trequestIndex: 0,\r\n\tpending: 0,\r\n\r\n\t_create: function() {\r\n\t\t// Some browsers only repeat keydown events, not keypress events,\r\n\t\t// so we use the suppressKeyPress flag to determine if we've already\r\n\t\t// handled the keydown event. #7269\r\n\t\t// Unfortunately the code for & in keypress is the same as the up arrow,\r\n\t\t// so we use the suppressKeyPressRepeat flag to avoid handling keypress\r\n\t\t// events when we know the keydown event was used to modify the\r\n\t\t// search term. #7799\r\n\t\tvar suppressKeyPress, suppressKeyPressRepeat, suppressInput,\r\n\t\t\tnodeName = this.element[0].nodeName.toLowerCase(),\r\n\t\t\tisTextarea = nodeName === \"textarea\",\r\n\t\t\tisInput = nodeName === \"input\";\r\n\r\n\t\tthis.isMultiLine =\r\n\t\t\t// Textareas are always multi-line\r\n\t\t\tisTextarea ? true :\r\n\t\t\t// Inputs are always single-line, even if inside a contentEditable element\r\n\t\t\t// IE also treats inputs as contentEditable\r\n\t\t\tisInput ? false :\r\n\t\t\t// All other element types are determined by whether or not they're contentEditable\r\n\t\t\tthis.element.prop( \"isContentEditable\" );\r\n\r\n\t\tthis.valueMethod = this.element[ isTextarea || isInput ? \"val\" : \"text\" ];\r\n\t\tthis.isNewMenu = true;\r\n\r\n\t\tthis.element\r\n\t\t\t.addClass( \"ui-autocomplete-input\" )\r\n\t\t\t.attr( \"autocomplete\", \"off\" );\r\n\r\n\t\tthis._on( this.element, {\r\n\t\t\tkeydown: function( event ) {\r\n\t\t\t\tif ( this.element.prop( \"readOnly\" ) ) {\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tsuppressInput = true;\r\n\t\t\t\t\tsuppressKeyPressRepeat = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsuppressKeyPress = false;\r\n\t\t\t\tsuppressInput = false;\r\n\t\t\t\tsuppressKeyPressRepeat = false;\r\n\t\t\t\tvar keyCode = $.ui.keyCode;\r\n\t\t\t\tswitch( event.keyCode ) {\r\n\t\t\t\tcase keyCode.PAGE_UP:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._move( \"previousPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.PAGE_DOWN:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._move( \"nextPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.UP:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._keyEvent( \"previous\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.DOWN:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._keyEvent( \"next\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.ENTER:\r\n\t\t\t\tcase keyCode.NUMPAD_ENTER:\r\n\t\t\t\t\t// when menu is open and has focus\r\n\t\t\t\t\tif ( this.menu.active ) {\r\n\t\t\t\t\t\t// #6055 - Opera still allows the keypress to occur\r\n\t\t\t\t\t\t// which causes forms to submit\r\n\t\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tthis.menu.select( event );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.TAB:\r\n\t\t\t\t\tif ( this.menu.active ) {\r\n\t\t\t\t\t\tthis.menu.select( event );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.ESCAPE:\r\n\t\t\t\t\tif ( this.menu.element.is( \":visible\" ) ) {\r\n\t\t\t\t\t\tthis._value( this.term );\r\n\t\t\t\t\t\tthis.close( event );\r\n\t\t\t\t\t\t// Different browsers have different default behavior for escape\r\n\t\t\t\t\t\t// Single press can mean undo or clear\r\n\t\t\t\t\t\t// Double press in IE means clear the whole form\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tsuppressKeyPressRepeat = true;\r\n\t\t\t\t\t// search timeout should be triggered before the input value is changed\r\n\t\t\t\t\tthis._searchTimeout( event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tkeypress: function( event ) {\r\n\t\t\t\tif ( suppressKeyPress ) {\r\n\t\t\t\t\tsuppressKeyPress = false;\r\n\t\t\t\t\tif ( !this.isMultiLine || this.menu.element.is( \":visible\" ) ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ( suppressKeyPressRepeat ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// replicate some key handlers to allow them to repeat in Firefox and Opera\r\n\t\t\t\tvar keyCode = $.ui.keyCode;\r\n\t\t\t\tswitch( event.keyCode ) {\r\n\t\t\t\tcase keyCode.PAGE_UP:\r\n\t\t\t\t\tthis._move( \"previousPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.PAGE_DOWN:\r\n\t\t\t\t\tthis._move( \"nextPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.UP:\r\n\t\t\t\t\tthis._keyEvent( \"previous\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.DOWN:\r\n\t\t\t\t\tthis._keyEvent( \"next\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinput: function( event ) {\r\n\t\t\t\tif ( suppressInput ) {\r\n\t\t\t\t\tsuppressInput = false;\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._searchTimeout( event );\r\n\t\t\t},\r\n\t\t\tfocus: function() {\r\n\t\t\t\tthis.selectedItem = null;\r\n\t\t\t\tthis.previous = this._value();\r\n\t\t\t},\r\n\t\t\tblur: function( event ) {\r\n\t\t\t\tif ( this.cancelBlur ) {\r\n\t\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclearTimeout( this.searching );\r\n\t\t\t\tthis.close( event );\r\n\t\t\t\tthis._change( event );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._initSource();\r\n\t\tthis.menu = $( \"<ul>\" )\r\n\t\t\t.addClass( \"ui-autocomplete ui-front\" )\r\n\t\t\t.appendTo( this._appendTo() )\r\n\t\t\t.menu({\r\n\t\t\t\t// disable ARIA support, the live region takes care of that\r\n\t\t\t\trole: null\r\n\t\t\t})\r\n\t\t\t.hide()\r\n\t\t\t.data( \"ui-menu\" );\r\n\r\n\t\tthis._on( this.menu.element, {\r\n\t\t\tmousedown: function( event ) {\r\n\t\t\t\t// prevent moving focus out of the text field\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t// IE doesn't prevent moving focus even with event.preventDefault()\r\n\t\t\t\t// so we set a flag to know when we should ignore the blur event\r\n\t\t\t\tthis.cancelBlur = true;\r\n\t\t\t\tthis._delay(function() {\r\n\t\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// clicking on the scrollbar causes focus to shift to the body\r\n\t\t\t\t// but we can't detect a mouseup or a click immediately afterward\r\n\t\t\t\t// so we have to track the next mousedown and close the menu if\r\n\t\t\t\t// the user clicks somewhere outside of the autocomplete\r\n\t\t\t\tvar menuElement = this.menu.element[ 0 ];\r\n\t\t\t\tif ( !$( event.target ).closest( \".ui-menu-item\" ).length ) {\r\n\t\t\t\t\tthis._delay(function() {\r\n\t\t\t\t\t\tvar that = this;\r\n\t\t\t\t\t\tthis.document.one( \"mousedown\", function( event ) {\r\n\t\t\t\t\t\t\tif ( event.target !== that.element[ 0 ] &&\r\n\t\t\t\t\t\t\t\t\tevent.target !== menuElement &&\r\n\t\t\t\t\t\t\t\t\t!$.contains( menuElement, event.target ) ) {\r\n\t\t\t\t\t\t\t\tthat.close();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmenufocus: function( event, ui ) {\r\n\t\t\t\t// support: Firefox\r\n\t\t\t\t// Prevent accidental activation of menu items in Firefox (#7024 #9118)\r\n\t\t\t\tif ( this.isNewMenu ) {\r\n\t\t\t\t\tthis.isNewMenu = false;\r\n\t\t\t\t\tif ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {\r\n\t\t\t\t\t\tthis.menu.blur();\r\n\r\n\t\t\t\t\t\tthis.document.one( \"mousemove\", function() {\r\n\t\t\t\t\t\t\t$( event.target ).trigger( event.originalEvent );\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar item = ui.item.data( \"ui-autocomplete-item\" );\r\n\t\t\t\tif ( false !== this._trigger( \"focus\", event, { item: item } ) ) {\r\n\t\t\t\t\t// use value to match what will end up in the input, if it was a key event\r\n\t\t\t\t\tif ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {\r\n\t\t\t\t\t\tthis._value( item.value );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Normally the input is populated with the item's value as the\r\n\t\t\t\t\t// menu is navigated, causing screen readers to notice a change and\r\n\t\t\t\t\t// announce the item. Since the focus event was canceled, this doesn't\r\n\t\t\t\t\t// happen, so we update the live region so that screen readers can\r\n\t\t\t\t\t// still notice the change and announce it.\r\n\t\t\t\t\tthis.liveRegion.text( item.value );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmenuselect: function( event, ui ) {\r\n\t\t\t\tvar item = ui.item.data( \"ui-autocomplete-item\" ),\r\n\t\t\t\t\tprevious = this.previous;\r\n\r\n\t\t\t\t// only trigger when focus was lost (click on menu)\r\n\t\t\t\tif ( this.element[0] !== this.document[0].activeElement ) {\r\n\t\t\t\t\tthis.element.focus();\r\n\t\t\t\t\tthis.previous = previous;\r\n\t\t\t\t\t// #6109 - IE triggers two focus events and the second\r\n\t\t\t\t\t// is asynchronous, so we need to reset the previous\r\n\t\t\t\t\t// term synchronously and asynchronously :-(\r\n\t\t\t\t\tthis._delay(function() {\r\n\t\t\t\t\t\tthis.previous = previous;\r\n\t\t\t\t\t\tthis.selectedItem = item;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( false !== this._trigger( \"select\", event, { item: item } ) ) {\r\n\t\t\t\t\tthis._value( item.value );\r\n\t\t\t\t}\r\n\t\t\t\t// reset the term after the select event\r\n\t\t\t\t// this allows custom select handling to work properly\r\n\t\t\t\tthis.term = this._value();\r\n\r\n\t\t\t\tthis.close( event );\r\n\t\t\t\tthis.selectedItem = item;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.liveRegion = $( \"<span>\", {\r\n\t\t\t\trole: \"status\",\r\n\t\t\t\t\"aria-live\": \"polite\"\r\n\t\t\t})\r\n\t\t\t.addClass( \"ui-helper-hidden-accessible\" )\r\n\t\t\t.insertBefore( this.element );\r\n\r\n\t\t// turning off autocomplete prevents the browser from remembering the\r\n\t\t// value when navigating through history, so we re-enable autocomplete\r\n\t\t// if the page is unloaded before the widget is destroyed. #7790\r\n\t\tthis._on( this.window, {\r\n\t\t\tbeforeunload: function() {\r\n\t\t\t\tthis.element.removeAttr( \"autocomplete\" );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tclearTimeout( this.searching );\r\n\t\tthis.element\r\n\t\t\t.removeClass( \"ui-autocomplete-input\" )\r\n\t\t\t.removeAttr( \"autocomplete\" );\r\n\t\tthis.menu.element.remove();\r\n\t\tthis.liveRegion.remove();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tthis._super( key, value );\r\n\t\tif ( key === \"source\" ) {\r\n\t\t\tthis._initSource();\r\n\t\t}\r\n\t\tif ( key === \"appendTo\" ) {\r\n\t\t\tthis.menu.element.appendTo( this._appendTo() );\r\n\t\t}\r\n\t\tif ( key === \"disabled\" && value && this.xhr ) {\r\n\t\t\tthis.xhr.abort();\r\n\t\t}\r\n\t},\r\n\r\n\t_appendTo: function() {\r\n\t\tvar element = this.options.appendTo;\r\n\r\n\t\tif ( element ) {\r\n\t\t\telement = element.jquery || element.nodeType ?\r\n\t\t\t\t$( element ) :\r\n\t\t\t\tthis.document.find( element ).eq( 0 );\r\n\t\t}\r\n\r\n\t\tif ( !element ) {\r\n\t\t\telement = this.element.closest( \".ui-front\" );\r\n\t\t}\r\n\r\n\t\tif ( !element.length ) {\r\n\t\t\telement = this.document[0].body;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t},\r\n\r\n\t_initSource: function() {\r\n\t\tvar array, url,\r\n\t\t\tthat = this;\r\n\t\tif ( $.isArray(this.options.source) ) {\r\n\t\t\tarray = this.options.source;\r\n\t\t\tthis.source = function( request, response ) {\r\n\t\t\t\tresponse( $.ui.autocomplete.filter( array, request.term ) );\r\n\t\t\t};\r\n\t\t} else if ( typeof this.options.source === \"string\" ) {\r\n\t\t\turl = this.options.source;\r\n\t\t\tthis.source = function( request, response ) {\r\n\t\t\t\tif ( that.xhr ) {\r\n\t\t\t\t\tthat.xhr.abort();\r\n\t\t\t\t}\r\n\t\t\t\tthat.xhr = $.ajax({\r\n\t\t\t\t\turl: url,\r\n\t\t\t\t\tdata: request,\r\n\t\t\t\t\tdataType: \"json\",\r\n\t\t\t\t\tsuccess: function( data ) {\r\n\t\t\t\t\t\tresponse( data );\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\tresponse( [] );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.source = this.options.source;\r\n\t\t}\r\n\t},\r\n\r\n\t_searchTimeout: function( event ) {\r\n\t\tclearTimeout( this.searching );\r\n\t\tthis.searching = this._delay(function() {\r\n\t\t\t// only search if the value has changed\r\n\t\t\tif ( this.term !== this._value() ) {\r\n\t\t\t\tthis.selectedItem = null;\r\n\t\t\t\tthis.search( null, event );\r\n\t\t\t}\r\n\t\t}, this.options.delay );\r\n\t},\r\n\r\n\tsearch: function( value, event ) {\r\n\t\tvalue = value != null ? value : this._value();\r\n\r\n\t\t// always save the actual value, not the one passed as an argument\r\n\t\tthis.term = this._value();\r\n\r\n\t\tif ( value.length < this.options.minLength ) {\r\n\t\t\treturn this.close( event );\r\n\t\t}\r\n\r\n\t\tif ( this._trigger( \"search\", event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn this._search( value );\r\n\t},\r\n\r\n\t_search: function( value ) {\r\n\t\tthis.pending++;\r\n\t\tthis.element.addClass( \"ui-autocomplete-loading\" );\r\n\t\tthis.cancelSearch = false;\r\n\r\n\t\tthis.source( { term: value }, this._response() );\r\n\t},\r\n\r\n\t_response: function() {\r\n\t\tvar index = ++this.requestIndex;\r\n\r\n\t\treturn $.proxy(function( content ) {\r\n\t\t\tif ( index === this.requestIndex ) {\r\n\t\t\t\tthis.__response( content );\r\n\t\t\t}\r\n\r\n\t\t\tthis.pending--;\r\n\t\t\tif ( !this.pending ) {\r\n\t\t\t\tthis.element.removeClass( \"ui-autocomplete-loading\" );\r\n\t\t\t}\r\n\t\t}, this );\r\n\t},\r\n\r\n\t__response: function( content ) {\r\n\t\tif ( content ) {\r\n\t\t\tcontent = this._normalize( content );\r\n\t\t}\r\n\t\tthis._trigger( \"response\", null, { content: content } );\r\n\t\tif ( !this.options.disabled && content && content.length && !this.cancelSearch ) {\r\n\t\t\tthis._suggest( content );\r\n\t\t\tthis._trigger( \"open\" );\r\n\t\t} else {\r\n\t\t\t// use ._close() instead of .close() so we don't cancel future searches\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t},\r\n\r\n\tclose: function( event ) {\r\n\t\tthis.cancelSearch = true;\r\n\t\tthis._close( event );\r\n\t},\r\n\r\n\t_close: function( event ) {\r\n\t\tif ( this.menu.element.is( \":visible\" ) ) {\r\n\t\t\tthis.menu.element.hide();\r\n\t\t\tthis.menu.blur();\r\n\t\t\tthis.isNewMenu = true;\r\n\t\t\tthis._trigger( \"close\", event );\r\n\t\t}\r\n\t},\r\n\r\n\t_change: function( event ) {\r\n\t\tif ( this.previous !== this._value() ) {\r\n\t\t\tthis._trigger( \"change\", event, { item: this.selectedItem } );\r\n\t\t}\r\n\t},\r\n\r\n\t_normalize: function( items ) {\r\n\t\t// assume all items have the right format when the first item is complete\r\n\t\tif ( items.length && items[0].label && items[0].value ) {\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\treturn $.map( items, function( item ) {\r\n\t\t\tif ( typeof item === \"string\" ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel: item,\r\n\t\t\t\t\tvalue: item\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn $.extend({\r\n\t\t\t\tlabel: item.label || item.value,\r\n\t\t\t\tvalue: item.value || item.label\r\n\t\t\t}, item );\r\n\t\t});\r\n\t},\r\n\r\n\t_suggest: function( items ) {\r\n\t\tvar ul = this.menu.element.empty();\r\n\t\tthis._renderMenu( ul, items );\r\n\t\tthis.isNewMenu = true;\r\n\t\tthis.menu.refresh();\r\n\r\n\t\t// size and position menu\r\n\t\tul.show();\r\n\t\tthis._resizeMenu();\r\n\t\tul.position( $.extend({\r\n\t\t\tof: this.element\r\n\t\t}, this.options.position ));\r\n\r\n\t\tif ( this.options.autoFocus ) {\r\n\t\t\tthis.menu.next();\r\n\t\t}\r\n\t},\r\n\r\n\t_resizeMenu: function() {\r\n\t\tvar ul = this.menu.element;\r\n\t\tul.outerWidth( Math.max(\r\n\t\t\t// Firefox wraps long text (possibly a rounding bug)\r\n\t\t\t// so we add 1px to avoid the wrapping (#7513)\r\n\t\t\tul.width( \"\" ).outerWidth() + 1,\r\n\t\t\tthis.element.outerWidth()\r\n\t\t) );\r\n\t},\r\n\r\n\t_renderMenu: function( ul, items ) {\r\n\t\tvar that = this;\r\n\t\t$.each( items, function( index, item ) {\r\n\t\t\tthat._renderItemData( ul, item );\r\n\t\t});\r\n\t},\r\n\r\n\t_renderItemData: function( ul, item ) {\r\n\t\treturn this._renderItem( ul, item ).data( \"ui-autocomplete-item\", item );\r\n\t},\r\n\r\n\t_renderItem: function( ul, item ) {\r\n\t\treturn $( \"<li>\" )\r\n\t\t\t.append( $( \"<a>\" ).text( item.label ) )\r\n\t\t\t.appendTo( ul );\r\n\t},\r\n\r\n\t_move: function( direction, event ) {\r\n\t\tif ( !this.menu.element.is( \":visible\" ) ) {\r\n\t\t\tthis.search( null, event );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this.menu.isFirstItem() && /^previous/.test( direction ) ||\r\n\t\t\t\tthis.menu.isLastItem() && /^next/.test( direction ) ) {\r\n\t\t\tthis._value( this.term );\r\n\t\t\tthis.menu.blur();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.menu[ direction ]( event );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.menu.element;\r\n\t},\r\n\r\n\t_value: function() {\r\n\t\treturn this.valueMethod.apply( this.element, arguments );\r\n\t},\r\n\r\n\t_keyEvent: function( keyEvent, event ) {\r\n\t\tif ( !this.isMultiLine || this.menu.element.is( \":visible\" ) ) {\r\n\t\t\tthis._move( keyEvent, event );\r\n\r\n\t\t\t// prevents moving cursor to beginning/end of the text field in some browsers\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$.extend( $.ui.autocomplete, {\r\n\tescapeRegex: function( value ) {\r\n\t\treturn value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\r\n\t},\r\n\tfilter: function(array, term) {\r\n\t\tvar matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), \"i\" );\r\n\t\treturn $.grep( array, function(value) {\r\n\t\t\treturn matcher.test( value.label || value.value || value );\r\n\t\t});\r\n\t}\r\n});\r\n\r\n\r\n// live region extension, adding a `messages` option\r\n// NOTE: This is an experimental API. We are still investigating\r\n// a full solution for string manipulation and internationalization.\r\n$.widget( \"ui.autocomplete\", $.ui.autocomplete, {\r\n\toptions: {\r\n\t\tmessages: {\r\n\t\t\tnoResults: \"No search results.\",\r\n\t\t\tresults: function( amount ) {\r\n\t\t\t\treturn amount + ( amount > 1 ? \" results are\" : \" result is\" ) +\r\n\t\t\t\t\t\" available, use up and down arrow keys to navigate.\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t__response: function( content ) {\r\n\t\tvar message;\r\n\t\tthis._superApply( arguments );\r\n\t\tif ( this.options.disabled || this.cancelSearch ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( content && content.length ) {\r\n\t\t\tmessage = this.options.messages.results( content.length );\r\n\t\t} else {\r\n\t\t\tmessage = this.options.messages.noResults;\r\n\t\t}\r\n\t\tthis.liveRegion.text( message );\r\n\t}\r\n});\r\n\r\n}( jQuery ));\r\n\r\n(function( $, undefined ) {\r\n\r\nvar lastActive,\r\n\tbaseClasses = \"ui-button ui-widget ui-state-default ui-corner-all\",\r\n\ttypeClasses = \"ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only\",\r\n\tformResetHandler = function() {\r\n\t\tvar form = $( this );\r\n\t\tsetTimeout(function() {\r\n\t\t\tform.find( \":ui-button\" ).button( \"refresh\" );\r\n\t\t}, 1 );\r\n\t},\r\n\tradioGroup = function( radio ) {\r\n\t\tvar name = radio.name,\r\n\t\t\tform = radio.form,\r\n\t\t\tradios = $( [] );\r\n\t\tif ( name ) {\r\n\t\t\tname = name.replace( /'/g, \"\\\\'\" );\r\n\t\t\tif ( form ) {\r\n\t\t\t\tradios = $( form ).find( \"[name='\" + name + \"']\" );\r\n\t\t\t} else {\r\n\t\t\t\tradios = $( \"[name='\" + name + \"']\", radio.ownerDocument )\r\n\t\t\t\t\t.filter(function() {\r\n\t\t\t\t\t\treturn !this.form;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn radios;\r\n\t};\r\n\r\n$.widget( \"ui.button\", {\r\n\tversion: \"1.10.4\",\r\n\tdefaultElement: \"<button>\",\r\n\toptions: {\r\n\t\tdisabled: null,\r\n\t\ttext: true,\r\n\t\tlabel: null,\r\n\t\ticons: {\r\n\t\t\tprimary: null,\r\n\t\t\tsecondary: null\r\n\t\t}\r\n\t},\r\n\t_create: function() {\r\n\t\tthis.element.closest( \"form\" )\r\n\t\t\t.unbind( \"reset\" + this.eventNamespace )\r\n\t\t\t.bind( \"reset\" + this.eventNamespace, formResetHandler );\r\n\r\n\t\tif ( typeof this.options.disabled !== \"boolean\" ) {\r\n\t\t\tthis.options.disabled = !!this.element.prop( \"disabled\" );\r\n\t\t} else {\r\n\t\t\tthis.element.prop( \"disabled\", this.options.disabled );\r\n\t\t}\r\n\r\n\t\tthis._determineButtonType();\r\n\t\tthis.hasTitle = !!this.buttonElement.attr( \"title\" );\r\n\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options,\r\n\t\t\ttoggleButton = this.type === \"checkbox\" || this.type === \"radio\",\r\n\t\t\tactiveClass = !toggleButton ? \"ui-state-active\" : \"\";\r\n\r\n\t\tif ( options.label === null ) {\r\n\t\t\toptions.label = (this.type === \"input\" ? this.buttonElement.val() : this.buttonElement.html());\r\n\t\t}\r\n\r\n\t\tthis._hoverable( this.buttonElement );\r\n\r\n\t\tthis.buttonElement\r\n\t\t\t.addClass( baseClasses )\r\n\t\t\t.attr( \"role\", \"button\" )\r\n\t\t\t.bind( \"mouseenter\" + this.eventNamespace, function() {\r\n\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ( this === lastActive ) {\r\n\t\t\t\t\t$( this ).addClass( \"ui-state-active\" );\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.bind( \"mouseleave\" + this.eventNamespace, function() {\r\n\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$( this ).removeClass( activeClass );\r\n\t\t\t})\r\n\t\t\t.bind( \"click\" + this.eventNamespace, function( event ) {\r\n\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t// Can't use _focusable() because the element that receives focus\r\n\t\t// and the element that gets the ui-state-focus class are different\r\n\t\tthis._on({\r\n\t\t\tfocus: function() {\r\n\t\t\t\tthis.buttonElement.addClass( \"ui-state-focus\" );\r\n\t\t\t},\r\n\t\t\tblur: function() {\r\n\t\t\t\tthis.buttonElement.removeClass( \"ui-state-focus\" );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif ( toggleButton ) {\r\n\t\t\tthis.element.bind( \"change\" + this.eventNamespace, function() {\r\n\t\t\t\tthat.refresh();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( this.type === \"checkbox\" ) {\r\n\t\t\tthis.buttonElement.bind( \"click\" + this.eventNamespace, function() {\r\n\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if ( this.type === \"radio\" ) {\r\n\t\t\tthis.buttonElement.bind( \"click\" + this.eventNamespace, function() {\r\n\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t$( this ).addClass( \"ui-state-active\" );\r\n\t\t\t\tthat.buttonElement.attr( \"aria-pressed\", \"true\" );\r\n\r\n\t\t\t\tvar radio = that.element[ 0 ];\r\n\t\t\t\tradioGroup( radio )\r\n\t\t\t\t\t.not( radio )\r\n\t\t\t\t\t.map(function() {\r\n\t\t\t\t\t\treturn $( this ).button( \"widget\" )[ 0 ];\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.removeClass( \"ui-state-active\" )\r\n\t\t\t\t\t.attr( \"aria-pressed\", \"false\" );\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.buttonElement\r\n\t\t\t\t.bind( \"mousedown\" + this.eventNamespace, function() {\r\n\t\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$( this ).addClass( \"ui-state-active\" );\r\n\t\t\t\t\tlastActive = this;\r\n\t\t\t\t\tthat.document.one( \"mouseup\", function() {\r\n\t\t\t\t\t\tlastActive = null;\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.bind( \"mouseup\" + this.eventNamespace, function() {\r\n\t\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$( this ).removeClass( \"ui-state-active\" );\r\n\t\t\t\t})\r\n\t\t\t\t.bind( \"keydown\" + this.eventNamespace, function(event) {\r\n\t\t\t\t\tif ( options.disabled ) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER ) {\r\n\t\t\t\t\t\t$( this ).addClass( \"ui-state-active\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// see #8559, we bind to blur here in case the button element loses\r\n\t\t\t\t// focus between keydown and keyup, it would be left in an \"active\" state\r\n\t\t\t\t.bind( \"keyup\" + this.eventNamespace + \" blur\" + this.eventNamespace, function() {\r\n\t\t\t\t\t$( this ).removeClass( \"ui-state-active\" );\r\n\t\t\t\t});\r\n\r\n\t\t\tif ( this.buttonElement.is(\"a\") ) {\r\n\t\t\t\tthis.buttonElement.keyup(function(event) {\r\n\t\t\t\t\tif ( event.keyCode === $.ui.keyCode.SPACE ) {\r\n\t\t\t\t\t\t// TODO pass through original event correctly (just as 2nd argument doesn't work)\r\n\t\t\t\t\t\t$( this ).click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO: pull out $.Widget's handling for the disabled option into\r\n\t\t// $.Widget.prototype._setOptionDisabled so it's easy to proxy and can\r\n\t\t// be overridden by individual plugins\r\n\t\tthis._setOption( \"disabled\", options.disabled );\r\n\t\tthis._resetButton();\r\n\t},\r\n\r\n\t_determineButtonType: function() {\r\n\t\tvar ancestor, labelSelector, checked;\r\n\r\n\t\tif ( this.element.is(\"[type=checkbox]\") ) {\r\n\t\t\tthis.type = \"checkbox\";\r\n\t\t} else if ( this.element.is(\"[type=radio]\") ) {\r\n\t\t\tthis.type = \"radio\";\r\n\t\t} else if ( this.element.is(\"input\") ) {\r\n\t\t\tthis.type = \"input\";\r\n\t\t} else {\r\n\t\t\tthis.type = \"button\";\r\n\t\t}\r\n\r\n\t\tif ( this.type === \"checkbox\" || this.type === \"radio\" ) {\r\n\t\t\t// we don't search against the document in case the element\r\n\t\t\t// is disconnected from the DOM\r\n\t\t\tancestor = this.element.parents().last();\r\n\t\t\tlabelSelector = \"label[for='\" + this.element.attr(\"id\") + \"']\";\r\n\t\t\tthis.buttonElement = ancestor.find( labelSelector );\r\n\t\t\tif ( !this.buttonElement.length ) {\r\n\t\t\t\tancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();\r\n\t\t\t\tthis.buttonElement = ancestor.filter( labelSelector );\r\n\t\t\t\tif ( !this.buttonElement.length ) {\r\n\t\t\t\t\tthis.buttonElement = ancestor.find( labelSelector );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.element.addClass( \"ui-helper-hidden-accessible\" );\r\n\r\n\t\t\tchecked = this.element.is( \":checked\" );\r\n\t\t\tif ( checked ) {\r\n\t\t\t\tthis.buttonElement.addClass( \"ui-state-active\" );\r\n\t\t\t}\r\n\t\t\tthis.buttonElement.prop( \"aria-pressed\", checked );\r\n\t\t} else {\r\n\t\t\tthis.buttonElement = this.element;\r\n\t\t}\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.buttonElement;\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element\r\n\t\t\t.removeClass( \"ui-helper-hidden-accessible\" );\r\n\t\tthis.buttonElement\r\n\t\t\t.removeClass( baseClasses + \" ui-state-active \" + typeClasses )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"aria-pressed\" )\r\n\t\t\t.html( this.buttonElement.find(\".ui-button-text\").html() );\r\n\r\n\t\tif ( !this.hasTitle ) {\r\n\t\t\tthis.buttonElement.removeAttr( \"title\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tthis._super( key, value );\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis.element.prop( \"disabled\", !!value );\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis.buttonElement.removeClass( \"ui-state-focus\" );\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._resetButton();\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\t//See #8237 & #8828\r\n\t\tvar isDisabled = this.element.is( \"input, button\" ) ? this.element.is( \":disabled\" ) : this.element.hasClass( \"ui-button-disabled\" );\r\n\r\n\t\tif ( isDisabled !== this.options.disabled ) {\r\n\t\t\tthis._setOption( \"disabled\", isDisabled );\r\n\t\t}\r\n\t\tif ( this.type === \"radio\" ) {\r\n\t\t\tradioGroup( this.element[0] ).each(function() {\r\n\t\t\t\tif ( $( this ).is( \":checked\" ) ) {\r\n\t\t\t\t\t$( this ).button( \"widget\" )\r\n\t\t\t\t\t\t.addClass( \"ui-state-active\" )\r\n\t\t\t\t\t\t.attr( \"aria-pressed\", \"true\" );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$( this ).button( \"widget\" )\r\n\t\t\t\t\t\t.removeClass( \"ui-state-active\" )\r\n\t\t\t\t\t\t.attr( \"aria-pressed\", \"false\" );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if ( this.type === \"checkbox\" ) {\r\n\t\t\tif ( this.element.is( \":checked\" ) ) {\r\n\t\t\t\tthis.buttonElement\r\n\t\t\t\t\t.addClass( \"ui-state-active\" )\r\n\t\t\t\t\t.attr( \"aria-pressed\", \"true\" );\r\n\t\t\t} else {\r\n\t\t\t\tthis.buttonElement\r\n\t\t\t\t\t.removeClass( \"ui-state-active\" )\r\n\t\t\t\t\t.attr( \"aria-pressed\", \"false\" );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_resetButton: function() {\r\n\t\tif ( this.type === \"input\" ) {\r\n\t\t\tif ( this.options.label ) {\r\n\t\t\t\tthis.element.val( this.options.label );\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar buttonElement = this.buttonElement.removeClass( typeClasses ),\r\n\t\t\tbuttonText = $( \"<span></span>\", this.document[0] )\r\n\t\t\t\t.addClass( \"ui-button-text\" )\r\n\t\t\t\t.html( this.options.label )\r\n\t\t\t\t.appendTo( buttonElement.empty() )\r\n\t\t\t\t.text(),\r\n\t\t\ticons = this.options.icons,\r\n\t\t\tmultipleIcons = icons.primary && icons.secondary,\r\n\t\t\tbuttonClasses = [];\r\n\r\n\t\tif ( icons.primary || icons.secondary ) {\r\n\t\t\tif ( this.options.text ) {\r\n\t\t\t\tbuttonClasses.push( \"ui-button-text-icon\" + ( multipleIcons ? \"s\" : ( icons.primary ? \"-primary\" : \"-secondary\" ) ) );\r\n\t\t\t}\r\n\r\n\t\t\tif ( icons.primary ) {\r\n\t\t\t\tbuttonElement.prepend( \"<span class='ui-button-icon-primary ui-icon \" + icons.primary + \"'></span>\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( icons.secondary ) {\r\n\t\t\t\tbuttonElement.append( \"<span class='ui-button-icon-secondary ui-icon \" + icons.secondary + \"'></span>\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !this.options.text ) {\r\n\t\t\t\tbuttonClasses.push( multipleIcons ? \"ui-button-icons-only\" : \"ui-button-icon-only\" );\r\n\r\n\t\t\t\tif ( !this.hasTitle ) {\r\n\t\t\t\t\tbuttonElement.attr( \"title\", $.trim( buttonText ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbuttonClasses.push( \"ui-button-text-only\" );\r\n\t\t}\r\n\t\tbuttonElement.addClass( buttonClasses.join( \" \" ) );\r\n\t}\r\n});\r\n\r\n$.widget( \"ui.buttonset\", {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\titems: \"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)\"\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis.element.addClass( \"ui-buttonset\" );\r\n\t},\r\n\r\n\t_init: function() {\r\n\t\tthis.refresh();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis.buttons.button( \"option\", key, value );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar rtl = this.element.css( \"direction\" ) === \"rtl\";\r\n\r\n\t\tthis.buttons = this.element.find( this.options.items )\r\n\t\t\t.filter( \":ui-button\" )\r\n\t\t\t\t.button( \"refresh\" )\r\n\t\t\t.end()\r\n\t\t\t.not( \":ui-button\" )\r\n\t\t\t\t.button()\r\n\t\t\t.end()\r\n\t\t\t.map(function() {\r\n\t\t\t\treturn $( this ).button( \"widget\" )[ 0 ];\r\n\t\t\t})\r\n\t\t\t\t.removeClass( \"ui-corner-all ui-corner-left ui-corner-right\" )\r\n\t\t\t\t.filter( \":first\" )\r\n\t\t\t\t\t.addClass( rtl ? \"ui-corner-right\" : \"ui-corner-left\" )\r\n\t\t\t\t.end()\r\n\t\t\t\t.filter( \":last\" )\r\n\t\t\t\t\t.addClass( rtl ? \"ui-corner-left\" : \"ui-corner-right\" )\r\n\t\t\t\t.end()\r\n\t\t\t.end();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element.removeClass( \"ui-buttonset\" );\r\n\t\tthis.buttons\r\n\t\t\t.map(function() {\r\n\t\t\t\treturn $( this ).button( \"widget\" )[ 0 ];\r\n\t\t\t})\r\n\t\t\t\t.removeClass( \"ui-corner-left ui-corner-right\" )\r\n\t\t\t.end()\r\n\t\t\t.button( \"destroy\" );\r\n\t}\r\n});\r\n\r\n}( jQuery ) );\r\n\r\n(function( $, undefined ) {\r\n\r\n$.extend($.ui, { datepicker: { version: \"1.10.4\" } });\r\n\r\nvar PROP_NAME = \"datepicker\",\r\n\tinstActive;\r\n\r\n/* Date picker manager.\r\n   Use the singleton instance of this class, $.datepicker, to interact with the date picker.\r\n   Settings for (groups of) date pickers are maintained in an instance object,\r\n   allowing multiple different settings on the same page. */\r\n\r\nfunction Datepicker() {\r\n\tthis._curInst = null; // The current instance in use\r\n\tthis._keyEvent = false; // If the last event was a key event\r\n\tthis._disabledInputs = []; // List of date picker inputs that have been disabled\r\n\tthis._datepickerShowing = false; // True if the popup picker is showing , false if not\r\n\tthis._inDialog = false; // True if showing within a \"dialog\", false if not\r\n\tthis._mainDivId = \"ui-datepicker-div\"; // The ID of the main datepicker division\r\n\tthis._inlineClass = \"ui-datepicker-inline\"; // The name of the inline marker class\r\n\tthis._appendClass = \"ui-datepicker-append\"; // The name of the append marker class\r\n\tthis._triggerClass = \"ui-datepicker-trigger\"; // The name of the trigger marker class\r\n\tthis._dialogClass = \"ui-datepicker-dialog\"; // The name of the dialog marker class\r\n\tthis._disableClass = \"ui-datepicker-disabled\"; // The name of the disabled covering marker class\r\n\tthis._unselectableClass = \"ui-datepicker-unselectable\"; // The name of the unselectable cell marker class\r\n\tthis._currentClass = \"ui-datepicker-current-day\"; // The name of the current day marker class\r\n\tthis._dayOverClass = \"ui-datepicker-days-cell-over\"; // The name of the day hover marker class\r\n\tthis.regional = []; // Available regional settings, indexed by language code\r\n\tthis.regional[\"\"] = { // Default regional settings\r\n\t\tcloseText: \"Done\", // Display text for close link\r\n\t\tprevText: \"Prev\", // Display text for previous month link\r\n\t\tnextText: \"Next\", // Display text for next month link\r\n\t\tcurrentText: \"Today\", // Display text for current month link\r\n\t\tmonthNames: [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n\t\t\t\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"], // Names of months for drop-down and formatting\r\n\t\tmonthNamesShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"], // For formatting\r\n\t\tdayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"], // For formatting\r\n\t\tdayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"], // For formatting\r\n\t\tdayNamesMin: [\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"], // Column headings for days starting at Sunday\r\n\t\tweekHeader: \"Wk\", // Column header for week of the year\r\n\t\tdateFormat: \"mm/dd/yy\", // See format options on parseDate\r\n\t\tfirstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...\r\n\t\tisRTL: false, // True if right-to-left language, false if left-to-right\r\n\t\tshowMonthAfterYear: false, // True if the year select precedes month, false for month then year\r\n\t\tyearSuffix: \"\" // Additional text to append to the year in the month headers\r\n\t};\r\n\tthis._defaults = { // Global defaults for all the date picker instances\r\n\t\tshowOn: \"focus\", // \"focus\" for popup on focus,\r\n\t\t\t// \"button\" for trigger button, or \"both\" for either\r\n\t\tshowAnim: \"fadeIn\", // Name of jQuery animation for popup\r\n\t\tshowOptions: {}, // Options for enhanced animations\r\n\t\tdefaultDate: null, // Used when field is blank: actual date,\r\n\t\t\t// +/-number for offset from today, null for today\r\n\t\tappendText: \"\", // Display text following the input box, e.g. showing the format\r\n\t\tbuttonText: \"...\", // Text for trigger button\r\n\t\tbuttonImage: \"\", // URL for trigger button image\r\n\t\tbuttonImageOnly: false, // True if the image appears alone, false if it appears on a button\r\n\t\thideIfNoPrevNext: false, // True to hide next/previous month links\r\n\t\t\t// if not applicable, false to just disable them\r\n\t\tnavigationAsDateFormat: false, // True if date formatting applied to prev/today/next links\r\n\t\tgotoCurrent: false, // True if today link goes back to current selection instead\r\n\t\tchangeMonth: false, // True if month can be selected directly, false if only prev/next\r\n\t\tchangeYear: false, // True if year can be selected directly, false if only prev/next\r\n\t\tyearRange: \"c-10:c+10\", // Range of years to display in drop-down,\r\n\t\t\t// either relative to today's year (-nn:+nn), relative to currently displayed year\r\n\t\t\t// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)\r\n\t\tshowOtherMonths: false, // True to show dates in other months, false to leave blank\r\n\t\tselectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable\r\n\t\tshowWeek: false, // True to show week of the year, false to not show it\r\n\t\tcalculateWeek: this.iso8601Week, // How to calculate the week of the year,\r\n\t\t\t// takes a Date and returns the number of the week for it\r\n\t\tshortYearCutoff: \"+10\", // Short year values < this are in the current century,\r\n\t\t\t// > this are in the previous century,\r\n\t\t\t// string value starting with \"+\" for current year + value\r\n\t\tminDate: null, // The earliest selectable date, or null for no limit\r\n\t\tmaxDate: null, // The latest selectable date, or null for no limit\r\n\t\tduration: \"fast\", // Duration of display/closure\r\n\t\tbeforeShowDay: null, // Function that takes a date and returns an array with\r\n\t\t\t// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or \"\",\r\n\t\t\t// [2] = cell title (optional), e.g. $.datepicker.noWeekends\r\n\t\tbeforeShow: null, // Function that takes an input field and\r\n\t\t\t// returns a set of custom settings for the date picker\r\n\t\tonSelect: null, // Define a callback function when a date is selected\r\n\t\tonChangeMonthYear: null, // Define a callback function when the month or year is changed\r\n\t\tonClose: null, // Define a callback function when the datepicker is closed\r\n\t\tnumberOfMonths: 1, // Number of months to show at a time\r\n\t\tshowCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)\r\n\t\tstepMonths: 1, // Number of months to step back/forward\r\n\t\tstepBigMonths: 12, // Number of months to step back/forward for the big links\r\n\t\taltField: \"\", // Selector for an alternate field to store selected dates into\r\n\t\taltFormat: \"\", // The date format to use for the alternate field\r\n\t\tconstrainInput: true, // The input is constrained by the current date format\r\n\t\tshowButtonPanel: false, // True to show button panel, false to not show it\r\n\t\tautoSize: false, // True to size the input for the date format, false to leave as is\r\n\t\tdisabled: false // The initial disabled state\r\n\t};\r\n\t$.extend(this._defaults, this.regional[\"\"]);\r\n\tthis.dpDiv = bindHover($(\"<div id='\" + this._mainDivId + \"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"));\r\n}\r\n\r\n$.extend(Datepicker.prototype, {\r\n\t/* Class name added to elements to indicate already configured with a date picker. */\r\n\tmarkerClassName: \"hasDatepicker\",\r\n\r\n\t//Keep track of the maximum number of rows displayed (see #7043)\r\n\tmaxRows: 4,\r\n\r\n\t// TODO rename to \"widget\" when switching to widget factory\r\n\t_widgetDatepicker: function() {\r\n\t\treturn this.dpDiv;\r\n\t},\r\n\r\n\t/* Override the default settings for all instances of the date picker.\r\n\t * @param  settings  object - the new settings to use as defaults (anonymous object)\r\n\t * @return the manager object\r\n\t */\r\n\tsetDefaults: function(settings) {\r\n\t\textendRemove(this._defaults, settings || {});\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/* Attach the date picker to a jQuery selection.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t * @param  settings  object - the new settings to use for this date picker instance (anonymous)\r\n\t */\r\n\t_attachDatepicker: function(target, settings) {\r\n\t\tvar nodeName, inline, inst;\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\tinline = (nodeName === \"div\" || nodeName === \"span\");\r\n\t\tif (!target.id) {\r\n\t\t\tthis.uuid += 1;\r\n\t\t\ttarget.id = \"dp\" + this.uuid;\r\n\t\t}\r\n\t\tinst = this._newInst($(target), inline);\r\n\t\tinst.settings = $.extend({}, settings || {});\r\n\t\tif (nodeName === \"input\") {\r\n\t\t\tthis._connectDatepicker(target, inst);\r\n\t\t} else if (inline) {\r\n\t\t\tthis._inlineDatepicker(target, inst);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Create a new instance object. */\r\n\t_newInst: function(target, inline) {\r\n\t\tvar id = target[0].id.replace(/([^A-Za-z0-9_\\-])/g, \"\\\\\\\\$1\"); // escape jQuery meta chars\r\n\t\treturn {id: id, input: target, // associated target\r\n\t\t\tselectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection\r\n\t\t\tdrawMonth: 0, drawYear: 0, // month being drawn\r\n\t\t\tinline: inline, // is datepicker inline or not\r\n\t\t\tdpDiv: (!inline ? this.dpDiv : // presentation div\r\n\t\t\tbindHover($(\"<div class='\" + this._inlineClass + \" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")))};\r\n\t},\r\n\r\n\t/* Attach the date picker to an input field. */\r\n\t_connectDatepicker: function(target, inst) {\r\n\t\tvar input = $(target);\r\n\t\tinst.append = $([]);\r\n\t\tinst.trigger = $([]);\r\n\t\tif (input.hasClass(this.markerClassName)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._attachments(input, inst);\r\n\t\tinput.addClass(this.markerClassName).keydown(this._doKeyDown).\r\n\t\t\tkeypress(this._doKeyPress).keyup(this._doKeyUp);\r\n\t\tthis._autoSize(inst);\r\n\t\t$.data(target, PROP_NAME, inst);\r\n\t\t//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)\r\n\t\tif( inst.settings.disabled ) {\r\n\t\t\tthis._disableDatepicker( target );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Make attachments based on settings. */\r\n\t_attachments: function(input, inst) {\r\n\t\tvar showOn, buttonText, buttonImage,\r\n\t\t\tappendText = this._get(inst, \"appendText\"),\r\n\t\t\tisRTL = this._get(inst, \"isRTL\");\r\n\r\n\t\tif (inst.append) {\r\n\t\t\tinst.append.remove();\r\n\t\t}\r\n\t\tif (appendText) {\r\n\t\t\tinst.append = $(\"<span class='\" + this._appendClass + \"'>\" + appendText + \"</span>\");\r\n\t\t\tinput[isRTL ? \"before\" : \"after\"](inst.append);\r\n\t\t}\r\n\r\n\t\tinput.unbind(\"focus\", this._showDatepicker);\r\n\r\n\t\tif (inst.trigger) {\r\n\t\t\tinst.trigger.remove();\r\n\t\t}\r\n\r\n\t\tshowOn = this._get(inst, \"showOn\");\r\n\t\tif (showOn === \"focus\" || showOn === \"both\") { // pop-up date picker when in the marked field\r\n\t\t\tinput.focus(this._showDatepicker);\r\n\t\t}\r\n\t\tif (showOn === \"button\" || showOn === \"both\") { // pop-up date picker when button clicked\r\n\t\t\tbuttonText = this._get(inst, \"buttonText\");\r\n\t\t\tbuttonImage = this._get(inst, \"buttonImage\");\r\n\t\t\tinst.trigger = $(this._get(inst, \"buttonImageOnly\") ?\r\n\t\t\t\t$(\"<img/>\").addClass(this._triggerClass).\r\n\t\t\t\t\tattr({ src: buttonImage, alt: buttonText, title: buttonText }) :\r\n\t\t\t\t$(\"<button type='button'></button>\").addClass(this._triggerClass).\r\n\t\t\t\t\thtml(!buttonImage ? buttonText : $(\"<img/>\").attr(\r\n\t\t\t\t\t{ src:buttonImage, alt:buttonText, title:buttonText })));\r\n\t\t\tinput[isRTL ? \"before\" : \"after\"](inst.trigger);\r\n\t\t\tinst.trigger.click(function() {\r\n\t\t\t\tif ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {\r\n\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t} else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {\r\n\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t\t$.datepicker._showDatepicker(input[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.datepicker._showDatepicker(input[0]);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/* Apply the maximum length for the date format. */\r\n\t_autoSize: function(inst) {\r\n\t\tif (this._get(inst, \"autoSize\") && !inst.inline) {\r\n\t\t\tvar findMax, max, maxI, i,\r\n\t\t\t\tdate = new Date(2009, 12 - 1, 20), // Ensure double digits\r\n\t\t\t\tdateFormat = this._get(inst, \"dateFormat\");\r\n\r\n\t\t\tif (dateFormat.match(/[DM]/)) {\r\n\t\t\t\tfindMax = function(names) {\r\n\t\t\t\t\tmax = 0;\r\n\t\t\t\t\tmaxI = 0;\r\n\t\t\t\t\tfor (i = 0; i < names.length; i++) {\r\n\t\t\t\t\t\tif (names[i].length > max) {\r\n\t\t\t\t\t\t\tmax = names[i].length;\r\n\t\t\t\t\t\t\tmaxI = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn maxI;\r\n\t\t\t\t};\r\n\t\t\t\tdate.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?\r\n\t\t\t\t\t\"monthNames\" : \"monthNamesShort\"))));\r\n\t\t\t\tdate.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?\r\n\t\t\t\t\t\"dayNames\" : \"dayNamesShort\"))) + 20 - date.getDay());\r\n\t\t\t}\r\n\t\t\tinst.input.attr(\"size\", this._formatDate(inst, date).length);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Attach an inline date picker to a div. */\r\n\t_inlineDatepicker: function(target, inst) {\r\n\t\tvar divSpan = $(target);\r\n\t\tif (divSpan.hasClass(this.markerClassName)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdivSpan.addClass(this.markerClassName).append(inst.dpDiv);\r\n\t\t$.data(target, PROP_NAME, inst);\r\n\t\tthis._setDate(inst, this._getDefaultDate(inst), true);\r\n\t\tthis._updateDatepicker(inst);\r\n\t\tthis._updateAlternate(inst);\r\n\t\t//If disabled option is true, disable the datepicker before showing it (see ticket #5665)\r\n\t\tif( inst.settings.disabled ) {\r\n\t\t\tthis._disableDatepicker( target );\r\n\t\t}\r\n\t\t// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements\r\n\t\t// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height\r\n\t\tinst.dpDiv.css( \"display\", \"block\" );\r\n\t},\r\n\r\n\t/* Pop-up the date picker in a \"dialog\" box.\r\n\t * @param  input element - ignored\r\n\t * @param  date\tstring or Date - the initial date to display\r\n\t * @param  onSelect  function - the function to call when a date is selected\r\n\t * @param  settings  object - update the dialog date picker instance's settings (anonymous object)\r\n\t * @param  pos int[2] - coordinates for the dialog's position within the screen or\r\n\t *\t\t\t\t\tevent - with x/y coordinates or\r\n\t *\t\t\t\t\tleave empty for default (screen centre)\r\n\t * @return the manager object\r\n\t */\r\n\t_dialogDatepicker: function(input, date, onSelect, settings, pos) {\r\n\t\tvar id, browserWidth, browserHeight, scrollX, scrollY,\r\n\t\t\tinst = this._dialogInst; // internal instance\r\n\r\n\t\tif (!inst) {\r\n\t\t\tthis.uuid += 1;\r\n\t\t\tid = \"dp\" + this.uuid;\r\n\t\t\tthis._dialogInput = $(\"<input type='text' id='\" + id +\r\n\t\t\t\t\"' style='position: absolute; top: -100px; width: 0px;'/>\");\r\n\t\t\tthis._dialogInput.keydown(this._doKeyDown);\r\n\t\t\t$(\"body\").append(this._dialogInput);\r\n\t\t\tinst = this._dialogInst = this._newInst(this._dialogInput, false);\r\n\t\t\tinst.settings = {};\r\n\t\t\t$.data(this._dialogInput[0], PROP_NAME, inst);\r\n\t\t}\r\n\t\textendRemove(inst.settings, settings || {});\r\n\t\tdate = (date && date.constructor === Date ? this._formatDate(inst, date) : date);\r\n\t\tthis._dialogInput.val(date);\r\n\r\n\t\tthis._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);\r\n\t\tif (!this._pos) {\r\n\t\t\tbrowserWidth = document.documentElement.clientWidth;\r\n\t\t\tbrowserHeight = document.documentElement.clientHeight;\r\n\t\t\tscrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\r\n\t\t\tscrollY = document.documentElement.scrollTop || document.body.scrollTop;\r\n\t\t\tthis._pos = // should use actual width/height below\r\n\t\t\t\t[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];\r\n\t\t}\r\n\r\n\t\t// move input on screen for focus, but hidden behind dialog\r\n\t\tthis._dialogInput.css(\"left\", (this._pos[0] + 20) + \"px\").css(\"top\", this._pos[1] + \"px\");\r\n\t\tinst.settings.onSelect = onSelect;\r\n\t\tthis._inDialog = true;\r\n\t\tthis.dpDiv.addClass(this._dialogClass);\r\n\t\tthis._showDatepicker(this._dialogInput[0]);\r\n\t\tif ($.blockUI) {\r\n\t\t\t$.blockUI(this.dpDiv);\r\n\t\t}\r\n\t\t$.data(this._dialogInput[0], PROP_NAME, inst);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/* Detach a datepicker from its control.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t */\r\n\t_destroyDatepicker: function(target) {\r\n\t\tvar nodeName,\r\n\t\t\t$target = $(target),\r\n\t\t\tinst = $.data(target, PROP_NAME);\r\n\r\n\t\tif (!$target.hasClass(this.markerClassName)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\t$.removeData(target, PROP_NAME);\r\n\t\tif (nodeName === \"input\") {\r\n\t\t\tinst.append.remove();\r\n\t\t\tinst.trigger.remove();\r\n\t\t\t$target.removeClass(this.markerClassName).\r\n\t\t\t\tunbind(\"focus\", this._showDatepicker).\r\n\t\t\t\tunbind(\"keydown\", this._doKeyDown).\r\n\t\t\t\tunbind(\"keypress\", this._doKeyPress).\r\n\t\t\t\tunbind(\"keyup\", this._doKeyUp);\r\n\t\t} else if (nodeName === \"div\" || nodeName === \"span\") {\r\n\t\t\t$target.removeClass(this.markerClassName).empty();\r\n\t\t}\r\n\t},\r\n\r\n\t/* Enable the date picker to a jQuery selection.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t */\r\n\t_enableDatepicker: function(target) {\r\n\t\tvar nodeName, inline,\r\n\t\t\t$target = $(target),\r\n\t\t\tinst = $.data(target, PROP_NAME);\r\n\r\n\t\tif (!$target.hasClass(this.markerClassName)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\tif (nodeName === \"input\") {\r\n\t\t\ttarget.disabled = false;\r\n\t\t\tinst.trigger.filter(\"button\").\r\n\t\t\t\teach(function() { this.disabled = false; }).end().\r\n\t\t\t\tfilter(\"img\").css({opacity: \"1.0\", cursor: \"\"});\r\n\t\t} else if (nodeName === \"div\" || nodeName === \"span\") {\r\n\t\t\tinline = $target.children(\".\" + this._inlineClass);\r\n\t\t\tinline.children().removeClass(\"ui-state-disabled\");\r\n\t\t\tinline.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").\r\n\t\t\t\tprop(\"disabled\", false);\r\n\t\t}\r\n\t\tthis._disabledInputs = $.map(this._disabledInputs,\r\n\t\t\tfunction(value) { return (value === target ? null : value); }); // delete entry\r\n\t},\r\n\r\n\t/* Disable the date picker to a jQuery selection.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t */\r\n\t_disableDatepicker: function(target) {\r\n\t\tvar nodeName, inline,\r\n\t\t\t$target = $(target),\r\n\t\t\tinst = $.data(target, PROP_NAME);\r\n\r\n\t\tif (!$target.hasClass(this.markerClassName)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\tif (nodeName === \"input\") {\r\n\t\t\ttarget.disabled = true;\r\n\t\t\tinst.trigger.filter(\"button\").\r\n\t\t\t\teach(function() { this.disabled = true; }).end().\r\n\t\t\t\tfilter(\"img\").css({opacity: \"0.5\", cursor: \"default\"});\r\n\t\t} else if (nodeName === \"div\" || nodeName === \"span\") {\r\n\t\t\tinline = $target.children(\".\" + this._inlineClass);\r\n\t\t\tinline.children().addClass(\"ui-state-disabled\");\r\n\t\t\tinline.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").\r\n\t\t\t\tprop(\"disabled\", true);\r\n\t\t}\r\n\t\tthis._disabledInputs = $.map(this._disabledInputs,\r\n\t\t\tfunction(value) { return (value === target ? null : value); }); // delete entry\r\n\t\tthis._disabledInputs[this._disabledInputs.length] = target;\r\n\t},\r\n\r\n\t/* Is the first field in a jQuery collection disabled as a datepicker?\r\n\t * @param  target\telement - the target input field or division or span\r\n\t * @return boolean - true if disabled, false if enabled\r\n\t */\r\n\t_isDisabledDatepicker: function(target) {\r\n\t\tif (!target) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (var i = 0; i < this._disabledInputs.length; i++) {\r\n\t\t\tif (this._disabledInputs[i] === target) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/* Retrieve the instance data for the target control.\r\n\t * @param  target  element - the target input field or division or span\r\n\t * @return  object - the associated instance data\r\n\t * @throws  error if a jQuery problem getting data\r\n\t */\r\n\t_getInst: function(target) {\r\n\t\ttry {\r\n\t\t\treturn $.data(target, PROP_NAME);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tthrow \"Missing instance data for this datepicker\";\r\n\t\t}\r\n\t},\r\n\r\n\t/* Update or retrieve the settings for a date picker attached to an input field or division.\r\n\t * @param  target  element - the target input field or division or span\r\n\t * @param  name\tobject - the new settings to update or\r\n\t *\t\t\t\tstring - the name of the setting to change or retrieve,\r\n\t *\t\t\t\twhen retrieving also \"all\" for all instance settings or\r\n\t *\t\t\t\t\"defaults\" for all global defaults\r\n\t * @param  value   any - the new value for the setting\r\n\t *\t\t\t\t(omit if above is an object or to retrieve a value)\r\n\t */\r\n\t_optionDatepicker: function(target, name, value) {\r\n\t\tvar settings, date, minDate, maxDate,\r\n\t\t\tinst = this._getInst(target);\r\n\r\n\t\tif (arguments.length === 2 && typeof name === \"string\") {\r\n\t\t\treturn (name === \"defaults\" ? $.extend({}, $.datepicker._defaults) :\r\n\t\t\t\t(inst ? (name === \"all\" ? $.extend({}, inst.settings) :\r\n\t\t\t\tthis._get(inst, name)) : null));\r\n\t\t}\r\n\r\n\t\tsettings = name || {};\r\n\t\tif (typeof name === \"string\") {\r\n\t\t\tsettings = {};\r\n\t\t\tsettings[name] = value;\r\n\t\t}\r\n\r\n\t\tif (inst) {\r\n\t\t\tif (this._curInst === inst) {\r\n\t\t\t\tthis._hideDatepicker();\r\n\t\t\t}\r\n\r\n\t\t\tdate = this._getDateDatepicker(target, true);\r\n\t\t\tminDate = this._getMinMaxDate(inst, \"min\");\r\n\t\t\tmaxDate = this._getMinMaxDate(inst, \"max\");\r\n\t\t\textendRemove(inst.settings, settings);\r\n\t\t\t// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided\r\n\t\t\tif (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {\r\n\t\t\t\tinst.settings.minDate = this._formatDate(inst, minDate);\r\n\t\t\t}\r\n\t\t\tif (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {\r\n\t\t\t\tinst.settings.maxDate = this._formatDate(inst, maxDate);\r\n\t\t\t}\r\n\t\t\tif ( \"disabled\" in settings ) {\r\n\t\t\t\tif ( settings.disabled ) {\r\n\t\t\t\t\tthis._disableDatepicker(target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._enableDatepicker(target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._attachments($(target), inst);\r\n\t\t\tthis._autoSize(inst);\r\n\t\t\tthis._setDate(inst, date);\r\n\t\t\tthis._updateAlternate(inst);\r\n\t\t\tthis._updateDatepicker(inst);\r\n\t\t}\r\n\t},\r\n\r\n\t// change method deprecated\r\n\t_changeDatepicker: function(target, name, value) {\r\n\t\tthis._optionDatepicker(target, name, value);\r\n\t},\r\n\r\n\t/* Redraw the date picker attached to an input field or division.\r\n\t * @param  target  element - the target input field or division or span\r\n\t */\r\n\t_refreshDatepicker: function(target) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (inst) {\r\n\t\t\tthis._updateDatepicker(inst);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Set the dates for a jQuery selection.\r\n\t * @param  target element - the target input field or division or span\r\n\t * @param  date\tDate - the new date\r\n\t */\r\n\t_setDateDatepicker: function(target, date) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (inst) {\r\n\t\t\tthis._setDate(inst, date);\r\n\t\t\tthis._updateDatepicker(inst);\r\n\t\t\tthis._updateAlternate(inst);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Get the date(s) for the first entry in a jQuery selection.\r\n\t * @param  target element - the target input field or division or span\r\n\t * @param  noDefault boolean - true if no default date is to be used\r\n\t * @return Date - the current date\r\n\t */\r\n\t_getDateDatepicker: function(target, noDefault) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (inst && !inst.inline) {\r\n\t\t\tthis._setDateFromField(inst, noDefault);\r\n\t\t}\r\n\t\treturn (inst ? this._getDate(inst) : null);\r\n\t},\r\n\r\n\t/* Handle keystrokes. */\r\n\t_doKeyDown: function(event) {\r\n\t\tvar onSelect, dateStr, sel,\r\n\t\t\tinst = $.datepicker._getInst(event.target),\r\n\t\t\thandled = true,\r\n\t\t\tisRTL = inst.dpDiv.is(\".ui-datepicker-rtl\");\r\n\r\n\t\tinst._keyEvent = true;\r\n\t\tif ($.datepicker._datepickerShowing) {\r\n\t\t\tswitch (event.keyCode) {\r\n\t\t\t\tcase 9: $.datepicker._hideDatepicker();\r\n\t\t\t\t\t\thandled = false;\r\n\t\t\t\t\t\tbreak; // hide on tab out\r\n\t\t\t\tcase 13: sel = $(\"td.\" + $.datepicker._dayOverClass + \":not(.\" +\r\n\t\t\t\t\t\t\t\t\t$.datepicker._currentClass + \")\", inst.dpDiv);\r\n\t\t\t\t\t\tif (sel[0]) {\r\n\t\t\t\t\t\t\t$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tonSelect = $.datepicker._get(inst, \"onSelect\");\r\n\t\t\t\t\t\tif (onSelect) {\r\n\t\t\t\t\t\t\tdateStr = $.datepicker._formatDate(inst);\r\n\r\n\t\t\t\t\t\t\t// trigger custom callback\r\n\t\t\t\t\t\t\tonSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn false; // don't submit the form\r\n\t\t\t\tcase 27: $.datepicker._hideDatepicker();\r\n\t\t\t\t\t\tbreak; // hide on escape\r\n\t\t\t\tcase 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?\r\n\t\t\t\t\t\t\t-$.datepicker._get(inst, \"stepBigMonths\") :\r\n\t\t\t\t\t\t\t-$.datepicker._get(inst, \"stepMonths\")), \"M\");\r\n\t\t\t\t\t\tbreak; // previous month/year on page up/+ ctrl\r\n\t\t\t\tcase 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?\r\n\t\t\t\t\t\t\t+$.datepicker._get(inst, \"stepBigMonths\") :\r\n\t\t\t\t\t\t\t+$.datepicker._get(inst, \"stepMonths\")), \"M\");\r\n\t\t\t\t\t\tbreak; // next month/year on page down/+ ctrl\r\n\t\t\t\tcase 35: if (event.ctrlKey || event.metaKey) {\r\n\t\t\t\t\t\t\t$.datepicker._clearDate(event.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // clear on ctrl or command +end\r\n\t\t\t\tcase 36: if (event.ctrlKey || event.metaKey) {\r\n\t\t\t\t\t\t\t$.datepicker._gotoToday(event.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // current on ctrl or command +home\r\n\t\t\t\tcase 37: if (event.ctrlKey || event.metaKey) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), \"D\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\t// -1 day on ctrl or command +left\r\n\t\t\t\t\t\tif (event.originalEvent.altKey) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate(event.target, (event.ctrlKey ?\r\n\t\t\t\t\t\t\t\t-$.datepicker._get(inst, \"stepBigMonths\") :\r\n\t\t\t\t\t\t\t\t-$.datepicker._get(inst, \"stepMonths\")), \"M\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// next month/year on alt +left on Mac\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase 38: if (event.ctrlKey || event.metaKey) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate(event.target, -7, \"D\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // -1 week on ctrl or command +up\r\n\t\t\t\tcase 39: if (event.ctrlKey || event.metaKey) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), \"D\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\t// +1 day on ctrl or command +right\r\n\t\t\t\t\t\tif (event.originalEvent.altKey) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate(event.target, (event.ctrlKey ?\r\n\t\t\t\t\t\t\t\t+$.datepicker._get(inst, \"stepBigMonths\") :\r\n\t\t\t\t\t\t\t\t+$.datepicker._get(inst, \"stepMonths\")), \"M\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// next month/year on alt +right\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase 40: if (event.ctrlKey || event.metaKey) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate(event.target, +7, \"D\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // +1 week on ctrl or command +down\r\n\t\t\t\tdefault: handled = false;\r\n\t\t\t}\r\n\t\t} else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home\r\n\t\t\t$.datepicker._showDatepicker(this);\r\n\t\t} else {\r\n\t\t\thandled = false;\r\n\t\t}\r\n\r\n\t\tif (handled) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t},\r\n\r\n\t/* Filter entered characters - based on date format. */\r\n\t_doKeyPress: function(event) {\r\n\t\tvar chars, chr,\r\n\t\t\tinst = $.datepicker._getInst(event.target);\r\n\r\n\t\tif ($.datepicker._get(inst, \"constrainInput\")) {\r\n\t\t\tchars = $.datepicker._possibleChars($.datepicker._get(inst, \"dateFormat\"));\r\n\t\t\tchr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);\r\n\t\t\treturn event.ctrlKey || event.metaKey || (chr < \" \" || !chars || chars.indexOf(chr) > -1);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Synchronise manual entry and field/alternate field. */\r\n\t_doKeyUp: function(event) {\r\n\t\tvar date,\r\n\t\t\tinst = $.datepicker._getInst(event.target);\r\n\r\n\t\tif (inst.input.val() !== inst.lastVal) {\r\n\t\t\ttry {\r\n\t\t\t\tdate = $.datepicker.parseDate($.datepicker._get(inst, \"dateFormat\"),\r\n\t\t\t\t\t(inst.input ? inst.input.val() : null),\r\n\t\t\t\t\t$.datepicker._getFormatConfig(inst));\r\n\r\n\t\t\t\tif (date) { // only if valid\r\n\t\t\t\t\t$.datepicker._setDateFromField(inst);\r\n\t\t\t\t\t$.datepicker._updateAlternate(inst);\r\n\t\t\t\t\t$.datepicker._updateDatepicker(inst);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/* Pop-up the date picker for a given input field.\r\n\t * If false returned from beforeShow event handler do not show.\r\n\t * @param  input  element - the input field attached to the date picker or\r\n\t *\t\t\t\t\tevent - if triggered by focus\r\n\t */\r\n\t_showDatepicker: function(input) {\r\n\t\tinput = input.target || input;\r\n\t\tif (input.nodeName.toLowerCase() !== \"input\") { // find from button/image trigger\r\n\t\t\tinput = $(\"input\", input.parentNode)[0];\r\n\t\t}\r\n\r\n\t\tif ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar inst, beforeShow, beforeShowSettings, isFixed,\r\n\t\t\toffset, showAnim, duration;\r\n\r\n\t\tinst = $.datepicker._getInst(input);\r\n\t\tif ($.datepicker._curInst && $.datepicker._curInst !== inst) {\r\n\t\t\t$.datepicker._curInst.dpDiv.stop(true, true);\r\n\t\t\tif ( inst && $.datepicker._datepickerShowing ) {\r\n\t\t\t\t$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbeforeShow = $.datepicker._get(inst, \"beforeShow\");\r\n\t\tbeforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};\r\n\t\tif(beforeShowSettings === false){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\textendRemove(inst.settings, beforeShowSettings);\r\n\r\n\t\tinst.lastVal = null;\r\n\t\t$.datepicker._lastInput = input;\r\n\t\t$.datepicker._setDateFromField(inst);\r\n\r\n\t\tif ($.datepicker._inDialog) { // hide cursor\r\n\t\t\tinput.value = \"\";\r\n\t\t}\r\n\t\tif (!$.datepicker._pos) { // position below input\r\n\t\t\t$.datepicker._pos = $.datepicker._findPos(input);\r\n\t\t\t$.datepicker._pos[1] += input.offsetHeight; // add the height\r\n\t\t}\r\n\r\n\t\tisFixed = false;\r\n\t\t$(input).parents().each(function() {\r\n\t\t\tisFixed |= $(this).css(\"position\") === \"fixed\";\r\n\t\t\treturn !isFixed;\r\n\t\t});\r\n\r\n\t\toffset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};\r\n\t\t$.datepicker._pos = null;\r\n\t\t//to avoid flashes on Firefox\r\n\t\tinst.dpDiv.empty();\r\n\t\t// determine sizing offscreen\r\n\t\tinst.dpDiv.css({position: \"absolute\", display: \"block\", top: \"-1000px\"});\r\n\t\t$.datepicker._updateDatepicker(inst);\r\n\t\t// fix width for dynamic number of date pickers\r\n\t\t// and adjust position before showing\r\n\t\toffset = $.datepicker._checkOffset(inst, offset, isFixed);\r\n\t\tinst.dpDiv.css({position: ($.datepicker._inDialog && $.blockUI ?\r\n\t\t\t\"static\" : (isFixed ? \"fixed\" : \"absolute\")), display: \"none\",\r\n\t\t\tleft: offset.left + \"px\", top: offset.top + \"px\"});\r\n\r\n\t\tif (!inst.inline) {\r\n\t\t\tshowAnim = $.datepicker._get(inst, \"showAnim\");\r\n\t\t\tduration = $.datepicker._get(inst, \"duration\");\r\n\t\t\tinst.dpDiv.zIndex($(input).zIndex()+1);\r\n\t\t\t$.datepicker._datepickerShowing = true;\r\n\r\n\t\t\tif ( $.effects && $.effects.effect[ showAnim ] ) {\r\n\t\t\t\tinst.dpDiv.show(showAnim, $.datepicker._get(inst, \"showOptions\"), duration);\r\n\t\t\t} else {\r\n\t\t\t\tinst.dpDiv[showAnim || \"show\"](showAnim ? duration : null);\r\n\t\t\t}\r\n\r\n\t\t\tif ( $.datepicker._shouldFocusInput( inst ) ) {\r\n\t\t\t\tinst.input.focus();\r\n\t\t\t}\r\n\r\n\t\t\t$.datepicker._curInst = inst;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Generate the date picker content. */\r\n\t_updateDatepicker: function(inst) {\r\n\t\tthis.maxRows = 4; //Reset the max number of rows being displayed (see #7043)\r\n\t\tinstActive = inst; // for delegate hover events\r\n\t\tinst.dpDiv.empty().append(this._generateHTML(inst));\r\n\t\tthis._attachHandlers(inst);\r\n\t\tinst.dpDiv.find(\".\" + this._dayOverClass + \" a\").mouseover();\r\n\r\n\t\tvar origyearshtml,\r\n\t\t\tnumMonths = this._getNumberOfMonths(inst),\r\n\t\t\tcols = numMonths[1],\r\n\t\t\twidth = 17;\r\n\r\n\t\tinst.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\");\r\n\t\tif (cols > 1) {\r\n\t\t\tinst.dpDiv.addClass(\"ui-datepicker-multi-\" + cols).css(\"width\", (width * cols) + \"em\");\r\n\t\t}\r\n\t\tinst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? \"add\" : \"remove\") +\r\n\t\t\t\"Class\"](\"ui-datepicker-multi\");\r\n\t\tinst.dpDiv[(this._get(inst, \"isRTL\") ? \"add\" : \"remove\") +\r\n\t\t\t\"Class\"](\"ui-datepicker-rtl\");\r\n\r\n\t\tif (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {\r\n\t\t\tinst.input.focus();\r\n\t\t}\r\n\r\n\t\t// deffered render of the years select (to avoid flashes on Firefox)\r\n\t\tif( inst.yearshtml ){\r\n\t\t\torigyearshtml = inst.yearshtml;\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\t//assure that inst.yearshtml didn't change.\r\n\t\t\t\tif( origyearshtml === inst.yearshtml && inst.yearshtml ){\r\n\t\t\t\t\tinst.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(inst.yearshtml);\r\n\t\t\t\t}\r\n\t\t\t\torigyearshtml = inst.yearshtml = null;\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t},\r\n\r\n\t// #6694 - don't focus the input if it's already focused\r\n\t// this breaks the change event in IE\r\n\t// Support: IE and jQuery <1.9\r\n\t_shouldFocusInput: function( inst ) {\r\n\t\treturn inst.input && inst.input.is( \":visible\" ) && !inst.input.is( \":disabled\" ) && !inst.input.is( \":focus\" );\r\n\t},\r\n\r\n\t/* Check positioning to remain on screen. */\r\n\t_checkOffset: function(inst, offset, isFixed) {\r\n\t\tvar dpWidth = inst.dpDiv.outerWidth(),\r\n\t\t\tdpHeight = inst.dpDiv.outerHeight(),\r\n\t\t\tinputWidth = inst.input ? inst.input.outerWidth() : 0,\r\n\t\t\tinputHeight = inst.input ? inst.input.outerHeight() : 0,\r\n\t\t\tviewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),\r\n\t\t\tviewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());\r\n\r\n\t\toffset.left -= (this._get(inst, \"isRTL\") ? (dpWidth - inputWidth) : 0);\r\n\t\toffset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;\r\n\t\toffset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;\r\n\r\n\t\t// now check if datepicker is showing outside window viewport - move to a better place if so.\r\n\t\toffset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n\t\t\tMath.abs(offset.left + dpWidth - viewWidth) : 0);\r\n\t\toffset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n\t\t\tMath.abs(dpHeight + inputHeight) : 0);\r\n\r\n\t\treturn offset;\r\n\t},\r\n\r\n\t/* Find an object's position on the screen. */\r\n\t_findPos: function(obj) {\r\n\t\tvar position,\r\n\t\t\tinst = this._getInst(obj),\r\n\t\t\tisRTL = this._get(inst, \"isRTL\");\r\n\r\n\t\twhile (obj && (obj.type === \"hidden\" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {\r\n\t\t\tobj = obj[isRTL ? \"previousSibling\" : \"nextSibling\"];\r\n\t\t}\r\n\r\n\t\tposition = $(obj).offset();\r\n\t\treturn [position.left, position.top];\r\n\t},\r\n\r\n\t/* Hide the date picker from view.\r\n\t * @param  input  element - the input field attached to the date picker\r\n\t */\r\n\t_hideDatepicker: function(input) {\r\n\t\tvar showAnim, duration, postProcess, onClose,\r\n\t\t\tinst = this._curInst;\r\n\r\n\t\tif (!inst || (input && inst !== $.data(input, PROP_NAME))) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._datepickerShowing) {\r\n\t\t\tshowAnim = this._get(inst, \"showAnim\");\r\n\t\t\tduration = this._get(inst, \"duration\");\r\n\t\t\tpostProcess = function() {\r\n\t\t\t\t$.datepicker._tidyDialog(inst);\r\n\t\t\t};\r\n\r\n\t\t\t// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed\r\n\t\t\tif ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {\r\n\t\t\t\tinst.dpDiv.hide(showAnim, $.datepicker._get(inst, \"showOptions\"), duration, postProcess);\r\n\t\t\t} else {\r\n\t\t\t\tinst.dpDiv[(showAnim === \"slideDown\" ? \"slideUp\" :\r\n\t\t\t\t\t(showAnim === \"fadeIn\" ? \"fadeOut\" : \"hide\"))]((showAnim ? duration : null), postProcess);\r\n\t\t\t}\r\n\r\n\t\t\tif (!showAnim) {\r\n\t\t\t\tpostProcess();\r\n\t\t\t}\r\n\t\t\tthis._datepickerShowing = false;\r\n\r\n\t\t\tonClose = this._get(inst, \"onClose\");\r\n\t\t\tif (onClose) {\r\n\t\t\t\tonClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : \"\"), inst]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._lastInput = null;\r\n\t\t\tif (this._inDialog) {\r\n\t\t\t\tthis._dialogInput.css({ position: \"absolute\", left: \"0\", top: \"-100px\" });\r\n\t\t\t\tif ($.blockUI) {\r\n\t\t\t\t\t$.unblockUI();\r\n\t\t\t\t\t$(\"body\").append(this.dpDiv);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._inDialog = false;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Tidy up after a dialog display. */\r\n\t_tidyDialog: function(inst) {\r\n\t\tinst.dpDiv.removeClass(this._dialogClass).unbind(\".ui-datepicker-calendar\");\r\n\t},\r\n\r\n\t/* Close date picker if clicked elsewhere. */\r\n\t_checkExternalClick: function(event) {\r\n\t\tif (!$.datepicker._curInst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar $target = $(event.target),\r\n\t\t\tinst = $.datepicker._getInst($target[0]);\r\n\r\n\t\tif ( ( ( $target[0].id !== $.datepicker._mainDivId &&\r\n\t\t\t\t$target.parents(\"#\" + $.datepicker._mainDivId).length === 0 &&\r\n\t\t\t\t!$target.hasClass($.datepicker.markerClassName) &&\r\n\t\t\t\t!$target.closest(\".\" + $.datepicker._triggerClass).length &&\r\n\t\t\t\t$.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) ) ) ||\r\n\t\t\t( $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst ) ) {\r\n\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t}\r\n\t},\r\n\r\n\t/* Adjust one of the date sub-fields. */\r\n\t_adjustDate: function(id, offset, period) {\r\n\t\tvar target = $(id),\r\n\t\t\tinst = this._getInst(target[0]);\r\n\r\n\t\tif (this._isDisabledDatepicker(target[0])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._adjustInstDate(inst, offset +\r\n\t\t\t(period === \"M\" ? this._get(inst, \"showCurrentAtPos\") : 0), // undo positioning\r\n\t\t\tperiod);\r\n\t\tthis._updateDatepicker(inst);\r\n\t},\r\n\r\n\t/* Action for current link. */\r\n\t_gotoToday: function(id) {\r\n\t\tvar date,\r\n\t\t\ttarget = $(id),\r\n\t\t\tinst = this._getInst(target[0]);\r\n\r\n\t\tif (this._get(inst, \"gotoCurrent\") && inst.currentDay) {\r\n\t\t\tinst.selectedDay = inst.currentDay;\r\n\t\t\tinst.drawMonth = inst.selectedMonth = inst.currentMonth;\r\n\t\t\tinst.drawYear = inst.selectedYear = inst.currentYear;\r\n\t\t} else {\r\n\t\t\tdate = new Date();\r\n\t\t\tinst.selectedDay = date.getDate();\r\n\t\t\tinst.drawMonth = inst.selectedMonth = date.getMonth();\r\n\t\t\tinst.drawYear = inst.selectedYear = date.getFullYear();\r\n\t\t}\r\n\t\tthis._notifyChange(inst);\r\n\t\tthis._adjustDate(target);\r\n\t},\r\n\r\n\t/* Action for selecting a new month/year. */\r\n\t_selectMonthYear: function(id, select, period) {\r\n\t\tvar target = $(id),\r\n\t\t\tinst = this._getInst(target[0]);\r\n\r\n\t\tinst[\"selected\" + (period === \"M\" ? \"Month\" : \"Year\")] =\r\n\t\tinst[\"draw\" + (period === \"M\" ? \"Month\" : \"Year\")] =\r\n\t\t\tparseInt(select.options[select.selectedIndex].value,10);\r\n\r\n\t\tthis._notifyChange(inst);\r\n\t\tthis._adjustDate(target);\r\n\t},\r\n\r\n\t/* Action for selecting a day. */\r\n\t_selectDay: function(id, month, year, td) {\r\n\t\tvar inst,\r\n\t\t\ttarget = $(id);\r\n\r\n\t\tif ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tinst = this._getInst(target[0]);\r\n\t\tinst.selectedDay = inst.currentDay = $(\"a\", td).html();\r\n\t\tinst.selectedMonth = inst.currentMonth = month;\r\n\t\tinst.selectedYear = inst.currentYear = year;\r\n\t\tthis._selectDate(id, this._formatDate(inst,\r\n\t\t\tinst.currentDay, inst.currentMonth, inst.currentYear));\r\n\t},\r\n\r\n\t/* Erase the input field and hide the date picker. */\r\n\t_clearDate: function(id) {\r\n\t\tvar target = $(id);\r\n\t\tthis._selectDate(target, \"\");\r\n\t},\r\n\r\n\t/* Update the input field with the selected date. */\r\n\t_selectDate: function(id, dateStr) {\r\n\t\tvar onSelect,\r\n\t\t\ttarget = $(id),\r\n\t\t\tinst = this._getInst(target[0]);\r\n\r\n\t\tdateStr = (dateStr != null ? dateStr : this._formatDate(inst));\r\n\t\tif (inst.input) {\r\n\t\t\tinst.input.val(dateStr);\r\n\t\t}\r\n\t\tthis._updateAlternate(inst);\r\n\r\n\t\tonSelect = this._get(inst, \"onSelect\");\r\n\t\tif (onSelect) {\r\n\t\t\tonSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback\r\n\t\t} else if (inst.input) {\r\n\t\t\tinst.input.trigger(\"change\"); // fire the change event\r\n\t\t}\r\n\r\n\t\tif (inst.inline){\r\n\t\t\tthis._updateDatepicker(inst);\r\n\t\t} else {\r\n\t\t\tthis._hideDatepicker();\r\n\t\t\tthis._lastInput = inst.input[0];\r\n\t\t\tif (typeof(inst.input[0]) !== \"object\") {\r\n\t\t\t\tinst.input.focus(); // restore focus\r\n\t\t\t}\r\n\t\t\tthis._lastInput = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Update any alternate field to synchronise with the main field. */\r\n\t_updateAlternate: function(inst) {\r\n\t\tvar altFormat, date, dateStr,\r\n\t\t\taltField = this._get(inst, \"altField\");\r\n\r\n\t\tif (altField) { // update alternate field too\r\n\t\t\taltFormat = this._get(inst, \"altFormat\") || this._get(inst, \"dateFormat\");\r\n\t\t\tdate = this._getDate(inst);\r\n\t\t\tdateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));\r\n\t\t\t$(altField).each(function() { $(this).val(dateStr); });\r\n\t\t}\r\n\t},\r\n\r\n\t/* Set as beforeShowDay function to prevent selection of weekends.\r\n\t * @param  date  Date - the date to customise\r\n\t * @return [boolean, string] - is this date selectable?, what is its CSS class?\r\n\t */\r\n\tnoWeekends: function(date) {\r\n\t\tvar day = date.getDay();\r\n\t\treturn [(day > 0 && day < 6), \"\"];\r\n\t},\r\n\r\n\t/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.\r\n\t * @param  date  Date - the date to get the week for\r\n\t * @return  number - the number of the week within the year that contains this date\r\n\t */\r\n\tiso8601Week: function(date) {\r\n\t\tvar time,\r\n\t\t\tcheckDate = new Date(date.getTime());\r\n\r\n\t\t// Find Thursday of this week starting on Monday\r\n\t\tcheckDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\r\n\r\n\t\ttime = checkDate.getTime();\r\n\t\tcheckDate.setMonth(0); // Compare with Jan 1\r\n\t\tcheckDate.setDate(1);\r\n\t\treturn Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\r\n\t},\r\n\r\n\t/* Parse a string value into a date object.\r\n\t * See formatDate below for the possible formats.\r\n\t *\r\n\t * @param  format string - the expected format of the date\r\n\t * @param  value string - the date in the above format\r\n\t * @param  settings Object - attributes include:\r\n\t *\t\t\t\t\tshortYearCutoff  number - the cutoff year for determining the century (optional)\r\n\t *\t\t\t\t\tdayNamesShort\tstring[7] - abbreviated names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tdayNames\t\tstring[7] - names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tmonthNamesShort string[12] - abbreviated names of the months (optional)\r\n\t *\t\t\t\t\tmonthNames\t\tstring[12] - names of the months (optional)\r\n\t * @return  Date - the extracted date value or null if value is blank\r\n\t */\r\n\tparseDate: function (format, value, settings) {\r\n\t\tif (format == null || value == null) {\r\n\t\t\tthrow \"Invalid arguments\";\r\n\t\t}\r\n\r\n\t\tvalue = (typeof value === \"object\" ? value.toString() : value + \"\");\r\n\t\tif (value === \"\") {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar iFormat, dim, extra,\r\n\t\t\tiValue = 0,\r\n\t\t\tshortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,\r\n\t\t\tshortYearCutoff = (typeof shortYearCutoffTemp !== \"string\" ? shortYearCutoffTemp :\r\n\t\t\t\tnew Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),\r\n\t\t\tdayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,\r\n\t\t\tdayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,\r\n\t\t\tmonthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,\r\n\t\t\tmonthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,\r\n\t\t\tyear = -1,\r\n\t\t\tmonth = -1,\r\n\t\t\tday = -1,\r\n\t\t\tdoy = -1,\r\n\t\t\tliteral = false,\r\n\t\t\tdate,\r\n\t\t\t// Check whether a format character is doubled\r\n\t\t\tlookAhead = function(match) {\r\n\t\t\t\tvar matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\r\n\t\t\t\tif (matches) {\r\n\t\t\t\t\tiFormat++;\r\n\t\t\t\t}\r\n\t\t\t\treturn matches;\r\n\t\t\t},\r\n\t\t\t// Extract a number from the string value\r\n\t\t\tgetNumber = function(match) {\r\n\t\t\t\tvar isDoubled = lookAhead(match),\r\n\t\t\t\t\tsize = (match === \"@\" ? 14 : (match === \"!\" ? 20 :\r\n\t\t\t\t\t(match === \"y\" && isDoubled ? 4 : (match === \"o\" ? 3 : 2)))),\r\n\t\t\t\t\tdigits = new RegExp(\"^\\\\d{1,\" + size + \"}\"),\r\n\t\t\t\t\tnum = value.substring(iValue).match(digits);\r\n\t\t\t\tif (!num) {\r\n\t\t\t\t\tthrow \"Missing number at position \" + iValue;\r\n\t\t\t\t}\r\n\t\t\t\tiValue += num[0].length;\r\n\t\t\t\treturn parseInt(num[0], 10);\r\n\t\t\t},\r\n\t\t\t// Extract a name from the string value and convert to an index\r\n\t\t\tgetName = function(match, shortNames, longNames) {\r\n\t\t\t\tvar index = -1,\r\n\t\t\t\t\tnames = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {\r\n\t\t\t\t\t\treturn [ [k, v] ];\r\n\t\t\t\t\t}).sort(function (a, b) {\r\n\t\t\t\t\t\treturn -(a[1].length - b[1].length);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t$.each(names, function (i, pair) {\r\n\t\t\t\t\tvar name = pair[1];\r\n\t\t\t\t\tif (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\r\n\t\t\t\t\t\tindex = pair[0];\r\n\t\t\t\t\t\tiValue += name.length;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\treturn index + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow \"Unknown name at position \" + iValue;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Confirm that a literal character matches the string value\r\n\t\t\tcheckLiteral = function() {\r\n\t\t\t\tif (value.charAt(iValue) !== format.charAt(iFormat)) {\r\n\t\t\t\t\tthrow \"Unexpected literal at position \" + iValue;\r\n\t\t\t\t}\r\n\t\t\t\tiValue++;\r\n\t\t\t};\r\n\r\n\t\tfor (iFormat = 0; iFormat < format.length; iFormat++) {\r\n\t\t\tif (literal) {\r\n\t\t\t\tif (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n\t\t\t\t\tliteral = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcheckLiteral();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (format.charAt(iFormat)) {\r\n\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\tday = getNumber(\"d\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"D\":\r\n\t\t\t\t\t\tgetName(\"D\", dayNamesShort, dayNames);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"o\":\r\n\t\t\t\t\t\tdoy = getNumber(\"o\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"m\":\r\n\t\t\t\t\t\tmonth = getNumber(\"m\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"M\":\r\n\t\t\t\t\t\tmonth = getName(\"M\", monthNamesShort, monthNames);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"y\":\r\n\t\t\t\t\t\tyear = getNumber(\"y\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"@\":\r\n\t\t\t\t\t\tdate = new Date(getNumber(\"@\"));\r\n\t\t\t\t\t\tyear = date.getFullYear();\r\n\t\t\t\t\t\tmonth = date.getMonth() + 1;\r\n\t\t\t\t\t\tday = date.getDate();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"!\":\r\n\t\t\t\t\t\tdate = new Date((getNumber(\"!\") - this._ticksTo1970) / 10000);\r\n\t\t\t\t\t\tyear = date.getFullYear();\r\n\t\t\t\t\t\tmonth = date.getMonth() + 1;\r\n\t\t\t\t\t\tday = date.getDate();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"'\":\r\n\t\t\t\t\t\tif (lookAhead(\"'\")){\r\n\t\t\t\t\t\t\tcheckLiteral();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tliteral = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcheckLiteral();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (iValue < value.length){\r\n\t\t\textra = value.substr(iValue);\r\n\t\t\tif (!/^\\s+/.test(extra)) {\r\n\t\t\t\tthrow \"Extra/unparsed characters found in date: \" + extra;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (year === -1) {\r\n\t\t\tyear = new Date().getFullYear();\r\n\t\t} else if (year < 100) {\r\n\t\t\tyear += new Date().getFullYear() - new Date().getFullYear() % 100 +\r\n\t\t\t\t(year <= shortYearCutoff ? 0 : -100);\r\n\t\t}\r\n\r\n\t\tif (doy > -1) {\r\n\t\t\tmonth = 1;\r\n\t\t\tday = doy;\r\n\t\t\tdo {\r\n\t\t\t\tdim = this._getDaysInMonth(year, month - 1);\r\n\t\t\t\tif (day <= dim) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tmonth++;\r\n\t\t\t\tday -= dim;\r\n\t\t\t} while (true);\r\n\t\t}\r\n\r\n\t\tdate = this._daylightSavingAdjust(new Date(year, month - 1, day));\r\n\t\tif (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\r\n\t\t\tthrow \"Invalid date\"; // E.g. 31/02/00\r\n\t\t}\r\n\t\treturn date;\r\n\t},\r\n\r\n\t/* Standard date formats. */\r\n\tATOM: \"yy-mm-dd\", // RFC 3339 (ISO 8601)\r\n\tCOOKIE: \"D, dd M yy\",\r\n\tISO_8601: \"yy-mm-dd\",\r\n\tRFC_822: \"D, d M y\",\r\n\tRFC_850: \"DD, dd-M-y\",\r\n\tRFC_1036: \"D, d M y\",\r\n\tRFC_1123: \"D, d M yy\",\r\n\tRFC_2822: \"D, d M yy\",\r\n\tRSS: \"D, d M y\", // RFC 822\r\n\tTICKS: \"!\",\r\n\tTIMESTAMP: \"@\",\r\n\tW3C: \"yy-mm-dd\", // ISO 8601\r\n\r\n\t_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +\r\n\t\tMath.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),\r\n\r\n\t/* Format a date object into a string value.\r\n\t * The format can be combinations of the following:\r\n\t * d  - day of month (no leading zero)\r\n\t * dd - day of month (two digit)\r\n\t * o  - day of year (no leading zeros)\r\n\t * oo - day of year (three digit)\r\n\t * D  - day name short\r\n\t * DD - day name long\r\n\t * m  - month of year (no leading zero)\r\n\t * mm - month of year (two digit)\r\n\t * M  - month name short\r\n\t * MM - month name long\r\n\t * y  - year (two digit)\r\n\t * yy - year (four digit)\r\n\t * @ - Unix timestamp (ms since 01/01/1970)\r\n\t * ! - Windows ticks (100ns since 01/01/0001)\r\n\t * \"...\" - literal text\r\n\t * '' - single quote\r\n\t *\r\n\t * @param  format string - the desired format of the date\r\n\t * @param  date Date - the date value to format\r\n\t * @param  settings Object - attributes include:\r\n\t *\t\t\t\t\tdayNamesShort\tstring[7] - abbreviated names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tdayNames\t\tstring[7] - names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tmonthNamesShort string[12] - abbreviated names of the months (optional)\r\n\t *\t\t\t\t\tmonthNames\t\tstring[12] - names of the months (optional)\r\n\t * @return  string - the date in the above format\r\n\t */\r\n\tformatDate: function (format, date, settings) {\r\n\t\tif (!date) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tvar iFormat,\r\n\t\t\tdayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,\r\n\t\t\tdayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,\r\n\t\t\tmonthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,\r\n\t\t\tmonthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,\r\n\t\t\t// Check whether a format character is doubled\r\n\t\t\tlookAhead = function(match) {\r\n\t\t\t\tvar matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\r\n\t\t\t\tif (matches) {\r\n\t\t\t\t\tiFormat++;\r\n\t\t\t\t}\r\n\t\t\t\treturn matches;\r\n\t\t\t},\r\n\t\t\t// Format a number, with leading zero if necessary\r\n\t\t\tformatNumber = function(match, value, len) {\r\n\t\t\t\tvar num = \"\" + value;\r\n\t\t\t\tif (lookAhead(match)) {\r\n\t\t\t\t\twhile (num.length < len) {\r\n\t\t\t\t\t\tnum = \"0\" + num;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn num;\r\n\t\t\t},\r\n\t\t\t// Format a name, short or long as requested\r\n\t\t\tformatName = function(match, value, shortNames, longNames) {\r\n\t\t\t\treturn (lookAhead(match) ? longNames[value] : shortNames[value]);\r\n\t\t\t},\r\n\t\t\toutput = \"\",\r\n\t\t\tliteral = false;\r\n\r\n\t\tif (date) {\r\n\t\t\tfor (iFormat = 0; iFormat < format.length; iFormat++) {\r\n\t\t\t\tif (literal) {\r\n\t\t\t\t\tif (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n\t\t\t\t\t\tliteral = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutput += format.charAt(iFormat);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswitch (format.charAt(iFormat)) {\r\n\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\toutput += formatNumber(\"d\", date.getDate(), 2);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"D\":\r\n\t\t\t\t\t\t\toutput += formatName(\"D\", date.getDay(), dayNamesShort, dayNames);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"o\":\r\n\t\t\t\t\t\t\toutput += formatNumber(\"o\",\r\n\t\t\t\t\t\t\t\tMath.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"m\":\r\n\t\t\t\t\t\t\toutput += formatNumber(\"m\", date.getMonth() + 1, 2);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"M\":\r\n\t\t\t\t\t\t\toutput += formatName(\"M\", date.getMonth(), monthNamesShort, monthNames);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"y\":\r\n\t\t\t\t\t\t\toutput += (lookAhead(\"y\") ? date.getFullYear() :\r\n\t\t\t\t\t\t\t\t(date.getYear() % 100 < 10 ? \"0\" : \"\") + date.getYear() % 100);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"@\":\r\n\t\t\t\t\t\t\toutput += date.getTime();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"!\":\r\n\t\t\t\t\t\t\toutput += date.getTime() * 10000 + this._ticksTo1970;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"'\":\r\n\t\t\t\t\t\t\tif (lookAhead(\"'\")) {\r\n\t\t\t\t\t\t\t\toutput += \"'\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tliteral = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\toutput += format.charAt(iFormat);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\r\n\t/* Extract all possible characters from the date format. */\r\n\t_possibleChars: function (format) {\r\n\t\tvar iFormat,\r\n\t\t\tchars = \"\",\r\n\t\t\tliteral = false,\r\n\t\t\t// Check whether a format character is doubled\r\n\t\t\tlookAhead = function(match) {\r\n\t\t\t\tvar matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\r\n\t\t\t\tif (matches) {\r\n\t\t\t\t\tiFormat++;\r\n\t\t\t\t}\r\n\t\t\t\treturn matches;\r\n\t\t\t};\r\n\r\n\t\tfor (iFormat = 0; iFormat < format.length; iFormat++) {\r\n\t\t\tif (literal) {\r\n\t\t\t\tif (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n\t\t\t\t\tliteral = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchars += format.charAt(iFormat);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (format.charAt(iFormat)) {\r\n\t\t\t\t\tcase \"d\": case \"m\": case \"y\": case \"@\":\r\n\t\t\t\t\t\tchars += \"0123456789\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"D\": case \"M\":\r\n\t\t\t\t\t\treturn null; // Accept anything\r\n\t\t\t\t\tcase \"'\":\r\n\t\t\t\t\t\tif (lookAhead(\"'\")) {\r\n\t\t\t\t\t\t\tchars += \"'\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tliteral = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tchars += format.charAt(iFormat);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn chars;\r\n\t},\r\n\r\n\t/* Get a setting value, defaulting if necessary. */\r\n\t_get: function(inst, name) {\r\n\t\treturn inst.settings[name] !== undefined ?\r\n\t\t\tinst.settings[name] : this._defaults[name];\r\n\t},\r\n\r\n\t/* Parse existing date and initialise date picker. */\r\n\t_setDateFromField: function(inst, noDefault) {\r\n\t\tif (inst.input.val() === inst.lastVal) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar dateFormat = this._get(inst, \"dateFormat\"),\r\n\t\t\tdates = inst.lastVal = inst.input ? inst.input.val() : null,\r\n\t\t\tdefaultDate = this._getDefaultDate(inst),\r\n\t\t\tdate = defaultDate,\r\n\t\t\tsettings = this._getFormatConfig(inst);\r\n\r\n\t\ttry {\r\n\t\t\tdate = this.parseDate(dateFormat, dates, settings) || defaultDate;\r\n\t\t} catch (event) {\r\n\t\t\tdates = (noDefault ? \"\" : dates);\r\n\t\t}\r\n\t\tinst.selectedDay = date.getDate();\r\n\t\tinst.drawMonth = inst.selectedMonth = date.getMonth();\r\n\t\tinst.drawYear = inst.selectedYear = date.getFullYear();\r\n\t\tinst.currentDay = (dates ? date.getDate() : 0);\r\n\t\tinst.currentMonth = (dates ? date.getMonth() : 0);\r\n\t\tinst.currentYear = (dates ? date.getFullYear() : 0);\r\n\t\tthis._adjustInstDate(inst);\r\n\t},\r\n\r\n\t/* Retrieve the default date shown on opening. */\r\n\t_getDefaultDate: function(inst) {\r\n\t\treturn this._restrictMinMax(inst,\r\n\t\t\tthis._determineDate(inst, this._get(inst, \"defaultDate\"), new Date()));\r\n\t},\r\n\r\n\t/* A date may be specified as an exact value or a relative one. */\r\n\t_determineDate: function(inst, date, defaultDate) {\r\n\t\tvar offsetNumeric = function(offset) {\r\n\t\t\t\tvar date = new Date();\r\n\t\t\t\tdate.setDate(date.getDate() + offset);\r\n\t\t\t\treturn date;\r\n\t\t\t},\r\n\t\t\toffsetString = function(offset) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn $.datepicker.parseDate($.datepicker._get(inst, \"dateFormat\"),\r\n\t\t\t\t\t\toffset, $.datepicker._getFormatConfig(inst));\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// Ignore\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar date = (offset.toLowerCase().match(/^c/) ?\r\n\t\t\t\t\t$.datepicker._getDate(inst) : null) || new Date(),\r\n\t\t\t\t\tyear = date.getFullYear(),\r\n\t\t\t\t\tmonth = date.getMonth(),\r\n\t\t\t\t\tday = date.getDate(),\r\n\t\t\t\t\tpattern = /([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,\r\n\t\t\t\t\tmatches = pattern.exec(offset);\r\n\r\n\t\t\t\twhile (matches) {\r\n\t\t\t\t\tswitch (matches[2] || \"d\") {\r\n\t\t\t\t\t\tcase \"d\" : case \"D\" :\r\n\t\t\t\t\t\t\tday += parseInt(matches[1],10); break;\r\n\t\t\t\t\t\tcase \"w\" : case \"W\" :\r\n\t\t\t\t\t\t\tday += parseInt(matches[1],10) * 7; break;\r\n\t\t\t\t\t\tcase \"m\" : case \"M\" :\r\n\t\t\t\t\t\t\tmonth += parseInt(matches[1],10);\r\n\t\t\t\t\t\t\tday = Math.min(day, $.datepicker._getDaysInMonth(year, month));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"y\": case \"Y\" :\r\n\t\t\t\t\t\t\tyear += parseInt(matches[1],10);\r\n\t\t\t\t\t\t\tday = Math.min(day, $.datepicker._getDaysInMonth(year, month));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatches = pattern.exec(offset);\r\n\t\t\t\t}\r\n\t\t\t\treturn new Date(year, month, day);\r\n\t\t\t},\r\n\t\t\tnewDate = (date == null || date === \"\" ? defaultDate : (typeof date === \"string\" ? offsetString(date) :\r\n\t\t\t\t(typeof date === \"number\" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));\r\n\r\n\t\tnewDate = (newDate && newDate.toString() === \"Invalid Date\" ? defaultDate : newDate);\r\n\t\tif (newDate) {\r\n\t\t\tnewDate.setHours(0);\r\n\t\t\tnewDate.setMinutes(0);\r\n\t\t\tnewDate.setSeconds(0);\r\n\t\t\tnewDate.setMilliseconds(0);\r\n\t\t}\r\n\t\treturn this._daylightSavingAdjust(newDate);\r\n\t},\r\n\r\n\t/* Handle switch to/from daylight saving.\r\n\t * Hours may be non-zero on daylight saving cut-over:\r\n\t * > 12 when midnight changeover, but then cannot generate\r\n\t * midnight datetime, so jump to 1AM, otherwise reset.\r\n\t * @param  date  (Date) the date to check\r\n\t * @return  (Date) the corrected date\r\n\t */\r\n\t_daylightSavingAdjust: function(date) {\r\n\t\tif (!date) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdate.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\r\n\t\treturn date;\r\n\t},\r\n\r\n\t/* Set the date(s) directly. */\r\n\t_setDate: function(inst, date, noChange) {\r\n\t\tvar clear = !date,\r\n\t\t\torigMonth = inst.selectedMonth,\r\n\t\t\torigYear = inst.selectedYear,\r\n\t\t\tnewDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));\r\n\r\n\t\tinst.selectedDay = inst.currentDay = newDate.getDate();\r\n\t\tinst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();\r\n\t\tinst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();\r\n\t\tif ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {\r\n\t\t\tthis._notifyChange(inst);\r\n\t\t}\r\n\t\tthis._adjustInstDate(inst);\r\n\t\tif (inst.input) {\r\n\t\t\tinst.input.val(clear ? \"\" : this._formatDate(inst));\r\n\t\t}\r\n\t},\r\n\r\n\t/* Retrieve the date(s) directly. */\r\n\t_getDate: function(inst) {\r\n\t\tvar startDate = (!inst.currentYear || (inst.input && inst.input.val() === \"\") ? null :\r\n\t\t\tthis._daylightSavingAdjust(new Date(\r\n\t\t\tinst.currentYear, inst.currentMonth, inst.currentDay)));\r\n\t\t\treturn startDate;\r\n\t},\r\n\r\n\t/* Attach the onxxx handlers.  These are declared statically so\r\n\t * they work with static code transformers like Caja.\r\n\t */\r\n\t_attachHandlers: function(inst) {\r\n\t\tvar stepMonths = this._get(inst, \"stepMonths\"),\r\n\t\t\tid = \"#\" + inst.id.replace( /\\\\\\\\/g, \"\\\\\" );\r\n\t\tinst.dpDiv.find(\"[data-handler]\").map(function () {\r\n\t\t\tvar handler = {\r\n\t\t\t\tprev: function () {\r\n\t\t\t\t\t$.datepicker._adjustDate(id, -stepMonths, \"M\");\r\n\t\t\t\t},\r\n\t\t\t\tnext: function () {\r\n\t\t\t\t\t$.datepicker._adjustDate(id, +stepMonths, \"M\");\r\n\t\t\t\t},\r\n\t\t\t\thide: function () {\r\n\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t},\r\n\t\t\t\ttoday: function () {\r\n\t\t\t\t\t$.datepicker._gotoToday(id);\r\n\t\t\t\t},\r\n\t\t\t\tselectDay: function () {\r\n\t\t\t\t\t$.datepicker._selectDay(id, +this.getAttribute(\"data-month\"), +this.getAttribute(\"data-year\"), this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\tselectMonth: function () {\r\n\t\t\t\t\t$.datepicker._selectMonthYear(id, this, \"M\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\tselectYear: function () {\r\n\t\t\t\t\t$.datepicker._selectMonthYear(id, this, \"Y\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t$(this).bind(this.getAttribute(\"data-event\"), handler[this.getAttribute(\"data-handler\")]);\r\n\t\t});\r\n\t},\r\n\r\n\t/* Generate the HTML for the current state of the date picker. */\r\n\t_generateHTML: function(inst) {\r\n\t\tvar maxDraw, prevText, prev, nextText, next, currentText, gotoDate,\r\n\t\t\tcontrols, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,\r\n\t\t\tmonthNames, monthNamesShort, beforeShowDay, showOtherMonths,\r\n\t\t\tselectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,\r\n\t\t\tcornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,\r\n\t\t\tprintDate, dRow, tbody, daySettings, otherMonth, unselectable,\r\n\t\t\ttempDate = new Date(),\r\n\t\t\ttoday = this._daylightSavingAdjust(\r\n\t\t\t\tnew Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time\r\n\t\t\tisRTL = this._get(inst, \"isRTL\"),\r\n\t\t\tshowButtonPanel = this._get(inst, \"showButtonPanel\"),\r\n\t\t\thideIfNoPrevNext = this._get(inst, \"hideIfNoPrevNext\"),\r\n\t\t\tnavigationAsDateFormat = this._get(inst, \"navigationAsDateFormat\"),\r\n\t\t\tnumMonths = this._getNumberOfMonths(inst),\r\n\t\t\tshowCurrentAtPos = this._get(inst, \"showCurrentAtPos\"),\r\n\t\t\tstepMonths = this._get(inst, \"stepMonths\"),\r\n\t\t\tisMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),\r\n\t\t\tcurrentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :\r\n\t\t\t\tnew Date(inst.currentYear, inst.currentMonth, inst.currentDay))),\r\n\t\t\tminDate = this._getMinMaxDate(inst, \"min\"),\r\n\t\t\tmaxDate = this._getMinMaxDate(inst, \"max\"),\r\n\t\t\tdrawMonth = inst.drawMonth - showCurrentAtPos,\r\n\t\t\tdrawYear = inst.drawYear;\r\n\r\n\t\tif (drawMonth < 0) {\r\n\t\t\tdrawMonth += 12;\r\n\t\t\tdrawYear--;\r\n\t\t}\r\n\t\tif (maxDate) {\r\n\t\t\tmaxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),\r\n\t\t\t\tmaxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));\r\n\t\t\tmaxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);\r\n\t\t\twhile (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {\r\n\t\t\t\tdrawMonth--;\r\n\t\t\t\tif (drawMonth < 0) {\r\n\t\t\t\t\tdrawMonth = 11;\r\n\t\t\t\t\tdrawYear--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tinst.drawMonth = drawMonth;\r\n\t\tinst.drawYear = drawYear;\r\n\r\n\t\tprevText = this._get(inst, \"prevText\");\r\n\t\tprevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,\r\n\t\t\tthis._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),\r\n\t\t\tthis._getFormatConfig(inst)));\r\n\r\n\t\tprev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?\r\n\t\t\t\"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'\" +\r\n\t\t\t\" title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"e\" : \"w\") + \"'>\" + prevText + \"</span></a>\" :\r\n\t\t\t(hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\"+ prevText +\"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"e\" : \"w\") + \"'>\" + prevText + \"</span></a>\"));\r\n\r\n\t\tnextText = this._get(inst, \"nextText\");\r\n\t\tnextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,\r\n\t\t\tthis._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),\r\n\t\t\tthis._getFormatConfig(inst)));\r\n\r\n\t\tnext = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?\r\n\t\t\t\"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'\" +\r\n\t\t\t\" title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"w\" : \"e\") + \"'>\" + nextText + \"</span></a>\" :\r\n\t\t\t(hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\"+ nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"w\" : \"e\") + \"'>\" + nextText + \"</span></a>\"));\r\n\r\n\t\tcurrentText = this._get(inst, \"currentText\");\r\n\t\tgotoDate = (this._get(inst, \"gotoCurrent\") && inst.currentDay ? currentDate : today);\r\n\t\tcurrentText = (!navigationAsDateFormat ? currentText :\r\n\t\t\tthis.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));\r\n\r\n\t\tcontrols = (!inst.inline ? \"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\" +\r\n\t\t\tthis._get(inst, \"closeText\") + \"</button>\" : \"\");\r\n\r\n\t\tbuttonPanel = (showButtonPanel) ? \"<div class='ui-datepicker-buttonpane ui-widget-content'>\" + (isRTL ? controls : \"\") +\r\n\t\t\t(this._isInRange(inst, gotoDate) ? \"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'\" +\r\n\t\t\t\">\" + currentText + \"</button>\" : \"\") + (isRTL ? \"\" : controls) + \"</div>\" : \"\";\r\n\r\n\t\tfirstDay = parseInt(this._get(inst, \"firstDay\"),10);\r\n\t\tfirstDay = (isNaN(firstDay) ? 0 : firstDay);\r\n\r\n\t\tshowWeek = this._get(inst, \"showWeek\");\r\n\t\tdayNames = this._get(inst, \"dayNames\");\r\n\t\tdayNamesMin = this._get(inst, \"dayNamesMin\");\r\n\t\tmonthNames = this._get(inst, \"monthNames\");\r\n\t\tmonthNamesShort = this._get(inst, \"monthNamesShort\");\r\n\t\tbeforeShowDay = this._get(inst, \"beforeShowDay\");\r\n\t\tshowOtherMonths = this._get(inst, \"showOtherMonths\");\r\n\t\tselectOtherMonths = this._get(inst, \"selectOtherMonths\");\r\n\t\tdefaultDate = this._getDefaultDate(inst);\r\n\t\thtml = \"\";\r\n\t\tdow;\r\n\t\tfor (row = 0; row < numMonths[0]; row++) {\r\n\t\t\tgroup = \"\";\r\n\t\t\tthis.maxRows = 4;\r\n\t\t\tfor (col = 0; col < numMonths[1]; col++) {\r\n\t\t\t\tselectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));\r\n\t\t\t\tcornerClass = \" ui-corner-all\";\r\n\t\t\t\tcalender = \"\";\r\n\t\t\t\tif (isMultiMonth) {\r\n\t\t\t\t\tcalender += \"<div class='ui-datepicker-group\";\r\n\t\t\t\t\tif (numMonths[1] > 1) {\r\n\t\t\t\t\t\tswitch (col) {\r\n\t\t\t\t\t\t\tcase 0: calender += \" ui-datepicker-group-first\";\r\n\t\t\t\t\t\t\t\tcornerClass = \" ui-corner-\" + (isRTL ? \"right\" : \"left\"); break;\r\n\t\t\t\t\t\t\tcase numMonths[1]-1: calender += \" ui-datepicker-group-last\";\r\n\t\t\t\t\t\t\t\tcornerClass = \" ui-corner-\" + (isRTL ? \"left\" : \"right\"); break;\r\n\t\t\t\t\t\t\tdefault: calender += \" ui-datepicker-group-middle\"; cornerClass = \"\"; break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcalender += \"'>\";\r\n\t\t\t\t}\r\n\t\t\t\tcalender += \"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\" + cornerClass + \"'>\" +\r\n\t\t\t\t\t(/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : \"\") +\r\n\t\t\t\t\t(/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : \"\") +\r\n\t\t\t\t\tthis._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,\r\n\t\t\t\t\trow > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers\r\n\t\t\t\t\t\"</div><table class='ui-datepicker-calendar'><thead>\" +\r\n\t\t\t\t\t\"<tr>\";\r\n\t\t\t\tthead = (showWeek ? \"<th class='ui-datepicker-week-col'>\" + this._get(inst, \"weekHeader\") + \"</th>\" : \"\");\r\n\t\t\t\tfor (dow = 0; dow < 7; dow++) { // days of the week\r\n\t\t\t\t\tday = (dow + firstDay) % 7;\r\n\t\t\t\t\tthead += \"<th\" + ((dow + firstDay + 6) % 7 >= 5 ? \" class='ui-datepicker-week-end'\" : \"\") + \">\" +\r\n\t\t\t\t\t\t\"<span title='\" + dayNames[day] + \"'>\" + dayNamesMin[day] + \"</span></th>\";\r\n\t\t\t\t}\r\n\t\t\t\tcalender += thead + \"</tr></thead><tbody>\";\r\n\t\t\t\tdaysInMonth = this._getDaysInMonth(drawYear, drawMonth);\r\n\t\t\t\tif (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {\r\n\t\t\t\t\tinst.selectedDay = Math.min(inst.selectedDay, daysInMonth);\r\n\t\t\t\t}\r\n\t\t\t\tleadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;\r\n\t\t\t\tcurRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate\r\n\t\t\t\tnumRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)\r\n\t\t\t\tthis.maxRows = numRows;\r\n\t\t\t\tprintDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));\r\n\t\t\t\tfor (dRow = 0; dRow < numRows; dRow++) { // create date picker rows\r\n\t\t\t\t\tcalender += \"<tr>\";\r\n\t\t\t\t\ttbody = (!showWeek ? \"\" : \"<td class='ui-datepicker-week-col'>\" +\r\n\t\t\t\t\t\tthis._get(inst, \"calculateWeek\")(printDate) + \"</td>\");\r\n\t\t\t\t\tfor (dow = 0; dow < 7; dow++) { // create date picker days\r\n\t\t\t\t\t\tdaySettings = (beforeShowDay ?\r\n\t\t\t\t\t\t\tbeforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, \"\"]);\r\n\t\t\t\t\t\totherMonth = (printDate.getMonth() !== drawMonth);\r\n\t\t\t\t\t\tunselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||\r\n\t\t\t\t\t\t\t(minDate && printDate < minDate) || (maxDate && printDate > maxDate);\r\n\t\t\t\t\t\ttbody += \"<td class='\" +\r\n\t\t\t\t\t\t\t((dow + firstDay + 6) % 7 >= 5 ? \" ui-datepicker-week-end\" : \"\") + // highlight weekends\r\n\t\t\t\t\t\t\t(otherMonth ? \" ui-datepicker-other-month\" : \"\") + // highlight days from other months\r\n\t\t\t\t\t\t\t((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key\r\n\t\t\t\t\t\t\t(defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?\r\n\t\t\t\t\t\t\t// or defaultDate is current printedDate and defaultDate is selectedDate\r\n\t\t\t\t\t\t\t\" \" + this._dayOverClass : \"\") + // highlight selected day\r\n\t\t\t\t\t\t\t(unselectable ? \" \" + this._unselectableClass + \" ui-state-disabled\": \"\") +  // highlight unselectable days\r\n\t\t\t\t\t\t\t(otherMonth && !showOtherMonths ? \"\" : \" \" + daySettings[1] + // highlight custom dates\r\n\t\t\t\t\t\t\t(printDate.getTime() === currentDate.getTime() ? \" \" + this._currentClass : \"\") + // highlight selected day\r\n\t\t\t\t\t\t\t(printDate.getTime() === today.getTime() ? \" ui-datepicker-today\" : \"\")) + \"'\" + // highlight today (if different)\r\n\t\t\t\t\t\t\t((!otherMonth || showOtherMonths) && daySettings[2] ? \" title='\" + daySettings[2].replace(/'/g, \"&#39;\") + \"'\" : \"\") + // cell title\r\n\t\t\t\t\t\t\t(unselectable ? \"\" : \" data-handler='selectDay' data-event='click' data-month='\" + printDate.getMonth() + \"' data-year='\" + printDate.getFullYear() + \"'\") + \">\" + // actions\r\n\t\t\t\t\t\t\t(otherMonth && !showOtherMonths ? \"&#xa0;\" : // display for other months\r\n\t\t\t\t\t\t\t(unselectable ? \"<span class='ui-state-default'>\" + printDate.getDate() + \"</span>\" : \"<a class='ui-state-default\" +\r\n\t\t\t\t\t\t\t(printDate.getTime() === today.getTime() ? \" ui-state-highlight\" : \"\") +\r\n\t\t\t\t\t\t\t(printDate.getTime() === currentDate.getTime() ? \" ui-state-active\" : \"\") + // highlight selected day\r\n\t\t\t\t\t\t\t(otherMonth ? \" ui-priority-secondary\" : \"\") + // distinguish dates from other months\r\n\t\t\t\t\t\t\t\"' href='#'>\" + printDate.getDate() + \"</a>\")) + \"</td>\"; // display selectable date\r\n\t\t\t\t\t\tprintDate.setDate(printDate.getDate() + 1);\r\n\t\t\t\t\t\tprintDate = this._daylightSavingAdjust(printDate);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcalender += tbody + \"</tr>\";\r\n\t\t\t\t}\r\n\t\t\t\tdrawMonth++;\r\n\t\t\t\tif (drawMonth > 11) {\r\n\t\t\t\t\tdrawMonth = 0;\r\n\t\t\t\t\tdrawYear++;\r\n\t\t\t\t}\r\n\t\t\t\tcalender += \"</tbody></table>\" + (isMultiMonth ? \"</div>\" +\r\n\t\t\t\t\t\t\t((numMonths[0] > 0 && col === numMonths[1]-1) ? \"<div class='ui-datepicker-row-break'></div>\" : \"\") : \"\");\r\n\t\t\t\tgroup += calender;\r\n\t\t\t}\r\n\t\t\thtml += group;\r\n\t\t}\r\n\t\thtml += buttonPanel;\r\n\t\tinst._keyEvent = false;\r\n\t\treturn html;\r\n\t},\r\n\r\n\t/* Generate the month and year header. */\r\n\t_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,\r\n\t\t\tsecondary, monthNames, monthNamesShort) {\r\n\r\n\t\tvar inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,\r\n\t\t\tchangeMonth = this._get(inst, \"changeMonth\"),\r\n\t\t\tchangeYear = this._get(inst, \"changeYear\"),\r\n\t\t\tshowMonthAfterYear = this._get(inst, \"showMonthAfterYear\"),\r\n\t\t\thtml = \"<div class='ui-datepicker-title'>\",\r\n\t\t\tmonthHtml = \"\";\r\n\r\n\t\t// month selection\r\n\t\tif (secondary || !changeMonth) {\r\n\t\t\tmonthHtml += \"<span class='ui-datepicker-month'>\" + monthNames[drawMonth] + \"</span>\";\r\n\t\t} else {\r\n\t\t\tinMinYear = (minDate && minDate.getFullYear() === drawYear);\r\n\t\t\tinMaxYear = (maxDate && maxDate.getFullYear() === drawYear);\r\n\t\t\tmonthHtml += \"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\";\r\n\t\t\tfor ( month = 0; month < 12; month++) {\r\n\t\t\t\tif ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {\r\n\t\t\t\t\tmonthHtml += \"<option value='\" + month + \"'\" +\r\n\t\t\t\t\t\t(month === drawMonth ? \" selected='selected'\" : \"\") +\r\n\t\t\t\t\t\t\">\" + monthNamesShort[month] + \"</option>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmonthHtml += \"</select>\";\r\n\t\t}\r\n\r\n\t\tif (!showMonthAfterYear) {\r\n\t\t\thtml += monthHtml + (secondary || !(changeMonth && changeYear) ? \"&#xa0;\" : \"\");\r\n\t\t}\r\n\r\n\t\t// year selection\r\n\t\tif ( !inst.yearshtml ) {\r\n\t\t\tinst.yearshtml = \"\";\r\n\t\t\tif (secondary || !changeYear) {\r\n\t\t\t\thtml += \"<span class='ui-datepicker-year'>\" + drawYear + \"</span>\";\r\n\t\t\t} else {\r\n\t\t\t\t// determine range of years to display\r\n\t\t\t\tyears = this._get(inst, \"yearRange\").split(\":\");\r\n\t\t\t\tthisYear = new Date().getFullYear();\r\n\t\t\t\tdetermineYear = function(value) {\r\n\t\t\t\t\tvar year = (value.match(/c[+\\-].*/) ? drawYear + parseInt(value.substring(1), 10) :\r\n\t\t\t\t\t\t(value.match(/[+\\-].*/) ? thisYear + parseInt(value, 10) :\r\n\t\t\t\t\t\tparseInt(value, 10)));\r\n\t\t\t\t\treturn (isNaN(year) ? thisYear : year);\r\n\t\t\t\t};\r\n\t\t\t\tyear = determineYear(years[0]);\r\n\t\t\t\tendYear = Math.max(year, determineYear(years[1] || \"\"));\r\n\t\t\t\tyear = (minDate ? Math.max(year, minDate.getFullYear()) : year);\r\n\t\t\t\tendYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);\r\n\t\t\t\tinst.yearshtml += \"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";\r\n\t\t\t\tfor (; year <= endYear; year++) {\r\n\t\t\t\t\tinst.yearshtml += \"<option value='\" + year + \"'\" +\r\n\t\t\t\t\t\t(year === drawYear ? \" selected='selected'\" : \"\") +\r\n\t\t\t\t\t\t\">\" + year + \"</option>\";\r\n\t\t\t\t}\r\n\t\t\t\tinst.yearshtml += \"</select>\";\r\n\r\n\t\t\t\thtml += inst.yearshtml;\r\n\t\t\t\tinst.yearshtml = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thtml += this._get(inst, \"yearSuffix\");\r\n\t\tif (showMonthAfterYear) {\r\n\t\t\thtml += (secondary || !(changeMonth && changeYear) ? \"&#xa0;\" : \"\") + monthHtml;\r\n\t\t}\r\n\t\thtml += \"</div>\"; // Close datepicker_header\r\n\t\treturn html;\r\n\t},\r\n\r\n\t/* Adjust one of the date sub-fields. */\r\n\t_adjustInstDate: function(inst, offset, period) {\r\n\t\tvar year = inst.drawYear + (period === \"Y\" ? offset : 0),\r\n\t\t\tmonth = inst.drawMonth + (period === \"M\" ? offset : 0),\r\n\t\t\tday = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === \"D\" ? offset : 0),\r\n\t\t\tdate = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));\r\n\r\n\t\tinst.selectedDay = date.getDate();\r\n\t\tinst.drawMonth = inst.selectedMonth = date.getMonth();\r\n\t\tinst.drawYear = inst.selectedYear = date.getFullYear();\r\n\t\tif (period === \"M\" || period === \"Y\") {\r\n\t\t\tthis._notifyChange(inst);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Ensure a date is within any min/max bounds. */\r\n\t_restrictMinMax: function(inst, date) {\r\n\t\tvar minDate = this._getMinMaxDate(inst, \"min\"),\r\n\t\t\tmaxDate = this._getMinMaxDate(inst, \"max\"),\r\n\t\t\tnewDate = (minDate && date < minDate ? minDate : date);\r\n\t\treturn (maxDate && newDate > maxDate ? maxDate : newDate);\r\n\t},\r\n\r\n\t/* Notify change of month/year. */\r\n\t_notifyChange: function(inst) {\r\n\t\tvar onChange = this._get(inst, \"onChangeMonthYear\");\r\n\t\tif (onChange) {\r\n\t\t\tonChange.apply((inst.input ? inst.input[0] : null),\r\n\t\t\t\t[inst.selectedYear, inst.selectedMonth + 1, inst]);\r\n\t\t}\r\n\t},\r\n\r\n\t/* Determine the number of months to show. */\r\n\t_getNumberOfMonths: function(inst) {\r\n\t\tvar numMonths = this._get(inst, \"numberOfMonths\");\r\n\t\treturn (numMonths == null ? [1, 1] : (typeof numMonths === \"number\" ? [1, numMonths] : numMonths));\r\n\t},\r\n\r\n\t/* Determine the current maximum date - ensure no time components are set. */\r\n\t_getMinMaxDate: function(inst, minMax) {\r\n\t\treturn this._determineDate(inst, this._get(inst, minMax + \"Date\"), null);\r\n\t},\r\n\r\n\t/* Find the number of days in a given month. */\r\n\t_getDaysInMonth: function(year, month) {\r\n\t\treturn 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();\r\n\t},\r\n\r\n\t/* Find the day of the week of the first of a month. */\r\n\t_getFirstDayOfMonth: function(year, month) {\r\n\t\treturn new Date(year, month, 1).getDay();\r\n\t},\r\n\r\n\t/* Determines if we should allow a \"next/prev\" month display change. */\r\n\t_canAdjustMonth: function(inst, offset, curYear, curMonth) {\r\n\t\tvar numMonths = this._getNumberOfMonths(inst),\r\n\t\t\tdate = this._daylightSavingAdjust(new Date(curYear,\r\n\t\t\tcurMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));\r\n\r\n\t\tif (offset < 0) {\r\n\t\t\tdate.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));\r\n\t\t}\r\n\t\treturn this._isInRange(inst, date);\r\n\t},\r\n\r\n\t/* Is the given date in the accepted range? */\r\n\t_isInRange: function(inst, date) {\r\n\t\tvar yearSplit, currentYear,\r\n\t\t\tminDate = this._getMinMaxDate(inst, \"min\"),\r\n\t\t\tmaxDate = this._getMinMaxDate(inst, \"max\"),\r\n\t\t\tminYear = null,\r\n\t\t\tmaxYear = null,\r\n\t\t\tyears = this._get(inst, \"yearRange\");\r\n\t\t\tif (years){\r\n\t\t\t\tyearSplit = years.split(\":\");\r\n\t\t\t\tcurrentYear = new Date().getFullYear();\r\n\t\t\t\tminYear = parseInt(yearSplit[0], 10);\r\n\t\t\t\tmaxYear = parseInt(yearSplit[1], 10);\r\n\t\t\t\tif ( yearSplit[0].match(/[+\\-].*/) ) {\r\n\t\t\t\t\tminYear += currentYear;\r\n\t\t\t\t}\r\n\t\t\t\tif ( yearSplit[1].match(/[+\\-].*/) ) {\r\n\t\t\t\t\tmaxYear += currentYear;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\treturn ((!minDate || date.getTime() >= minDate.getTime()) &&\r\n\t\t\t(!maxDate || date.getTime() <= maxDate.getTime()) &&\r\n\t\t\t(!minYear || date.getFullYear() >= minYear) &&\r\n\t\t\t(!maxYear || date.getFullYear() <= maxYear));\r\n\t},\r\n\r\n\t/* Provide the configuration settings for formatting/parsing. */\r\n\t_getFormatConfig: function(inst) {\r\n\t\tvar shortYearCutoff = this._get(inst, \"shortYearCutoff\");\r\n\t\tshortYearCutoff = (typeof shortYearCutoff !== \"string\" ? shortYearCutoff :\r\n\t\t\tnew Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));\r\n\t\treturn {shortYearCutoff: shortYearCutoff,\r\n\t\t\tdayNamesShort: this._get(inst, \"dayNamesShort\"), dayNames: this._get(inst, \"dayNames\"),\r\n\t\t\tmonthNamesShort: this._get(inst, \"monthNamesShort\"), monthNames: this._get(inst, \"monthNames\")};\r\n\t},\r\n\r\n\t/* Format the given date for display. */\r\n\t_formatDate: function(inst, day, month, year) {\r\n\t\tif (!day) {\r\n\t\t\tinst.currentDay = inst.selectedDay;\r\n\t\t\tinst.currentMonth = inst.selectedMonth;\r\n\t\t\tinst.currentYear = inst.selectedYear;\r\n\t\t}\r\n\t\tvar date = (day ? (typeof day === \"object\" ? day :\r\n\t\t\tthis._daylightSavingAdjust(new Date(year, month, day))) :\r\n\t\t\tthis._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));\r\n\t\treturn this.formatDate(this._get(inst, \"dateFormat\"), date, this._getFormatConfig(inst));\r\n\t}\r\n});\r\n\r\n/*\r\n * Bind hover events for datepicker elements.\r\n * Done via delegate so the binding only occurs once in the lifetime of the parent div.\r\n * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.\r\n */\r\nfunction bindHover(dpDiv) {\r\n\tvar selector = \"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";\r\n\treturn dpDiv.delegate(selector, \"mouseout\", function() {\r\n\t\t\t$(this).removeClass(\"ui-state-hover\");\r\n\t\t\tif (this.className.indexOf(\"ui-datepicker-prev\") !== -1) {\r\n\t\t\t\t$(this).removeClass(\"ui-datepicker-prev-hover\");\r\n\t\t\t}\r\n\t\t\tif (this.className.indexOf(\"ui-datepicker-next\") !== -1) {\r\n\t\t\t\t$(this).removeClass(\"ui-datepicker-next-hover\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t.delegate(selector, \"mouseover\", function(){\r\n\t\t\tif (!$.datepicker._isDisabledDatepicker( instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {\r\n\t\t\t\t$(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\");\r\n\t\t\t\t$(this).addClass(\"ui-state-hover\");\r\n\t\t\t\tif (this.className.indexOf(\"ui-datepicker-prev\") !== -1) {\r\n\t\t\t\t\t$(this).addClass(\"ui-datepicker-prev-hover\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this.className.indexOf(\"ui-datepicker-next\") !== -1) {\r\n\t\t\t\t\t$(this).addClass(\"ui-datepicker-next-hover\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n}\r\n\r\n/* jQuery extend now ignores nulls! */\r\nfunction extendRemove(target, props) {\r\n\t$.extend(target, props);\r\n\tfor (var name in props) {\r\n\t\tif (props[name] == null) {\r\n\t\t\ttarget[name] = props[name];\r\n\t\t}\r\n\t}\r\n\treturn target;\r\n}\r\n\r\n/* Invoke the datepicker functionality.\r\n   @param  options  string - a command, optionally followed by additional parameters or\r\n\t\t\t\t\tObject - settings for attaching new datepicker functionality\r\n   @return  jQuery object */\r\n$.fn.datepicker = function(options){\r\n\r\n\t/* Verify an empty collection wasn't passed - Fixes #6976 */\r\n\tif ( !this.length ) {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/* Initialise the date picker. */\r\n\tif (!$.datepicker.initialized) {\r\n\t\t$(document).mousedown($.datepicker._checkExternalClick);\r\n\t\t$.datepicker.initialized = true;\r\n\t}\r\n\r\n\t/* Append datepicker main container to body if not exist. */\r\n\tif ($(\"#\"+$.datepicker._mainDivId).length === 0) {\r\n\t\t$(\"body\").append($.datepicker.dpDiv);\r\n\t}\r\n\r\n\tvar otherArgs = Array.prototype.slice.call(arguments, 1);\r\n\tif (typeof options === \"string\" && (options === \"isDisabled\" || options === \"getDate\" || options === \"widget\")) {\r\n\t\treturn $.datepicker[\"_\" + options + \"Datepicker\"].\r\n\t\t\tapply($.datepicker, [this[0]].concat(otherArgs));\r\n\t}\r\n\tif (options === \"option\" && arguments.length === 2 && typeof arguments[1] === \"string\") {\r\n\t\treturn $.datepicker[\"_\" + options + \"Datepicker\"].\r\n\t\t\tapply($.datepicker, [this[0]].concat(otherArgs));\r\n\t}\r\n\treturn this.each(function() {\r\n\t\ttypeof options === \"string\" ?\r\n\t\t\t$.datepicker[\"_\" + options + \"Datepicker\"].\r\n\t\t\t\tapply($.datepicker, [this].concat(otherArgs)) :\r\n\t\t\t$.datepicker._attachDatepicker(this, options);\r\n\t});\r\n};\r\n\r\n$.datepicker = new Datepicker(); // singleton instance\r\n$.datepicker.initialized = false;\r\n$.datepicker.uuid = new Date().getTime();\r\n$.datepicker.version = \"1.10.4\";\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\nvar sizeRelatedOptions = {\r\n\t\tbuttons: true,\r\n\t\theight: true,\r\n\t\tmaxHeight: true,\r\n\t\tmaxWidth: true,\r\n\t\tminHeight: true,\r\n\t\tminWidth: true,\r\n\t\twidth: true\r\n\t},\r\n\tresizableRelatedOptions = {\r\n\t\tmaxHeight: true,\r\n\t\tmaxWidth: true,\r\n\t\tminHeight: true,\r\n\t\tminWidth: true\r\n\t};\r\n\r\n$.widget( \"ui.dialog\", {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\tappendTo: \"body\",\r\n\t\tautoOpen: true,\r\n\t\tbuttons: [],\r\n\t\tcloseOnEscape: true,\r\n\t\tcloseText: \"close\",\r\n\t\tdialogClass: \"\",\r\n\t\tdraggable: true,\r\n\t\thide: null,\r\n\t\theight: \"auto\",\r\n\t\tmaxHeight: null,\r\n\t\tmaxWidth: null,\r\n\t\tminHeight: 150,\r\n\t\tminWidth: 150,\r\n\t\tmodal: false,\r\n\t\tposition: {\r\n\t\t\tmy: \"center\",\r\n\t\t\tat: \"center\",\r\n\t\t\tof: window,\r\n\t\t\tcollision: \"fit\",\r\n\t\t\t// Ensure the titlebar is always visible\r\n\t\t\tusing: function( pos ) {\r\n\t\t\t\tvar topOffset = $( this ).css( pos ).offset().top;\r\n\t\t\t\tif ( topOffset < 0 ) {\r\n\t\t\t\t\t$( this ).css( \"top\", pos.top - topOffset );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tresizable: true,\r\n\t\tshow: null,\r\n\t\ttitle: null,\r\n\t\twidth: 300,\r\n\r\n\t\t// callbacks\r\n\t\tbeforeClose: null,\r\n\t\tclose: null,\r\n\t\tdrag: null,\r\n\t\tdragStart: null,\r\n\t\tdragStop: null,\r\n\t\tfocus: null,\r\n\t\topen: null,\r\n\t\tresize: null,\r\n\t\tresizeStart: null,\r\n\t\tresizeStop: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis.originalCss = {\r\n\t\t\tdisplay: this.element[0].style.display,\r\n\t\t\twidth: this.element[0].style.width,\r\n\t\t\tminHeight: this.element[0].style.minHeight,\r\n\t\t\tmaxHeight: this.element[0].style.maxHeight,\r\n\t\t\theight: this.element[0].style.height\r\n\t\t};\r\n\t\tthis.originalPosition = {\r\n\t\t\tparent: this.element.parent(),\r\n\t\t\tindex: this.element.parent().children().index( this.element )\r\n\t\t};\r\n\t\tthis.originalTitle = this.element.attr(\"title\");\r\n\t\tthis.options.title = this.options.title || this.originalTitle;\r\n\r\n\t\tthis._createWrapper();\r\n\r\n\t\tthis.element\r\n\t\t\t.show()\r\n\t\t\t.removeAttr(\"title\")\r\n\t\t\t.addClass(\"ui-dialog-content ui-widget-content\")\r\n\t\t\t.appendTo( this.uiDialog );\r\n\r\n\t\tthis._createTitlebar();\r\n\t\tthis._createButtonPane();\r\n\r\n\t\tif ( this.options.draggable && $.fn.draggable ) {\r\n\t\t\tthis._makeDraggable();\r\n\t\t}\r\n\t\tif ( this.options.resizable && $.fn.resizable ) {\r\n\t\t\tthis._makeResizable();\r\n\t\t}\r\n\r\n\t\tthis._isOpen = false;\r\n\t},\r\n\r\n\t_init: function() {\r\n\t\tif ( this.options.autoOpen ) {\r\n\t\t\tthis.open();\r\n\t\t}\r\n\t},\r\n\r\n\t_appendTo: function() {\r\n\t\tvar element = this.options.appendTo;\r\n\t\tif ( element && (element.jquery || element.nodeType) ) {\r\n\t\t\treturn $( element );\r\n\t\t}\r\n\t\treturn this.document.find( element || \"body\" ).eq( 0 );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar next,\r\n\t\t\toriginalPosition = this.originalPosition;\r\n\r\n\t\tthis._destroyOverlay();\r\n\r\n\t\tthis.element\r\n\t\t\t.removeUniqueId()\r\n\t\t\t.removeClass(\"ui-dialog-content ui-widget-content\")\r\n\t\t\t.css( this.originalCss )\r\n\t\t\t// Without detaching first, the following becomes really slow\r\n\t\t\t.detach();\r\n\r\n\t\tthis.uiDialog.stop( true, true ).remove();\r\n\r\n\t\tif ( this.originalTitle ) {\r\n\t\t\tthis.element.attr( \"title\", this.originalTitle );\r\n\t\t}\r\n\r\n\t\tnext = originalPosition.parent.children().eq( originalPosition.index );\r\n\t\t// Don't try to place the dialog next to itself (#8613)\r\n\t\tif ( next.length && next[0] !== this.element[0] ) {\r\n\t\t\tnext.before( this.element );\r\n\t\t} else {\r\n\t\t\toriginalPosition.parent.append( this.element );\r\n\t\t}\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.uiDialog;\r\n\t},\r\n\r\n\tdisable: $.noop,\r\n\tenable: $.noop,\r\n\r\n\tclose: function( event ) {\r\n\t\tvar activeElement,\r\n\t\t\tthat = this;\r\n\r\n\t\tif ( !this._isOpen || this._trigger( \"beforeClose\", event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._isOpen = false;\r\n\t\tthis._destroyOverlay();\r\n\r\n\t\tif ( !this.opener.filter(\":focusable\").focus().length ) {\r\n\r\n\t\t\t// support: IE9\r\n\t\t\t// IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n\t\t\ttry {\r\n\t\t\t\tactiveElement = this.document[ 0 ].activeElement;\r\n\r\n\t\t\t\t// Support: IE9, IE10\r\n\t\t\t\t// If the <body> is blurred, IE will switch windows, see #4520\r\n\t\t\t\tif ( activeElement && activeElement.nodeName.toLowerCase() !== \"body\" ) {\r\n\r\n\t\t\t\t\t// Hiding a focused element doesn't trigger blur in WebKit\r\n\t\t\t\t\t// so in case we have nothing to focus on, explicitly blur the active element\r\n\t\t\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=47182\r\n\t\t\t\t\t$( activeElement ).blur();\r\n\t\t\t\t}\r\n\t\t\t} catch ( error ) {}\r\n\t\t}\r\n\r\n\t\tthis._hide( this.uiDialog, this.options.hide, function() {\r\n\t\t\tthat._trigger( \"close\", event );\r\n\t\t});\r\n\t},\r\n\r\n\tisOpen: function() {\r\n\t\treturn this._isOpen;\r\n\t},\r\n\r\n\tmoveToTop: function() {\r\n\t\tthis._moveToTop();\r\n\t},\r\n\r\n\t_moveToTop: function( event, silent ) {\r\n\t\tvar moved = !!this.uiDialog.nextAll(\":visible\").insertBefore( this.uiDialog ).length;\r\n\t\tif ( moved && !silent ) {\r\n\t\t\tthis._trigger( \"focus\", event );\r\n\t\t}\r\n\t\treturn moved;\r\n\t},\r\n\r\n\topen: function() {\r\n\t\tvar that = this;\r\n\t\tif ( this._isOpen ) {\r\n\t\t\tif ( this._moveToTop() ) {\r\n\t\t\t\tthis._focusTabbable();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._isOpen = true;\r\n\t\tthis.opener = $( this.document[0].activeElement );\r\n\r\n\t\tthis._size();\r\n\t\tthis._position();\r\n\t\tthis._createOverlay();\r\n\t\tthis._moveToTop( null, true );\r\n\t\tthis._show( this.uiDialog, this.options.show, function() {\r\n\t\t\tthat._focusTabbable();\r\n\t\t\tthat._trigger(\"focus\");\r\n\t\t});\r\n\r\n\t\tthis._trigger(\"open\");\r\n\t},\r\n\r\n\t_focusTabbable: function() {\r\n\t\t// Set focus to the first match:\r\n\t\t// 1. First element inside the dialog matching [autofocus]\r\n\t\t// 2. Tabbable element inside the content element\r\n\t\t// 3. Tabbable element inside the buttonpane\r\n\t\t// 4. The close button\r\n\t\t// 5. The dialog itself\r\n\t\tvar hasFocus = this.element.find(\"[autofocus]\");\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.element.find(\":tabbable\");\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.uiDialogButtonPane.find(\":tabbable\");\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.uiDialogTitlebarClose.filter(\":tabbable\");\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.uiDialog;\r\n\t\t}\r\n\t\thasFocus.eq( 0 ).focus();\r\n\t},\r\n\r\n\t_keepFocus: function( event ) {\r\n\t\tfunction checkFocus() {\r\n\t\t\tvar activeElement = this.document[0].activeElement,\r\n\t\t\t\tisActive = this.uiDialog[0] === activeElement ||\r\n\t\t\t\t\t$.contains( this.uiDialog[0], activeElement );\r\n\t\t\tif ( !isActive ) {\r\n\t\t\t\tthis._focusTabbable();\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.preventDefault();\r\n\t\tcheckFocus.call( this );\r\n\t\t// support: IE\r\n\t\t// IE <= 8 doesn't prevent moving focus even with event.preventDefault()\r\n\t\t// so we check again later\r\n\t\tthis._delay( checkFocus );\r\n\t},\r\n\r\n\t_createWrapper: function() {\r\n\t\tthis.uiDialog = $(\"<div>\")\r\n\t\t\t.addClass( \"ui-dialog ui-widget ui-widget-content ui-corner-all ui-front \" +\r\n\t\t\t\tthis.options.dialogClass )\r\n\t\t\t.hide()\r\n\t\t\t.attr({\r\n\t\t\t\t// Setting tabIndex makes the div focusable\r\n\t\t\t\ttabIndex: -1,\r\n\t\t\t\trole: \"dialog\"\r\n\t\t\t})\r\n\t\t\t.appendTo( this._appendTo() );\r\n\r\n\t\tthis._on( this.uiDialog, {\r\n\t\t\tkeydown: function( event ) {\r\n\t\t\t\tif ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\r\n\t\t\t\t\t\tevent.keyCode === $.ui.keyCode.ESCAPE ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tthis.close( event );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// prevent tabbing out of dialogs\r\n\t\t\t\tif ( event.keyCode !== $.ui.keyCode.TAB ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar tabbables = this.uiDialog.find(\":tabbable\"),\r\n\t\t\t\t\tfirst = tabbables.filter(\":first\"),\r\n\t\t\t\t\tlast  = tabbables.filter(\":last\");\r\n\r\n\t\t\t\tif ( ( event.target === last[0] || event.target === this.uiDialog[0] ) && !event.shiftKey ) {\r\n\t\t\t\t\tfirst.focus( 1 );\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t} else if ( ( event.target === first[0] || event.target === this.uiDialog[0] ) && event.shiftKey ) {\r\n\t\t\t\t\tlast.focus( 1 );\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmousedown: function( event ) {\r\n\t\t\t\tif ( this._moveToTop( event ) ) {\r\n\t\t\t\t\tthis._focusTabbable();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// We assume that any existing aria-describedby attribute means\r\n\t\t// that the dialog content is marked up properly\r\n\t\t// otherwise we brute force the content as the description\r\n\t\tif ( !this.element.find(\"[aria-describedby]\").length ) {\r\n\t\t\tthis.uiDialog.attr({\r\n\t\t\t\t\"aria-describedby\": this.element.uniqueId().attr(\"id\")\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_createTitlebar: function() {\r\n\t\tvar uiDialogTitle;\r\n\r\n\t\tthis.uiDialogTitlebar = $(\"<div>\")\r\n\t\t\t.addClass(\"ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix\")\r\n\t\t\t.prependTo( this.uiDialog );\r\n\t\tthis._on( this.uiDialogTitlebar, {\r\n\t\t\tmousedown: function( event ) {\r\n\t\t\t\t// Don't prevent click on close button (#8838)\r\n\t\t\t\t// Focusing a dialog that is partially scrolled out of view\r\n\t\t\t\t// causes the browser to scroll it into view, preventing the click event\r\n\t\t\t\tif ( !$( event.target ).closest(\".ui-dialog-titlebar-close\") ) {\r\n\t\t\t\t\t// Dialog isn't getting focus when dragging (#8063)\r\n\t\t\t\t\tthis.uiDialog.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// support: IE\r\n\t\t// Use type=\"button\" to prevent enter keypresses in textboxes from closing the\r\n\t\t// dialog in IE (#9312)\r\n\t\tthis.uiDialogTitlebarClose = $( \"<button type='button'></button>\" )\r\n\t\t\t.button({\r\n\t\t\t\tlabel: this.options.closeText,\r\n\t\t\t\ticons: {\r\n\t\t\t\t\tprimary: \"ui-icon-closethick\"\r\n\t\t\t\t},\r\n\t\t\t\ttext: false\r\n\t\t\t})\r\n\t\t\t.addClass(\"ui-dialog-titlebar-close\")\r\n\t\t\t.appendTo( this.uiDialogTitlebar );\r\n\t\tthis._on( this.uiDialogTitlebarClose, {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tthis.close( event );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tuiDialogTitle = $(\"<span>\")\r\n\t\t\t.uniqueId()\r\n\t\t\t.addClass(\"ui-dialog-title\")\r\n\t\t\t.prependTo( this.uiDialogTitlebar );\r\n\t\tthis._title( uiDialogTitle );\r\n\r\n\t\tthis.uiDialog.attr({\r\n\t\t\t\"aria-labelledby\": uiDialogTitle.attr(\"id\")\r\n\t\t});\r\n\t},\r\n\r\n\t_title: function( title ) {\r\n\t\tif ( !this.options.title ) {\r\n\t\t\ttitle.html(\"&#160;\");\r\n\t\t}\r\n\t\ttitle.text( this.options.title );\r\n\t},\r\n\r\n\t_createButtonPane: function() {\r\n\t\tthis.uiDialogButtonPane = $(\"<div>\")\r\n\t\t\t.addClass(\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\");\r\n\r\n\t\tthis.uiButtonSet = $(\"<div>\")\r\n\t\t\t.addClass(\"ui-dialog-buttonset\")\r\n\t\t\t.appendTo( this.uiDialogButtonPane );\r\n\r\n\t\tthis._createButtons();\r\n\t},\r\n\r\n\t_createButtons: function() {\r\n\t\tvar that = this,\r\n\t\t\tbuttons = this.options.buttons;\r\n\r\n\t\t// if we already have a button pane, remove it\r\n\t\tthis.uiDialogButtonPane.remove();\r\n\t\tthis.uiButtonSet.empty();\r\n\r\n\t\tif ( $.isEmptyObject( buttons ) || ($.isArray( buttons ) && !buttons.length) ) {\r\n\t\t\tthis.uiDialog.removeClass(\"ui-dialog-buttons\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t$.each( buttons, function( name, props ) {\r\n\t\t\tvar click, buttonOptions;\r\n\t\t\tprops = $.isFunction( props ) ?\r\n\t\t\t\t{ click: props, text: name } :\r\n\t\t\t\tprops;\r\n\t\t\t// Default to a non-submitting button\r\n\t\t\tprops = $.extend( { type: \"button\" }, props );\r\n\t\t\t// Change the context for the click callback to be the main element\r\n\t\t\tclick = props.click;\r\n\t\t\tprops.click = function() {\r\n\t\t\t\tclick.apply( that.element[0], arguments );\r\n\t\t\t};\r\n\t\t\tbuttonOptions = {\r\n\t\t\t\ticons: props.icons,\r\n\t\t\t\ttext: props.showText\r\n\t\t\t};\r\n\t\t\tdelete props.icons;\r\n\t\t\tdelete props.showText;\r\n\t\t\t$( \"<button></button>\", props )\r\n\t\t\t\t.button( buttonOptions )\r\n\t\t\t\t.appendTo( that.uiButtonSet );\r\n\t\t});\r\n\t\tthis.uiDialog.addClass(\"ui-dialog-buttons\");\r\n\t\tthis.uiDialogButtonPane.appendTo( this.uiDialog );\r\n\t},\r\n\r\n\t_makeDraggable: function() {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tfunction filteredUi( ui ) {\r\n\t\t\treturn {\r\n\t\t\t\tposition: ui.position,\r\n\t\t\t\toffset: ui.offset\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.uiDialog.draggable({\r\n\t\t\tcancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\r\n\t\t\thandle: \".ui-dialog-titlebar\",\r\n\t\t\tcontainment: \"document\",\r\n\t\t\tstart: function( event, ui ) {\r\n\t\t\t\t$( this ).addClass(\"ui-dialog-dragging\");\r\n\t\t\t\tthat._blockFrames();\r\n\t\t\t\tthat._trigger( \"dragStart\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tdrag: function( event, ui ) {\r\n\t\t\t\tthat._trigger( \"drag\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tstop: function( event, ui ) {\r\n\t\t\t\toptions.position = [\r\n\t\t\t\t\tui.position.left - that.document.scrollLeft(),\r\n\t\t\t\t\tui.position.top - that.document.scrollTop()\r\n\t\t\t\t];\r\n\t\t\t\t$( this ).removeClass(\"ui-dialog-dragging\");\r\n\t\t\t\tthat._unblockFrames();\r\n\t\t\t\tthat._trigger( \"dragStop\", event, filteredUi( ui ) );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_makeResizable: function() {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options,\r\n\t\t\thandles = options.resizable,\r\n\t\t\t// .ui-resizable has position: relative defined in the stylesheet\r\n\t\t\t// but dialogs have to use absolute or fixed positioning\r\n\t\t\tposition = this.uiDialog.css(\"position\"),\r\n\t\t\tresizeHandles = typeof handles === \"string\" ?\r\n\t\t\t\thandles\t:\r\n\t\t\t\t\"n,e,s,w,se,sw,ne,nw\";\r\n\r\n\t\tfunction filteredUi( ui ) {\r\n\t\t\treturn {\r\n\t\t\t\toriginalPosition: ui.originalPosition,\r\n\t\t\t\toriginalSize: ui.originalSize,\r\n\t\t\t\tposition: ui.position,\r\n\t\t\t\tsize: ui.size\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.uiDialog.resizable({\r\n\t\t\tcancel: \".ui-dialog-content\",\r\n\t\t\tcontainment: \"document\",\r\n\t\t\talsoResize: this.element,\r\n\t\t\tmaxWidth: options.maxWidth,\r\n\t\t\tmaxHeight: options.maxHeight,\r\n\t\t\tminWidth: options.minWidth,\r\n\t\t\tminHeight: this._minHeight(),\r\n\t\t\thandles: resizeHandles,\r\n\t\t\tstart: function( event, ui ) {\r\n\t\t\t\t$( this ).addClass(\"ui-dialog-resizing\");\r\n\t\t\t\tthat._blockFrames();\r\n\t\t\t\tthat._trigger( \"resizeStart\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tresize: function( event, ui ) {\r\n\t\t\t\tthat._trigger( \"resize\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tstop: function( event, ui ) {\r\n\t\t\t\toptions.height = $( this ).height();\r\n\t\t\t\toptions.width = $( this ).width();\r\n\t\t\t\t$( this ).removeClass(\"ui-dialog-resizing\");\r\n\t\t\t\tthat._unblockFrames();\r\n\t\t\t\tthat._trigger( \"resizeStop\", event, filteredUi( ui ) );\r\n\t\t\t}\r\n\t\t})\r\n\t\t.css( \"position\", position );\r\n\t},\r\n\r\n\t_minHeight: function() {\r\n\t\tvar options = this.options;\r\n\r\n\t\treturn options.height === \"auto\" ?\r\n\t\t\toptions.minHeight :\r\n\t\t\tMath.min( options.minHeight, options.height );\r\n\t},\r\n\r\n\t_position: function() {\r\n\t\t// Need to show the dialog to get the actual offset in the position plugin\r\n\t\tvar isVisible = this.uiDialog.is(\":visible\");\r\n\t\tif ( !isVisible ) {\r\n\t\t\tthis.uiDialog.show();\r\n\t\t}\r\n\t\tthis.uiDialog.position( this.options.position );\r\n\t\tif ( !isVisible ) {\r\n\t\t\tthis.uiDialog.hide();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptions: function( options ) {\r\n\t\tvar that = this,\r\n\t\t\tresize = false,\r\n\t\t\tresizableOptions = {};\r\n\r\n\t\t$.each( options, function( key, value ) {\r\n\t\t\tthat._setOption( key, value );\r\n\r\n\t\t\tif ( key in sizeRelatedOptions ) {\r\n\t\t\t\tresize = true;\r\n\t\t\t}\r\n\t\t\tif ( key in resizableRelatedOptions ) {\r\n\t\t\t\tresizableOptions[ key ] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif ( resize ) {\r\n\t\t\tthis._size();\r\n\t\t\tthis._position();\r\n\t\t}\r\n\t\tif ( this.uiDialog.is(\":data(ui-resizable)\") ) {\r\n\t\t\tthis.uiDialog.resizable( \"option\", resizableOptions );\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar isDraggable, isResizable,\r\n\t\t\tuiDialog = this.uiDialog;\r\n\r\n\t\tif ( key === \"dialogClass\" ) {\r\n\t\t\tuiDialog\r\n\t\t\t\t.removeClass( this.options.dialogClass )\r\n\t\t\t\t.addClass( value );\r\n\t\t}\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"appendTo\" ) {\r\n\t\t\tthis.uiDialog.appendTo( this._appendTo() );\r\n\t\t}\r\n\r\n\t\tif ( key === \"buttons\" ) {\r\n\t\t\tthis._createButtons();\r\n\t\t}\r\n\r\n\t\tif ( key === \"closeText\" ) {\r\n\t\t\tthis.uiDialogTitlebarClose.button({\r\n\t\t\t\t// Ensure that we always pass a string\r\n\t\t\t\tlabel: \"\" + value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( key === \"draggable\" ) {\r\n\t\t\tisDraggable = uiDialog.is(\":data(ui-draggable)\");\r\n\t\t\tif ( isDraggable && !value ) {\r\n\t\t\t\tuiDialog.draggable(\"destroy\");\r\n\t\t\t}\r\n\r\n\t\t\tif ( !isDraggable && value ) {\r\n\t\t\t\tthis._makeDraggable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"position\" ) {\r\n\t\t\tthis._position();\r\n\t\t}\r\n\r\n\t\tif ( key === \"resizable\" ) {\r\n\t\t\t// currently resizable, becoming non-resizable\r\n\t\t\tisResizable = uiDialog.is(\":data(ui-resizable)\");\r\n\t\t\tif ( isResizable && !value ) {\r\n\t\t\t\tuiDialog.resizable(\"destroy\");\r\n\t\t\t}\r\n\r\n\t\t\t// currently resizable, changing handles\r\n\t\t\tif ( isResizable && typeof value === \"string\" ) {\r\n\t\t\t\tuiDialog.resizable( \"option\", \"handles\", value );\r\n\t\t\t}\r\n\r\n\t\t\t// currently non-resizable, becoming resizable\r\n\t\t\tif ( !isResizable && value !== false ) {\r\n\t\t\t\tthis._makeResizable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"title\" ) {\r\n\t\t\tthis._title( this.uiDialogTitlebar.find(\".ui-dialog-title\") );\r\n\t\t}\r\n\t},\r\n\r\n\t_size: function() {\r\n\t\t// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\r\n\t\t// divs will both have width and height set, so we need to reset them\r\n\t\tvar nonContentHeight, minContentHeight, maxContentHeight,\r\n\t\t\toptions = this.options;\r\n\r\n\t\t// Reset content sizing\r\n\t\tthis.element.show().css({\r\n\t\t\twidth: \"auto\",\r\n\t\t\tminHeight: 0,\r\n\t\t\tmaxHeight: \"none\",\r\n\t\t\theight: 0\r\n\t\t});\r\n\r\n\t\tif ( options.minWidth > options.width ) {\r\n\t\t\toptions.width = options.minWidth;\r\n\t\t}\r\n\r\n\t\t// reset wrapper sizing\r\n\t\t// determine the height of all the non-content elements\r\n\t\tnonContentHeight = this.uiDialog.css({\r\n\t\t\t\theight: \"auto\",\r\n\t\t\t\twidth: options.width\r\n\t\t\t})\r\n\t\t\t.outerHeight();\r\n\t\tminContentHeight = Math.max( 0, options.minHeight - nonContentHeight );\r\n\t\tmaxContentHeight = typeof options.maxHeight === \"number\" ?\r\n\t\t\tMath.max( 0, options.maxHeight - nonContentHeight ) :\r\n\t\t\t\"none\";\r\n\r\n\t\tif ( options.height === \"auto\" ) {\r\n\t\t\tthis.element.css({\r\n\t\t\t\tminHeight: minContentHeight,\r\n\t\t\t\tmaxHeight: maxContentHeight,\r\n\t\t\t\theight: \"auto\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.element.height( Math.max( 0, options.height - nonContentHeight ) );\r\n\t\t}\r\n\r\n\t\tif (this.uiDialog.is(\":data(ui-resizable)\") ) {\r\n\t\t\tthis.uiDialog.resizable( \"option\", \"minHeight\", this._minHeight() );\r\n\t\t}\r\n\t},\r\n\r\n\t_blockFrames: function() {\r\n\t\tthis.iframeBlocks = this.document.find( \"iframe\" ).map(function() {\r\n\t\t\tvar iframe = $( this );\r\n\r\n\t\t\treturn $( \"<div>\" )\r\n\t\t\t\t.css({\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\twidth: iframe.outerWidth(),\r\n\t\t\t\t\theight: iframe.outerHeight()\r\n\t\t\t\t})\r\n\t\t\t\t.appendTo( iframe.parent() )\r\n\t\t\t\t.offset( iframe.offset() )[0];\r\n\t\t});\r\n\t},\r\n\r\n\t_unblockFrames: function() {\r\n\t\tif ( this.iframeBlocks ) {\r\n\t\t\tthis.iframeBlocks.remove();\r\n\t\t\tdelete this.iframeBlocks;\r\n\t\t}\r\n\t},\r\n\r\n\t_allowInteraction: function( event ) {\r\n\t\tif ( $( event.target ).closest(\".ui-dialog\").length ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// TODO: Remove hack when datepicker implements\r\n\t\t// the .ui-front logic (#8989)\r\n\t\treturn !!$( event.target ).closest(\".ui-datepicker\").length;\r\n\t},\r\n\r\n\t_createOverlay: function() {\r\n\t\tif ( !this.options.modal ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar that = this,\r\n\t\t\twidgetFullName = this.widgetFullName;\r\n\t\tif ( !$.ui.dialog.overlayInstances ) {\r\n\t\t\t// Prevent use of anchors and inputs.\r\n\t\t\t// We use a delay in case the overlay is created from an\r\n\t\t\t// event that we're going to be cancelling. (#2804)\r\n\t\t\tthis._delay(function() {\r\n\t\t\t\t// Handle .dialog().dialog(\"close\") (#4065)\r\n\t\t\t\tif ( $.ui.dialog.overlayInstances ) {\r\n\t\t\t\t\tthis.document.bind( \"focusin.dialog\", function( event ) {\r\n\t\t\t\t\t\tif ( !that._allowInteraction( event ) ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t$(\".ui-dialog:visible:last .ui-dialog-content\")\r\n\t\t\t\t\t\t\t\t.data( widgetFullName )._focusTabbable();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.overlay = $(\"<div>\")\r\n\t\t\t.addClass(\"ui-widget-overlay ui-front\")\r\n\t\t\t.appendTo( this._appendTo() );\r\n\t\tthis._on( this.overlay, {\r\n\t\t\tmousedown: \"_keepFocus\"\r\n\t\t});\r\n\t\t$.ui.dialog.overlayInstances++;\r\n\t},\r\n\r\n\t_destroyOverlay: function() {\r\n\t\tif ( !this.options.modal ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.overlay ) {\r\n\t\t\t$.ui.dialog.overlayInstances--;\r\n\r\n\t\t\tif ( !$.ui.dialog.overlayInstances ) {\r\n\t\t\t\tthis.document.unbind( \"focusin.dialog\" );\r\n\t\t\t}\r\n\t\t\tthis.overlay.remove();\r\n\t\t\tthis.overlay = null;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$.ui.dialog.overlayInstances = 0;\r\n\r\n// DEPRECATED\r\nif ( $.uiBackCompat !== false ) {\r\n\t// position option with array notation\r\n\t// just override with old implementation\r\n\t$.widget( \"ui.dialog\", $.ui.dialog, {\r\n\t\t_position: function() {\r\n\t\t\tvar position = this.options.position,\r\n\t\t\t\tmyAt = [],\r\n\t\t\t\toffset = [ 0, 0 ],\r\n\t\t\t\tisVisible;\r\n\r\n\t\t\tif ( position ) {\r\n\t\t\t\tif ( typeof position === \"string\" || (typeof position === \"object\" && \"0\" in position ) ) {\r\n\t\t\t\t\tmyAt = position.split ? position.split(\" \") : [ position[0], position[1] ];\r\n\t\t\t\t\tif ( myAt.length === 1 ) {\r\n\t\t\t\t\t\tmyAt[1] = myAt[0];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$.each( [ \"left\", \"top\" ], function( i, offsetPosition ) {\r\n\t\t\t\t\t\tif ( +myAt[ i ] === myAt[ i ] ) {\r\n\t\t\t\t\t\t\toffset[ i ] = myAt[ i ];\r\n\t\t\t\t\t\t\tmyAt[ i ] = offsetPosition;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tposition = {\r\n\t\t\t\t\t\tmy: myAt[0] + (offset[0] < 0 ? offset[0] : \"+\" + offset[0]) + \" \" +\r\n\t\t\t\t\t\t\tmyAt[1] + (offset[1] < 0 ? offset[1] : \"+\" + offset[1]),\r\n\t\t\t\t\t\tat: myAt.join(\" \")\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tposition = $.extend( {}, $.ui.dialog.prototype.options.position, position );\r\n\t\t\t} else {\r\n\t\t\t\tposition = $.ui.dialog.prototype.options.position;\r\n\t\t\t}\r\n\r\n\t\t\t// need to show the dialog to get the actual offset in the position plugin\r\n\t\t\tisVisible = this.uiDialog.is(\":visible\");\r\n\t\t\tif ( !isVisible ) {\r\n\t\t\t\tthis.uiDialog.show();\r\n\t\t\t}\r\n\t\t\tthis.uiDialog.position( position );\r\n\t\t\tif ( !isVisible ) {\r\n\t\t\t\tthis.uiDialog.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n}( jQuery ) );\r\n\r\n(function( $, undefined ) {\r\n\r\nvar rvertical = /up|down|vertical/,\r\n\trpositivemotion = /up|left|vertical|horizontal/;\r\n\r\n$.effects.effect.blind = function( o, done ) {\r\n\t// Create element\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\" ],\r\n\t\tmode = $.effects.setMode( el, o.mode || \"hide\" ),\r\n\t\tdirection = o.direction || \"up\",\r\n\t\tvertical = rvertical.test( direction ),\r\n\t\tref = vertical ? \"height\" : \"width\",\r\n\t\tref2 = vertical ? \"top\" : \"left\",\r\n\t\tmotion = rpositivemotion.test( direction ),\r\n\t\tanimation = {},\r\n\t\tshow = mode === \"show\",\r\n\t\twrapper, distance, margin;\r\n\r\n\t// if already wrapped, the wrapper's properties are my property. #6245\r\n\tif ( el.parent().is( \".ui-effects-wrapper\" ) ) {\r\n\t\t$.effects.save( el.parent(), props );\r\n\t} else {\r\n\t\t$.effects.save( el, props );\r\n\t}\r\n\tel.show();\r\n\twrapper = $.effects.createWrapper( el ).css({\r\n\t\toverflow: \"hidden\"\r\n\t});\r\n\r\n\tdistance = wrapper[ ref ]();\r\n\tmargin = parseFloat( wrapper.css( ref2 ) ) || 0;\r\n\r\n\tanimation[ ref ] = show ? distance : 0;\r\n\tif ( !motion ) {\r\n\t\tel\r\n\t\t\t.css( vertical ? \"bottom\" : \"right\", 0 )\r\n\t\t\t.css( vertical ? \"top\" : \"left\", \"auto\" )\r\n\t\t\t.css({ position: \"absolute\" });\r\n\r\n\t\tanimation[ ref2 ] = show ? margin : distance + margin;\r\n\t}\r\n\r\n\t// start at 0 if we are showing\r\n\tif ( show ) {\r\n\t\twrapper.css( ref, 0 );\r\n\t\tif ( ! motion ) {\r\n\t\t\twrapper.css( ref2, margin + distance );\r\n\t\t}\r\n\t}\r\n\r\n\t// Animate\r\n\twrapper.animate( animation, {\r\n\t\tduration: o.duration,\r\n\t\teasing: o.easing,\r\n\t\tqueue: false,\r\n\t\tcomplete: function() {\r\n\t\t\tif ( mode === \"hide\" ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.bounce = function( o, done ) {\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\" ],\r\n\r\n\t\t// defaults:\r\n\t\tmode = $.effects.setMode( el, o.mode || \"effect\" ),\r\n\t\thide = mode === \"hide\",\r\n\t\tshow = mode === \"show\",\r\n\t\tdirection = o.direction || \"up\",\r\n\t\tdistance = o.distance,\r\n\t\ttimes = o.times || 5,\r\n\r\n\t\t// number of internal animations\r\n\t\tanims = times * 2 + ( show || hide ? 1 : 0 ),\r\n\t\tspeed = o.duration / anims,\r\n\t\teasing = o.easing,\r\n\r\n\t\t// utility:\r\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\r\n\t\tmotion = ( direction === \"up\" || direction === \"left\" ),\r\n\t\ti,\r\n\t\tupAnim,\r\n\t\tdownAnim,\r\n\r\n\t\t// we will need to re-assemble the queue to stack our animations in place\r\n\t\tqueue = el.queue(),\r\n\t\tqueuelen = queue.length;\r\n\r\n\t// Avoid touching opacity to prevent clearType and PNG issues in IE\r\n\tif ( show || hide ) {\r\n\t\tprops.push( \"opacity\" );\r\n\t}\r\n\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\t$.effects.createWrapper( el ); // Create Wrapper\r\n\r\n\t// default distance for the BIGGEST bounce is the outer Distance / 3\r\n\tif ( !distance ) {\r\n\t\tdistance = el[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]() / 3;\r\n\t}\r\n\r\n\tif ( show ) {\r\n\t\tdownAnim = { opacity: 1 };\r\n\t\tdownAnim[ ref ] = 0;\r\n\r\n\t\t// if we are showing, force opacity 0 and set the initial position\r\n\t\t// then do the \"first\" animation\r\n\t\tel.css( \"opacity\", 0 )\r\n\t\t\t.css( ref, motion ? -distance * 2 : distance * 2 )\r\n\t\t\t.animate( downAnim, speed, easing );\r\n\t}\r\n\r\n\t// start at the smallest distance if we are hiding\r\n\tif ( hide ) {\r\n\t\tdistance = distance / Math.pow( 2, times - 1 );\r\n\t}\r\n\r\n\tdownAnim = {};\r\n\tdownAnim[ ref ] = 0;\r\n\t// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here\r\n\tfor ( i = 0; i < times; i++ ) {\r\n\t\tupAnim = {};\r\n\t\tupAnim[ ref ] = ( motion ? \"-=\" : \"+=\" ) + distance;\r\n\r\n\t\tel.animate( upAnim, speed, easing )\r\n\t\t\t.animate( downAnim, speed, easing );\r\n\r\n\t\tdistance = hide ? distance * 2 : distance / 2;\r\n\t}\r\n\r\n\t// Last Bounce when Hiding\r\n\tif ( hide ) {\r\n\t\tupAnim = { opacity: 0 };\r\n\t\tupAnim[ ref ] = ( motion ? \"-=\" : \"+=\" ) + distance;\r\n\r\n\t\tel.animate( upAnim, speed, easing );\r\n\t}\r\n\r\n\tel.queue(function() {\r\n\t\tif ( hide ) {\r\n\t\t\tel.hide();\r\n\t\t}\r\n\t\t$.effects.restore( el, props );\r\n\t\t$.effects.removeWrapper( el );\r\n\t\tdone();\r\n\t});\r\n\r\n\t// inject all the animations we just queued to be first in line (after \"inprogress\")\r\n\tif ( queuelen > 1) {\r\n\t\tqueue.splice.apply( queue,\r\n\t\t\t[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );\r\n\t}\r\n\tel.dequeue();\r\n\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.clip = function( o, done ) {\r\n\t// Create element\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\" ],\r\n\t\tmode = $.effects.setMode( el, o.mode || \"hide\" ),\r\n\t\tshow = mode === \"show\",\r\n\t\tdirection = o.direction || \"vertical\",\r\n\t\tvert = direction === \"vertical\",\r\n\t\tsize = vert ? \"height\" : \"width\",\r\n\t\tposition = vert ? \"top\" : \"left\",\r\n\t\tanimation = {},\r\n\t\twrapper, animate, distance;\r\n\r\n\t// Save & Show\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\r\n\t// Create Wrapper\r\n\twrapper = $.effects.createWrapper( el ).css({\r\n\t\toverflow: \"hidden\"\r\n\t});\r\n\tanimate = ( el[0].tagName === \"IMG\" ) ? wrapper : el;\r\n\tdistance = animate[ size ]();\r\n\r\n\t// Shift\r\n\tif ( show ) {\r\n\t\tanimate.css( size, 0 );\r\n\t\tanimate.css( position, distance / 2 );\r\n\t}\r\n\r\n\t// Create Animation Object:\r\n\tanimation[ size ] = show ? distance : 0;\r\n\tanimation[ position ] = show ? 0 : distance / 2;\r\n\r\n\t// Animate\r\n\tanimate.animate( animation, {\r\n\t\tqueue: false,\r\n\t\tduration: o.duration,\r\n\t\teasing: o.easing,\r\n\t\tcomplete: function() {\r\n\t\t\tif ( !show ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.drop = function( o, done ) {\r\n\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"opacity\", \"height\", \"width\" ],\r\n\t\tmode = $.effects.setMode( el, o.mode || \"hide\" ),\r\n\t\tshow = mode === \"show\",\r\n\t\tdirection = o.direction || \"left\",\r\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\r\n\t\tmotion = ( direction === \"up\" || direction === \"left\" ) ? \"pos\" : \"neg\",\r\n\t\tanimation = {\r\n\t\t\topacity: show ? 1 : 0\r\n\t\t},\r\n\t\tdistance;\r\n\r\n\t// Adjust\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\t$.effects.createWrapper( el );\r\n\r\n\tdistance = o.distance || el[ ref === \"top\" ? \"outerHeight\": \"outerWidth\" ]( true ) / 2;\r\n\r\n\tif ( show ) {\r\n\t\tel\r\n\t\t\t.css( \"opacity\", 0 )\r\n\t\t\t.css( ref, motion === \"pos\" ? -distance : distance );\r\n\t}\r\n\r\n\t// Animation\r\n\tanimation[ ref ] = ( show ?\r\n\t\t( motion === \"pos\" ? \"+=\" : \"-=\" ) :\r\n\t\t( motion === \"pos\" ? \"-=\" : \"+=\" ) ) +\r\n\t\tdistance;\r\n\r\n\t// Animate\r\n\tel.animate( animation, {\r\n\t\tqueue: false,\r\n\t\tduration: o.duration,\r\n\t\teasing: o.easing,\r\n\t\tcomplete: function() {\r\n\t\t\tif ( mode === \"hide\" ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.explode = function( o, done ) {\r\n\r\n\tvar rows = o.pieces ? Math.round( Math.sqrt( o.pieces ) ) : 3,\r\n\t\tcells = rows,\r\n\t\tel = $( this ),\r\n\t\tmode = $.effects.setMode( el, o.mode || \"hide\" ),\r\n\t\tshow = mode === \"show\",\r\n\r\n\t\t// show and then visibility:hidden the element before calculating offset\r\n\t\toffset = el.show().css( \"visibility\", \"hidden\" ).offset(),\r\n\r\n\t\t// width and height of a piece\r\n\t\twidth = Math.ceil( el.outerWidth() / cells ),\r\n\t\theight = Math.ceil( el.outerHeight() / rows ),\r\n\t\tpieces = [],\r\n\r\n\t\t// loop\r\n\t\ti, j, left, top, mx, my;\r\n\r\n\t// children animate complete:\r\n\tfunction childComplete() {\r\n\t\tpieces.push( this );\r\n\t\tif ( pieces.length === rows * cells ) {\r\n\t\t\tanimComplete();\r\n\t\t}\r\n\t}\r\n\r\n\t// clone the element for each row and cell.\r\n\tfor( i = 0; i < rows ; i++ ) { // ===>\r\n\t\ttop = offset.top + i * height;\r\n\t\tmy = i - ( rows - 1 ) / 2 ;\r\n\r\n\t\tfor( j = 0; j < cells ; j++ ) { // |||\r\n\t\t\tleft = offset.left + j * width;\r\n\t\t\tmx = j - ( cells - 1 ) / 2 ;\r\n\r\n\t\t\t// Create a clone of the now hidden main element that will be absolute positioned\r\n\t\t\t// within a wrapper div off the -left and -top equal to size of our pieces\r\n\t\t\tel\r\n\t\t\t\t.clone()\r\n\t\t\t\t.appendTo( \"body\" )\r\n\t\t\t\t.wrap( \"<div></div>\" )\r\n\t\t\t\t.css({\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tvisibility: \"visible\",\r\n\t\t\t\t\tleft: -j * width,\r\n\t\t\t\t\ttop: -i * height\r\n\t\t\t\t})\r\n\r\n\t\t\t// select the wrapper - make it overflow: hidden and absolute positioned based on\r\n\t\t\t// where the original was located +left and +top equal to the size of pieces\r\n\t\t\t\t.parent()\r\n\t\t\t\t.addClass( \"ui-effects-explode\" )\r\n\t\t\t\t.css({\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height,\r\n\t\t\t\t\tleft: left + ( show ? mx * width : 0 ),\r\n\t\t\t\t\ttop: top + ( show ? my * height : 0 ),\r\n\t\t\t\t\topacity: show ? 0 : 1\r\n\t\t\t\t}).animate({\r\n\t\t\t\t\tleft: left + ( show ? 0 : mx * width ),\r\n\t\t\t\t\ttop: top + ( show ? 0 : my * height ),\r\n\t\t\t\t\topacity: show ? 1 : 0\r\n\t\t\t\t}, o.duration || 500, o.easing, childComplete );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction animComplete() {\r\n\t\tel.css({\r\n\t\t\tvisibility: \"visible\"\r\n\t\t});\r\n\t\t$( pieces ).remove();\r\n\t\tif ( !show ) {\r\n\t\t\tel.hide();\r\n\t\t}\r\n\t\tdone();\r\n\t}\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.fade = function( o, done ) {\r\n\tvar el = $( this ),\r\n\t\tmode = $.effects.setMode( el, o.mode || \"toggle\" );\r\n\r\n\tel.animate({\r\n\t\topacity: mode\r\n\t}, {\r\n\t\tqueue: false,\r\n\t\tduration: o.duration,\r\n\t\teasing: o.easing,\r\n\t\tcomplete: done\r\n\t});\r\n};\r\n\r\n})( jQuery );\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.fold = function( o, done ) {\r\n\r\n\t// Create element\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\" ],\r\n\t\tmode = $.effects.setMode( el, o.mode || \"hide\" ),\r\n\t\tshow = mode === \"show\",\r\n\t\thide = mode === \"hide\",\r\n\t\tsize = o.size || 15,\r\n\t\tpercent = /([0-9]+)%/.exec( size ),\r\n\t\thorizFirst = !!o.horizFirst,\r\n\t\twidthFirst = show !== horizFirst,\r\n\t\tref = widthFirst ? [ \"width\", \"height\" ] : [ \"height\", \"width\" ],\r\n\t\tduration = o.duration / 2,\r\n\t\twrapper, distance,\r\n\t\tanimation1 = {},\r\n\t\tanimation2 = {};\r\n\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\r\n\t// Create Wrapper\r\n\twrapper = $.effects.createWrapper( el ).css({\r\n\t\toverflow: \"hidden\"\r\n\t});\r\n\tdistance = widthFirst ?\r\n\t\t[ wrapper.width(), wrapper.height() ] :\r\n\t\t[ wrapper.height(), wrapper.width() ];\r\n\r\n\tif ( percent ) {\r\n\t\tsize = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];\r\n\t}\r\n\tif ( show ) {\r\n\t\twrapper.css( horizFirst ? {\r\n\t\t\theight: 0,\r\n\t\t\twidth: size\r\n\t\t} : {\r\n\t\t\theight: size,\r\n\t\t\twidth: 0\r\n\t\t});\r\n\t}\r\n\r\n\t// Animation\r\n\tanimation1[ ref[ 0 ] ] = show ? distance[ 0 ] : size;\r\n\tanimation2[ ref[ 1 ] ] = show ? distance[ 1 ] : 0;\r\n\r\n\t// Animate\r\n\twrapper\r\n\t\t.animate( animation1, duration, o.easing )\r\n\t\t.animate( animation2, duration, o.easing, function() {\r\n\t\t\tif ( hide ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t});\r\n\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.highlight = function( o, done ) {\r\n\tvar elem = $( this ),\r\n\t\tprops = [ \"backgroundImage\", \"backgroundColor\", \"opacity\" ],\r\n\t\tmode = $.effects.setMode( elem, o.mode || \"show\" ),\r\n\t\tanimation = {\r\n\t\t\tbackgroundColor: elem.css( \"backgroundColor\" )\r\n\t\t};\r\n\r\n\tif (mode === \"hide\") {\r\n\t\tanimation.opacity = 0;\r\n\t}\r\n\r\n\t$.effects.save( elem, props );\r\n\r\n\telem\r\n\t\t.show()\r\n\t\t.css({\r\n\t\t\tbackgroundImage: \"none\",\r\n\t\t\tbackgroundColor: o.color || \"#ffff99\"\r\n\t\t})\r\n\t\t.animate( animation, {\r\n\t\t\tqueue: false,\r\n\t\t\tduration: o.duration,\r\n\t\t\teasing: o.easing,\r\n\t\t\tcomplete: function() {\r\n\t\t\t\tif ( mode === \"hide\" ) {\r\n\t\t\t\t\telem.hide();\r\n\t\t\t\t}\r\n\t\t\t\t$.effects.restore( elem, props );\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.pulsate = function( o, done ) {\r\n\tvar elem = $( this ),\r\n\t\tmode = $.effects.setMode( elem, o.mode || \"show\" ),\r\n\t\tshow = mode === \"show\",\r\n\t\thide = mode === \"hide\",\r\n\t\tshowhide = ( show || mode === \"hide\" ),\r\n\r\n\t\t// showing or hiding leaves of the \"last\" animation\r\n\t\tanims = ( ( o.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),\r\n\t\tduration = o.duration / anims,\r\n\t\tanimateTo = 0,\r\n\t\tqueue = elem.queue(),\r\n\t\tqueuelen = queue.length,\r\n\t\ti;\r\n\r\n\tif ( show || !elem.is(\":visible\")) {\r\n\t\telem.css( \"opacity\", 0 ).show();\r\n\t\tanimateTo = 1;\r\n\t}\r\n\r\n\t// anims - 1 opacity \"toggles\"\r\n\tfor ( i = 1; i < anims; i++ ) {\r\n\t\telem.animate({\r\n\t\t\topacity: animateTo\r\n\t\t}, duration, o.easing );\r\n\t\tanimateTo = 1 - animateTo;\r\n\t}\r\n\r\n\telem.animate({\r\n\t\topacity: animateTo\r\n\t}, duration, o.easing);\r\n\r\n\telem.queue(function() {\r\n\t\tif ( hide ) {\r\n\t\t\telem.hide();\r\n\t\t}\r\n\t\tdone();\r\n\t});\r\n\r\n\t// We just queued up \"anims\" animations, we need to put them next in the queue\r\n\tif ( queuelen > 1 ) {\r\n\t\tqueue.splice.apply( queue,\r\n\t\t\t[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );\r\n\t}\r\n\telem.dequeue();\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.puff = function( o, done ) {\r\n\tvar elem = $( this ),\r\n\t\tmode = $.effects.setMode( elem, o.mode || \"hide\" ),\r\n\t\thide = mode === \"hide\",\r\n\t\tpercent = parseInt( o.percent, 10 ) || 150,\r\n\t\tfactor = percent / 100,\r\n\t\toriginal = {\r\n\t\t\theight: elem.height(),\r\n\t\t\twidth: elem.width(),\r\n\t\t\touterHeight: elem.outerHeight(),\r\n\t\t\touterWidth: elem.outerWidth()\r\n\t\t};\r\n\r\n\t$.extend( o, {\r\n\t\teffect: \"scale\",\r\n\t\tqueue: false,\r\n\t\tfade: true,\r\n\t\tmode: mode,\r\n\t\tcomplete: done,\r\n\t\tpercent: hide ? percent : 100,\r\n\t\tfrom: hide ?\r\n\t\t\toriginal :\r\n\t\t\t{\r\n\t\t\t\theight: original.height * factor,\r\n\t\t\t\twidth: original.width * factor,\r\n\t\t\t\touterHeight: original.outerHeight * factor,\r\n\t\t\t\touterWidth: original.outerWidth * factor\r\n\t\t\t}\r\n\t});\r\n\r\n\telem.effect( o );\r\n};\r\n\r\n$.effects.effect.scale = function( o, done ) {\r\n\r\n\t// Create element\r\n\tvar el = $( this ),\r\n\t\toptions = $.extend( true, {}, o ),\r\n\t\tmode = $.effects.setMode( el, o.mode || \"effect\" ),\r\n\t\tpercent = parseInt( o.percent, 10 ) ||\r\n\t\t\t( parseInt( o.percent, 10 ) === 0 ? 0 : ( mode === \"hide\" ? 0 : 100 ) ),\r\n\t\tdirection = o.direction || \"both\",\r\n\t\torigin = o.origin,\r\n\t\toriginal = {\r\n\t\t\theight: el.height(),\r\n\t\t\twidth: el.width(),\r\n\t\t\touterHeight: el.outerHeight(),\r\n\t\t\touterWidth: el.outerWidth()\r\n\t\t},\r\n\t\tfactor = {\r\n\t\t\ty: direction !== \"horizontal\" ? (percent / 100) : 1,\r\n\t\t\tx: direction !== \"vertical\" ? (percent / 100) : 1\r\n\t\t};\r\n\r\n\t// We are going to pass this effect to the size effect:\r\n\toptions.effect = \"size\";\r\n\toptions.queue = false;\r\n\toptions.complete = done;\r\n\r\n\t// Set default origin and restore for show/hide\r\n\tif ( mode !== \"effect\" ) {\r\n\t\toptions.origin = origin || [\"middle\",\"center\"];\r\n\t\toptions.restore = true;\r\n\t}\r\n\r\n\toptions.from = o.from || ( mode === \"show\" ? {\r\n\t\theight: 0,\r\n\t\twidth: 0,\r\n\t\touterHeight: 0,\r\n\t\touterWidth: 0\r\n\t} : original );\r\n\toptions.to = {\r\n\t\theight: original.height * factor.y,\r\n\t\twidth: original.width * factor.x,\r\n\t\touterHeight: original.outerHeight * factor.y,\r\n\t\touterWidth: original.outerWidth * factor.x\r\n\t};\r\n\r\n\t// Fade option to support puff\r\n\tif ( options.fade ) {\r\n\t\tif ( mode === \"show\" ) {\r\n\t\t\toptions.from.opacity = 0;\r\n\t\t\toptions.to.opacity = 1;\r\n\t\t}\r\n\t\tif ( mode === \"hide\" ) {\r\n\t\t\toptions.from.opacity = 1;\r\n\t\t\toptions.to.opacity = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Animate\r\n\tel.effect( options );\r\n\r\n};\r\n\r\n$.effects.effect.size = function( o, done ) {\r\n\r\n\t// Create element\r\n\tvar original, baseline, factor,\r\n\t\tel = $( this ),\r\n\t\tprops0 = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"width\", \"height\", \"overflow\", \"opacity\" ],\r\n\r\n\t\t// Always restore\r\n\t\tprops1 = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"overflow\", \"opacity\" ],\r\n\r\n\t\t// Copy for children\r\n\t\tprops2 = [ \"width\", \"height\", \"overflow\" ],\r\n\t\tcProps = [ \"fontSize\" ],\r\n\t\tvProps = [ \"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\" ],\r\n\t\thProps = [ \"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\" ],\r\n\r\n\t\t// Set options\r\n\t\tmode = $.effects.setMode( el, o.mode || \"effect\" ),\r\n\t\trestore = o.restore || mode !== \"effect\",\r\n\t\tscale = o.scale || \"both\",\r\n\t\torigin = o.origin || [ \"middle\", \"center\" ],\r\n\t\tposition = el.css( \"position\" ),\r\n\t\tprops = restore ? props0 : props1,\r\n\t\tzero = {\r\n\t\t\theight: 0,\r\n\t\t\twidth: 0,\r\n\t\t\touterHeight: 0,\r\n\t\t\touterWidth: 0\r\n\t\t};\r\n\r\n\tif ( mode === \"show\" ) {\r\n\t\tel.show();\r\n\t}\r\n\toriginal = {\r\n\t\theight: el.height(),\r\n\t\twidth: el.width(),\r\n\t\touterHeight: el.outerHeight(),\r\n\t\touterWidth: el.outerWidth()\r\n\t};\r\n\r\n\tif ( o.mode === \"toggle\" && mode === \"show\" ) {\r\n\t\tel.from = o.to || zero;\r\n\t\tel.to = o.from || original;\r\n\t} else {\r\n\t\tel.from = o.from || ( mode === \"show\" ? zero : original );\r\n\t\tel.to = o.to || ( mode === \"hide\" ? zero : original );\r\n\t}\r\n\r\n\t// Set scaling factor\r\n\tfactor = {\r\n\t\tfrom: {\r\n\t\t\ty: el.from.height / original.height,\r\n\t\t\tx: el.from.width / original.width\r\n\t\t},\r\n\t\tto: {\r\n\t\t\ty: el.to.height / original.height,\r\n\t\t\tx: el.to.width / original.width\r\n\t\t}\r\n\t};\r\n\r\n\t// Scale the css box\r\n\tif ( scale === \"box\" || scale === \"both\" ) {\r\n\r\n\t\t// Vertical props scaling\r\n\t\tif ( factor.from.y !== factor.to.y ) {\r\n\t\t\tprops = props.concat( vProps );\r\n\t\t\tel.from = $.effects.setTransition( el, vProps, factor.from.y, el.from );\r\n\t\t\tel.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );\r\n\t\t}\r\n\r\n\t\t// Horizontal props scaling\r\n\t\tif ( factor.from.x !== factor.to.x ) {\r\n\t\t\tprops = props.concat( hProps );\r\n\t\t\tel.from = $.effects.setTransition( el, hProps, factor.from.x, el.from );\r\n\t\t\tel.to = $.effects.setTransition( el, hProps, factor.to.x, el.to );\r\n\t\t}\r\n\t}\r\n\r\n\t// Scale the content\r\n\tif ( scale === \"content\" || scale === \"both\" ) {\r\n\r\n\t\t// Vertical props scaling\r\n\t\tif ( factor.from.y !== factor.to.y ) {\r\n\t\t\tprops = props.concat( cProps ).concat( props2 );\r\n\t\t\tel.from = $.effects.setTransition( el, cProps, factor.from.y, el.from );\r\n\t\t\tel.to = $.effects.setTransition( el, cProps, factor.to.y, el.to );\r\n\t\t}\r\n\t}\r\n\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\t$.effects.createWrapper( el );\r\n\tel.css( \"overflow\", \"hidden\" ).css( el.from );\r\n\r\n\t// Adjust\r\n\tif (origin) { // Calculate baseline shifts\r\n\t\tbaseline = $.effects.getBaseline( origin, original );\r\n\t\tel.from.top = ( original.outerHeight - el.outerHeight() ) * baseline.y;\r\n\t\tel.from.left = ( original.outerWidth - el.outerWidth() ) * baseline.x;\r\n\t\tel.to.top = ( original.outerHeight - el.to.outerHeight ) * baseline.y;\r\n\t\tel.to.left = ( original.outerWidth - el.to.outerWidth ) * baseline.x;\r\n\t}\r\n\tel.css( el.from ); // set top & left\r\n\r\n\t// Animate\r\n\tif ( scale === \"content\" || scale === \"both\" ) { // Scale the children\r\n\r\n\t\t// Add margins/font-size\r\n\t\tvProps = vProps.concat([ \"marginTop\", \"marginBottom\" ]).concat(cProps);\r\n\t\thProps = hProps.concat([ \"marginLeft\", \"marginRight\" ]);\r\n\t\tprops2 = props0.concat(vProps).concat(hProps);\r\n\r\n\t\tel.find( \"*[width]\" ).each( function(){\r\n\t\t\tvar child = $( this ),\r\n\t\t\t\tc_original = {\r\n\t\t\t\t\theight: child.height(),\r\n\t\t\t\t\twidth: child.width(),\r\n\t\t\t\t\touterHeight: child.outerHeight(),\r\n\t\t\t\t\touterWidth: child.outerWidth()\r\n\t\t\t\t};\r\n\t\t\tif (restore) {\r\n\t\t\t\t$.effects.save(child, props2);\r\n\t\t\t}\r\n\r\n\t\t\tchild.from = {\r\n\t\t\t\theight: c_original.height * factor.from.y,\r\n\t\t\t\twidth: c_original.width * factor.from.x,\r\n\t\t\t\touterHeight: c_original.outerHeight * factor.from.y,\r\n\t\t\t\touterWidth: c_original.outerWidth * factor.from.x\r\n\t\t\t};\r\n\t\t\tchild.to = {\r\n\t\t\t\theight: c_original.height * factor.to.y,\r\n\t\t\t\twidth: c_original.width * factor.to.x,\r\n\t\t\t\touterHeight: c_original.height * factor.to.y,\r\n\t\t\t\touterWidth: c_original.width * factor.to.x\r\n\t\t\t};\r\n\r\n\t\t\t// Vertical props scaling\r\n\t\t\tif ( factor.from.y !== factor.to.y ) {\r\n\t\t\t\tchild.from = $.effects.setTransition( child, vProps, factor.from.y, child.from );\r\n\t\t\t\tchild.to = $.effects.setTransition( child, vProps, factor.to.y, child.to );\r\n\t\t\t}\r\n\r\n\t\t\t// Horizontal props scaling\r\n\t\t\tif ( factor.from.x !== factor.to.x ) {\r\n\t\t\t\tchild.from = $.effects.setTransition( child, hProps, factor.from.x, child.from );\r\n\t\t\t\tchild.to = $.effects.setTransition( child, hProps, factor.to.x, child.to );\r\n\t\t\t}\r\n\r\n\t\t\t// Animate children\r\n\t\t\tchild.css( child.from );\r\n\t\t\tchild.animate( child.to, o.duration, o.easing, function() {\r\n\r\n\t\t\t\t// Restore children\r\n\t\t\t\tif ( restore ) {\r\n\t\t\t\t\t$.effects.restore( child, props2 );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// Animate\r\n\tel.animate( el.to, {\r\n\t\tqueue: false,\r\n\t\tduration: o.duration,\r\n\t\teasing: o.easing,\r\n\t\tcomplete: function() {\r\n\t\t\tif ( el.to.opacity === 0 ) {\r\n\t\t\t\tel.css( \"opacity\", el.from.opacity );\r\n\t\t\t}\r\n\t\t\tif( mode === \"hide\" ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\tif ( !restore ) {\r\n\r\n\t\t\t\t// we need to calculate our new positioning based on the scaling\r\n\t\t\t\tif ( position === \"static\" ) {\r\n\t\t\t\t\tel.css({\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\ttop: el.to.top,\r\n\t\t\t\t\t\tleft: el.to.left\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.each([ \"top\", \"left\" ], function( idx, pos ) {\r\n\t\t\t\t\t\tel.css( pos, function( _, str ) {\r\n\t\t\t\t\t\t\tvar val = parseInt( str, 10 ),\r\n\t\t\t\t\t\t\t\ttoRef = idx ? el.to.left : el.to.top;\r\n\r\n\t\t\t\t\t\t\t// if original was \"auto\", recalculate the new value from wrapper\r\n\t\t\t\t\t\t\tif ( str === \"auto\" ) {\r\n\t\t\t\t\t\t\t\treturn toRef + \"px\";\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn val + toRef + \"px\";\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.shake = function( o, done ) {\r\n\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"height\", \"width\" ],\r\n\t\tmode = $.effects.setMode( el, o.mode || \"effect\" ),\r\n\t\tdirection = o.direction || \"left\",\r\n\t\tdistance = o.distance || 20,\r\n\t\ttimes = o.times || 3,\r\n\t\tanims = times * 2 + 1,\r\n\t\tspeed = Math.round(o.duration/anims),\r\n\t\tref = (direction === \"up\" || direction === \"down\") ? \"top\" : \"left\",\r\n\t\tpositiveMotion = (direction === \"up\" || direction === \"left\"),\r\n\t\tanimation = {},\r\n\t\tanimation1 = {},\r\n\t\tanimation2 = {},\r\n\t\ti,\r\n\r\n\t\t// we will need to re-assemble the queue to stack our animations in place\r\n\t\tqueue = el.queue(),\r\n\t\tqueuelen = queue.length;\r\n\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\t$.effects.createWrapper( el );\r\n\r\n\t// Animation\r\n\tanimation[ ref ] = ( positiveMotion ? \"-=\" : \"+=\" ) + distance;\r\n\tanimation1[ ref ] = ( positiveMotion ? \"+=\" : \"-=\" ) + distance * 2;\r\n\tanimation2[ ref ] = ( positiveMotion ? \"-=\" : \"+=\" ) + distance * 2;\r\n\r\n\t// Animate\r\n\tel.animate( animation, speed, o.easing );\r\n\r\n\t// Shakes\r\n\tfor ( i = 1; i < times; i++ ) {\r\n\t\tel.animate( animation1, speed, o.easing ).animate( animation2, speed, o.easing );\r\n\t}\r\n\tel\r\n\t\t.animate( animation1, speed, o.easing )\r\n\t\t.animate( animation, speed / 2, o.easing )\r\n\t\t.queue(function() {\r\n\t\t\tif ( mode === \"hide\" ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t});\r\n\r\n\t// inject all the animations we just queued to be first in line (after \"inprogress\")\r\n\tif ( queuelen > 1) {\r\n\t\tqueue.splice.apply( queue,\r\n\t\t\t[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );\r\n\t}\r\n\tel.dequeue();\r\n\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.slide = function( o, done ) {\r\n\r\n\t// Create element\r\n\tvar el = $( this ),\r\n\t\tprops = [ \"position\", \"top\", \"bottom\", \"left\", \"right\", \"width\", \"height\" ],\r\n\t\tmode = $.effects.setMode( el, o.mode || \"show\" ),\r\n\t\tshow = mode === \"show\",\r\n\t\tdirection = o.direction || \"left\",\r\n\t\tref = (direction === \"up\" || direction === \"down\") ? \"top\" : \"left\",\r\n\t\tpositiveMotion = (direction === \"up\" || direction === \"left\"),\r\n\t\tdistance,\r\n\t\tanimation = {};\r\n\r\n\t// Adjust\r\n\t$.effects.save( el, props );\r\n\tel.show();\r\n\tdistance = o.distance || el[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]( true );\r\n\r\n\t$.effects.createWrapper( el ).css({\r\n\t\toverflow: \"hidden\"\r\n\t});\r\n\r\n\tif ( show ) {\r\n\t\tel.css( ref, positiveMotion ? (isNaN(distance) ? \"-\" + distance : -distance) : distance );\r\n\t}\r\n\r\n\t// Animation\r\n\tanimation[ ref ] = ( show ?\r\n\t\t( positiveMotion ? \"+=\" : \"-=\") :\r\n\t\t( positiveMotion ? \"-=\" : \"+=\")) +\r\n\t\tdistance;\r\n\r\n\t// Animate\r\n\tel.animate( animation, {\r\n\t\tqueue: false,\r\n\t\tduration: o.duration,\r\n\t\teasing: o.easing,\r\n\t\tcomplete: function() {\r\n\t\t\tif ( mode === \"hide\" ) {\r\n\t\t\t\tel.hide();\r\n\t\t\t}\r\n\t\t\t$.effects.restore( el, props );\r\n\t\t\t$.effects.removeWrapper( el );\r\n\t\t\tdone();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.effects.effect.transfer = function( o, done ) {\r\n\tvar elem = $( this ),\r\n\t\ttarget = $( o.to ),\r\n\t\ttargetFixed = target.css( \"position\" ) === \"fixed\",\r\n\t\tbody = $(\"body\"),\r\n\t\tfixTop = targetFixed ? body.scrollTop() : 0,\r\n\t\tfixLeft = targetFixed ? body.scrollLeft() : 0,\r\n\t\tendPosition = target.offset(),\r\n\t\tanimation = {\r\n\t\t\ttop: endPosition.top - fixTop ,\r\n\t\t\tleft: endPosition.left - fixLeft ,\r\n\t\t\theight: target.innerHeight(),\r\n\t\t\twidth: target.innerWidth()\r\n\t\t},\r\n\t\tstartPosition = elem.offset(),\r\n\t\ttransfer = $( \"<div class='ui-effects-transfer'></div>\" )\r\n\t\t\t.appendTo( document.body )\r\n\t\t\t.addClass( o.className )\r\n\t\t\t.css({\r\n\t\t\t\ttop: startPosition.top - fixTop ,\r\n\t\t\t\tleft: startPosition.left - fixLeft ,\r\n\t\t\t\theight: elem.innerHeight(),\r\n\t\t\t\twidth: elem.innerWidth(),\r\n\t\t\t\tposition: targetFixed ? \"fixed\" : \"absolute\"\r\n\t\t\t})\r\n\t\t\t.animate( animation, o.duration, o.easing, function() {\r\n\t\t\t\ttransfer.remove();\r\n\t\t\t\tdone();\r\n\t\t\t});\r\n};\r\n\r\n})(jQuery);\r\n\r\n(function( $, undefined ) {\r\n\r\n$.widget( \"ui.menu\", {\r\n\tversion: \"1.10.4\",\r\n\tdefaultElement: \"<ul>\",\r\n\tdelay: 300,\r\n\toptions: {\r\n\t\ticons: {\r\n\t\t\tsubmenu: \"ui-icon-carat-1-e\"\r\n\t\t},\r\n\t\tmenus: \"ul\",\r\n\t\tposition: {\r\n\t\t\tmy: \"left top\",\r\n\t\t\tat: \"right top\"\r\n\t\t},\r\n\t\trole: \"menu\",\r\n\r\n\t\t// callbacks\r\n\t\tblur: null,\r\n\t\tfocus: null,\r\n\t\tselect: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis.activeMenu = this.element;\r\n\t\t// flag used to prevent firing of the click handler\r\n\t\t// as the event bubbles up through nested menus\r\n\t\tthis.mouseHandled = false;\r\n\t\tthis.element\r\n\t\t\t.uniqueId()\r\n\t\t\t.addClass( \"ui-menu ui-widget ui-widget-content ui-corner-all\" )\r\n\t\t\t.toggleClass( \"ui-menu-icons\", !!this.element.find( \".ui-icon\" ).length )\r\n\t\t\t.attr({\r\n\t\t\t\trole: this.options.role,\r\n\t\t\t\ttabIndex: 0\r\n\t\t\t})\r\n\t\t\t// need to catch all clicks on disabled menu\r\n\t\t\t// not possible through _on\r\n\t\t\t.bind( \"click\" + this.eventNamespace, $.proxy(function( event ) {\r\n\t\t\t\tif ( this.options.disabled ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}, this ));\r\n\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\tthis.element\r\n\t\t\t\t.addClass( \"ui-state-disabled\" )\r\n\t\t\t\t.attr( \"aria-disabled\", \"true\" );\r\n\t\t}\r\n\r\n\t\tthis._on({\r\n\t\t\t// Prevent focus from sticking to links inside menu after clicking\r\n\t\t\t// them (focus should always stay on UL during navigation).\r\n\t\t\t\"mousedown .ui-menu-item > a\": function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t},\r\n\t\t\t\"click .ui-state-disabled > a\": function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t},\r\n\t\t\t\"click .ui-menu-item:has(a)\": function( event ) {\r\n\t\t\t\tvar target = $( event.target ).closest( \".ui-menu-item\" );\r\n\t\t\t\tif ( !this.mouseHandled && target.not( \".ui-state-disabled\" ).length ) {\r\n\t\t\t\t\tthis.select( event );\r\n\r\n\t\t\t\t\t// Only set the mouseHandled flag if the event will bubble, see #9469.\r\n\t\t\t\t\tif ( !event.isPropagationStopped() ) {\r\n\t\t\t\t\t\tthis.mouseHandled = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Open submenu on click\r\n\t\t\t\t\tif ( target.has( \".ui-menu\" ).length ) {\r\n\t\t\t\t\t\tthis.expand( event );\r\n\t\t\t\t\t} else if ( !this.element.is( \":focus\" ) && $( this.document[ 0 ].activeElement ).closest( \".ui-menu\" ).length ) {\r\n\r\n\t\t\t\t\t\t// Redirect focus to the menu\r\n\t\t\t\t\t\tthis.element.trigger( \"focus\", [ true ] );\r\n\r\n\t\t\t\t\t\t// If the active item is on the top level, let it stay active.\r\n\t\t\t\t\t\t// Otherwise, blur the active item since it is no longer visible.\r\n\t\t\t\t\t\tif ( this.active && this.active.parents( \".ui-menu\" ).length === 1 ) {\r\n\t\t\t\t\t\t\tclearTimeout( this.timer );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"mouseenter .ui-menu-item\": function( event ) {\r\n\t\t\t\tvar target = $( event.currentTarget );\r\n\t\t\t\t// Remove ui-state-active class from siblings of the newly focused menu item\r\n\t\t\t\t// to avoid a jump caused by adjacent elements both having a class with a border\r\n\t\t\t\ttarget.siblings().children( \".ui-state-active\" ).removeClass( \"ui-state-active\" );\r\n\t\t\t\tthis.focus( event, target );\r\n\t\t\t},\r\n\t\t\tmouseleave: \"collapseAll\",\r\n\t\t\t\"mouseleave .ui-menu\": \"collapseAll\",\r\n\t\t\tfocus: function( event, keepActiveItem ) {\r\n\t\t\t\t// If there's already an active item, keep it active\r\n\t\t\t\t// If not, activate the first item\r\n\t\t\t\tvar item = this.active || this.element.children( \".ui-menu-item\" ).eq( 0 );\r\n\r\n\t\t\t\tif ( !keepActiveItem ) {\r\n\t\t\t\t\tthis.focus( event, item );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tblur: function( event ) {\r\n\t\t\t\tthis._delay(function() {\r\n\t\t\t\t\tif ( !$.contains( this.element[0], this.document[0].activeElement ) ) {\r\n\t\t\t\t\t\tthis.collapseAll( event );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tkeydown: \"_keydown\"\r\n\t\t});\r\n\r\n\t\tthis.refresh();\r\n\r\n\t\t// Clicks outside of a menu collapse any open menus\r\n\t\tthis._on( this.document, {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tif ( !$( event.target ).closest( \".ui-menu\" ).length ) {\r\n\t\t\t\t\tthis.collapseAll( event );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset the mouseHandled flag\r\n\t\t\t\tthis.mouseHandled = false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\t// Destroy (sub)menus\r\n\t\tthis.element\r\n\t\t\t.removeAttr( \"aria-activedescendant\" )\r\n\t\t\t.find( \".ui-menu\" ).addBack()\r\n\t\t\t\t.removeClass( \"ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons\" )\r\n\t\t\t\t.removeAttr( \"role\" )\r\n\t\t\t\t.removeAttr( \"tabIndex\" )\r\n\t\t\t\t.removeAttr( \"aria-labelledby\" )\r\n\t\t\t\t.removeAttr( \"aria-expanded\" )\r\n\t\t\t\t.removeAttr( \"aria-hidden\" )\r\n\t\t\t\t.removeAttr( \"aria-disabled\" )\r\n\t\t\t\t.removeUniqueId()\r\n\t\t\t\t.show();\r\n\r\n\t\t// Destroy menu items\r\n\t\tthis.element.find( \".ui-menu-item\" )\r\n\t\t\t.removeClass( \"ui-menu-item\" )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"aria-disabled\" )\r\n\t\t\t.children( \"a\" )\r\n\t\t\t\t.removeUniqueId()\r\n\t\t\t\t.removeClass( \"ui-corner-all ui-state-hover\" )\r\n\t\t\t\t.removeAttr( \"tabIndex\" )\r\n\t\t\t\t.removeAttr( \"role\" )\r\n\t\t\t\t.removeAttr( \"aria-haspopup\" )\r\n\t\t\t\t.children().each( function() {\r\n\t\t\t\t\tvar elem = $( this );\r\n\t\t\t\t\tif ( elem.data( \"ui-menu-submenu-carat\" ) ) {\r\n\t\t\t\t\t\telem.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t// Destroy menu dividers\r\n\t\tthis.element.find( \".ui-menu-divider\" ).removeClass( \"ui-menu-divider ui-widget-content\" );\r\n\t},\r\n\r\n\t_keydown: function( event ) {\r\n\t\tvar match, prev, character, skip, regex,\r\n\t\t\tpreventDefault = true;\r\n\r\n\t\tfunction escape( value ) {\r\n\t\t\treturn value.replace( /[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\" );\r\n\t\t}\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\tthis.previousPage( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\tthis.nextPage( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.HOME:\r\n\t\t\tthis._move( \"first\", \"first\", event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.END:\r\n\t\t\tthis._move( \"last\", \"last\", event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.UP:\r\n\t\t\tthis.previous( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\tthis.next( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\tthis.collapse( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\tif ( this.active && !this.active.is( \".ui-state-disabled\" ) ) {\r\n\t\t\t\tthis.expand( event );\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.ENTER:\r\n\t\tcase $.ui.keyCode.SPACE:\r\n\t\t\tthis._activate( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.ESCAPE:\r\n\t\t\tthis.collapse( event );\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tpreventDefault = false;\r\n\t\t\tprev = this.previousFilter || \"\";\r\n\t\t\tcharacter = String.fromCharCode( event.keyCode );\r\n\t\t\tskip = false;\r\n\r\n\t\t\tclearTimeout( this.filterTimer );\r\n\r\n\t\t\tif ( character === prev ) {\r\n\t\t\t\tskip = true;\r\n\t\t\t} else {\r\n\t\t\t\tcharacter = prev + character;\r\n\t\t\t}\r\n\r\n\t\t\tregex = new RegExp( \"^\" + escape( character ), \"i\" );\r\n\t\t\tmatch = this.activeMenu.children( \".ui-menu-item\" ).filter(function() {\r\n\t\t\t\treturn regex.test( $( this ).children( \"a\" ).text() );\r\n\t\t\t});\r\n\t\t\tmatch = skip && match.index( this.active.next() ) !== -1 ?\r\n\t\t\t\tthis.active.nextAll( \".ui-menu-item\" ) :\r\n\t\t\t\tmatch;\r\n\r\n\t\t\t// If no matches on the current filter, reset to the last character pressed\r\n\t\t\t// to move down the menu to the first item that starts with that character\r\n\t\t\tif ( !match.length ) {\r\n\t\t\t\tcharacter = String.fromCharCode( event.keyCode );\r\n\t\t\t\tregex = new RegExp( \"^\" + escape( character ), \"i\" );\r\n\t\t\t\tmatch = this.activeMenu.children( \".ui-menu-item\" ).filter(function() {\r\n\t\t\t\t\treturn regex.test( $( this ).children( \"a\" ).text() );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif ( match.length ) {\r\n\t\t\t\tthis.focus( event, match );\r\n\t\t\t\tif ( match.length > 1 ) {\r\n\t\t\t\t\tthis.previousFilter = character;\r\n\t\t\t\t\tthis.filterTimer = this._delay(function() {\r\n\t\t\t\t\t\tdelete this.previousFilter;\r\n\t\t\t\t\t}, 1000 );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdelete this.previousFilter;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete this.previousFilter;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( preventDefault ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t_activate: function( event ) {\r\n\t\tif ( !this.active.is( \".ui-state-disabled\" ) ) {\r\n\t\t\tif ( this.active.children( \"a[aria-haspopup='true']\" ).length ) {\r\n\t\t\t\tthis.expand( event );\r\n\t\t\t} else {\r\n\t\t\t\tthis.select( event );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar menus,\r\n\t\t\ticon = this.options.icons.submenu,\r\n\t\t\tsubmenus = this.element.find( this.options.menus );\r\n\r\n\t\tthis.element.toggleClass( \"ui-menu-icons\", !!this.element.find( \".ui-icon\" ).length );\r\n\r\n\t\t// Initialize nested menus\r\n\t\tsubmenus.filter( \":not(.ui-menu)\" )\r\n\t\t\t.addClass( \"ui-menu ui-widget ui-widget-content ui-corner-all\" )\r\n\t\t\t.hide()\r\n\t\t\t.attr({\r\n\t\t\t\trole: this.options.role,\r\n\t\t\t\t\"aria-hidden\": \"true\",\r\n\t\t\t\t\"aria-expanded\": \"false\"\r\n\t\t\t})\r\n\t\t\t.each(function() {\r\n\t\t\t\tvar menu = $( this ),\r\n\t\t\t\t\titem = menu.prev( \"a\" ),\r\n\t\t\t\t\tsubmenuCarat = $( \"<span>\" )\r\n\t\t\t\t\t\t.addClass( \"ui-menu-icon ui-icon \" + icon )\r\n\t\t\t\t\t\t.data( \"ui-menu-submenu-carat\", true );\r\n\r\n\t\t\t\titem\r\n\t\t\t\t\t.attr( \"aria-haspopup\", \"true\" )\r\n\t\t\t\t\t.prepend( submenuCarat );\r\n\t\t\t\tmenu.attr( \"aria-labelledby\", item.attr( \"id\" ) );\r\n\t\t\t});\r\n\r\n\t\tmenus = submenus.add( this.element );\r\n\r\n\t\t// Don't refresh list items that are already adapted\r\n\t\tmenus.children( \":not(.ui-menu-item):has(a)\" )\r\n\t\t\t.addClass( \"ui-menu-item\" )\r\n\t\t\t.attr( \"role\", \"presentation\" )\r\n\t\t\t.children( \"a\" )\r\n\t\t\t\t.uniqueId()\r\n\t\t\t\t.addClass( \"ui-corner-all\" )\r\n\t\t\t\t.attr({\r\n\t\t\t\t\ttabIndex: -1,\r\n\t\t\t\t\trole: this._itemRole()\r\n\t\t\t\t});\r\n\r\n\t\t// Initialize unlinked menu-items containing spaces and/or dashes only as dividers\r\n\t\tmenus.children( \":not(.ui-menu-item)\" ).each(function() {\r\n\t\t\tvar item = $( this );\r\n\t\t\t// hyphen, em dash, en dash\r\n\t\t\tif ( !/[^\\-\\u2014\\u2013\\s]/.test( item.text() ) ) {\r\n\t\t\t\titem.addClass( \"ui-widget-content ui-menu-divider\" );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Add aria-disabled attribute to any disabled menu item\r\n\t\tmenus.children( \".ui-state-disabled\" ).attr( \"aria-disabled\", \"true\" );\r\n\r\n\t\t// If the active item has been removed, blur the menu\r\n\t\tif ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t},\r\n\r\n\t_itemRole: function() {\r\n\t\treturn {\r\n\t\t\tmenu: \"menuitem\",\r\n\t\t\tlistbox: \"option\"\r\n\t\t}[ this.options.role ];\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tthis.element.find( \".ui-menu-icon\" )\r\n\t\t\t\t.removeClass( this.options.icons.submenu )\r\n\t\t\t\t.addClass( value.submenu );\r\n\t\t}\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\tfocus: function( event, item ) {\r\n\t\tvar nested, focused;\r\n\t\tthis.blur( event, event && event.type === \"focus\" );\r\n\r\n\t\tthis._scrollIntoView( item );\r\n\r\n\t\tthis.active = item.first();\r\n\t\tfocused = this.active.children( \"a\" ).addClass( \"ui-state-focus\" );\r\n\t\t// Only update aria-activedescendant if there's a role\r\n\t\t// otherwise we assume focus is managed elsewhere\r\n\t\tif ( this.options.role ) {\r\n\t\t\tthis.element.attr( \"aria-activedescendant\", focused.attr( \"id\" ) );\r\n\t\t}\r\n\r\n\t\t// Highlight active parent menu item, if any\r\n\t\tthis.active\r\n\t\t\t.parent()\r\n\t\t\t.closest( \".ui-menu-item\" )\r\n\t\t\t.children( \"a:first\" )\r\n\t\t\t.addClass( \"ui-state-active\" );\r\n\r\n\t\tif ( event && event.type === \"keydown\" ) {\r\n\t\t\tthis._close();\r\n\t\t} else {\r\n\t\t\tthis.timer = this._delay(function() {\r\n\t\t\t\tthis._close();\r\n\t\t\t}, this.delay );\r\n\t\t}\r\n\r\n\t\tnested = item.children( \".ui-menu\" );\r\n\t\tif ( nested.length && event && ( /^mouse/.test( event.type ) ) ) {\r\n\t\t\tthis._startOpening(nested);\r\n\t\t}\r\n\t\tthis.activeMenu = item.parent();\r\n\r\n\t\tthis._trigger( \"focus\", event, { item: item } );\r\n\t},\r\n\r\n\t_scrollIntoView: function( item ) {\r\n\t\tvar borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;\r\n\t\tif ( this._hasScroll() ) {\r\n\t\t\tborderTop = parseFloat( $.css( this.activeMenu[0], \"borderTopWidth\" ) ) || 0;\r\n\t\t\tpaddingTop = parseFloat( $.css( this.activeMenu[0], \"paddingTop\" ) ) || 0;\r\n\t\t\toffset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;\r\n\t\t\tscroll = this.activeMenu.scrollTop();\r\n\t\t\telementHeight = this.activeMenu.height();\r\n\t\t\titemHeight = item.height();\r\n\r\n\t\t\tif ( offset < 0 ) {\r\n\t\t\t\tthis.activeMenu.scrollTop( scroll + offset );\r\n\t\t\t} else if ( offset + itemHeight > elementHeight ) {\r\n\t\t\t\tthis.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tblur: function( event, fromFocus ) {\r\n\t\tif ( !fromFocus ) {\r\n\t\t\tclearTimeout( this.timer );\r\n\t\t}\r\n\r\n\t\tif ( !this.active ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.active.children( \"a\" ).removeClass( \"ui-state-focus\" );\r\n\t\tthis.active = null;\r\n\r\n\t\tthis._trigger( \"blur\", event, { item: this.active } );\r\n\t},\r\n\r\n\t_startOpening: function( submenu ) {\r\n\t\tclearTimeout( this.timer );\r\n\r\n\t\t// Don't open if already open fixes a Firefox bug that caused a .5 pixel\r\n\t\t// shift in the submenu position when mousing over the carat icon\r\n\t\tif ( submenu.attr( \"aria-hidden\" ) !== \"true\" ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.timer = this._delay(function() {\r\n\t\t\tthis._close();\r\n\t\t\tthis._open( submenu );\r\n\t\t}, this.delay );\r\n\t},\r\n\r\n\t_open: function( submenu ) {\r\n\t\tvar position = $.extend({\r\n\t\t\tof: this.active\r\n\t\t}, this.options.position );\r\n\r\n\t\tclearTimeout( this.timer );\r\n\t\tthis.element.find( \".ui-menu\" ).not( submenu.parents( \".ui-menu\" ) )\r\n\t\t\t.hide()\r\n\t\t\t.attr( \"aria-hidden\", \"true\" );\r\n\r\n\t\tsubmenu\r\n\t\t\t.show()\r\n\t\t\t.removeAttr( \"aria-hidden\" )\r\n\t\t\t.attr( \"aria-expanded\", \"true\" )\r\n\t\t\t.position( position );\r\n\t},\r\n\r\n\tcollapseAll: function( event, all ) {\r\n\t\tclearTimeout( this.timer );\r\n\t\tthis.timer = this._delay(function() {\r\n\t\t\t// If we were passed an event, look for the submenu that contains the event\r\n\t\t\tvar currentMenu = all ? this.element :\r\n\t\t\t\t$( event && event.target ).closest( this.element.find( \".ui-menu\" ) );\r\n\r\n\t\t\t// If we found no valid submenu ancestor, use the main menu to close all sub menus anyway\r\n\t\t\tif ( !currentMenu.length ) {\r\n\t\t\t\tcurrentMenu = this.element;\r\n\t\t\t}\r\n\r\n\t\t\tthis._close( currentMenu );\r\n\r\n\t\t\tthis.blur( event );\r\n\t\t\tthis.activeMenu = currentMenu;\r\n\t\t}, this.delay );\r\n\t},\r\n\r\n\t// With no arguments, closes the currently active menu - if nothing is active\r\n\t// it closes all menus.  If passed an argument, it will search for menus BELOW\r\n\t_close: function( startMenu ) {\r\n\t\tif ( !startMenu ) {\r\n\t\t\tstartMenu = this.active ? this.active.parent() : this.element;\r\n\t\t}\r\n\r\n\t\tstartMenu\r\n\t\t\t.find( \".ui-menu\" )\r\n\t\t\t\t.hide()\r\n\t\t\t\t.attr( \"aria-hidden\", \"true\" )\r\n\t\t\t\t.attr( \"aria-expanded\", \"false\" )\r\n\t\t\t.end()\r\n\t\t\t.find( \"a.ui-state-active\" )\r\n\t\t\t\t.removeClass( \"ui-state-active\" );\r\n\t},\r\n\r\n\tcollapse: function( event ) {\r\n\t\tvar newItem = this.active &&\r\n\t\t\tthis.active.parent().closest( \".ui-menu-item\", this.element );\r\n\t\tif ( newItem && newItem.length ) {\r\n\t\t\tthis._close();\r\n\t\t\tthis.focus( event, newItem );\r\n\t\t}\r\n\t},\r\n\r\n\texpand: function( event ) {\r\n\t\tvar newItem = this.active &&\r\n\t\t\tthis.active\r\n\t\t\t\t.children( \".ui-menu \" )\r\n\t\t\t\t.children( \".ui-menu-item\" )\r\n\t\t\t\t.first();\r\n\r\n\t\tif ( newItem && newItem.length ) {\r\n\t\t\tthis._open( newItem.parent() );\r\n\r\n\t\t\t// Delay so Firefox will not hide activedescendant change in expanding submenu from AT\r\n\t\t\tthis._delay(function() {\r\n\t\t\t\tthis.focus( event, newItem );\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tnext: function( event ) {\r\n\t\tthis._move( \"next\", \"first\", event );\r\n\t},\r\n\r\n\tprevious: function( event ) {\r\n\t\tthis._move( \"prev\", \"last\", event );\r\n\t},\r\n\r\n\tisFirstItem: function() {\r\n\t\treturn this.active && !this.active.prevAll( \".ui-menu-item\" ).length;\r\n\t},\r\n\r\n\tisLastItem: function() {\r\n\t\treturn this.active && !this.active.nextAll( \".ui-menu-item\" ).length;\r\n\t},\r\n\r\n\t_move: function( direction, filter, event ) {\r\n\t\tvar next;\r\n\t\tif ( this.active ) {\r\n\t\t\tif ( direction === \"first\" || direction === \"last\" ) {\r\n\t\t\t\tnext = this.active\r\n\t\t\t\t\t[ direction === \"first\" ? \"prevAll\" : \"nextAll\" ]( \".ui-menu-item\" )\r\n\t\t\t\t\t.eq( -1 );\r\n\t\t\t} else {\r\n\t\t\t\tnext = this.active\r\n\t\t\t\t\t[ direction + \"All\" ]( \".ui-menu-item\" )\r\n\t\t\t\t\t.eq( 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( !next || !next.length || !this.active ) {\r\n\t\t\tnext = this.activeMenu.children( \".ui-menu-item\" )[ filter ]();\r\n\t\t}\r\n\r\n\t\tthis.focus( event, next );\r\n\t},\r\n\r\n\tnextPage: function( event ) {\r\n\t\tvar item, base, height;\r\n\r\n\t\tif ( !this.active ) {\r\n\t\t\tthis.next( event );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this.isLastItem() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this._hasScroll() ) {\r\n\t\t\tbase = this.active.offset().top;\r\n\t\t\theight = this.element.height();\r\n\t\t\tthis.active.nextAll( \".ui-menu-item\" ).each(function() {\r\n\t\t\t\titem = $( this );\r\n\t\t\t\treturn item.offset().top - base - height < 0;\r\n\t\t\t});\r\n\r\n\t\t\tthis.focus( event, item );\r\n\t\t} else {\r\n\t\t\tthis.focus( event, this.activeMenu.children( \".ui-menu-item\" )\r\n\t\t\t\t[ !this.active ? \"first\" : \"last\" ]() );\r\n\t\t}\r\n\t},\r\n\r\n\tpreviousPage: function( event ) {\r\n\t\tvar item, base, height;\r\n\t\tif ( !this.active ) {\r\n\t\t\tthis.next( event );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this.isFirstItem() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this._hasScroll() ) {\r\n\t\t\tbase = this.active.offset().top;\r\n\t\t\theight = this.element.height();\r\n\t\t\tthis.active.prevAll( \".ui-menu-item\" ).each(function() {\r\n\t\t\t\titem = $( this );\r\n\t\t\t\treturn item.offset().top - base + height > 0;\r\n\t\t\t});\r\n\r\n\t\t\tthis.focus( event, item );\r\n\t\t} else {\r\n\t\t\tthis.focus( event, this.activeMenu.children( \".ui-menu-item\" ).first() );\r\n\t\t}\r\n\t},\r\n\r\n\t_hasScroll: function() {\r\n\t\treturn this.element.outerHeight() < this.element.prop( \"scrollHeight\" );\r\n\t},\r\n\r\n\tselect: function( event ) {\r\n\t\t// TODO: It should never be possible to not have an active item at this\r\n\t\t// point, but the tests don't trigger mouseenter before click.\r\n\t\tthis.active = this.active || $( event.target ).closest( \".ui-menu-item\" );\r\n\t\tvar ui = { item: this.active };\r\n\t\tif ( !this.active.has( \".ui-menu\" ).length ) {\r\n\t\t\tthis.collapseAll( event, true );\r\n\t\t}\r\n\t\tthis._trigger( \"select\", event, ui );\r\n\t}\r\n});\r\n\r\n}( jQuery ));\r\n\r\n(function( $, undefined ) {\r\n\r\n$.ui = $.ui || {};\r\n\r\nvar cachedScrollbarWidth,\r\n\tmax = Math.max,\r\n\tabs = Math.abs,\r\n\tround = Math.round,\r\n\trhorizontal = /left|center|right/,\r\n\trvertical = /top|center|bottom/,\r\n\troffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n\trposition = /^\\w+/,\r\n\trpercent = /%$/,\r\n\t_position = $.fn.position;\r\n\r\nfunction getOffsets( offsets, width, height ) {\r\n\treturn [\r\n\t\tparseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n\t\tparseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n\t];\r\n}\r\n\r\nfunction parseCss( element, property ) {\r\n\treturn parseInt( $.css( element, property ), 10 ) || 0;\r\n}\r\n\r\nfunction getDimensions( elem ) {\r\n\tvar raw = elem[0];\r\n\tif ( raw.nodeType === 9 ) {\r\n\t\treturn {\r\n\t\t\twidth: elem.width(),\r\n\t\t\theight: elem.height(),\r\n\t\t\toffset: { top: 0, left: 0 }\r\n\t\t};\r\n\t}\r\n\tif ( $.isWindow( raw ) ) {\r\n\t\treturn {\r\n\t\t\twidth: elem.width(),\r\n\t\t\theight: elem.height(),\r\n\t\t\toffset: { top: elem.scrollTop(), left: elem.scrollLeft() }\r\n\t\t};\r\n\t}\r\n\tif ( raw.preventDefault ) {\r\n\t\treturn {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\toffset: { top: raw.pageY, left: raw.pageX }\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\twidth: elem.outerWidth(),\r\n\t\theight: elem.outerHeight(),\r\n\t\toffset: elem.offset()\r\n\t};\r\n}\r\n\r\n$.position = {\r\n\tscrollbarWidth: function() {\r\n\t\tif ( cachedScrollbarWidth !== undefined ) {\r\n\t\t\treturn cachedScrollbarWidth;\r\n\t\t}\r\n\t\tvar w1, w2,\r\n\t\t\tdiv = $( \"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\" ),\r\n\t\t\tinnerDiv = div.children()[0];\r\n\r\n\t\t$( \"body\" ).append( div );\r\n\t\tw1 = innerDiv.offsetWidth;\r\n\t\tdiv.css( \"overflow\", \"scroll\" );\r\n\r\n\t\tw2 = innerDiv.offsetWidth;\r\n\r\n\t\tif ( w1 === w2 ) {\r\n\t\t\tw2 = div[0].clientWidth;\r\n\t\t}\r\n\r\n\t\tdiv.remove();\r\n\r\n\t\treturn (cachedScrollbarWidth = w1 - w2);\r\n\t},\r\n\tgetScrollInfo: function( within ) {\r\n\t\tvar overflowX = within.isWindow || within.isDocument ? \"\" :\r\n\t\t\t\twithin.element.css( \"overflow-x\" ),\r\n\t\t\toverflowY = within.isWindow || within.isDocument ? \"\" :\r\n\t\t\t\twithin.element.css( \"overflow-y\" ),\r\n\t\t\thasOverflowX = overflowX === \"scroll\" ||\r\n\t\t\t\t( overflowX === \"auto\" && within.width < within.element[0].scrollWidth ),\r\n\t\t\thasOverflowY = overflowY === \"scroll\" ||\r\n\t\t\t\t( overflowY === \"auto\" && within.height < within.element[0].scrollHeight );\r\n\t\treturn {\r\n\t\t\twidth: hasOverflowY ? $.position.scrollbarWidth() : 0,\r\n\t\t\theight: hasOverflowX ? $.position.scrollbarWidth() : 0\r\n\t\t};\r\n\t},\r\n\tgetWithinInfo: function( element ) {\r\n\t\tvar withinElement = $( element || window ),\r\n\t\t\tisWindow = $.isWindow( withinElement[0] ),\r\n\t\t\tisDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9;\r\n\t\treturn {\r\n\t\t\telement: withinElement,\r\n\t\t\tisWindow: isWindow,\r\n\t\t\tisDocument: isDocument,\r\n\t\t\toffset: withinElement.offset() || { left: 0, top: 0 },\r\n\t\t\tscrollLeft: withinElement.scrollLeft(),\r\n\t\t\tscrollTop: withinElement.scrollTop(),\r\n\t\t\twidth: isWindow ? withinElement.width() : withinElement.outerWidth(),\r\n\t\t\theight: isWindow ? withinElement.height() : withinElement.outerHeight()\r\n\t\t};\r\n\t}\r\n};\r\n\r\n$.fn.position = function( options ) {\r\n\tif ( !options || !options.of ) {\r\n\t\treturn _position.apply( this, arguments );\r\n\t}\r\n\r\n\t// make a copy, we don't want to modify arguments\r\n\toptions = $.extend( {}, options );\r\n\r\n\tvar atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n\t\ttarget = $( options.of ),\r\n\t\twithin = $.position.getWithinInfo( options.within ),\r\n\t\tscrollInfo = $.position.getScrollInfo( within ),\r\n\t\tcollision = ( options.collision || \"flip\" ).split( \" \" ),\r\n\t\toffsets = {};\r\n\r\n\tdimensions = getDimensions( target );\r\n\tif ( target[0].preventDefault ) {\r\n\t\t// force left top to allow flipping\r\n\t\toptions.at = \"left top\";\r\n\t}\r\n\ttargetWidth = dimensions.width;\r\n\ttargetHeight = dimensions.height;\r\n\ttargetOffset = dimensions.offset;\r\n\t// clone to reuse original targetOffset later\r\n\tbasePosition = $.extend( {}, targetOffset );\r\n\r\n\t// force my and at to have valid horizontal and vertical positions\r\n\t// if a value is missing or invalid, it will be converted to center\r\n\t$.each( [ \"my\", \"at\" ], function() {\r\n\t\tvar pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n\t\t\thorizontalOffset,\r\n\t\t\tverticalOffset;\r\n\r\n\t\tif ( pos.length === 1) {\r\n\t\t\tpos = rhorizontal.test( pos[ 0 ] ) ?\r\n\t\t\t\tpos.concat( [ \"center\" ] ) :\r\n\t\t\t\trvertical.test( pos[ 0 ] ) ?\r\n\t\t\t\t\t[ \"center\" ].concat( pos ) :\r\n\t\t\t\t\t[ \"center\", \"center\" ];\r\n\t\t}\r\n\t\tpos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n\t\tpos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n\t\t// calculate offsets\r\n\t\thorizontalOffset = roffset.exec( pos[ 0 ] );\r\n\t\tverticalOffset = roffset.exec( pos[ 1 ] );\r\n\t\toffsets[ this ] = [\r\n\t\t\thorizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n\t\t\tverticalOffset ? verticalOffset[ 0 ] : 0\r\n\t\t];\r\n\r\n\t\t// reduce to just the positions without the offsets\r\n\t\toptions[ this ] = [\r\n\t\t\trposition.exec( pos[ 0 ] )[ 0 ],\r\n\t\t\trposition.exec( pos[ 1 ] )[ 0 ]\r\n\t\t];\r\n\t});\r\n\r\n\t// normalize collision option\r\n\tif ( collision.length === 1 ) {\r\n\t\tcollision[ 1 ] = collision[ 0 ];\r\n\t}\r\n\r\n\tif ( options.at[ 0 ] === \"right\" ) {\r\n\t\tbasePosition.left += targetWidth;\r\n\t} else if ( options.at[ 0 ] === \"center\" ) {\r\n\t\tbasePosition.left += targetWidth / 2;\r\n\t}\r\n\r\n\tif ( options.at[ 1 ] === \"bottom\" ) {\r\n\t\tbasePosition.top += targetHeight;\r\n\t} else if ( options.at[ 1 ] === \"center\" ) {\r\n\t\tbasePosition.top += targetHeight / 2;\r\n\t}\r\n\r\n\tatOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n\tbasePosition.left += atOffset[ 0 ];\r\n\tbasePosition.top += atOffset[ 1 ];\r\n\r\n\treturn this.each(function() {\r\n\t\tvar collisionPosition, using,\r\n\t\t\telem = $( this ),\r\n\t\t\telemWidth = elem.outerWidth(),\r\n\t\t\telemHeight = elem.outerHeight(),\r\n\t\t\tmarginLeft = parseCss( this, \"marginLeft\" ),\r\n\t\t\tmarginTop = parseCss( this, \"marginTop\" ),\r\n\t\t\tcollisionWidth = elemWidth + marginLeft + parseCss( this, \"marginRight\" ) + scrollInfo.width,\r\n\t\t\tcollisionHeight = elemHeight + marginTop + parseCss( this, \"marginBottom\" ) + scrollInfo.height,\r\n\t\t\tposition = $.extend( {}, basePosition ),\r\n\t\t\tmyOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );\r\n\r\n\t\tif ( options.my[ 0 ] === \"right\" ) {\r\n\t\t\tposition.left -= elemWidth;\r\n\t\t} else if ( options.my[ 0 ] === \"center\" ) {\r\n\t\t\tposition.left -= elemWidth / 2;\r\n\t\t}\r\n\r\n\t\tif ( options.my[ 1 ] === \"bottom\" ) {\r\n\t\t\tposition.top -= elemHeight;\r\n\t\t} else if ( options.my[ 1 ] === \"center\" ) {\r\n\t\t\tposition.top -= elemHeight / 2;\r\n\t\t}\r\n\r\n\t\tposition.left += myOffset[ 0 ];\r\n\t\tposition.top += myOffset[ 1 ];\r\n\r\n\t\t// if the browser doesn't support fractions, then round for consistent results\r\n\t\tif ( !$.support.offsetFractions ) {\r\n\t\t\tposition.left = round( position.left );\r\n\t\t\tposition.top = round( position.top );\r\n\t\t}\r\n\r\n\t\tcollisionPosition = {\r\n\t\t\tmarginLeft: marginLeft,\r\n\t\t\tmarginTop: marginTop\r\n\t\t};\r\n\r\n\t\t$.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n\t\t\tif ( $.ui.position[ collision[ i ] ] ) {\r\n\t\t\t\t$.ui.position[ collision[ i ] ][ dir ]( position, {\r\n\t\t\t\t\ttargetWidth: targetWidth,\r\n\t\t\t\t\ttargetHeight: targetHeight,\r\n\t\t\t\t\telemWidth: elemWidth,\r\n\t\t\t\t\telemHeight: elemHeight,\r\n\t\t\t\t\tcollisionPosition: collisionPosition,\r\n\t\t\t\t\tcollisionWidth: collisionWidth,\r\n\t\t\t\t\tcollisionHeight: collisionHeight,\r\n\t\t\t\t\toffset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n\t\t\t\t\tmy: options.my,\r\n\t\t\t\t\tat: options.at,\r\n\t\t\t\t\twithin: within,\r\n\t\t\t\t\telem : elem\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif ( options.using ) {\r\n\t\t\t// adds feedback as second argument to using callback, if present\r\n\t\t\tusing = function( props ) {\r\n\t\t\t\tvar left = targetOffset.left - position.left,\r\n\t\t\t\t\tright = left + targetWidth - elemWidth,\r\n\t\t\t\t\ttop = targetOffset.top - position.top,\r\n\t\t\t\t\tbottom = top + targetHeight - elemHeight,\r\n\t\t\t\t\tfeedback = {\r\n\t\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\t\telement: target,\r\n\t\t\t\t\t\t\tleft: targetOffset.left,\r\n\t\t\t\t\t\t\ttop: targetOffset.top,\r\n\t\t\t\t\t\t\twidth: targetWidth,\r\n\t\t\t\t\t\t\theight: targetHeight\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\telement: {\r\n\t\t\t\t\t\t\telement: elem,\r\n\t\t\t\t\t\t\tleft: position.left,\r\n\t\t\t\t\t\t\ttop: position.top,\r\n\t\t\t\t\t\t\twidth: elemWidth,\r\n\t\t\t\t\t\t\theight: elemHeight\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\thorizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n\t\t\t\t\t\tvertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n\t\t\t\t\t};\r\n\t\t\t\tif ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n\t\t\t\t\tfeedback.horizontal = \"center\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n\t\t\t\t\tfeedback.vertical = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n\t\t\t\t\tfeedback.important = \"horizontal\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfeedback.important = \"vertical\";\r\n\t\t\t\t}\r\n\t\t\t\toptions.using.call( this, props, feedback );\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\telem.offset( $.extend( position, { using: using } ) );\r\n\t});\r\n};\r\n\r\n$.ui.position = {\r\n\tfit: {\r\n\t\tleft: function( position, data ) {\r\n\t\t\tvar within = data.within,\r\n\t\t\t\twithinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n\t\t\t\touterWidth = within.width,\r\n\t\t\t\tcollisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n\t\t\t\toverLeft = withinOffset - collisionPosLeft,\r\n\t\t\t\toverRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n\t\t\t\tnewOverRight;\r\n\r\n\t\t\t// element is wider than within\r\n\t\t\tif ( data.collisionWidth > outerWidth ) {\r\n\t\t\t\t// element is initially over the left side of within\r\n\t\t\t\tif ( overLeft > 0 && overRight <= 0 ) {\r\n\t\t\t\t\tnewOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;\r\n\t\t\t\t\tposition.left += overLeft - newOverRight;\r\n\t\t\t\t// element is initially over right side of within\r\n\t\t\t\t} else if ( overRight > 0 && overLeft <= 0 ) {\r\n\t\t\t\t\tposition.left = withinOffset;\r\n\t\t\t\t// element is initially over both left and right sides of within\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( overLeft > overRight ) {\r\n\t\t\t\t\t\tposition.left = withinOffset + outerWidth - data.collisionWidth;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tposition.left = withinOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t// too far left -> align with left edge\r\n\t\t\t} else if ( overLeft > 0 ) {\r\n\t\t\t\tposition.left += overLeft;\r\n\t\t\t// too far right -> align with right edge\r\n\t\t\t} else if ( overRight > 0 ) {\r\n\t\t\t\tposition.left -= overRight;\r\n\t\t\t// adjust based on position and margin\r\n\t\t\t} else {\r\n\t\t\t\tposition.left = max( position.left - collisionPosLeft, position.left );\r\n\t\t\t}\r\n\t\t},\r\n\t\ttop: function( position, data ) {\r\n\t\t\tvar within = data.within,\r\n\t\t\t\twithinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n\t\t\t\touterHeight = data.within.height,\r\n\t\t\t\tcollisionPosTop = position.top - data.collisionPosition.marginTop,\r\n\t\t\t\toverTop = withinOffset - collisionPosTop,\r\n\t\t\t\toverBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n\t\t\t\tnewOverBottom;\r\n\r\n\t\t\t// element is taller than within\r\n\t\t\tif ( data.collisionHeight > outerHeight ) {\r\n\t\t\t\t// element is initially over the top of within\r\n\t\t\t\tif ( overTop > 0 && overBottom <= 0 ) {\r\n\t\t\t\t\tnewOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;\r\n\t\t\t\t\tposition.top += overTop - newOverBottom;\r\n\t\t\t\t// element is initially over bottom of within\r\n\t\t\t\t} else if ( overBottom > 0 && overTop <= 0 ) {\r\n\t\t\t\t\tposition.top = withinOffset;\r\n\t\t\t\t// element is initially over both top and bottom of within\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( overTop > overBottom ) {\r\n\t\t\t\t\t\tposition.top = withinOffset + outerHeight - data.collisionHeight;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tposition.top = withinOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t// too far up -> align with top\r\n\t\t\t} else if ( overTop > 0 ) {\r\n\t\t\t\tposition.top += overTop;\r\n\t\t\t// too far down -> align with bottom edge\r\n\t\t\t} else if ( overBottom > 0 ) {\r\n\t\t\t\tposition.top -= overBottom;\r\n\t\t\t// adjust based on position and margin\r\n\t\t\t} else {\r\n\t\t\t\tposition.top = max( position.top - collisionPosTop, position.top );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tflip: {\r\n\t\tleft: function( position, data ) {\r\n\t\t\tvar within = data.within,\r\n\t\t\t\twithinOffset = within.offset.left + within.scrollLeft,\r\n\t\t\t\touterWidth = within.width,\r\n\t\t\t\toffsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n\t\t\t\tcollisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n\t\t\t\toverLeft = collisionPosLeft - offsetLeft,\r\n\t\t\t\toverRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n\t\t\t\tmyOffset = data.my[ 0 ] === \"left\" ?\r\n\t\t\t\t\t-data.elemWidth :\r\n\t\t\t\t\tdata.my[ 0 ] === \"right\" ?\r\n\t\t\t\t\t\tdata.elemWidth :\r\n\t\t\t\t\t\t0,\r\n\t\t\t\tatOffset = data.at[ 0 ] === \"left\" ?\r\n\t\t\t\t\tdata.targetWidth :\r\n\t\t\t\t\tdata.at[ 0 ] === \"right\" ?\r\n\t\t\t\t\t\t-data.targetWidth :\r\n\t\t\t\t\t\t0,\r\n\t\t\t\toffset = -2 * data.offset[ 0 ],\r\n\t\t\t\tnewOverRight,\r\n\t\t\t\tnewOverLeft;\r\n\r\n\t\t\tif ( overLeft < 0 ) {\r\n\t\t\t\tnewOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;\r\n\t\t\t\tif ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n\t\t\t\t\tposition.left += myOffset + atOffset + offset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( overRight > 0 ) {\r\n\t\t\t\tnewOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;\r\n\t\t\t\tif ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n\t\t\t\t\tposition.left += myOffset + atOffset + offset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttop: function( position, data ) {\r\n\t\t\tvar within = data.within,\r\n\t\t\t\twithinOffset = within.offset.top + within.scrollTop,\r\n\t\t\t\touterHeight = within.height,\r\n\t\t\t\toffsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n\t\t\t\tcollisionPosTop = position.top - data.collisionPosition.marginTop,\r\n\t\t\t\toverTop = collisionPosTop - offsetTop,\r\n\t\t\t\toverBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n\t\t\t\ttop = data.my[ 1 ] === \"top\",\r\n\t\t\t\tmyOffset = top ?\r\n\t\t\t\t\t-data.elemHeight :\r\n\t\t\t\t\tdata.my[ 1 ] === \"bottom\" ?\r\n\t\t\t\t\t\tdata.elemHeight :\r\n\t\t\t\t\t\t0,\r\n\t\t\t\tatOffset = data.at[ 1 ] === \"top\" ?\r\n\t\t\t\t\tdata.targetHeight :\r\n\t\t\t\t\tdata.at[ 1 ] === \"bottom\" ?\r\n\t\t\t\t\t\t-data.targetHeight :\r\n\t\t\t\t\t\t0,\r\n\t\t\t\toffset = -2 * data.offset[ 1 ],\r\n\t\t\t\tnewOverTop,\r\n\t\t\t\tnewOverBottom;\r\n\t\t\tif ( overTop < 0 ) {\r\n\t\t\t\tnewOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;\r\n\t\t\t\tif ( ( position.top + myOffset + atOffset + offset) > overTop && ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) ) {\r\n\t\t\t\t\tposition.top += myOffset + atOffset + offset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( overBottom > 0 ) {\r\n\t\t\t\tnewOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;\r\n\t\t\t\tif ( ( position.top + myOffset + atOffset + offset) > overBottom && ( newOverTop > 0 || abs( newOverTop ) < overBottom ) ) {\r\n\t\t\t\t\tposition.top += myOffset + atOffset + offset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tflipfit: {\r\n\t\tleft: function() {\r\n\t\t\t$.ui.position.flip.left.apply( this, arguments );\r\n\t\t\t$.ui.position.fit.left.apply( this, arguments );\r\n\t\t},\r\n\t\ttop: function() {\r\n\t\t\t$.ui.position.flip.top.apply( this, arguments );\r\n\t\t\t$.ui.position.fit.top.apply( this, arguments );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// fraction support test\r\n(function () {\r\n\tvar testElement, testElementParent, testElementStyle, offsetLeft, i,\r\n\t\tbody = document.getElementsByTagName( \"body\" )[ 0 ],\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t//Create a \"fake body\" for testing based on method used in jQuery.support\r\n\ttestElement = document.createElement( body ? \"div\" : \"body\" );\r\n\ttestElementStyle = {\r\n\t\tvisibility: \"hidden\",\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t\tborder: 0,\r\n\t\tmargin: 0,\r\n\t\tbackground: \"none\"\r\n\t};\r\n\tif ( body ) {\r\n\t\t$.extend( testElementStyle, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tleft: \"-1000px\",\r\n\t\t\ttop: \"-1000px\"\r\n\t\t});\r\n\t}\r\n\tfor ( i in testElementStyle ) {\r\n\t\ttestElement.style[ i ] = testElementStyle[ i ];\r\n\t}\r\n\ttestElement.appendChild( div );\r\n\ttestElementParent = body || document.documentElement;\r\n\ttestElementParent.insertBefore( testElement, testElementParent.firstChild );\r\n\r\n\tdiv.style.cssText = \"position: absolute; left: 10.7432222px;\";\r\n\r\n\toffsetLeft = $( div ).offset().left;\r\n\t$.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;\r\n\r\n\ttestElement.innerHTML = \"\";\r\n\ttestElementParent.removeChild( testElement );\r\n})();\r\n\r\n}( jQuery ) );\r\n\r\n(function( $, undefined ) {\r\n\r\n$.widget( \"ui.progressbar\", {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\tmax: 100,\r\n\t\tvalue: 0,\r\n\r\n\t\tchange: null,\r\n\t\tcomplete: null\r\n\t},\r\n\r\n\tmin: 0,\r\n\r\n\t_create: function() {\r\n\t\t// Constrain initial value\r\n\t\tthis.oldValue = this.options.value = this._constrainedValue();\r\n\r\n\t\tthis.element\r\n\t\t\t.addClass( \"ui-progressbar ui-widget ui-widget-content ui-corner-all\" )\r\n\t\t\t.attr({\r\n\t\t\t\t// Only set static values, aria-valuenow and aria-valuemax are\r\n\t\t\t\t// set inside _refreshValue()\r\n\t\t\t\trole: \"progressbar\",\r\n\t\t\t\t\"aria-valuemin\": this.min\r\n\t\t\t});\r\n\r\n\t\tthis.valueDiv = $( \"<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>\" )\r\n\t\t\t.appendTo( this.element );\r\n\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element\r\n\t\t\t.removeClass( \"ui-progressbar ui-widget ui-widget-content ui-corner-all\" )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"aria-valuemin\" )\r\n\t\t\t.removeAttr( \"aria-valuemax\" )\r\n\t\t\t.removeAttr( \"aria-valuenow\" );\r\n\r\n\t\tthis.valueDiv.remove();\r\n\t},\r\n\r\n\tvalue: function( newValue ) {\r\n\t\tif ( newValue === undefined ) {\r\n\t\t\treturn this.options.value;\r\n\t\t}\r\n\r\n\t\tthis.options.value = this._constrainedValue( newValue );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_constrainedValue: function( newValue ) {\r\n\t\tif ( newValue === undefined ) {\r\n\t\t\tnewValue = this.options.value;\r\n\t\t}\r\n\r\n\t\tthis.indeterminate = newValue === false;\r\n\r\n\t\t// sanitize value\r\n\t\tif ( typeof newValue !== \"number\" ) {\r\n\t\t\tnewValue = 0;\r\n\t\t}\r\n\r\n\t\treturn this.indeterminate ? false :\r\n\t\t\tMath.min( this.options.max, Math.max( this.min, newValue ) );\r\n\t},\r\n\r\n\t_setOptions: function( options ) {\r\n\t\t// Ensure \"value\" option is set after other values (like max)\r\n\t\tvar value = options.value;\r\n\t\tdelete options.value;\r\n\r\n\t\tthis._super( options );\r\n\r\n\t\tthis.options.value = this._constrainedValue( value );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"max\" ) {\r\n\t\t\t// Don't allow a max less than min\r\n\t\t\tvalue = Math.max( this.min, value );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\t_percentage: function() {\r\n\t\treturn this.indeterminate ? 100 : 100 * ( this.options.value - this.min ) / ( this.options.max - this.min );\r\n\t},\r\n\r\n\t_refreshValue: function() {\r\n\t\tvar value = this.options.value,\r\n\t\t\tpercentage = this._percentage();\r\n\r\n\t\tthis.valueDiv\r\n\t\t\t.toggle( this.indeterminate || value > this.min )\r\n\t\t\t.toggleClass( \"ui-corner-right\", value === this.options.max )\r\n\t\t\t.width( percentage.toFixed(0) + \"%\" );\r\n\r\n\t\tthis.element.toggleClass( \"ui-progressbar-indeterminate\", this.indeterminate );\r\n\r\n\t\tif ( this.indeterminate ) {\r\n\t\t\tthis.element.removeAttr( \"aria-valuenow\" );\r\n\t\t\tif ( !this.overlayDiv ) {\r\n\t\t\t\tthis.overlayDiv = $( \"<div class='ui-progressbar-overlay'></div>\" ).appendTo( this.valueDiv );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.element.attr({\r\n\t\t\t\t\"aria-valuemax\": this.options.max,\r\n\t\t\t\t\"aria-valuenow\": value\r\n\t\t\t});\r\n\t\t\tif ( this.overlayDiv ) {\r\n\t\t\t\tthis.overlayDiv.remove();\r\n\t\t\t\tthis.overlayDiv = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( this.oldValue !== value ) {\r\n\t\t\tthis.oldValue = value;\r\n\t\t\tthis._trigger( \"change\" );\r\n\t\t}\r\n\t\tif ( value === this.options.max ) {\r\n\t\t\tthis._trigger( \"complete\" );\r\n\t\t}\r\n\t}\r\n});\r\n\r\n})( jQuery );\r\n\r\n(function( $, undefined ) {\r\n\r\n// number of pages in a slider\r\n// (how many times can you page up/down to go through the whole range)\r\nvar numPages = 5;\r\n\r\n$.widget( \"ui.slider\", $.ui.mouse, {\r\n\tversion: \"1.10.4\",\r\n\twidgetEventPrefix: \"slide\",\r\n\r\n\toptions: {\r\n\t\tanimate: false,\r\n\t\tdistance: 0,\r\n\t\tmax: 100,\r\n\t\tmin: 0,\r\n\t\torientation: \"horizontal\",\r\n\t\trange: false,\r\n\t\tstep: 1,\r\n\t\tvalue: 0,\r\n\t\tvalues: null,\r\n\r\n\t\t// callbacks\r\n\t\tchange: null,\r\n\t\tslide: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis._keySliding = false;\r\n\t\tthis._mouseSliding = false;\r\n\t\tthis._animateOff = true;\r\n\t\tthis._handleIndex = null;\r\n\t\tthis._detectOrientation();\r\n\t\tthis._mouseInit();\r\n\r\n\t\tthis.element\r\n\t\t\t.addClass( \"ui-slider\" +\r\n\t\t\t\t\" ui-slider-\" + this.orientation +\r\n\t\t\t\t\" ui-widget\" +\r\n\t\t\t\t\" ui-widget-content\" +\r\n\t\t\t\t\" ui-corner-all\");\r\n\r\n\t\tthis._refresh();\r\n\t\tthis._setOption( \"disabled\", this.options.disabled );\r\n\r\n\t\tthis._animateOff = false;\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tthis._createRange();\r\n\t\tthis._createHandles();\r\n\t\tthis._setupEvents();\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_createHandles: function() {\r\n\t\tvar i, handleCount,\r\n\t\t\toptions = this.options,\r\n\t\t\texistingHandles = this.element.find( \".ui-slider-handle\" ).addClass( \"ui-state-default ui-corner-all\" ),\r\n\t\t\thandle = \"<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>\",\r\n\t\t\thandles = [];\r\n\r\n\t\thandleCount = ( options.values && options.values.length ) || 1;\r\n\r\n\t\tif ( existingHandles.length > handleCount ) {\r\n\t\t\texistingHandles.slice( handleCount ).remove();\r\n\t\t\texistingHandles = existingHandles.slice( 0, handleCount );\r\n\t\t}\r\n\r\n\t\tfor ( i = existingHandles.length; i < handleCount; i++ ) {\r\n\t\t\thandles.push( handle );\r\n\t\t}\r\n\r\n\t\tthis.handles = existingHandles.add( $( handles.join( \"\" ) ).appendTo( this.element ) );\r\n\r\n\t\tthis.handle = this.handles.eq( 0 );\r\n\r\n\t\tthis.handles.each(function( i ) {\r\n\t\t\t$( this ).data( \"ui-slider-handle-index\", i );\r\n\t\t});\r\n\t},\r\n\r\n\t_createRange: function() {\r\n\t\tvar options = this.options,\r\n\t\t\tclasses = \"\";\r\n\r\n\t\tif ( options.range ) {\r\n\t\t\tif ( options.range === true ) {\r\n\t\t\t\tif ( !options.values ) {\r\n\t\t\t\t\toptions.values = [ this._valueMin(), this._valueMin() ];\r\n\t\t\t\t} else if ( options.values.length && options.values.length !== 2 ) {\r\n\t\t\t\t\toptions.values = [ options.values[0], options.values[0] ];\r\n\t\t\t\t} else if ( $.isArray( options.values ) ) {\r\n\t\t\t\t\toptions.values = options.values.slice(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !this.range || !this.range.length ) {\r\n\t\t\t\tthis.range = $( \"<div></div>\" )\r\n\t\t\t\t\t.appendTo( this.element );\r\n\r\n\t\t\t\tclasses = \"ui-slider-range\" +\r\n\t\t\t\t// note: this isn't the most fittingly semantic framework class for this element,\r\n\t\t\t\t// but worked best visually with a variety of themes\r\n\t\t\t\t\" ui-widget-header ui-corner-all\";\r\n\t\t\t} else {\r\n\t\t\t\tthis.range.removeClass( \"ui-slider-range-min ui-slider-range-max\" )\r\n\t\t\t\t\t// Handle range switching from true to min/max\r\n\t\t\t\t\t.css({\r\n\t\t\t\t\t\t\"left\": \"\",\r\n\t\t\t\t\t\t\"bottom\": \"\"\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.range.addClass( classes +\r\n\t\t\t\t( ( options.range === \"min\" || options.range === \"max\" ) ? \" ui-slider-range-\" + options.range : \"\" ) );\r\n\t\t} else {\r\n\t\t\tif ( this.range ) {\r\n\t\t\t\tthis.range.remove();\r\n\t\t\t}\r\n\t\t\tthis.range = null;\r\n\t\t}\r\n\t},\r\n\r\n\t_setupEvents: function() {\r\n\t\tvar elements = this.handles.add( this.range ).filter( \"a\" );\r\n\t\tthis._off( elements );\r\n\t\tthis._on( elements, this._handleEvents );\r\n\t\tthis._hoverable( elements );\r\n\t\tthis._focusable( elements );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.handles.remove();\r\n\t\tif ( this.range ) {\r\n\t\t\tthis.range.remove();\r\n\t\t}\r\n\r\n\t\tthis.element\r\n\t\t\t.removeClass( \"ui-slider\" +\r\n\t\t\t\t\" ui-slider-horizontal\" +\r\n\t\t\t\t\" ui-slider-vertical\" +\r\n\t\t\t\t\" ui-widget\" +\r\n\t\t\t\t\" ui-widget-content\" +\r\n\t\t\t\t\" ui-corner-all\" );\r\n\r\n\t\tthis._mouseDestroy();\r\n\t},\r\n\r\n\t_mouseCapture: function( event ) {\r\n\t\tvar position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,\r\n\t\t\tthat = this,\r\n\t\t\to = this.options;\r\n\r\n\t\tif ( o.disabled ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.elementSize = {\r\n\t\t\twidth: this.element.outerWidth(),\r\n\t\t\theight: this.element.outerHeight()\r\n\t\t};\r\n\t\tthis.elementOffset = this.element.offset();\r\n\r\n\t\tposition = { x: event.pageX, y: event.pageY };\r\n\t\tnormValue = this._normValueFromMouse( position );\r\n\t\tdistance = this._valueMax() - this._valueMin() + 1;\r\n\t\tthis.handles.each(function( i ) {\r\n\t\t\tvar thisDistance = Math.abs( normValue - that.values(i) );\r\n\t\t\tif (( distance > thisDistance ) ||\r\n\t\t\t\t( distance === thisDistance &&\r\n\t\t\t\t\t(i === that._lastChangedValue || that.values(i) === o.min ))) {\r\n\t\t\t\tdistance = thisDistance;\r\n\t\t\t\tclosestHandle = $( this );\r\n\t\t\t\tindex = i;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tallowed = this._start( event, index );\r\n\t\tif ( allowed === false ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis._mouseSliding = true;\r\n\r\n\t\tthis._handleIndex = index;\r\n\r\n\t\tclosestHandle\r\n\t\t\t.addClass( \"ui-state-active\" )\r\n\t\t\t.focus();\r\n\r\n\t\toffset = closestHandle.offset();\r\n\t\tmouseOverHandle = !$( event.target ).parents().addBack().is( \".ui-slider-handle\" );\r\n\t\tthis._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {\r\n\t\t\tleft: event.pageX - offset.left - ( closestHandle.width() / 2 ),\r\n\t\t\ttop: event.pageY - offset.top -\r\n\t\t\t\t( closestHandle.height() / 2 ) -\r\n\t\t\t\t( parseInt( closestHandle.css(\"borderTopWidth\"), 10 ) || 0 ) -\r\n\t\t\t\t( parseInt( closestHandle.css(\"borderBottomWidth\"), 10 ) || 0) +\r\n\t\t\t\t( parseInt( closestHandle.css(\"marginTop\"), 10 ) || 0)\r\n\t\t};\r\n\r\n\t\tif ( !this.handles.hasClass( \"ui-state-hover\" ) ) {\r\n\t\t\tthis._slide( event, index, normValue );\r\n\t\t}\r\n\t\tthis._animateOff = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseStart: function() {\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseDrag: function( event ) {\r\n\t\tvar position = { x: event.pageX, y: event.pageY },\r\n\t\t\tnormValue = this._normValueFromMouse( position );\r\n\r\n\t\tthis._slide( event, this._handleIndex, normValue );\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function( event ) {\r\n\t\tthis.handles.removeClass( \"ui-state-active\" );\r\n\t\tthis._mouseSliding = false;\r\n\r\n\t\tthis._stop( event, this._handleIndex );\r\n\t\tthis._change( event, this._handleIndex );\r\n\r\n\t\tthis._handleIndex = null;\r\n\t\tthis._clickOffset = null;\r\n\t\tthis._animateOff = false;\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_detectOrientation: function() {\r\n\t\tthis.orientation = ( this.options.orientation === \"vertical\" ) ? \"vertical\" : \"horizontal\";\r\n\t},\r\n\r\n\t_normValueFromMouse: function( position ) {\r\n\t\tvar pixelTotal,\r\n\t\t\tpixelMouse,\r\n\t\t\tpercentMouse,\r\n\t\t\tvalueTotal,\r\n\t\t\tvalueMouse;\r\n\r\n\t\tif ( this.orientation === \"horizontal\" ) {\r\n\t\t\tpixelTotal = this.elementSize.width;\r\n\t\t\tpixelMouse = position.x - this.elementOffset.left - ( this._clickOffset ? this._clickOffset.left : 0 );\r\n\t\t} else {\r\n\t\t\tpixelTotal = this.elementSize.height;\r\n\t\t\tpixelMouse = position.y - this.elementOffset.top - ( this._clickOffset ? this._clickOffset.top : 0 );\r\n\t\t}\r\n\r\n\t\tpercentMouse = ( pixelMouse / pixelTotal );\r\n\t\tif ( percentMouse > 1 ) {\r\n\t\t\tpercentMouse = 1;\r\n\t\t}\r\n\t\tif ( percentMouse < 0 ) {\r\n\t\t\tpercentMouse = 0;\r\n\t\t}\r\n\t\tif ( this.orientation === \"vertical\" ) {\r\n\t\t\tpercentMouse = 1 - percentMouse;\r\n\t\t}\r\n\r\n\t\tvalueTotal = this._valueMax() - this._valueMin();\r\n\t\tvalueMouse = this._valueMin() + percentMouse * valueTotal;\r\n\r\n\t\treturn this._trimAlignValue( valueMouse );\r\n\t},\r\n\r\n\t_start: function( event, index ) {\r\n\t\tvar uiHash = {\r\n\t\t\thandle: this.handles[ index ],\r\n\t\t\tvalue: this.value()\r\n\t\t};\r\n\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\tuiHash.value = this.values( index );\r\n\t\t\tuiHash.values = this.values();\r\n\t\t}\r\n\t\treturn this._trigger( \"start\", event, uiHash );\r\n\t},\r\n\r\n\t_slide: function( event, index, newVal ) {\r\n\t\tvar otherVal,\r\n\t\t\tnewValues,\r\n\t\t\tallowed;\r\n\r\n\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\totherVal = this.values( index ? 0 : 1 );\r\n\r\n\t\t\tif ( ( this.options.values.length === 2 && this.options.range === true ) &&\r\n\t\t\t\t\t( ( index === 0 && newVal > otherVal) || ( index === 1 && newVal < otherVal ) )\r\n\t\t\t\t) {\r\n\t\t\t\tnewVal = otherVal;\r\n\t\t\t}\r\n\r\n\t\t\tif ( newVal !== this.values( index ) ) {\r\n\t\t\t\tnewValues = this.values();\r\n\t\t\t\tnewValues[ index ] = newVal;\r\n\t\t\t\t// A slide can be canceled by returning false from the slide callback\r\n\t\t\t\tallowed = this._trigger( \"slide\", event, {\r\n\t\t\t\t\thandle: this.handles[ index ],\r\n\t\t\t\t\tvalue: newVal,\r\n\t\t\t\t\tvalues: newValues\r\n\t\t\t\t} );\r\n\t\t\t\totherVal = this.values( index ? 0 : 1 );\r\n\t\t\t\tif ( allowed !== false ) {\r\n\t\t\t\t\tthis.values( index, newVal );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ( newVal !== this.value() ) {\r\n\t\t\t\t// A slide can be canceled by returning false from the slide callback\r\n\t\t\t\tallowed = this._trigger( \"slide\", event, {\r\n\t\t\t\t\thandle: this.handles[ index ],\r\n\t\t\t\t\tvalue: newVal\r\n\t\t\t\t} );\r\n\t\t\t\tif ( allowed !== false ) {\r\n\t\t\t\t\tthis.value( newVal );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_stop: function( event, index ) {\r\n\t\tvar uiHash = {\r\n\t\t\thandle: this.handles[ index ],\r\n\t\t\tvalue: this.value()\r\n\t\t};\r\n\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\tuiHash.value = this.values( index );\r\n\t\t\tuiHash.values = this.values();\r\n\t\t}\r\n\r\n\t\tthis._trigger( \"stop\", event, uiHash );\r\n\t},\r\n\r\n\t_change: function( event, index ) {\r\n\t\tif ( !this._keySliding && !this._mouseSliding ) {\r\n\t\t\tvar uiHash = {\r\n\t\t\t\thandle: this.handles[ index ],\r\n\t\t\t\tvalue: this.value()\r\n\t\t\t};\r\n\t\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\t\tuiHash.value = this.values( index );\r\n\t\t\t\tuiHash.values = this.values();\r\n\t\t\t}\r\n\r\n\t\t\t//store the last changed value index for reference when handles overlap\r\n\t\t\tthis._lastChangedValue = index;\r\n\r\n\t\t\tthis._trigger( \"change\", event, uiHash );\r\n\t\t}\r\n\t},\r\n\r\n\tvalue: function( newValue ) {\r\n\t\tif ( arguments.length ) {\r\n\t\t\tthis.options.value = this._trimAlignValue( newValue );\r\n\t\t\tthis._refreshValue();\r\n\t\t\tthis._change( null, 0 );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn this._value();\r\n\t},\r\n\r\n\tvalues: function( index, newValue ) {\r\n\t\tvar vals,\r\n\t\t\tnewValues,\r\n\t\t\ti;\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\t\t\tthis.options.values[ index ] = this._trimAlignValue( newValue );\r\n\t\t\tthis._refreshValue();\r\n\t\t\tthis._change( null, index );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length ) {\r\n\t\t\tif ( $.isArray( arguments[ 0 ] ) ) {\r\n\t\t\t\tvals = this.options.values;\r\n\t\t\t\tnewValues = arguments[ 0 ];\r\n\t\t\t\tfor ( i = 0; i < vals.length; i += 1 ) {\r\n\t\t\t\t\tvals[ i ] = this._trimAlignValue( newValues[ i ] );\r\n\t\t\t\t\tthis._change( null, i );\r\n\t\t\t\t}\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t} else {\r\n\t\t\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\t\t\treturn this._values( index );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.value();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn this._values();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar i,\r\n\t\t\tvalsLength = 0;\r\n\r\n\t\tif ( key === \"range\" && this.options.range === true ) {\r\n\t\t\tif ( value === \"min\" ) {\r\n\t\t\t\tthis.options.value = this._values( 0 );\r\n\t\t\t\tthis.options.values = null;\r\n\t\t\t} else if ( value === \"max\" ) {\r\n\t\t\t\tthis.options.value = this._values( this.options.values.length-1 );\r\n\t\t\t\tthis.options.values = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( $.isArray( this.options.values ) ) {\r\n\t\t\tvalsLength = this.options.values.length;\r\n\t\t}\r\n\r\n\t\t$.Widget.prototype._setOption.apply( this, arguments );\r\n\r\n\t\tswitch ( key ) {\r\n\t\t\tcase \"orientation\":\r\n\t\t\t\tthis._detectOrientation();\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.removeClass( \"ui-slider-horizontal ui-slider-vertical\" )\r\n\t\t\t\t\t.addClass( \"ui-slider-\" + this.orientation );\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"value\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tthis._change( null, 0 );\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"values\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tfor ( i = 0; i < valsLength; i += 1 ) {\r\n\t\t\t\t\tthis._change( null, i );\r\n\t\t\t\t}\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"min\":\r\n\t\t\tcase \"max\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"range\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refresh();\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\t//internal value getter\r\n\t// _value() returns value trimmed by min and max, aligned by step\r\n\t_value: function() {\r\n\t\tvar val = this.options.value;\r\n\t\tval = this._trimAlignValue( val );\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t//internal values getter\r\n\t// _values() returns array of values trimmed by min and max, aligned by step\r\n\t// _values( index ) returns single value trimmed by min and max, aligned by step\r\n\t_values: function( index ) {\r\n\t\tvar val,\r\n\t\t\tvals,\r\n\t\t\ti;\r\n\r\n\t\tif ( arguments.length ) {\r\n\t\t\tval = this.options.values[ index ];\r\n\t\t\tval = this._trimAlignValue( val );\r\n\r\n\t\t\treturn val;\r\n\t\t} else if ( this.options.values && this.options.values.length ) {\r\n\t\t\t// .slice() creates a copy of the array\r\n\t\t\t// this copy gets trimmed by min and max and then returned\r\n\t\t\tvals = this.options.values.slice();\r\n\t\t\tfor ( i = 0; i < vals.length; i+= 1) {\r\n\t\t\t\tvals[ i ] = this._trimAlignValue( vals[ i ] );\r\n\t\t\t}\r\n\r\n\t\t\treturn vals;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t},\r\n\r\n\t// returns the step-aligned value that val is closest to, between (inclusive) min and max\r\n\t_trimAlignValue: function( val ) {\r\n\t\tif ( val <= this._valueMin() ) {\r\n\t\t\treturn this._valueMin();\r\n\t\t}\r\n\t\tif ( val >= this._valueMax() ) {\r\n\t\t\treturn this._valueMax();\r\n\t\t}\r\n\t\tvar step = ( this.options.step > 0 ) ? this.options.step : 1,\r\n\t\t\tvalModStep = (val - this._valueMin()) % step,\r\n\t\t\talignValue = val - valModStep;\r\n\r\n\t\tif ( Math.abs(valModStep) * 2 >= step ) {\r\n\t\t\talignValue += ( valModStep > 0 ) ? step : ( -step );\r\n\t\t}\r\n\r\n\t\t// Since JavaScript has problems with large floats, round\r\n\t\t// the final value to 5 digits after the decimal point (see #4124)\r\n\t\treturn parseFloat( alignValue.toFixed(5) );\r\n\t},\r\n\r\n\t_valueMin: function() {\r\n\t\treturn this.options.min;\r\n\t},\r\n\r\n\t_valueMax: function() {\r\n\t\treturn this.options.max;\r\n\t},\r\n\r\n\t_refreshValue: function() {\r\n\t\tvar lastValPercent, valPercent, value, valueMin, valueMax,\r\n\t\t\toRange = this.options.range,\r\n\t\t\to = this.options,\r\n\t\t\tthat = this,\r\n\t\t\tanimate = ( !this._animateOff ) ? o.animate : false,\r\n\t\t\t_set = {};\r\n\r\n\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\tthis.handles.each(function( i ) {\r\n\t\t\t\tvalPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;\r\n\t\t\t\t_set[ that.orientation === \"horizontal\" ? \"left\" : \"bottom\" ] = valPercent + \"%\";\r\n\t\t\t\t$( this ).stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( _set, o.animate );\r\n\t\t\t\tif ( that.options.range === true ) {\r\n\t\t\t\t\tif ( that.orientation === \"horizontal\" ) {\r\n\t\t\t\t\t\tif ( i === 0 ) {\r\n\t\t\t\t\t\t\tthat.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( { left: valPercent + \"%\" }, o.animate );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( i === 1 ) {\r\n\t\t\t\t\t\t\tthat.range[ animate ? \"animate\" : \"css\" ]( { width: ( valPercent - lastValPercent ) + \"%\" }, { queue: false, duration: o.animate } );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif ( i === 0 ) {\r\n\t\t\t\t\t\t\tthat.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( { bottom: ( valPercent ) + \"%\" }, o.animate );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( i === 1 ) {\r\n\t\t\t\t\t\t\tthat.range[ animate ? \"animate\" : \"css\" ]( { height: ( valPercent - lastValPercent ) + \"%\" }, { queue: false, duration: o.animate } );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastValPercent = valPercent;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvalue = this.value();\r\n\t\t\tvalueMin = this._valueMin();\r\n\t\t\tvalueMax = this._valueMax();\r\n\t\t\tvalPercent = ( valueMax !== valueMin ) ?\r\n\t\t\t\t\t( value - valueMin ) / ( valueMax - valueMin ) * 100 :\r\n\t\t\t\t\t0;\r\n\t\t\t_set[ this.orientation === \"horizontal\" ? \"left\" : \"bottom\" ] = valPercent + \"%\";\r\n\t\t\tthis.handle.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( _set, o.animate );\r\n\r\n\t\t\tif ( oRange === \"min\" && this.orientation === \"horizontal\" ) {\r\n\t\t\t\tthis.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( { width: valPercent + \"%\" }, o.animate );\r\n\t\t\t}\r\n\t\t\tif ( oRange === \"max\" && this.orientation === \"horizontal\" ) {\r\n\t\t\t\tthis.range[ animate ? \"animate\" : \"css\" ]( { width: ( 100 - valPercent ) + \"%\" }, { queue: false, duration: o.animate } );\r\n\t\t\t}\r\n\t\t\tif ( oRange === \"min\" && this.orientation === \"vertical\" ) {\r\n\t\t\t\tthis.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( { height: valPercent + \"%\" }, o.animate );\r\n\t\t\t}\r\n\t\t\tif ( oRange === \"max\" && this.orientation === \"vertical\" ) {\r\n\t\t\t\tthis.range[ animate ? \"animate\" : \"css\" ]( { height: ( 100 - valPercent ) + \"%\" }, { queue: false, duration: o.animate } );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_handleEvents: {\r\n\t\tkeydown: function( event ) {\r\n\t\t\tvar allowed, curVal, newVal, step,\r\n\t\t\t\tindex = $( event.target ).data( \"ui-slider-handle-index\" );\r\n\r\n\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase $.ui.keyCode.HOME:\r\n\t\t\t\tcase $.ui.keyCode.END:\r\n\t\t\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\t\tcase $.ui.keyCode.UP:\r\n\t\t\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tif ( !this._keySliding ) {\r\n\t\t\t\t\t\tthis._keySliding = true;\r\n\t\t\t\t\t\t$( event.target ).addClass( \"ui-state-active\" );\r\n\t\t\t\t\t\tallowed = this._start( event, index );\r\n\t\t\t\t\t\tif ( allowed === false ) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tstep = this.options.step;\r\n\t\t\tif ( this.options.values && this.options.values.length ) {\r\n\t\t\t\tcurVal = newVal = this.values( index );\r\n\t\t\t} else {\r\n\t\t\t\tcurVal = newVal = this.value();\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase $.ui.keyCode.HOME:\r\n\t\t\t\t\tnewVal = this._valueMin();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.END:\r\n\t\t\t\t\tnewVal = this._valueMax();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\t\t\tnewVal = this._trimAlignValue( curVal + ( (this._valueMax() - this._valueMin()) / numPages ) );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\t\t\tnewVal = this._trimAlignValue( curVal - ( (this._valueMax() - this._valueMin()) / numPages ) );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.UP:\r\n\t\t\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\t\t\tif ( curVal === this._valueMax() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewVal = this._trimAlignValue( curVal + step );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\t\t\tif ( curVal === this._valueMin() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewVal = this._trimAlignValue( curVal - step );\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._slide( event, index, newVal );\r\n\t\t},\r\n\t\tclick: function( event ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t},\r\n\t\tkeyup: function( event ) {\r\n\t\t\tvar index = $( event.target ).data( \"ui-slider-handle-index\" );\r\n\r\n\t\t\tif ( this._keySliding ) {\r\n\t\t\t\tthis._keySliding = false;\r\n\t\t\t\tthis._stop( event, index );\r\n\t\t\t\tthis._change( event, index );\r\n\t\t\t\t$( event.target ).removeClass( \"ui-state-active\" );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n}(jQuery));\r\n\r\n(function( $ ) {\r\n\r\nfunction modifier( fn ) {\r\n\treturn function() {\r\n\t\tvar previous = this.element.val();\r\n\t\tfn.apply( this, arguments );\r\n\t\tthis._refresh();\r\n\t\tif ( previous !== this.element.val() ) {\r\n\t\t\tthis._trigger( \"change\" );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n$.widget( \"ui.spinner\", {\r\n\tversion: \"1.10.4\",\r\n\tdefaultElement: \"<input>\",\r\n\twidgetEventPrefix: \"spin\",\r\n\toptions: {\r\n\t\tculture: null,\r\n\t\ticons: {\r\n\t\t\tdown: \"ui-icon-triangle-1-s\",\r\n\t\t\tup: \"ui-icon-triangle-1-n\"\r\n\t\t},\r\n\t\tincremental: true,\r\n\t\tmax: null,\r\n\t\tmin: null,\r\n\t\tnumberFormat: null,\r\n\t\tpage: 10,\r\n\t\tstep: 1,\r\n\r\n\t\tchange: null,\r\n\t\tspin: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\t// handle string values that need to be parsed\r\n\t\tthis._setOption( \"max\", this.options.max );\r\n\t\tthis._setOption( \"min\", this.options.min );\r\n\t\tthis._setOption( \"step\", this.options.step );\r\n\r\n\t\t// Only format if there is a value, prevents the field from being marked\r\n\t\t// as invalid in Firefox, see #9573.\r\n\t\tif ( this.value() !== \"\" ) {\r\n\t\t\t// Format the value, but don't constrain.\r\n\t\t\tthis._value( this.element.val(), true );\r\n\t\t}\r\n\r\n\t\tthis._draw();\r\n\t\tthis._on( this._events );\r\n\t\tthis._refresh();\r\n\r\n\t\t// turning off autocomplete prevents the browser from remembering the\r\n\t\t// value when navigating through history, so we re-enable autocomplete\r\n\t\t// if the page is unloaded before the widget is destroyed. #7790\r\n\t\tthis._on( this.window, {\r\n\t\t\tbeforeunload: function() {\r\n\t\t\t\tthis.element.removeAttr( \"autocomplete\" );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_getCreateOptions: function() {\r\n\t\tvar options = {},\r\n\t\t\telement = this.element;\r\n\r\n\t\t$.each( [ \"min\", \"max\", \"step\" ], function( i, option ) {\r\n\t\t\tvar value = element.attr( option );\r\n\t\t\tif ( value !== undefined && value.length ) {\r\n\t\t\t\toptions[ option ] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_events: {\r\n\t\tkeydown: function( event ) {\r\n\t\t\tif ( this._start( event ) && this._keydown( event ) ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\t\tkeyup: \"_stop\",\r\n\t\tfocus: function() {\r\n\t\t\tthis.previous = this.element.val();\r\n\t\t},\r\n\t\tblur: function( event ) {\r\n\t\t\tif ( this.cancelBlur ) {\r\n\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._stop();\r\n\t\t\tthis._refresh();\r\n\t\t\tif ( this.previous !== this.element.val() ) {\r\n\t\t\t\tthis._trigger( \"change\", event );\r\n\t\t\t}\r\n\t\t},\r\n\t\tmousewheel: function( event, delta ) {\r\n\t\t\tif ( !delta ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( !this.spinning && !this._start( event ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._spin( (delta > 0 ? 1 : -1) * this.options.step, event );\r\n\t\t\tclearTimeout( this.mousewheelTimer );\r\n\t\t\tthis.mousewheelTimer = this._delay(function() {\r\n\t\t\t\tif ( this.spinning ) {\r\n\t\t\t\t\tthis._stop( event );\r\n\t\t\t\t}\r\n\t\t\t}, 100 );\r\n\t\t\tevent.preventDefault();\r\n\t\t},\r\n\t\t\"mousedown .ui-spinner-button\": function( event ) {\r\n\t\t\tvar previous;\r\n\r\n\t\t\t// We never want the buttons to have focus; whenever the user is\r\n\t\t\t// interacting with the spinner, the focus should be on the input.\r\n\t\t\t// If the input is focused then this.previous is properly set from\r\n\t\t\t// when the input first received focus. If the input is not focused\r\n\t\t\t// then we need to set this.previous based on the value before spinning.\r\n\t\t\tprevious = this.element[0] === this.document[0].activeElement ?\r\n\t\t\t\tthis.previous : this.element.val();\r\n\t\t\tfunction checkFocus() {\r\n\t\t\t\tvar isActive = this.element[0] === this.document[0].activeElement;\r\n\t\t\t\tif ( !isActive ) {\r\n\t\t\t\t\tthis.element.focus();\r\n\t\t\t\t\tthis.previous = previous;\r\n\t\t\t\t\t// support: IE\r\n\t\t\t\t\t// IE sets focus asynchronously, so we need to check if focus\r\n\t\t\t\t\t// moved off of the input because the user clicked on the button.\r\n\t\t\t\t\tthis._delay(function() {\r\n\t\t\t\t\t\tthis.previous = previous;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// ensure focus is on (or stays on) the text field\r\n\t\t\tevent.preventDefault();\r\n\t\t\tcheckFocus.call( this );\r\n\r\n\t\t\t// support: IE\r\n\t\t\t// IE doesn't prevent moving focus even with event.preventDefault()\r\n\t\t\t// so we set a flag to know when we should ignore the blur event\r\n\t\t\t// and check (again) if focus moved off of the input.\r\n\t\t\tthis.cancelBlur = true;\r\n\t\t\tthis._delay(function() {\r\n\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\tcheckFocus.call( this );\r\n\t\t\t});\r\n\r\n\t\t\tif ( this._start( event ) === false ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._repeat( null, $( event.currentTarget ).hasClass( \"ui-spinner-up\" ) ? 1 : -1, event );\r\n\t\t},\r\n\t\t\"mouseup .ui-spinner-button\": \"_stop\",\r\n\t\t\"mouseenter .ui-spinner-button\": function( event ) {\r\n\t\t\t// button will add ui-state-active if mouse was down while mouseleave and kept down\r\n\t\t\tif ( !$( event.currentTarget ).hasClass( \"ui-state-active\" ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this._start( event ) === false ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis._repeat( null, $( event.currentTarget ).hasClass( \"ui-spinner-up\" ) ? 1 : -1, event );\r\n\t\t},\r\n\t\t// TODO: do we really want to consider this a stop?\r\n\t\t// shouldn't we just stop the repeater and wait until mouseup before\r\n\t\t// we trigger the stop event?\r\n\t\t\"mouseleave .ui-spinner-button\": \"_stop\"\r\n\t},\r\n\r\n\t_draw: function() {\r\n\t\tvar uiSpinner = this.uiSpinner = this.element\r\n\t\t\t.addClass( \"ui-spinner-input\" )\r\n\t\t\t.attr( \"autocomplete\", \"off\" )\r\n\t\t\t.wrap( this._uiSpinnerHtml() )\r\n\t\t\t.parent()\r\n\t\t\t\t// add buttons\r\n\t\t\t\t.append( this._buttonHtml() );\r\n\r\n\t\tthis.element.attr( \"role\", \"spinbutton\" );\r\n\r\n\t\t// button bindings\r\n\t\tthis.buttons = uiSpinner.find( \".ui-spinner-button\" )\r\n\t\t\t.attr( \"tabIndex\", -1 )\r\n\t\t\t.button()\r\n\t\t\t.removeClass( \"ui-corner-all\" );\r\n\r\n\t\t// IE 6 doesn't understand height: 50% for the buttons\r\n\t\t// unless the wrapper has an explicit height\r\n\t\tif ( this.buttons.height() > Math.ceil( uiSpinner.height() * 0.5 ) &&\r\n\t\t\t\tuiSpinner.height() > 0 ) {\r\n\t\t\tuiSpinner.height( uiSpinner.height() );\r\n\t\t}\r\n\r\n\t\t// disable spinner if element was already disabled\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t},\r\n\r\n\t_keydown: function( event ) {\r\n\t\tvar options = this.options,\r\n\t\t\tkeyCode = $.ui.keyCode;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\tcase keyCode.UP:\r\n\t\t\tthis._repeat( null, 1, event );\r\n\t\t\treturn true;\r\n\t\tcase keyCode.DOWN:\r\n\t\t\tthis._repeat( null, -1, event );\r\n\t\t\treturn true;\r\n\t\tcase keyCode.PAGE_UP:\r\n\t\t\tthis._repeat( null, options.page, event );\r\n\t\t\treturn true;\r\n\t\tcase keyCode.PAGE_DOWN:\r\n\t\t\tthis._repeat( null, -options.page, event );\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_uiSpinnerHtml: function() {\r\n\t\treturn \"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>\";\r\n\t},\r\n\r\n\t_buttonHtml: function() {\r\n\t\treturn \"\" +\r\n\t\t\t\"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'>\" +\r\n\t\t\t\t\"<span class='ui-icon \" + this.options.icons.up + \"'>&#9650;</span>\" +\r\n\t\t\t\"</a>\" +\r\n\t\t\t\"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>\" +\r\n\t\t\t\t\"<span class='ui-icon \" + this.options.icons.down + \"'>&#9660;</span>\" +\r\n\t\t\t\"</a>\";\r\n\t},\r\n\r\n\t_start: function( event ) {\r\n\t\tif ( !this.spinning && this._trigger( \"start\", event ) === false ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( !this.counter ) {\r\n\t\t\tthis.counter = 1;\r\n\t\t}\r\n\t\tthis.spinning = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_repeat: function( i, steps, event ) {\r\n\t\ti = i || 500;\r\n\r\n\t\tclearTimeout( this.timer );\r\n\t\tthis.timer = this._delay(function() {\r\n\t\t\tthis._repeat( 40, steps, event );\r\n\t\t}, i );\r\n\r\n\t\tthis._spin( steps * this.options.step, event );\r\n\t},\r\n\r\n\t_spin: function( step, event ) {\r\n\t\tvar value = this.value() || 0;\r\n\r\n\t\tif ( !this.counter ) {\r\n\t\t\tthis.counter = 1;\r\n\t\t}\r\n\r\n\t\tvalue = this._adjustValue( value + step * this._increment( this.counter ) );\r\n\r\n\t\tif ( !this.spinning || this._trigger( \"spin\", event, { value: value } ) !== false) {\r\n\t\t\tthis._value( value );\r\n\t\t\tthis.counter++;\r\n\t\t}\r\n\t},\r\n\r\n\t_increment: function( i ) {\r\n\t\tvar incremental = this.options.incremental;\r\n\r\n\t\tif ( incremental ) {\r\n\t\t\treturn $.isFunction( incremental ) ?\r\n\t\t\t\tincremental( i ) :\r\n\t\t\t\tMath.floor( i*i*i/50000 - i*i/500 + 17*i/200 + 1 );\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t},\r\n\r\n\t_precision: function() {\r\n\t\tvar precision = this._precisionOf( this.options.step );\r\n\t\tif ( this.options.min !== null ) {\r\n\t\t\tprecision = Math.max( precision, this._precisionOf( this.options.min ) );\r\n\t\t}\r\n\t\treturn precision;\r\n\t},\r\n\r\n\t_precisionOf: function( num ) {\r\n\t\tvar str = num.toString(),\r\n\t\t\tdecimal = str.indexOf( \".\" );\r\n\t\treturn decimal === -1 ? 0 : str.length - decimal - 1;\r\n\t},\r\n\r\n\t_adjustValue: function( value ) {\r\n\t\tvar base, aboveMin,\r\n\t\t\toptions = this.options;\r\n\r\n\t\t// make sure we're at a valid step\r\n\t\t// - find out where we are relative to the base (min or 0)\r\n\t\tbase = options.min !== null ? options.min : 0;\r\n\t\taboveMin = value - base;\r\n\t\t// - round to the nearest step\r\n\t\taboveMin = Math.round(aboveMin / options.step) * options.step;\r\n\t\t// - rounding is based on 0, so adjust back to our base\r\n\t\tvalue = base + aboveMin;\r\n\r\n\t\t// fix precision from bad JS floating point math\r\n\t\tvalue = parseFloat( value.toFixed( this._precision() ) );\r\n\r\n\t\t// clamp the value\r\n\t\tif ( options.max !== null && value > options.max) {\r\n\t\t\treturn options.max;\r\n\t\t}\r\n\t\tif ( options.min !== null && value < options.min ) {\r\n\t\t\treturn options.min;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\r\n\t_stop: function( event ) {\r\n\t\tif ( !this.spinning ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearTimeout( this.timer );\r\n\t\tclearTimeout( this.mousewheelTimer );\r\n\t\tthis.counter = 0;\r\n\t\tthis.spinning = false;\r\n\t\tthis._trigger( \"stop\", event );\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"culture\" || key === \"numberFormat\" ) {\r\n\t\t\tvar prevValue = this._parse( this.element.val() );\r\n\t\t\tthis.options[ key ] = value;\r\n\t\t\tthis.element.val( this._format( prevValue ) );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === \"max\" || key === \"min\" || key === \"step\" ) {\r\n\t\t\tif ( typeof value === \"string\" ) {\r\n\t\t\t\tvalue = this._parse( value );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tthis.buttons.first().find( \".ui-icon\" )\r\n\t\t\t\t.removeClass( this.options.icons.up )\r\n\t\t\t\t.addClass( value.up );\r\n\t\t\tthis.buttons.last().find( \".ui-icon\" )\r\n\t\t\t\t.removeClass( this.options.icons.down )\r\n\t\t\t\t.addClass( value.down );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis.element.prop( \"disabled\", true );\r\n\t\t\t\tthis.buttons.button( \"disable\" );\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.prop( \"disabled\", false );\r\n\t\t\t\tthis.buttons.button( \"enable\" );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptions: modifier(function( options ) {\r\n\t\tthis._super( options );\r\n\t\tthis._value( this.element.val() );\r\n\t}),\r\n\r\n\t_parse: function( val ) {\r\n\t\tif ( typeof val === \"string\" && val !== \"\" ) {\r\n\t\t\tval = window.Globalize && this.options.numberFormat ?\r\n\t\t\t\tGlobalize.parseFloat( val, 10, this.options.culture ) : +val;\r\n\t\t}\r\n\t\treturn val === \"\" || isNaN( val ) ? null : val;\r\n\t},\r\n\r\n\t_format: function( value ) {\r\n\t\tif ( value === \"\" ) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn window.Globalize && this.options.numberFormat ?\r\n\t\t\tGlobalize.format( value, this.options.numberFormat, this.options.culture ) :\r\n\t\t\tvalue;\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tthis.element.attr({\r\n\t\t\t\"aria-valuemin\": this.options.min,\r\n\t\t\t\"aria-valuemax\": this.options.max,\r\n\t\t\t// TODO: what should we do with values that can't be parsed?\r\n\t\t\t\"aria-valuenow\": this._parse( this.element.val() )\r\n\t\t});\r\n\t},\r\n\r\n\t// update the value without triggering change\r\n\t_value: function( value, allowAny ) {\r\n\t\tvar parsed;\r\n\t\tif ( value !== \"\" ) {\r\n\t\t\tparsed = this._parse( value );\r\n\t\t\tif ( parsed !== null ) {\r\n\t\t\t\tif ( !allowAny ) {\r\n\t\t\t\t\tparsed = this._adjustValue( parsed );\r\n\t\t\t\t}\r\n\t\t\t\tvalue = this._format( parsed );\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.element.val( value );\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element\r\n\t\t\t.removeClass( \"ui-spinner-input\" )\r\n\t\t\t.prop( \"disabled\", false )\r\n\t\t\t.removeAttr( \"autocomplete\" )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"aria-valuemin\" )\r\n\t\t\t.removeAttr( \"aria-valuemax\" )\r\n\t\t\t.removeAttr( \"aria-valuenow\" );\r\n\t\tthis.uiSpinner.replaceWith( this.element );\r\n\t},\r\n\r\n\tstepUp: modifier(function( steps ) {\r\n\t\tthis._stepUp( steps );\r\n\t}),\r\n\t_stepUp: function( steps ) {\r\n\t\tif ( this._start() ) {\r\n\t\t\tthis._spin( (steps || 1) * this.options.step );\r\n\t\t\tthis._stop();\r\n\t\t}\r\n\t},\r\n\r\n\tstepDown: modifier(function( steps ) {\r\n\t\tthis._stepDown( steps );\r\n\t}),\r\n\t_stepDown: function( steps ) {\r\n\t\tif ( this._start() ) {\r\n\t\t\tthis._spin( (steps || 1) * -this.options.step );\r\n\t\t\tthis._stop();\r\n\t\t}\r\n\t},\r\n\r\n\tpageUp: modifier(function( pages ) {\r\n\t\tthis._stepUp( (pages || 1) * this.options.page );\r\n\t}),\r\n\r\n\tpageDown: modifier(function( pages ) {\r\n\t\tthis._stepDown( (pages || 1) * this.options.page );\r\n\t}),\r\n\r\n\tvalue: function( newVal ) {\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this._parse( this.element.val() );\r\n\t\t}\r\n\t\tmodifier( this._value ).call( this, newVal );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.uiSpinner;\r\n\t}\r\n});\r\n\r\n}( jQuery ) );\r\n\r\n(function( $, undefined ) {\r\n\r\nvar tabId = 0,\r\n\trhash = /#.*$/;\r\n\r\nfunction getNextTabId() {\r\n\treturn ++tabId;\r\n}\r\n\r\nfunction isLocal( anchor ) {\r\n\t// support: IE7\r\n\t// IE7 doesn't normalize the href property when set via script (#9317)\r\n\tanchor = anchor.cloneNode( false );\r\n\r\n\treturn anchor.hash.length > 1 &&\r\n\t\tdecodeURIComponent( anchor.href.replace( rhash, \"\" ) ) ===\r\n\t\t\tdecodeURIComponent( location.href.replace( rhash, \"\" ) );\r\n}\r\n\r\n$.widget( \"ui.tabs\", {\r\n\tversion: \"1.10.4\",\r\n\tdelay: 300,\r\n\toptions: {\r\n\t\tactive: null,\r\n\t\tcollapsible: false,\r\n\t\tevent: \"click\",\r\n\t\theightStyle: \"content\",\r\n\t\thide: null,\r\n\t\tshow: null,\r\n\r\n\t\t// callbacks\r\n\t\tactivate: null,\r\n\t\tbeforeActivate: null,\r\n\t\tbeforeLoad: null,\r\n\t\tload: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t\tthis.element\r\n\t\t\t.addClass( \"ui-tabs ui-widget ui-widget-content ui-corner-all\" )\r\n\t\t\t.toggleClass( \"ui-tabs-collapsible\", options.collapsible )\r\n\t\t\t// Prevent users from focusing disabled tabs via click\r\n\t\t\t.delegate( \".ui-tabs-nav > li\", \"mousedown\" + this.eventNamespace, function( event ) {\r\n\t\t\t\tif ( $( this ).is( \".ui-state-disabled\" ) ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// support: IE <9\r\n\t\t\t// Preventing the default action in mousedown doesn't prevent IE\r\n\t\t\t// from focusing the element, so if the anchor gets focused, blur.\r\n\t\t\t// We don't have to worry about focusing the previously focused\r\n\t\t\t// element since clicking on a non-focusable element should focus\r\n\t\t\t// the body anyway.\r\n\t\t\t.delegate( \".ui-tabs-anchor\", \"focus\" + this.eventNamespace, function() {\r\n\t\t\t\tif ( $( this ).closest( \"li\" ).is( \".ui-state-disabled\" ) ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis._processTabs();\r\n\t\toptions.active = this._initialActive();\r\n\r\n\t\t// Take disabling tabs via class attribute from HTML\r\n\t\t// into account and update option properly.\r\n\t\tif ( $.isArray( options.disabled ) ) {\r\n\t\t\toptions.disabled = $.unique( options.disabled.concat(\r\n\t\t\t\t$.map( this.tabs.filter( \".ui-state-disabled\" ), function( li ) {\r\n\t\t\t\t\treturn that.tabs.index( li );\r\n\t\t\t\t})\r\n\t\t\t) ).sort();\r\n\t\t}\r\n\r\n\t\t// check for length avoids error when initializing empty list\r\n\t\tif ( this.options.active !== false && this.anchors.length ) {\r\n\t\t\tthis.active = this._findActive( options.active );\r\n\t\t} else {\r\n\t\t\tthis.active = $();\r\n\t\t}\r\n\r\n\t\tthis._refresh();\r\n\r\n\t\tif ( this.active.length ) {\r\n\t\t\tthis.load( options.active );\r\n\t\t}\r\n\t},\r\n\r\n\t_initialActive: function() {\r\n\t\tvar active = this.options.active,\r\n\t\t\tcollapsible = this.options.collapsible,\r\n\t\t\tlocationHash = location.hash.substring( 1 );\r\n\r\n\t\tif ( active === null ) {\r\n\t\t\t// check the fragment identifier in the URL\r\n\t\t\tif ( locationHash ) {\r\n\t\t\t\tthis.tabs.each(function( i, tab ) {\r\n\t\t\t\t\tif ( $( tab ).attr( \"aria-controls\" ) === locationHash ) {\r\n\t\t\t\t\t\tactive = i;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// check for a tab marked active via a class\r\n\t\t\tif ( active === null ) {\r\n\t\t\t\tactive = this.tabs.index( this.tabs.filter( \".ui-tabs-active\" ) );\r\n\t\t\t}\r\n\r\n\t\t\t// no active tab, set to false\r\n\t\t\tif ( active === null || active === -1 ) {\r\n\t\t\t\tactive = this.tabs.length ? 0 : false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// handle numbers: negative, out of range\r\n\t\tif ( active !== false ) {\r\n\t\t\tactive = this.tabs.index( this.tabs.eq( active ) );\r\n\t\t\tif ( active === -1 ) {\r\n\t\t\t\tactive = collapsible ? false : 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// don't allow collapsible: false and active: false\r\n\t\tif ( !collapsible && active === false && this.anchors.length ) {\r\n\t\t\tactive = 0;\r\n\t\t}\r\n\r\n\t\treturn active;\r\n\t},\r\n\r\n\t_getCreateEventData: function() {\r\n\t\treturn {\r\n\t\t\ttab: this.active,\r\n\t\t\tpanel: !this.active.length ? $() : this._getPanelForTab( this.active )\r\n\t\t};\r\n\t},\r\n\r\n\t_tabKeydown: function( event ) {\r\n\t\tvar focusedTab = $( this.document[0].activeElement ).closest( \"li\" ),\r\n\t\t\tselectedIndex = this.tabs.index( focusedTab ),\r\n\t\t\tgoingForward = true;\r\n\r\n\t\tif ( this._handlePageNav( event ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\t\tselectedIndex++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.UP:\r\n\t\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\t\tgoingForward = false;\r\n\t\t\t\tselectedIndex--;\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.END:\r\n\t\t\t\tselectedIndex = this.anchors.length - 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.HOME:\r\n\t\t\t\tselectedIndex = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.SPACE:\r\n\t\t\t\t// Activate only, no collapsing\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tclearTimeout( this.activating );\r\n\t\t\t\tthis._activate( selectedIndex );\r\n\t\t\t\treturn;\r\n\t\t\tcase $.ui.keyCode.ENTER:\r\n\t\t\t\t// Toggle (cancel delayed activation, allow collapsing)\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tclearTimeout( this.activating );\r\n\t\t\t\t// Determine if we should collapse or activate\r\n\t\t\t\tthis._activate( selectedIndex === this.options.active ? false : selectedIndex );\r\n\t\t\t\treturn;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Focus the appropriate tab, based on which key was pressed\r\n\t\tevent.preventDefault();\r\n\t\tclearTimeout( this.activating );\r\n\t\tselectedIndex = this._focusNextTab( selectedIndex, goingForward );\r\n\r\n\t\t// Navigating with control key will prevent automatic activation\r\n\t\tif ( !event.ctrlKey ) {\r\n\t\t\t// Update aria-selected immediately so that AT think the tab is already selected.\r\n\t\t\t// Otherwise AT may confuse the user by stating that they need to activate the tab,\r\n\t\t\t// but the tab will already be activated by the time the announcement finishes.\r\n\t\t\tfocusedTab.attr( \"aria-selected\", \"false\" );\r\n\t\t\tthis.tabs.eq( selectedIndex ).attr( \"aria-selected\", \"true\" );\r\n\r\n\t\t\tthis.activating = this._delay(function() {\r\n\t\t\t\tthis.option( \"active\", selectedIndex );\r\n\t\t\t}, this.delay );\r\n\t\t}\r\n\t},\r\n\r\n\t_panelKeydown: function( event ) {\r\n\t\tif ( this._handlePageNav( event ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Ctrl+up moves focus to the current tab\r\n\t\tif ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis.active.focus();\r\n\t\t}\r\n\t},\r\n\r\n\t// Alt+page up/down moves focus to the previous/next tab (and activates)\r\n\t_handlePageNav: function( event ) {\r\n\t\tif ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {\r\n\t\t\tthis._activate( this._focusNextTab( this.options.active - 1, false ) );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {\r\n\t\t\tthis._activate( this._focusNextTab( this.options.active + 1, true ) );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t_findNextTab: function( index, goingForward ) {\r\n\t\tvar lastTabIndex = this.tabs.length - 1;\r\n\r\n\t\tfunction constrain() {\r\n\t\t\tif ( index > lastTabIndex ) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t}\r\n\t\t\tif ( index < 0 ) {\r\n\t\t\t\tindex = lastTabIndex;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\r\n\t\twhile ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {\r\n\t\t\tindex = goingForward ? index + 1 : index - 1;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t},\r\n\r\n\t_focusNextTab: function( index, goingForward ) {\r\n\t\tindex = this._findNextTab( index, goingForward );\r\n\t\tthis.tabs.eq( index ).focus();\r\n\t\treturn index;\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"active\" ) {\r\n\t\t\t// _activate() will handle invalid values and update this.options\r\n\t\t\tthis._activate( value );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\t// don't use the widget factory's disabled handling\r\n\t\t\tthis._setupDisabled( value );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value);\r\n\r\n\t\tif ( key === \"collapsible\" ) {\r\n\t\t\tthis.element.toggleClass( \"ui-tabs-collapsible\", value );\r\n\t\t\t// Setting collapsible: false while collapsed; open first panel\r\n\t\t\tif ( !value && this.options.active === false ) {\r\n\t\t\t\tthis._activate( 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"event\" ) {\r\n\t\t\tthis._setupEvents( value );\r\n\t\t}\r\n\r\n\t\tif ( key === \"heightStyle\" ) {\r\n\t\t\tthis._setupHeightStyle( value );\r\n\t\t}\r\n\t},\r\n\r\n\t_tabId: function( tab ) {\r\n\t\treturn tab.attr( \"aria-controls\" ) || \"ui-tabs-\" + getNextTabId();\r\n\t},\r\n\r\n\t_sanitizeSelector: function( hash ) {\r\n\t\treturn hash ? hash.replace( /[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g, \"\\\\$&\" ) : \"\";\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar options = this.options,\r\n\t\t\tlis = this.tablist.children( \":has(a[href])\" );\r\n\r\n\t\t// get disabled tabs from class attribute from HTML\r\n\t\t// this will get converted to a boolean if needed in _refresh()\r\n\t\toptions.disabled = $.map( lis.filter( \".ui-state-disabled\" ), function( tab ) {\r\n\t\t\treturn lis.index( tab );\r\n\t\t});\r\n\r\n\t\tthis._processTabs();\r\n\r\n\t\t// was collapsed or no tabs\r\n\t\tif ( options.active === false || !this.anchors.length ) {\r\n\t\t\toptions.active = false;\r\n\t\t\tthis.active = $();\r\n\t\t// was active, but active tab is gone\r\n\t\t} else if ( this.active.length && !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {\r\n\t\t\t// all remaining tabs are disabled\r\n\t\t\tif ( this.tabs.length === options.disabled.length ) {\r\n\t\t\t\toptions.active = false;\r\n\t\t\t\tthis.active = $();\r\n\t\t\t// activate previous tab\r\n\t\t\t} else {\r\n\t\t\t\tthis._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );\r\n\t\t\t}\r\n\t\t// was active, active tab still exists\r\n\t\t} else {\r\n\t\t\t// make sure active index is correct\r\n\t\t\toptions.active = this.tabs.index( this.active );\r\n\t\t}\r\n\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tthis._setupDisabled( this.options.disabled );\r\n\t\tthis._setupEvents( this.options.event );\r\n\t\tthis._setupHeightStyle( this.options.heightStyle );\r\n\r\n\t\tthis.tabs.not( this.active ).attr({\r\n\t\t\t\"aria-selected\": \"false\",\r\n\t\t\ttabIndex: -1\r\n\t\t});\r\n\t\tthis.panels.not( this._getPanelForTab( this.active ) )\r\n\t\t\t.hide()\r\n\t\t\t.attr({\r\n\t\t\t\t\"aria-expanded\": \"false\",\r\n\t\t\t\t\"aria-hidden\": \"true\"\r\n\t\t\t});\r\n\r\n\t\t// Make sure one tab is in the tab order\r\n\t\tif ( !this.active.length ) {\r\n\t\t\tthis.tabs.eq( 0 ).attr( \"tabIndex\", 0 );\r\n\t\t} else {\r\n\t\t\tthis.active\r\n\t\t\t\t.addClass( \"ui-tabs-active ui-state-active\" )\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\t\ttabIndex: 0\r\n\t\t\t\t});\r\n\t\t\tthis._getPanelForTab( this.active )\r\n\t\t\t\t.show()\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\t\t\t\"aria-hidden\": \"false\"\r\n\t\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_processTabs: function() {\r\n\t\tvar that = this;\r\n\r\n\t\tthis.tablist = this._getList()\r\n\t\t\t.addClass( \"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\" )\r\n\t\t\t.attr( \"role\", \"tablist\" );\r\n\r\n\t\tthis.tabs = this.tablist.find( \"> li:has(a[href])\" )\r\n\t\t\t.addClass( \"ui-state-default ui-corner-top\" )\r\n\t\t\t.attr({\r\n\t\t\t\trole: \"tab\",\r\n\t\t\t\ttabIndex: -1\r\n\t\t\t});\r\n\r\n\t\tthis.anchors = this.tabs.map(function() {\r\n\t\t\t\treturn $( \"a\", this )[ 0 ];\r\n\t\t\t})\r\n\t\t\t.addClass( \"ui-tabs-anchor\" )\r\n\t\t\t.attr({\r\n\t\t\t\trole: \"presentation\",\r\n\t\t\t\ttabIndex: -1\r\n\t\t\t});\r\n\r\n\t\tthis.panels = $();\r\n\r\n\t\tthis.anchors.each(function( i, anchor ) {\r\n\t\t\tvar selector, panel, panelId,\r\n\t\t\t\tanchorId = $( anchor ).uniqueId().attr( \"id\" ),\r\n\t\t\t\ttab = $( anchor ).closest( \"li\" ),\r\n\t\t\t\toriginalAriaControls = tab.attr( \"aria-controls\" );\r\n\r\n\t\t\t// inline tab\r\n\t\t\tif ( isLocal( anchor ) ) {\r\n\t\t\t\tselector = anchor.hash;\r\n\t\t\t\tpanel = that.element.find( that._sanitizeSelector( selector ) );\r\n\t\t\t// remote tab\r\n\t\t\t} else {\r\n\t\t\t\tpanelId = that._tabId( tab );\r\n\t\t\t\tselector = \"#\" + panelId;\r\n\t\t\t\tpanel = that.element.find( selector );\r\n\t\t\t\tif ( !panel.length ) {\r\n\t\t\t\t\tpanel = that._createPanel( panelId );\r\n\t\t\t\t\tpanel.insertAfter( that.panels[ i - 1 ] || that.tablist );\r\n\t\t\t\t}\r\n\t\t\t\tpanel.attr( \"aria-live\", \"polite\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( panel.length) {\r\n\t\t\t\tthat.panels = that.panels.add( panel );\r\n\t\t\t}\r\n\t\t\tif ( originalAriaControls ) {\r\n\t\t\t\ttab.data( \"ui-tabs-aria-controls\", originalAriaControls );\r\n\t\t\t}\r\n\t\t\ttab.attr({\r\n\t\t\t\t\"aria-controls\": selector.substring( 1 ),\r\n\t\t\t\t\"aria-labelledby\": anchorId\r\n\t\t\t});\r\n\t\t\tpanel.attr( \"aria-labelledby\", anchorId );\r\n\t\t});\r\n\r\n\t\tthis.panels\r\n\t\t\t.addClass( \"ui-tabs-panel ui-widget-content ui-corner-bottom\" )\r\n\t\t\t.attr( \"role\", \"tabpanel\" );\r\n\t},\r\n\r\n\t// allow overriding how to find the list for rare usage scenarios (#7715)\r\n\t_getList: function() {\r\n\t\treturn this.tablist || this.element.find( \"ol,ul\" ).eq( 0 );\r\n\t},\r\n\r\n\t_createPanel: function( id ) {\r\n\t\treturn $( \"<div>\" )\r\n\t\t\t.attr( \"id\", id )\r\n\t\t\t.addClass( \"ui-tabs-panel ui-widget-content ui-corner-bottom\" )\r\n\t\t\t.data( \"ui-tabs-destroy\", true );\r\n\t},\r\n\r\n\t_setupDisabled: function( disabled ) {\r\n\t\tif ( $.isArray( disabled ) ) {\r\n\t\t\tif ( !disabled.length ) {\r\n\t\t\t\tdisabled = false;\r\n\t\t\t} else if ( disabled.length === this.anchors.length ) {\r\n\t\t\t\tdisabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// disable tabs\r\n\t\tfor ( var i = 0, li; ( li = this.tabs[ i ] ); i++ ) {\r\n\t\t\tif ( disabled === true || $.inArray( i, disabled ) !== -1 ) {\r\n\t\t\t\t$( li )\r\n\t\t\t\t\t.addClass( \"ui-state-disabled\" )\r\n\t\t\t\t\t.attr( \"aria-disabled\", \"true\" );\r\n\t\t\t} else {\r\n\t\t\t\t$( li )\r\n\t\t\t\t\t.removeClass( \"ui-state-disabled\" )\r\n\t\t\t\t\t.removeAttr( \"aria-disabled\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.options.disabled = disabled;\r\n\t},\r\n\r\n\t_setupEvents: function( event ) {\r\n\t\tvar events = {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t};\r\n\t\tif ( event ) {\r\n\t\t\t$.each( event.split(\" \"), function( index, eventName ) {\r\n\t\t\t\tevents[ eventName ] = \"_eventHandler\";\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._off( this.anchors.add( this.tabs ).add( this.panels ) );\r\n\t\tthis._on( this.anchors, events );\r\n\t\tthis._on( this.tabs, { keydown: \"_tabKeydown\" } );\r\n\t\tthis._on( this.panels, { keydown: \"_panelKeydown\" } );\r\n\r\n\t\tthis._focusable( this.tabs );\r\n\t\tthis._hoverable( this.tabs );\r\n\t},\r\n\r\n\t_setupHeightStyle: function( heightStyle ) {\r\n\t\tvar maxHeight,\r\n\t\t\tparent = this.element.parent();\r\n\r\n\t\tif ( heightStyle === \"fill\" ) {\r\n\t\t\tmaxHeight = parent.height();\r\n\t\t\tmaxHeight -= this.element.outerHeight() - this.element.height();\r\n\r\n\t\t\tthis.element.siblings( \":visible\" ).each(function() {\r\n\t\t\t\tvar elem = $( this ),\r\n\t\t\t\t\tposition = elem.css( \"position\" );\r\n\r\n\t\t\t\tif ( position === \"absolute\" || position === \"fixed\" ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tmaxHeight -= elem.outerHeight( true );\r\n\t\t\t});\r\n\r\n\t\t\tthis.element.children().not( this.panels ).each(function() {\r\n\t\t\t\tmaxHeight -= $( this ).outerHeight( true );\r\n\t\t\t});\r\n\r\n\t\t\tthis.panels.each(function() {\r\n\t\t\t\t$( this ).height( Math.max( 0, maxHeight -\r\n\t\t\t\t\t$( this ).innerHeight() + $( this ).height() ) );\r\n\t\t\t})\r\n\t\t\t.css( \"overflow\", \"auto\" );\r\n\t\t} else if ( heightStyle === \"auto\" ) {\r\n\t\t\tmaxHeight = 0;\r\n\t\t\tthis.panels.each(function() {\r\n\t\t\t\tmaxHeight = Math.max( maxHeight, $( this ).height( \"\" ).height() );\r\n\t\t\t}).height( maxHeight );\r\n\t\t}\r\n\t},\r\n\r\n\t_eventHandler: function( event ) {\r\n\t\tvar options = this.options,\r\n\t\t\tactive = this.active,\r\n\t\t\tanchor = $( event.currentTarget ),\r\n\t\t\ttab = anchor.closest( \"li\" ),\r\n\t\t\tclickedIsActive = tab[ 0 ] === active[ 0 ],\r\n\t\t\tcollapsing = clickedIsActive && options.collapsible,\r\n\t\t\ttoShow = collapsing ? $() : this._getPanelForTab( tab ),\r\n\t\t\ttoHide = !active.length ? $() : this._getPanelForTab( active ),\r\n\t\t\teventData = {\r\n\t\t\t\toldTab: active,\r\n\t\t\t\toldPanel: toHide,\r\n\t\t\t\tnewTab: collapsing ? $() : tab,\r\n\t\t\t\tnewPanel: toShow\r\n\t\t\t};\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif ( tab.hasClass( \"ui-state-disabled\" ) ||\r\n\t\t\t\t// tab is already loading\r\n\t\t\t\ttab.hasClass( \"ui-tabs-loading\" ) ||\r\n\t\t\t\t// can't switch durning an animation\r\n\t\t\t\tthis.running ||\r\n\t\t\t\t// click on active header, but not collapsible\r\n\t\t\t\t( clickedIsActive && !options.collapsible ) ||\r\n\t\t\t\t// allow canceling activation\r\n\t\t\t\t( this._trigger( \"beforeActivate\", event, eventData ) === false ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions.active = collapsing ? false : this.tabs.index( tab );\r\n\r\n\t\tthis.active = clickedIsActive ? $() : tab;\r\n\t\tif ( this.xhr ) {\r\n\t\t\tthis.xhr.abort();\r\n\t\t}\r\n\r\n\t\tif ( !toHide.length && !toShow.length ) {\r\n\t\t\t$.error( \"jQuery UI Tabs: Mismatching fragment identifier.\" );\r\n\t\t}\r\n\r\n\t\tif ( toShow.length ) {\r\n\t\t\tthis.load( this.tabs.index( tab ), event );\r\n\t\t}\r\n\t\tthis._toggle( event, eventData );\r\n\t},\r\n\r\n\t// handles show/hide for selecting tabs\r\n\t_toggle: function( event, eventData ) {\r\n\t\tvar that = this,\r\n\t\t\ttoShow = eventData.newPanel,\r\n\t\t\ttoHide = eventData.oldPanel;\r\n\r\n\t\tthis.running = true;\r\n\r\n\t\tfunction complete() {\r\n\t\t\tthat.running = false;\r\n\t\t\tthat._trigger( \"activate\", event, eventData );\r\n\t\t}\r\n\r\n\t\tfunction show() {\r\n\t\t\teventData.newTab.closest( \"li\" ).addClass( \"ui-tabs-active ui-state-active\" );\r\n\r\n\t\t\tif ( toShow.length && that.options.show ) {\r\n\t\t\t\tthat._show( toShow, that.options.show, complete );\r\n\t\t\t} else {\r\n\t\t\t\ttoShow.show();\r\n\t\t\t\tcomplete();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// start out by hiding, then showing, then completing\r\n\t\tif ( toHide.length && this.options.hide ) {\r\n\t\t\tthis._hide( toHide, this.options.hide, function() {\r\n\t\t\t\teventData.oldTab.closest( \"li\" ).removeClass( \"ui-tabs-active ui-state-active\" );\r\n\t\t\t\tshow();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\teventData.oldTab.closest( \"li\" ).removeClass( \"ui-tabs-active ui-state-active\" );\r\n\t\t\ttoHide.hide();\r\n\t\t\tshow();\r\n\t\t}\r\n\r\n\t\ttoHide.attr({\r\n\t\t\t\"aria-expanded\": \"false\",\r\n\t\t\t\"aria-hidden\": \"true\"\r\n\t\t});\r\n\t\teventData.oldTab.attr( \"aria-selected\", \"false\" );\r\n\t\t// If we're switching tabs, remove the old tab from the tab order.\r\n\t\t// If we're opening from collapsed state, remove the previous tab from the tab order.\r\n\t\t// If we're collapsing, then keep the collapsing tab in the tab order.\r\n\t\tif ( toShow.length && toHide.length ) {\r\n\t\t\teventData.oldTab.attr( \"tabIndex\", -1 );\r\n\t\t} else if ( toShow.length ) {\r\n\t\t\tthis.tabs.filter(function() {\r\n\t\t\t\treturn $( this ).attr( \"tabIndex\" ) === 0;\r\n\t\t\t})\r\n\t\t\t.attr( \"tabIndex\", -1 );\r\n\t\t}\r\n\r\n\t\ttoShow.attr({\r\n\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\t\"aria-hidden\": \"false\"\r\n\t\t});\r\n\t\teventData.newTab.attr({\r\n\t\t\t\"aria-selected\": \"true\",\r\n\t\t\ttabIndex: 0\r\n\t\t});\r\n\t},\r\n\r\n\t_activate: function( index ) {\r\n\t\tvar anchor,\r\n\t\t\tactive = this._findActive( index );\r\n\r\n\t\t// trying to activate the already active panel\r\n\t\tif ( active[ 0 ] === this.active[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// trying to collapse, simulate a click on the current active header\r\n\t\tif ( !active.length ) {\r\n\t\t\tactive = this.active;\r\n\t\t}\r\n\r\n\t\tanchor = active.find( \".ui-tabs-anchor\" )[ 0 ];\r\n\t\tthis._eventHandler({\r\n\t\t\ttarget: anchor,\r\n\t\t\tcurrentTarget: anchor,\r\n\t\t\tpreventDefault: $.noop\r\n\t\t});\r\n\t},\r\n\r\n\t_findActive: function( index ) {\r\n\t\treturn index === false ? $() : this.tabs.eq( index );\r\n\t},\r\n\r\n\t_getIndex: function( index ) {\r\n\t\t// meta-function to give users option to provide a href string instead of a numerical index.\r\n\t\tif ( typeof index === \"string\" ) {\r\n\t\t\tindex = this.anchors.index( this.anchors.filter( \"[href$='\" + index + \"']\" ) );\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tif ( this.xhr ) {\r\n\t\t\tthis.xhr.abort();\r\n\t\t}\r\n\r\n\t\tthis.element.removeClass( \"ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible\" );\r\n\r\n\t\tthis.tablist\r\n\t\t\t.removeClass( \"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\" )\r\n\t\t\t.removeAttr( \"role\" );\r\n\r\n\t\tthis.anchors\r\n\t\t\t.removeClass( \"ui-tabs-anchor\" )\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.removeAttr( \"tabIndex\" )\r\n\t\t\t.removeUniqueId();\r\n\r\n\t\tthis.tabs.add( this.panels ).each(function() {\r\n\t\t\tif ( $.data( this, \"ui-tabs-destroy\" ) ) {\r\n\t\t\t\t$( this ).remove();\r\n\t\t\t} else {\r\n\t\t\t\t$( this )\r\n\t\t\t\t\t.removeClass( \"ui-state-default ui-state-active ui-state-disabled \" +\r\n\t\t\t\t\t\t\"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel\" )\r\n\t\t\t\t\t.removeAttr( \"tabIndex\" )\r\n\t\t\t\t\t.removeAttr( \"aria-live\" )\r\n\t\t\t\t\t.removeAttr( \"aria-busy\" )\r\n\t\t\t\t\t.removeAttr( \"aria-selected\" )\r\n\t\t\t\t\t.removeAttr( \"aria-labelledby\" )\r\n\t\t\t\t\t.removeAttr( \"aria-hidden\" )\r\n\t\t\t\t\t.removeAttr( \"aria-expanded\" )\r\n\t\t\t\t\t.removeAttr( \"role\" );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.tabs.each(function() {\r\n\t\t\tvar li = $( this ),\r\n\t\t\t\tprev = li.data( \"ui-tabs-aria-controls\" );\r\n\t\t\tif ( prev ) {\r\n\t\t\t\tli\r\n\t\t\t\t\t.attr( \"aria-controls\", prev )\r\n\t\t\t\t\t.removeData( \"ui-tabs-aria-controls\" );\r\n\t\t\t} else {\r\n\t\t\t\tli.removeAttr( \"aria-controls\" );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.panels.show();\r\n\r\n\t\tif ( this.options.heightStyle !== \"content\" ) {\r\n\t\t\tthis.panels.css( \"height\", \"\" );\r\n\t\t}\r\n\t},\r\n\r\n\tenable: function( index ) {\r\n\t\tvar disabled = this.options.disabled;\r\n\t\tif ( disabled === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( index === undefined ) {\r\n\t\t\tdisabled = false;\r\n\t\t} else {\r\n\t\t\tindex = this._getIndex( index );\r\n\t\t\tif ( $.isArray( disabled ) ) {\r\n\t\t\t\tdisabled = $.map( disabled, function( num ) {\r\n\t\t\t\t\treturn num !== index ? num : null;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdisabled = $.map( this.tabs, function( li, num ) {\r\n\t\t\t\t\treturn num !== index ? num : null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._setupDisabled( disabled );\r\n\t},\r\n\r\n\tdisable: function( index ) {\r\n\t\tvar disabled = this.options.disabled;\r\n\t\tif ( disabled === true ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( index === undefined ) {\r\n\t\t\tdisabled = true;\r\n\t\t} else {\r\n\t\t\tindex = this._getIndex( index );\r\n\t\t\tif ( $.inArray( index, disabled ) !== -1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( $.isArray( disabled ) ) {\r\n\t\t\t\tdisabled = $.merge( [ index ], disabled ).sort();\r\n\t\t\t} else {\r\n\t\t\t\tdisabled = [ index ];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._setupDisabled( disabled );\r\n\t},\r\n\r\n\tload: function( index, event ) {\r\n\t\tindex = this._getIndex( index );\r\n\t\tvar that = this,\r\n\t\t\ttab = this.tabs.eq( index ),\r\n\t\t\tanchor = tab.find( \".ui-tabs-anchor\" ),\r\n\t\t\tpanel = this._getPanelForTab( tab ),\r\n\t\t\teventData = {\r\n\t\t\t\ttab: tab,\r\n\t\t\t\tpanel: panel\r\n\t\t\t};\r\n\r\n\t\t// not remote\r\n\t\tif ( isLocal( anchor[ 0 ] ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );\r\n\r\n\t\t// support: jQuery <1.8\r\n\t\t// jQuery <1.8 returns false if the request is canceled in beforeSend,\r\n\t\t// but as of 1.8, $.ajax() always returns a jqXHR object.\r\n\t\tif ( this.xhr && this.xhr.statusText !== \"canceled\" ) {\r\n\t\t\ttab.addClass( \"ui-tabs-loading\" );\r\n\t\t\tpanel.attr( \"aria-busy\", \"true\" );\r\n\r\n\t\t\tthis.xhr\r\n\t\t\t\t.success(function( response ) {\r\n\t\t\t\t\t// support: jQuery <1.8\r\n\t\t\t\t\t// http://bugs.jquery.com/ticket/11778\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tpanel.html( response );\r\n\t\t\t\t\t\tthat._trigger( \"load\", event, eventData );\r\n\t\t\t\t\t}, 1 );\r\n\t\t\t\t})\r\n\t\t\t\t.complete(function( jqXHR, status ) {\r\n\t\t\t\t\t// support: jQuery <1.8\r\n\t\t\t\t\t// http://bugs.jquery.com/ticket/11778\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tif ( status === \"abort\" ) {\r\n\t\t\t\t\t\t\tthat.panels.stop( false, true );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttab.removeClass( \"ui-tabs-loading\" );\r\n\t\t\t\t\t\tpanel.removeAttr( \"aria-busy\" );\r\n\r\n\t\t\t\t\t\tif ( jqXHR === that.xhr ) {\r\n\t\t\t\t\t\t\tdelete that.xhr;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 1 );\r\n\t\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_ajaxSettings: function( anchor, event, eventData ) {\r\n\t\tvar that = this;\r\n\t\treturn {\r\n\t\t\turl: anchor.attr( \"href\" ),\r\n\t\t\tbeforeSend: function( jqXHR, settings ) {\r\n\t\t\t\treturn that._trigger( \"beforeLoad\", event,\r\n\t\t\t\t\t$.extend( { jqXHR : jqXHR, ajaxSettings: settings }, eventData ) );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\t_getPanelForTab: function( tab ) {\r\n\t\tvar id = $( tab ).attr( \"aria-controls\" );\r\n\t\treturn this.element.find( this._sanitizeSelector( \"#\" + id ) );\r\n\t}\r\n});\r\n\r\n})( jQuery );\r\n\r\n(function( $ ) {\r\n\r\nvar increments = 0;\r\n\r\nfunction addDescribedBy( elem, id ) {\r\n\tvar describedby = (elem.attr( \"aria-describedby\" ) || \"\").split( /\\s+/ );\r\n\tdescribedby.push( id );\r\n\telem\r\n\t\t.data( \"ui-tooltip-id\", id )\r\n\t\t.attr( \"aria-describedby\", $.trim( describedby.join( \" \" ) ) );\r\n}\r\n\r\nfunction removeDescribedBy( elem ) {\r\n\tvar id = elem.data( \"ui-tooltip-id\" ),\r\n\t\tdescribedby = (elem.attr( \"aria-describedby\" ) || \"\").split( /\\s+/ ),\r\n\t\tindex = $.inArray( id, describedby );\r\n\tif ( index !== -1 ) {\r\n\t\tdescribedby.splice( index, 1 );\r\n\t}\r\n\r\n\telem.removeData( \"ui-tooltip-id\" );\r\n\tdescribedby = $.trim( describedby.join( \" \" ) );\r\n\tif ( describedby ) {\r\n\t\telem.attr( \"aria-describedby\", describedby );\r\n\t} else {\r\n\t\telem.removeAttr( \"aria-describedby\" );\r\n\t}\r\n}\r\n\r\n$.widget( \"ui.tooltip\", {\r\n\tversion: \"1.10.4\",\r\n\toptions: {\r\n\t\tcontent: function() {\r\n\t\t\t// support: IE<9, Opera in jQuery <1.7\r\n\t\t\t// .text() can't accept undefined, so coerce to a string\r\n\t\t\tvar title = $( this ).attr( \"title\" ) || \"\";\r\n\t\t\t// Escape title, since we're going from an attribute to raw HTML\r\n\t\t\treturn $( \"<a>\" ).text( title ).html();\r\n\t\t},\r\n\t\thide: true,\r\n\t\t// Disabled elements have inconsistent behavior across browsers (#8661)\r\n\t\titems: \"[title]:not([disabled])\",\r\n\t\tposition: {\r\n\t\t\tmy: \"left top+15\",\r\n\t\t\tat: \"left bottom\",\r\n\t\t\tcollision: \"flipfit flip\"\r\n\t\t},\r\n\t\tshow: true,\r\n\t\ttooltipClass: null,\r\n\t\ttrack: false,\r\n\r\n\t\t// callbacks\r\n\t\tclose: null,\r\n\t\topen: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis._on({\r\n\t\t\tmouseover: \"open\",\r\n\t\t\tfocusin: \"open\"\r\n\t\t});\r\n\r\n\t\t// IDs of generated tooltips, needed for destroy\r\n\t\tthis.tooltips = {};\r\n\t\t// IDs of parent tooltips where we removed the title attribute\r\n\t\tthis.parents = {};\r\n\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\tthis._disable();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar that = this;\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis[ value ? \"_disable\" : \"_enable\" ]();\r\n\t\t\tthis.options[ key ] = value;\r\n\t\t\t// disable element style changes\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"content\" ) {\r\n\t\t\t$.each( this.tooltips, function( id, element ) {\r\n\t\t\t\tthat._updateContent( element );\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_disable: function() {\r\n\t\tvar that = this;\r\n\r\n\t\t// close open tooltips\r\n\t\t$.each( this.tooltips, function( id, element ) {\r\n\t\t\tvar event = $.Event( \"blur\" );\r\n\t\t\tevent.target = event.currentTarget = element[0];\r\n\t\t\tthat.close( event, true );\r\n\t\t});\r\n\r\n\t\t// remove title attributes to prevent native tooltips\r\n\t\tthis.element.find( this.options.items ).addBack().each(function() {\r\n\t\t\tvar element = $( this );\r\n\t\t\tif ( element.is( \"[title]\" ) ) {\r\n\t\t\t\telement\r\n\t\t\t\t\t.data( \"ui-tooltip-title\", element.attr( \"title\" ) )\r\n\t\t\t\t\t.attr( \"title\", \"\" );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_enable: function() {\r\n\t\t// restore title attributes\r\n\t\tthis.element.find( this.options.items ).addBack().each(function() {\r\n\t\t\tvar element = $( this );\r\n\t\t\tif ( element.data( \"ui-tooltip-title\" ) ) {\r\n\t\t\t\telement.attr( \"title\", element.data( \"ui-tooltip-title\" ) );\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\topen: function( event ) {\r\n\t\tvar that = this,\r\n\t\t\ttarget = $( event ? event.target : this.element )\r\n\t\t\t\t// we need closest here due to mouseover bubbling,\r\n\t\t\t\t// but always pointing at the same event target\r\n\t\t\t\t.closest( this.options.items );\r\n\r\n\t\t// No element to show a tooltip for or the tooltip is already open\r\n\t\tif ( !target.length || target.data( \"ui-tooltip-id\" ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( target.attr( \"title\" ) ) {\r\n\t\t\ttarget.data( \"ui-tooltip-title\", target.attr( \"title\" ) );\r\n\t\t}\r\n\r\n\t\ttarget.data( \"ui-tooltip-open\", true );\r\n\r\n\t\t// kill parent tooltips, custom or native, for hover\r\n\t\tif ( event && event.type === \"mouseover\" ) {\r\n\t\t\ttarget.parents().each(function() {\r\n\t\t\t\tvar parent = $( this ),\r\n\t\t\t\t\tblurEvent;\r\n\t\t\t\tif ( parent.data( \"ui-tooltip-open\" ) ) {\r\n\t\t\t\t\tblurEvent = $.Event( \"blur\" );\r\n\t\t\t\t\tblurEvent.target = blurEvent.currentTarget = this;\r\n\t\t\t\t\tthat.close( blurEvent, true );\r\n\t\t\t\t}\r\n\t\t\t\tif ( parent.attr( \"title\" ) ) {\r\n\t\t\t\t\tparent.uniqueId();\r\n\t\t\t\t\tthat.parents[ this.id ] = {\r\n\t\t\t\t\t\telement: this,\r\n\t\t\t\t\t\ttitle: parent.attr( \"title\" )\r\n\t\t\t\t\t};\r\n\t\t\t\t\tparent.attr( \"title\", \"\" );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._updateContent( target, event );\r\n\t},\r\n\r\n\t_updateContent: function( target, event ) {\r\n\t\tvar content,\r\n\t\t\tcontentOption = this.options.content,\r\n\t\t\tthat = this,\r\n\t\t\teventType = event ? event.type : null;\r\n\r\n\t\tif ( typeof contentOption === \"string\" ) {\r\n\t\t\treturn this._open( event, target, contentOption );\r\n\t\t}\r\n\r\n\t\tcontent = contentOption.call( target[0], function( response ) {\r\n\t\t\t// ignore async response if tooltip was closed already\r\n\t\t\tif ( !target.data( \"ui-tooltip-open\" ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// IE may instantly serve a cached response for ajax requests\r\n\t\t\t// delay this call to _open so the other call to _open runs first\r\n\t\t\tthat._delay(function() {\r\n\t\t\t\t// jQuery creates a special event for focusin when it doesn't\r\n\t\t\t\t// exist natively. To improve performance, the native event\r\n\t\t\t\t// object is reused and the type is changed. Therefore, we can't\r\n\t\t\t\t// rely on the type being correct after the event finished\r\n\t\t\t\t// bubbling, so we set it back to the previous value. (#8740)\r\n\t\t\t\tif ( event ) {\r\n\t\t\t\t\tevent.type = eventType;\r\n\t\t\t\t}\r\n\t\t\t\tthis._open( event, target, response );\r\n\t\t\t});\r\n\t\t});\r\n\t\tif ( content ) {\r\n\t\t\tthis._open( event, target, content );\r\n\t\t}\r\n\t},\r\n\r\n\t_open: function( event, target, content ) {\r\n\t\tvar tooltip, events, delayedShow,\r\n\t\t\tpositionOption = $.extend( {}, this.options.position );\r\n\r\n\t\tif ( !content ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Content can be updated multiple times. If the tooltip already\r\n\t\t// exists, then just update the content and bail.\r\n\t\ttooltip = this._find( target );\r\n\t\tif ( tooltip.length ) {\r\n\t\t\ttooltip.find( \".ui-tooltip-content\" ).html( content );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if we have a title, clear it to prevent the native tooltip\r\n\t\t// we have to check first to avoid defining a title if none exists\r\n\t\t// (we don't want to cause an element to start matching [title])\r\n\t\t//\r\n\t\t// We use removeAttr only for key events, to allow IE to export the correct\r\n\t\t// accessible attributes. For mouse events, set to empty string to avoid\r\n\t\t// native tooltip showing up (happens only when removing inside mouseover).\r\n\t\tif ( target.is( \"[title]\" ) ) {\r\n\t\t\tif ( event && event.type === \"mouseover\" ) {\r\n\t\t\t\ttarget.attr( \"title\", \"\" );\r\n\t\t\t} else {\r\n\t\t\t\ttarget.removeAttr( \"title\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttooltip = this._tooltip( target );\r\n\t\taddDescribedBy( target, tooltip.attr( \"id\" ) );\r\n\t\ttooltip.find( \".ui-tooltip-content\" ).html( content );\r\n\r\n\t\tfunction position( event ) {\r\n\t\t\tpositionOption.of = event;\r\n\t\t\tif ( tooltip.is( \":hidden\" ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttooltip.position( positionOption );\r\n\t\t}\r\n\t\tif ( this.options.track && event && /^mouse/.test( event.type ) ) {\r\n\t\t\tthis._on( this.document, {\r\n\t\t\t\tmousemove: position\r\n\t\t\t});\r\n\t\t\t// trigger once to override element-relative positioning\r\n\t\t\tposition( event );\r\n\t\t} else {\r\n\t\t\ttooltip.position( $.extend({\r\n\t\t\t\tof: target\r\n\t\t\t}, this.options.position ) );\r\n\t\t}\r\n\r\n\t\ttooltip.hide();\r\n\r\n\t\tthis._show( tooltip, this.options.show );\r\n\t\t// Handle tracking tooltips that are shown with a delay (#8644). As soon\r\n\t\t// as the tooltip is visible, position the tooltip using the most recent\r\n\t\t// event.\r\n\t\tif ( this.options.show && this.options.show.delay ) {\r\n\t\t\tdelayedShow = this.delayedShow = setInterval(function() {\r\n\t\t\t\tif ( tooltip.is( \":visible\" ) ) {\r\n\t\t\t\t\tposition( positionOption.of );\r\n\t\t\t\t\tclearInterval( delayedShow );\r\n\t\t\t\t}\r\n\t\t\t}, $.fx.interval );\r\n\t\t}\r\n\r\n\t\tthis._trigger( \"open\", event, { tooltip: tooltip } );\r\n\r\n\t\tevents = {\r\n\t\t\tkeyup: function( event ) {\r\n\t\t\t\tif ( event.keyCode === $.ui.keyCode.ESCAPE ) {\r\n\t\t\t\t\tvar fakeEvent = $.Event(event);\r\n\t\t\t\t\tfakeEvent.currentTarget = target[0];\r\n\t\t\t\t\tthis.close( fakeEvent, true );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tremove: function() {\r\n\t\t\t\tthis._removeTooltip( tooltip );\r\n\t\t\t}\r\n\t\t};\r\n\t\tif ( !event || event.type === \"mouseover\" ) {\r\n\t\t\tevents.mouseleave = \"close\";\r\n\t\t}\r\n\t\tif ( !event || event.type === \"focusin\" ) {\r\n\t\t\tevents.focusout = \"close\";\r\n\t\t}\r\n\t\tthis._on( true, target, events );\r\n\t},\r\n\r\n\tclose: function( event ) {\r\n\t\tvar that = this,\r\n\t\t\ttarget = $( event ? event.currentTarget : this.element ),\r\n\t\t\ttooltip = this._find( target );\r\n\r\n\t\t// disabling closes the tooltip, so we need to track when we're closing\r\n\t\t// to avoid an infinite loop in case the tooltip becomes disabled on close\r\n\t\tif ( this.closing ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Clear the interval for delayed tracking tooltips\r\n\t\tclearInterval( this.delayedShow );\r\n\r\n\t\t// only set title if we had one before (see comment in _open())\r\n\t\tif ( target.data( \"ui-tooltip-title\" ) ) {\r\n\t\t\ttarget.attr( \"title\", target.data( \"ui-tooltip-title\" ) );\r\n\t\t}\r\n\r\n\t\tremoveDescribedBy( target );\r\n\r\n\t\ttooltip.stop( true );\r\n\t\tthis._hide( tooltip, this.options.hide, function() {\r\n\t\t\tthat._removeTooltip( $( this ) );\r\n\t\t});\r\n\r\n\t\ttarget.removeData( \"ui-tooltip-open\" );\r\n\t\tthis._off( target, \"mouseleave focusout keyup\" );\r\n\t\t// Remove 'remove' binding only on delegated targets\r\n\t\tif ( target[0] !== this.element[0] ) {\r\n\t\t\tthis._off( target, \"remove\" );\r\n\t\t}\r\n\t\tthis._off( this.document, \"mousemove\" );\r\n\r\n\t\tif ( event && event.type === \"mouseleave\" ) {\r\n\t\t\t$.each( this.parents, function( id, parent ) {\r\n\t\t\t\t$( parent.element ).attr( \"title\", parent.title );\r\n\t\t\t\tdelete that.parents[ id ];\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.closing = true;\r\n\t\tthis._trigger( \"close\", event, { tooltip: tooltip } );\r\n\t\tthis.closing = false;\r\n\t},\r\n\r\n\t_tooltip: function( element ) {\r\n\t\tvar id = \"ui-tooltip-\" + increments++,\r\n\t\t\ttooltip = $( \"<div>\" )\r\n\t\t\t\t.attr({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\trole: \"tooltip\"\r\n\t\t\t\t})\r\n\t\t\t\t.addClass( \"ui-tooltip ui-widget ui-corner-all ui-widget-content \" +\r\n\t\t\t\t\t( this.options.tooltipClass || \"\" ) );\r\n\t\t$( \"<div>\" )\r\n\t\t\t.addClass( \"ui-tooltip-content\" )\r\n\t\t\t.appendTo( tooltip );\r\n\t\ttooltip.appendTo( this.document[0].body );\r\n\t\tthis.tooltips[ id ] = element;\r\n\t\treturn tooltip;\r\n\t},\r\n\r\n\t_find: function( target ) {\r\n\t\tvar id = target.data( \"ui-tooltip-id\" );\r\n\t\treturn id ? $( \"#\" + id ) : $();\r\n\t},\r\n\r\n\t_removeTooltip: function( tooltip ) {\r\n\t\ttooltip.remove();\r\n\t\tdelete this.tooltips[ tooltip.attr( \"id\" ) ];\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar that = this;\r\n\r\n\t\t// close open tooltips\r\n\t\t$.each( this.tooltips, function( id, element ) {\r\n\t\t\t// Delegate to close method to handle common cleanup\r\n\t\t\tvar event = $.Event( \"blur\" );\r\n\t\t\tevent.target = event.currentTarget = element[0];\r\n\t\t\tthat.close( event, true );\r\n\r\n\t\t\t// Remove immediately; destroying an open tooltip doesn't use the\r\n\t\t\t// hide animation\r\n\t\t\t$( \"#\" + id ).remove();\r\n\r\n\t\t\t// Restore the title\r\n\t\t\tif ( element.data( \"ui-tooltip-title\" ) ) {\r\n\t\t\t\telement.attr( \"title\", element.data( \"ui-tooltip-title\" ) );\r\n\t\t\t\telement.removeData( \"ui-tooltip-title\" );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\n}( jQuery ) );\r\n","knockoutjs/knockout.js":"/*!\r\n * Knockout JavaScript library v3.3.0\r\n * (c) Steven Sanderson - http://knockoutjs.com/\r\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n */\r\n\r\n(function(){\r\nvar DEBUG=true;\r\n(function(undefined){\r\n    // (0, eval)('this') is a robust way of getting a reference to the global object\r\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\r\n    var window = this || (0, eval)('this'),\r\n        document = window['document'],\r\n        navigator = window['navigator'],\r\n        jQueryInstance = window[\"jQuery\"],\r\n        JSON = window[\"JSON\"];\r\n(function(factory) {\r\n    // Support three module loading scenarios\r\n    if (typeof define === 'function' && define['amd']) {\r\n        // [1] AMD anonymous module\r\n        define(['exports', 'require'], factory);\r\n    } else if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\r\n        // [2] CommonJS/Node.js\r\n        factory(module['exports'] || exports);  // module.exports is for Node.js\r\n    } else {\r\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\r\n        factory(window['ko'] = {});\r\n    }\r\n}(function(koExports, amdRequire){\r\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\r\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\r\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\r\n// Google Closure Compiler helpers (used only to make the minified file smaller)\r\nko.exportSymbol = function(koPath, object) {\r\n    var tokens = koPath.split(\".\");\r\n\r\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\r\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\r\n    var target = ko;\r\n\r\n    for (var i = 0; i < tokens.length - 1; i++)\r\n        target = target[tokens[i]];\r\n    target[tokens[tokens.length - 1]] = object;\r\n};\r\nko.exportProperty = function(owner, publicName, object) {\r\n    owner[publicName] = object;\r\n};\r\nko.version = \"3.3.0\";\r\n\r\nko.exportSymbol('version', ko.version);\r\nko.utils = (function () {\r\n    function objectForEach(obj, action) {\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                action(prop, obj[prop]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function extend(target, source) {\r\n        if (source) {\r\n            for(var prop in source) {\r\n                if(source.hasOwnProperty(prop)) {\r\n                    target[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function setPrototypeOf(obj, proto) {\r\n        obj.__proto__ = proto;\r\n        return obj;\r\n    }\r\n\r\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\r\n\r\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\r\n    var knownEvents = {}, knownEventTypesByEventName = {};\r\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\r\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\r\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\r\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\r\n        if (knownEventsForType.length) {\r\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\r\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\r\n        }\r\n    });\r\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\r\n\r\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\r\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\r\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\r\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\r\n    var ieVersion = document && (function() {\r\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\r\n\r\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\r\n        while (\r\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\r\n            iElems[0]\r\n        ) {}\r\n        return version > 4 ? version : undefined;\r\n    }());\r\n    var isIe6 = ieVersion === 6,\r\n        isIe7 = ieVersion === 7;\r\n\r\n    function isClickOnCheckableElement(element, eventType) {\r\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\r\n        if (eventType.toLowerCase() != \"click\") return false;\r\n        var inputType = element.type;\r\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\r\n    }\r\n\r\n    // For details on the pattern for changing node classes\r\n    // see: https://github.com/knockout/knockout/issues/1597\r\n    var cssClassNameRegex = /\\S+/g;\r\n\r\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\r\n        var addOrRemoveFn;\r\n        if (classNames) {\r\n            if (typeof node.classList === 'object') {\r\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\r\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n                    addOrRemoveFn.call(node.classList, className);\r\n                });\r\n            } else if (typeof node.className['baseVal'] === 'string') {\r\n                // SVG tag .classNames is an SVGAnimatedString instance\r\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\r\n            } else {\r\n                // node.className ought to be a string.\r\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\r\n            }\r\n        }\r\n    }\r\n\r\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\r\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\r\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\r\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\r\n        });\r\n        obj[prop] = currentClassNames.join(\" \");\r\n    }\r\n\r\n    return {\r\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\r\n\r\n        arrayForEach: function (array, action) {\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                action(array[i], i);\r\n        },\r\n\r\n        arrayIndexOf: function (array, item) {\r\n            if (typeof Array.prototype.indexOf == \"function\")\r\n                return Array.prototype.indexOf.call(array, item);\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                if (array[i] === item)\r\n                    return i;\r\n            return -1;\r\n        },\r\n\r\n        arrayFirst: function (array, predicate, predicateOwner) {\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                if (predicate.call(predicateOwner, array[i], i))\r\n                    return array[i];\r\n            return null;\r\n        },\r\n\r\n        arrayRemoveItem: function (array, itemToRemove) {\r\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\r\n            if (index > 0) {\r\n                array.splice(index, 1);\r\n            }\r\n            else if (index === 0) {\r\n                array.shift();\r\n            }\r\n        },\r\n\r\n        arrayGetDistinctValues: function (array) {\r\n            array = array || [];\r\n            var result = [];\r\n            for (var i = 0, j = array.length; i < j; i++) {\r\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\r\n                    result.push(array[i]);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        arrayMap: function (array, mapping) {\r\n            array = array || [];\r\n            var result = [];\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                result.push(mapping(array[i], i));\r\n            return result;\r\n        },\r\n\r\n        arrayFilter: function (array, predicate) {\r\n            array = array || [];\r\n            var result = [];\r\n            for (var i = 0, j = array.length; i < j; i++)\r\n                if (predicate(array[i], i))\r\n                    result.push(array[i]);\r\n            return result;\r\n        },\r\n\r\n        arrayPushAll: function (array, valuesToPush) {\r\n            if (valuesToPush instanceof Array)\r\n                array.push.apply(array, valuesToPush);\r\n            else\r\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\r\n                    array.push(valuesToPush[i]);\r\n            return array;\r\n        },\r\n\r\n        addOrRemoveItem: function(array, value, included) {\r\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\r\n            if (existingEntryIndex < 0) {\r\n                if (included)\r\n                    array.push(value);\r\n            } else {\r\n                if (!included)\r\n                    array.splice(existingEntryIndex, 1);\r\n            }\r\n        },\r\n\r\n        canSetPrototype: canSetPrototype,\r\n\r\n        extend: extend,\r\n\r\n        setPrototypeOf: setPrototypeOf,\r\n\r\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\r\n\r\n        objectForEach: objectForEach,\r\n\r\n        objectMap: function(source, mapping) {\r\n            if (!source)\r\n                return source;\r\n            var target = {};\r\n            for (var prop in source) {\r\n                if (source.hasOwnProperty(prop)) {\r\n                    target[prop] = mapping(source[prop], prop, source);\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n\r\n        emptyDomNode: function (domNode) {\r\n            while (domNode.firstChild) {\r\n                ko.removeNode(domNode.firstChild);\r\n            }\r\n        },\r\n\r\n        moveCleanedNodesToContainerElement: function(nodes) {\r\n            // Ensure it's a real array, as we're about to reparent the nodes and\r\n            // we don't want the underlying collection to change while we're doing that.\r\n            var nodesArray = ko.utils.makeArray(nodes);\r\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\r\n\r\n            var container = templateDocument.createElement('div');\r\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\r\n                container.appendChild(ko.cleanNode(nodesArray[i]));\r\n            }\r\n            return container;\r\n        },\r\n\r\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\r\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\r\n                var clonedNode = nodesArray[i].cloneNode(true);\r\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\r\n            }\r\n            return newNodesArray;\r\n        },\r\n\r\n        setDomNodeChildren: function (domNode, childNodes) {\r\n            ko.utils.emptyDomNode(domNode);\r\n            if (childNodes) {\r\n                for (var i = 0, j = childNodes.length; i < j; i++)\r\n                    domNode.appendChild(childNodes[i]);\r\n            }\r\n        },\r\n\r\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\r\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\r\n            if (nodesToReplaceArray.length > 0) {\r\n                var insertionPoint = nodesToReplaceArray[0];\r\n                var parent = insertionPoint.parentNode;\r\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\r\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\r\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\r\n                    ko.removeNode(nodesToReplaceArray[i]);\r\n                }\r\n            }\r\n        },\r\n\r\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\r\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\r\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\r\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\r\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\r\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\r\n            //\r\n            // Rules:\r\n            //   [A] Any leading nodes that have been removed should be ignored\r\n            //       These most likely correspond to memoization nodes that were already removed during binding\r\n            //       See https://github.com/SteveSanderson/knockout/pull/440\r\n            //   [B] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\r\n            //       and include any nodes that have been inserted among the previous collection\r\n\r\n            if (continuousNodeArray.length) {\r\n                // The parent node can be a virtual element; so get the real parent node\r\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\r\n\r\n                // Rule [A]\r\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\r\n                    continuousNodeArray.splice(0, 1);\r\n\r\n                // Rule [B]\r\n                if (continuousNodeArray.length > 1) {\r\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\r\n                    // Replace with the actual new continuous node set\r\n                    continuousNodeArray.length = 0;\r\n                    while (current !== last) {\r\n                        continuousNodeArray.push(current);\r\n                        current = current.nextSibling;\r\n                        if (!current) // Won't happen, except if the developer has manually removed some DOM elements (then we're in an undefined scenario)\r\n                            return;\r\n                    }\r\n                    continuousNodeArray.push(last);\r\n                }\r\n            }\r\n            return continuousNodeArray;\r\n        },\r\n\r\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\r\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\r\n            if (ieVersion < 7)\r\n                optionNode.setAttribute(\"selected\", isSelected);\r\n            else\r\n                optionNode.selected = isSelected;\r\n        },\r\n\r\n        stringTrim: function (string) {\r\n            return string === null || string === undefined ? '' :\r\n                string.trim ?\r\n                    string.trim() :\r\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\r\n        },\r\n\r\n        stringStartsWith: function (string, startsWith) {\r\n            string = string || \"\";\r\n            if (startsWith.length > string.length)\r\n                return false;\r\n            return string.substring(0, startsWith.length) === startsWith;\r\n        },\r\n\r\n        domNodeIsContainedBy: function (node, containedByNode) {\r\n            if (node === containedByNode)\r\n                return true;\r\n            if (node.nodeType === 11)\r\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\r\n            if (containedByNode.contains)\r\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\r\n            if (containedByNode.compareDocumentPosition)\r\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\r\n            while (node && node != containedByNode) {\r\n                node = node.parentNode;\r\n            }\r\n            return !!node;\r\n        },\r\n\r\n        domNodeIsAttachedToDocument: function (node) {\r\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\r\n        },\r\n\r\n        anyDomNodeIsAttachedToDocument: function(nodes) {\r\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\r\n        },\r\n\r\n        tagNameLower: function(element) {\r\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\r\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\r\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\r\n            return element && element.tagName && element.tagName.toLowerCase();\r\n        },\r\n\r\n        registerEventHandler: function (element, eventType, handler) {\r\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\r\n            if (!mustUseAttachEvent && jQueryInstance) {\r\n                jQueryInstance(element)['bind'](eventType, handler);\r\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\r\n                element.addEventListener(eventType, handler, false);\r\n            else if (typeof element.attachEvent != \"undefined\") {\r\n                var attachEventHandler = function (event) { handler.call(element, event); },\r\n                    attachEventName = \"on\" + eventType;\r\n                element.attachEvent(attachEventName, attachEventHandler);\r\n\r\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\r\n                // so to avoid leaks, we have to remove them manually. See bug #856\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n                    element.detachEvent(attachEventName, attachEventHandler);\r\n                });\r\n            } else\r\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\r\n        },\r\n\r\n        triggerEvent: function (element, eventType) {\r\n            if (!(element && element.nodeType))\r\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\r\n\r\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\r\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\r\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\r\n            // In both cases, we'll use the click method instead.\r\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\r\n\r\n            if (jQueryInstance && !useClickWorkaround) {\r\n                jQueryInstance(element)['trigger'](eventType);\r\n            } else if (typeof document.createEvent == \"function\") {\r\n                if (typeof element.dispatchEvent == \"function\") {\r\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\r\n                    var event = document.createEvent(eventCategory);\r\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\r\n                    element.dispatchEvent(event);\r\n                }\r\n                else\r\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\r\n            } else if (useClickWorkaround && element.click) {\r\n                element.click();\r\n            } else if (typeof element.fireEvent != \"undefined\") {\r\n                element.fireEvent(\"on\" + eventType);\r\n            } else {\r\n                throw new Error(\"Browser doesn't support triggering events\");\r\n            }\r\n        },\r\n\r\n        unwrapObservable: function (value) {\r\n            return ko.isObservable(value) ? value() : value;\r\n        },\r\n\r\n        peekObservable: function (value) {\r\n            return ko.isObservable(value) ? value.peek() : value;\r\n        },\r\n\r\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\r\n\r\n        setTextContent: function(element, textContent) {\r\n            var value = ko.utils.unwrapObservable(textContent);\r\n            if ((value === null) || (value === undefined))\r\n                value = \"\";\r\n\r\n            // We need there to be exactly one child: a text node.\r\n            // If there are no children, more than one, or if it's not a text node,\r\n            // we'll clear everything and create a single text node.\r\n            var innerTextNode = ko.virtualElements.firstChild(element);\r\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\r\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\r\n            } else {\r\n                innerTextNode.data = value;\r\n            }\r\n\r\n            ko.utils.forceRefresh(element);\r\n        },\r\n\r\n        setElementName: function(element, name) {\r\n            element.name = name;\r\n\r\n            // Workaround IE 6/7 issue\r\n            // - https://github.com/SteveSanderson/knockout/issues/197\r\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\r\n            if (ieVersion <= 7) {\r\n                try {\r\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\r\n                }\r\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\r\n            }\r\n        },\r\n\r\n        forceRefresh: function(node) {\r\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\r\n            if (ieVersion >= 9) {\r\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\r\n                var elem = node.nodeType == 1 ? node : node.parentNode;\r\n                if (elem.style)\r\n                    elem.style.zoom = elem.style.zoom;\r\n            }\r\n        },\r\n\r\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\r\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\r\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\r\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\r\n            if (ieVersion) {\r\n                var originalWidth = selectElement.style.width;\r\n                selectElement.style.width = 0;\r\n                selectElement.style.width = originalWidth;\r\n            }\r\n        },\r\n\r\n        range: function (min, max) {\r\n            min = ko.utils.unwrapObservable(min);\r\n            max = ko.utils.unwrapObservable(max);\r\n            var result = [];\r\n            for (var i = min; i <= max; i++)\r\n                result.push(i);\r\n            return result;\r\n        },\r\n\r\n        makeArray: function(arrayLikeObject) {\r\n            var result = [];\r\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\r\n                result.push(arrayLikeObject[i]);\r\n            };\r\n            return result;\r\n        },\r\n\r\n        isIe6 : isIe6,\r\n        isIe7 : isIe7,\r\n        ieVersion : ieVersion,\r\n\r\n        getFormFields: function(form, fieldName) {\r\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\r\n            var isMatchingField = (typeof fieldName == 'string')\r\n                ? function(field) { return field.name === fieldName }\r\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\r\n            var matches = [];\r\n            for (var i = fields.length - 1; i >= 0; i--) {\r\n                if (isMatchingField(fields[i]))\r\n                    matches.push(fields[i]);\r\n            };\r\n            return matches;\r\n        },\r\n\r\n        parseJson: function (jsonString) {\r\n            if (typeof jsonString == \"string\") {\r\n                jsonString = ko.utils.stringTrim(jsonString);\r\n                if (jsonString) {\r\n                    if (JSON && JSON.parse) // Use native parsing where available\r\n                        return JSON.parse(jsonString);\r\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\r\n            if (!JSON || !JSON.stringify)\r\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\r\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\r\n        },\r\n\r\n        postJson: function (urlOrForm, data, options) {\r\n            options = options || {};\r\n            var params = options['params'] || {};\r\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\r\n            var url = urlOrForm;\r\n\r\n            // If we were given a form, use its 'action' URL and pick out any requested field values\r\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\r\n                var originalForm = urlOrForm;\r\n                url = originalForm.action;\r\n                for (var i = includeFields.length - 1; i >= 0; i--) {\r\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\r\n                    for (var j = fields.length - 1; j >= 0; j--)\r\n                        params[fields[j].name] = fields[j].value;\r\n                }\r\n            }\r\n\r\n            data = ko.utils.unwrapObservable(data);\r\n            var form = document.createElement(\"form\");\r\n            form.style.display = \"none\";\r\n            form.action = url;\r\n            form.method = \"post\";\r\n            for (var key in data) {\r\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\r\n                var input = document.createElement(\"input\");\r\n                input.type = \"hidden\";\r\n                input.name = key;\r\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\r\n                form.appendChild(input);\r\n            }\r\n            objectForEach(params, function(key, value) {\r\n                var input = document.createElement(\"input\");\r\n                input.type = \"hidden\";\r\n                input.name = key;\r\n                input.value = value;\r\n                form.appendChild(input);\r\n            });\r\n            document.body.appendChild(form);\r\n            options['submitter'] ? options['submitter'](form) : form.submit();\r\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\r\n        }\r\n    }\r\n}());\r\n\r\nko.exportSymbol('utils', ko.utils);\r\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\r\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\r\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\r\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\r\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\r\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\r\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\r\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\r\nko.exportSymbol('utils.extend', ko.utils.extend);\r\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\r\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\r\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\r\nko.exportSymbol('utils.postJson', ko.utils.postJson);\r\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\r\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\r\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\r\nko.exportSymbol('utils.range', ko.utils.range);\r\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\r\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\r\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\r\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\r\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\r\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\r\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\r\n\r\nif (!Function.prototype['bind']) {\r\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\r\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\r\n    Function.prototype['bind'] = function (object) {\r\n        var originalFunction = this;\r\n        if (arguments.length === 1) {\r\n            return function () {\r\n                return originalFunction.apply(object, arguments);\r\n            };\r\n        } else {\r\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\r\n            return function () {\r\n                var args = partialArgs.slice(0);\r\n                args.push.apply(args, arguments);\r\n                return originalFunction.apply(object, args);\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\nko.utils.domData = new (function () {\r\n    var uniqueId = 0;\r\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\r\n    var dataStore = {};\r\n\r\n    function getAll(node, createIfNotFound) {\r\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\r\n        if (!hasExistingDataStore) {\r\n            if (!createIfNotFound)\r\n                return undefined;\r\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\r\n            dataStore[dataStoreKey] = {};\r\n        }\r\n        return dataStore[dataStoreKey];\r\n    }\r\n\r\n    return {\r\n        get: function (node, key) {\r\n            var allDataForNode = getAll(node, false);\r\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\r\n        },\r\n        set: function (node, key, value) {\r\n            if (value === undefined) {\r\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\r\n                if (getAll(node, false) === undefined)\r\n                    return;\r\n            }\r\n            var allDataForNode = getAll(node, true);\r\n            allDataForNode[key] = value;\r\n        },\r\n        clear: function (node) {\r\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n            if (dataStoreKey) {\r\n                delete dataStore[dataStoreKey];\r\n                node[dataStoreKeyExpandoPropertyName] = null;\r\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\r\n            }\r\n            return false;\r\n        },\r\n\r\n        nextKey: function () {\r\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('utils.domData', ko.utils.domData);\r\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\r\n\r\nko.utils.domNodeDisposal = new (function () {\r\n    var domDataKey = ko.utils.domData.nextKey();\r\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\r\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\r\n\r\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\r\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\r\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\r\n            allDisposeCallbacks = [];\r\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\r\n        }\r\n        return allDisposeCallbacks;\r\n    }\r\n    function destroyCallbacksCollection(node) {\r\n        ko.utils.domData.set(node, domDataKey, undefined);\r\n    }\r\n\r\n    function cleanSingleNode(node) {\r\n        // Run all the dispose callbacks\r\n        var callbacks = getDisposeCallbacksCollection(node, false);\r\n        if (callbacks) {\r\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\r\n            for (var i = 0; i < callbacks.length; i++)\r\n                callbacks[i](node);\r\n        }\r\n\r\n        // Erase the DOM data\r\n        ko.utils.domData.clear(node);\r\n\r\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\r\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\r\n\r\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\r\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\r\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\r\n            cleanImmediateCommentTypeChildren(node);\r\n    }\r\n\r\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\r\n        var child, nextChild = nodeWithChildren.firstChild;\r\n        while (child = nextChild) {\r\n            nextChild = child.nextSibling;\r\n            if (child.nodeType === 8)\r\n                cleanSingleNode(child);\r\n        }\r\n    }\r\n\r\n    return {\r\n        addDisposeCallback : function(node, callback) {\r\n            if (typeof callback != \"function\")\r\n                throw new Error(\"Callback must be a function\");\r\n            getDisposeCallbacksCollection(node, true).push(callback);\r\n        },\r\n\r\n        removeDisposeCallback : function(node, callback) {\r\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\r\n            if (callbacksCollection) {\r\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\r\n                if (callbacksCollection.length == 0)\r\n                    destroyCallbacksCollection(node);\r\n            }\r\n        },\r\n\r\n        cleanNode : function(node) {\r\n            // First clean this node, where applicable\r\n            if (cleanableNodeTypes[node.nodeType]) {\r\n                cleanSingleNode(node);\r\n\r\n                // ... then its descendants, where applicable\r\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\r\n                    // Clone the descendants list in case it changes during iteration\r\n                    var descendants = [];\r\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\r\n                    for (var i = 0, j = descendants.length; i < j; i++)\r\n                        cleanSingleNode(descendants[i]);\r\n                }\r\n            }\r\n            return node;\r\n        },\r\n\r\n        removeNode : function(node) {\r\n            ko.cleanNode(node);\r\n            if (node.parentNode)\r\n                node.parentNode.removeChild(node);\r\n        },\r\n\r\n        \"cleanExternalData\" : function (node) {\r\n            // Special support for jQuery here because it's so commonly used.\r\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\r\n            // so notify it to tear down any resources associated with the node & descendants here.\r\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\r\n                jQueryInstance['cleanData']([node]);\r\n        }\r\n    };\r\n})();\r\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\r\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\r\nko.exportSymbol('cleanNode', ko.cleanNode);\r\nko.exportSymbol('removeNode', ko.removeNode);\r\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\r\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\r\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\r\n(function () {\r\n    var leadingCommentRegex = /^(\\s*)<!--(.*?)-->/;\r\n\r\n    function simpleHtmlParse(html, documentContext) {\r\n        documentContext || (documentContext = document);\r\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\r\n\r\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\r\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\r\n\r\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\r\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\r\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\r\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\r\n\r\n        // Trim whitespace, otherwise indexOf won't work as expected\r\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\");\r\n\r\n        // Finds the first match from the left column, and returns the corresponding \"wrap\" data from the right column\r\n        var wrap = tags.match(/^<(thead|tbody|tfoot)/)              && [1, \"<table>\", \"</table>\"] ||\r\n                   !tags.indexOf(\"<tr\")                             && [2, \"<table><tbody>\", \"</tbody></table>\"] ||\r\n                   (!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\"))   && [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"] ||\r\n                   /* anything else */                                 [0, \"\", \"\"];\r\n\r\n        // Go to html and back, then peel off extra wrappers\r\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\r\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\r\n        if (typeof windowContext['innerShiv'] == \"function\") {\r\n            div.appendChild(windowContext['innerShiv'](markup));\r\n        } else {\r\n            div.innerHTML = markup;\r\n        }\r\n\r\n        // Move to the right depth\r\n        while (wrap[0]--)\r\n            div = div.lastChild;\r\n\r\n        return ko.utils.makeArray(div.lastChild.childNodes);\r\n    }\r\n\r\n    function jQueryHtmlParse(html, documentContext) {\r\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\r\n        if (jQueryInstance['parseHTML']) {\r\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\r\n        } else {\r\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\r\n            var elems = jQueryInstance['clean']([html], documentContext);\r\n\r\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\r\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\r\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\r\n            if (elems && elems[0]) {\r\n                // Find the top-most parent element that's a direct child of a document fragment\r\n                var elem = elems[0];\r\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\r\n                    elem = elem.parentNode;\r\n                // ... then detach it\r\n                if (elem.parentNode)\r\n                    elem.parentNode.removeChild(elem);\r\n            }\r\n\r\n            return elems;\r\n        }\r\n    }\r\n\r\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\r\n        return jQueryInstance ? jQueryHtmlParse(html, documentContext)   // As below, benefit from jQuery's optimisations where possible\r\n                              : simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\r\n    };\r\n\r\n    ko.utils.setHtml = function(node, html) {\r\n        ko.utils.emptyDomNode(node);\r\n\r\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\r\n        html = ko.utils.unwrapObservable(html);\r\n\r\n        if ((html !== null) && (html !== undefined)) {\r\n            if (typeof html != 'string')\r\n                html = html.toString();\r\n\r\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\r\n            // for example <tr> elements which are not normally allowed to exist on their own.\r\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\r\n            if (jQueryInstance) {\r\n                jQueryInstance(node)['html'](html);\r\n            } else {\r\n                // ... otherwise, use KO's own parsing logic.\r\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\r\n                for (var i = 0; i < parsedNodes.length; i++)\r\n                    node.appendChild(parsedNodes[i]);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\r\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\r\n\r\nko.memoization = (function () {\r\n    var memos = {};\r\n\r\n    function randomMax8HexChars() {\r\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\r\n    }\r\n    function generateRandomId() {\r\n        return randomMax8HexChars() + randomMax8HexChars();\r\n    }\r\n    function findMemoNodes(rootNode, appendToArray) {\r\n        if (!rootNode)\r\n            return;\r\n        if (rootNode.nodeType == 8) {\r\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\r\n            if (memoId != null)\r\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\r\n        } else if (rootNode.nodeType == 1) {\r\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\r\n                findMemoNodes(childNodes[i], appendToArray);\r\n        }\r\n    }\r\n\r\n    return {\r\n        memoize: function (callback) {\r\n            if (typeof callback != \"function\")\r\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\r\n            var memoId = generateRandomId();\r\n            memos[memoId] = callback;\r\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\r\n        },\r\n\r\n        unmemoize: function (memoId, callbackParams) {\r\n            var callback = memos[memoId];\r\n            if (callback === undefined)\r\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\r\n            try {\r\n                callback.apply(null, callbackParams || []);\r\n                return true;\r\n            }\r\n            finally { delete memos[memoId]; }\r\n        },\r\n\r\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\r\n            var memos = [];\r\n            findMemoNodes(domNode, memos);\r\n            for (var i = 0, j = memos.length; i < j; i++) {\r\n                var node = memos[i].domNode;\r\n                var combinedParams = [node];\r\n                if (extraCallbackParamsArray)\r\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\r\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\r\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\r\n                if (node.parentNode)\r\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\r\n            }\r\n        },\r\n\r\n        parseMemoText: function (memoText) {\r\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\r\n            return match ? match[1] : null;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('memoization', ko.memoization);\r\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\r\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\r\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\r\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\r\nko.extenders = {\r\n    'throttle': function(target, timeout) {\r\n        // Throttling means two things:\r\n\r\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\r\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\r\n        target['throttleEvaluation'] = timeout;\r\n\r\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\r\n        //     so the target cannot change value synchronously or faster than a certain rate\r\n        var writeTimeoutInstance = null;\r\n        return ko.dependentObservable({\r\n            'read': target,\r\n            'write': function(value) {\r\n                clearTimeout(writeTimeoutInstance);\r\n                writeTimeoutInstance = setTimeout(function() {\r\n                    target(value);\r\n                }, timeout);\r\n            }\r\n        });\r\n    },\r\n\r\n    'rateLimit': function(target, options) {\r\n        var timeout, method, limitFunction;\r\n\r\n        if (typeof options == 'number') {\r\n            timeout = options;\r\n        } else {\r\n            timeout = options['timeout'];\r\n            method = options['method'];\r\n        }\r\n\r\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\r\n        target.limit(function(callback) {\r\n            return limitFunction(callback, timeout);\r\n        });\r\n    },\r\n\r\n    'notify': function(target, notifyWhen) {\r\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\r\n            null :  // null equalityComparer means to always notify\r\n            valuesArePrimitiveAndEqual;\r\n    }\r\n};\r\n\r\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\r\nfunction valuesArePrimitiveAndEqual(a, b) {\r\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\r\n    return oldValueIsPrimitive ? (a === b) : false;\r\n}\r\n\r\nfunction throttle(callback, timeout) {\r\n    var timeoutInstance;\r\n    return function () {\r\n        if (!timeoutInstance) {\r\n            timeoutInstance = setTimeout(function() {\r\n                timeoutInstance = undefined;\r\n                callback();\r\n            }, timeout);\r\n        }\r\n    };\r\n}\r\n\r\nfunction debounce(callback, timeout) {\r\n    var timeoutInstance;\r\n    return function () {\r\n        clearTimeout(timeoutInstance);\r\n        timeoutInstance = setTimeout(callback, timeout);\r\n    };\r\n}\r\n\r\nfunction applyExtenders(requestedExtenders) {\r\n    var target = this;\r\n    if (requestedExtenders) {\r\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\r\n            var extenderHandler = ko.extenders[key];\r\n            if (typeof extenderHandler == 'function') {\r\n                target = extenderHandler(target, value) || target;\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n\r\nko.exportSymbol('extenders', ko.extenders);\r\n\r\nko.subscription = function (target, callback, disposeCallback) {\r\n    this._target = target;\r\n    this.callback = callback;\r\n    this.disposeCallback = disposeCallback;\r\n    this.isDisposed = false;\r\n    ko.exportProperty(this, 'dispose', this.dispose);\r\n};\r\nko.subscription.prototype.dispose = function () {\r\n    this.isDisposed = true;\r\n    this.disposeCallback();\r\n};\r\n\r\nko.subscribable = function () {\r\n    ko.utils.setPrototypeOfOrExtend(this, ko.subscribable['fn']);\r\n    this._subscriptions = {};\r\n    this._versionNumber = 1;\r\n}\r\n\r\nvar defaultEvent = \"change\";\r\n\r\nvar ko_subscribable_fn = {\r\n    subscribe: function (callback, callbackTarget, event) {\r\n        var self = this;\r\n\r\n        event = event || defaultEvent;\r\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\r\n\r\n        var subscription = new ko.subscription(self, boundCallback, function () {\r\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\r\n            if (self.afterSubscriptionRemove)\r\n                self.afterSubscriptionRemove(event);\r\n        });\r\n\r\n        if (self.beforeSubscriptionAdd)\r\n            self.beforeSubscriptionAdd(event);\r\n\r\n        if (!self._subscriptions[event])\r\n            self._subscriptions[event] = [];\r\n        self._subscriptions[event].push(subscription);\r\n\r\n        return subscription;\r\n    },\r\n\r\n    \"notifySubscribers\": function (valueToNotify, event) {\r\n        event = event || defaultEvent;\r\n        if (event === defaultEvent) {\r\n            this.updateVersion();\r\n        }\r\n        if (this.hasSubscriptionsForEvent(event)) {\r\n            try {\r\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\r\n                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\r\n                    // In case a subscription was disposed during the arrayForEach cycle, check\r\n                    // for isDisposed on each subscription before invoking its callback\r\n                    if (!subscription.isDisposed)\r\n                        subscription.callback(valueToNotify);\r\n                }\r\n            } finally {\r\n                ko.dependencyDetection.end(); // End suppressing dependency detection\r\n            }\r\n        }\r\n    },\r\n\r\n    getVersion: function () {\r\n        return this._versionNumber;\r\n    },\r\n\r\n    hasChanged: function (versionToCheck) {\r\n        return this.getVersion() !== versionToCheck;\r\n    },\r\n\r\n    updateVersion: function () {\r\n        ++this._versionNumber;\r\n    },\r\n\r\n    limit: function(limitFunction) {\r\n        var self = this, selfIsObservable = ko.isObservable(self),\r\n            isPending, previousValue, pendingValue, beforeChange = 'beforeChange';\r\n\r\n        if (!self._origNotifySubscribers) {\r\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\r\n            self[\"notifySubscribers\"] = function(value, event) {\r\n                if (!event || event === defaultEvent) {\r\n                    self._rateLimitedChange(value);\r\n                } else if (event === beforeChange) {\r\n                    self._rateLimitedBeforeChange(value);\r\n                } else {\r\n                    self._origNotifySubscribers(value, event);\r\n                }\r\n            };\r\n        }\r\n\r\n        var finish = limitFunction(function() {\r\n            // If an observable provided a reference to itself, access it to get the latest value.\r\n            // This allows computed observables to delay calculating their value until needed.\r\n            if (selfIsObservable && pendingValue === self) {\r\n                pendingValue = self();\r\n            }\r\n            isPending = false;\r\n            if (self.isDifferent(previousValue, pendingValue)) {\r\n                self._origNotifySubscribers(previousValue = pendingValue);\r\n            }\r\n        });\r\n\r\n        self._rateLimitedChange = function(value) {\r\n            isPending = true;\r\n            pendingValue = value;\r\n            finish();\r\n        };\r\n        self._rateLimitedBeforeChange = function(value) {\r\n            if (!isPending) {\r\n                previousValue = value;\r\n                self._origNotifySubscribers(value, beforeChange);\r\n            }\r\n        };\r\n    },\r\n\r\n    hasSubscriptionsForEvent: function(event) {\r\n        return this._subscriptions[event] && this._subscriptions[event].length;\r\n    },\r\n\r\n    getSubscriptionsCount: function (event) {\r\n        if (event) {\r\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\r\n        } else {\r\n            var total = 0;\r\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\r\n                total += subscriptions.length;\r\n            });\r\n            return total;\r\n        }\r\n    },\r\n\r\n    isDifferent: function(oldValue, newValue) {\r\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\r\n    },\r\n\r\n    extend: applyExtenders\r\n};\r\n\r\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\r\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\r\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\r\n\r\n// For browsers that support proto assignment, we overwrite the prototype of each\r\n// observable instance. Since observables are functions, we need Function.prototype\r\n// to still be in the prototype chain.\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\r\n}\r\n\r\nko.subscribable['fn'] = ko_subscribable_fn;\r\n\r\n\r\nko.isSubscribable = function (instance) {\r\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\r\n};\r\n\r\nko.exportSymbol('subscribable', ko.subscribable);\r\nko.exportSymbol('isSubscribable', ko.isSubscribable);\r\n\r\nko.computedContext = ko.dependencyDetection = (function () {\r\n    var outerFrames = [],\r\n        currentFrame,\r\n        lastId = 0;\r\n\r\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\r\n    // Theoretically, you could eventually overflow the number storage size, resulting\r\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\r\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\r\n    // take over 285 years to reach that number.\r\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\r\n    function getId() {\r\n        return ++lastId;\r\n    }\r\n\r\n    function begin(options) {\r\n        outerFrames.push(currentFrame);\r\n        currentFrame = options;\r\n    }\r\n\r\n    function end() {\r\n        currentFrame = outerFrames.pop();\r\n    }\r\n\r\n    return {\r\n        begin: begin,\r\n\r\n        end: end,\r\n\r\n        registerDependency: function (subscribable) {\r\n            if (currentFrame) {\r\n                if (!ko.isSubscribable(subscribable))\r\n                    throw new Error(\"Only subscribable things can act as dependencies\");\r\n                currentFrame.callback(subscribable, subscribable._id || (subscribable._id = getId()));\r\n            }\r\n        },\r\n\r\n        ignore: function (callback, callbackTarget, callbackArgs) {\r\n            try {\r\n                begin();\r\n                return callback.apply(callbackTarget, callbackArgs || []);\r\n            } finally {\r\n                end();\r\n            }\r\n        },\r\n\r\n        getDependenciesCount: function () {\r\n            if (currentFrame)\r\n                return currentFrame.computed.getDependenciesCount();\r\n        },\r\n\r\n        isInitial: function() {\r\n            if (currentFrame)\r\n                return currentFrame.isInitial;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('computedContext', ko.computedContext);\r\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\r\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\r\nko.exportSymbol('computedContext.isSleeping', ko.computedContext.isSleeping);\r\n\r\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\r\nko.observable = function (initialValue) {\r\n    var _latestValue = initialValue;\r\n\r\n    function observable() {\r\n        if (arguments.length > 0) {\r\n            // Write\r\n\r\n            // Ignore writes if the value hasn't changed\r\n            if (observable.isDifferent(_latestValue, arguments[0])) {\r\n                observable.valueWillMutate();\r\n                _latestValue = arguments[0];\r\n                if (DEBUG) observable._latestValue = _latestValue;\r\n                observable.valueHasMutated();\r\n            }\r\n            return this; // Permits chained assignments\r\n        }\r\n        else {\r\n            // Read\r\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\r\n            return _latestValue;\r\n        }\r\n    }\r\n    ko.subscribable.call(observable);\r\n    ko.utils.setPrototypeOfOrExtend(observable, ko.observable['fn']);\r\n\r\n    if (DEBUG) observable._latestValue = _latestValue;\r\n    observable.peek = function() { return _latestValue };\r\n    observable.valueHasMutated = function () { observable[\"notifySubscribers\"](_latestValue); }\r\n    observable.valueWillMutate = function () { observable[\"notifySubscribers\"](_latestValue, \"beforeChange\"); }\r\n\r\n    ko.exportProperty(observable, 'peek', observable.peek);\r\n    ko.exportProperty(observable, \"valueHasMutated\", observable.valueHasMutated);\r\n    ko.exportProperty(observable, \"valueWillMutate\", observable.valueWillMutate);\r\n\r\n    return observable;\r\n}\r\n\r\nko.observable['fn'] = {\r\n    \"equalityComparer\": valuesArePrimitiveAndEqual\r\n};\r\n\r\nvar protoProperty = ko.observable.protoProperty = \"__ko_proto__\";\r\nko.observable['fn'][protoProperty] = ko.observable;\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observable constructor\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(ko.observable['fn'], ko.subscribable['fn']);\r\n}\r\n\r\nko.hasPrototype = function(instance, prototype) {\r\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\r\n    if (instance[protoProperty] === prototype) return true;\r\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\r\n};\r\n\r\nko.isObservable = function (instance) {\r\n    return ko.hasPrototype(instance, ko.observable);\r\n}\r\nko.isWriteableObservable = function (instance) {\r\n    // Observable\r\n    if ((typeof instance == \"function\") && instance[protoProperty] === ko.observable)\r\n        return true;\r\n    // Writeable dependent observable\r\n    if ((typeof instance == \"function\") && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\r\n        return true;\r\n    // Anything else\r\n    return false;\r\n}\r\n\r\n\r\nko.exportSymbol('observable', ko.observable);\r\nko.exportSymbol('isObservable', ko.isObservable);\r\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\r\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\r\nko.observableArray = function (initialValues) {\r\n    initialValues = initialValues || [];\r\n\r\n    if (typeof initialValues != 'object' || !('length' in initialValues))\r\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\r\n\r\n    var result = ko.observable(initialValues);\r\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\r\n    return result.extend({'trackArrayChanges':true});\r\n};\r\n\r\nko.observableArray['fn'] = {\r\n    'remove': function (valueOrPredicate) {\r\n        var underlyingArray = this.peek();\r\n        var removedValues = [];\r\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n        for (var i = 0; i < underlyingArray.length; i++) {\r\n            var value = underlyingArray[i];\r\n            if (predicate(value)) {\r\n                if (removedValues.length === 0) {\r\n                    this.valueWillMutate();\r\n                }\r\n                removedValues.push(value);\r\n                underlyingArray.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (removedValues.length) {\r\n            this.valueHasMutated();\r\n        }\r\n        return removedValues;\r\n    },\r\n\r\n    'removeAll': function (arrayOfValues) {\r\n        // If you passed zero args, we remove everything\r\n        if (arrayOfValues === undefined) {\r\n            var underlyingArray = this.peek();\r\n            var allValues = underlyingArray.slice(0);\r\n            this.valueWillMutate();\r\n            underlyingArray.splice(0, underlyingArray.length);\r\n            this.valueHasMutated();\r\n            return allValues;\r\n        }\r\n        // If you passed an arg, we interpret it as an array of entries to remove\r\n        if (!arrayOfValues)\r\n            return [];\r\n        return this['remove'](function (value) {\r\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n        });\r\n    },\r\n\r\n    'destroy': function (valueOrPredicate) {\r\n        var underlyingArray = this.peek();\r\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n        this.valueWillMutate();\r\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\r\n            var value = underlyingArray[i];\r\n            if (predicate(value))\r\n                underlyingArray[i][\"_destroy\"] = true;\r\n        }\r\n        this.valueHasMutated();\r\n    },\r\n\r\n    'destroyAll': function (arrayOfValues) {\r\n        // If you passed zero args, we destroy everything\r\n        if (arrayOfValues === undefined)\r\n            return this['destroy'](function() { return true });\r\n\r\n        // If you passed an arg, we interpret it as an array of entries to destroy\r\n        if (!arrayOfValues)\r\n            return [];\r\n        return this['destroy'](function (value) {\r\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n        });\r\n    },\r\n\r\n    'indexOf': function (item) {\r\n        var underlyingArray = this();\r\n        return ko.utils.arrayIndexOf(underlyingArray, item);\r\n    },\r\n\r\n    'replace': function(oldItem, newItem) {\r\n        var index = this['indexOf'](oldItem);\r\n        if (index >= 0) {\r\n            this.valueWillMutate();\r\n            this.peek()[index] = newItem;\r\n            this.valueHasMutated();\r\n        }\r\n    }\r\n};\r\n\r\n// Populate ko.observableArray.fn with read/write functions from native arrays\r\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\r\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\r\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\r\n    ko.observableArray['fn'][methodName] = function () {\r\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\r\n        // (for consistency with mutating regular observables)\r\n        var underlyingArray = this.peek();\r\n        this.valueWillMutate();\r\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\r\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\r\n        this.valueHasMutated();\r\n        return methodCallResult;\r\n    };\r\n});\r\n\r\n// Populate ko.observableArray.fn with read-only functions from native arrays\r\nko.utils.arrayForEach([\"slice\"], function (methodName) {\r\n    ko.observableArray['fn'][methodName] = function () {\r\n        var underlyingArray = this();\r\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\r\n    };\r\n});\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observableArray constructor\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\r\n}\r\n\r\nko.exportSymbol('observableArray', ko.observableArray);\r\nvar arrayChangeEventName = 'arrayChange';\r\nko.extenders['trackArrayChanges'] = function(target) {\r\n    // Only modify the target observable once\r\n    if (target.cacheDiffForKnownOperation) {\r\n        return;\r\n    }\r\n    var trackingChanges = false,\r\n        cachedDiff = null,\r\n        arrayChangeSubscription,\r\n        pendingNotifications = 0,\r\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\r\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\r\n\r\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\r\n    target.beforeSubscriptionAdd = function (event) {\r\n        if (underlyingBeforeSubscriptionAddFunction)\r\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\r\n        if (event === arrayChangeEventName) {\r\n            trackChanges();\r\n        }\r\n    };\r\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\r\n    target.afterSubscriptionRemove = function (event) {\r\n        if (underlyingAfterSubscriptionRemoveFunction)\r\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\r\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n            arrayChangeSubscription.dispose();\r\n            trackingChanges = false;\r\n        }\r\n    };\r\n\r\n    function trackChanges() {\r\n        // Calling 'trackChanges' multiple times is the same as calling it once\r\n        if (trackingChanges) {\r\n            return;\r\n        }\r\n\r\n        trackingChanges = true;\r\n\r\n        // Intercept \"notifySubscribers\" to track how many times it was called.\r\n        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\r\n        target['notifySubscribers'] = function(valueToNotify, event) {\r\n            if (!event || event === defaultEvent) {\r\n                ++pendingNotifications;\r\n            }\r\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\r\n        };\r\n\r\n        // Each time the array changes value, capture a clone so that on the next\r\n        // change it's possible to produce a diff\r\n        var previousContents = [].concat(target.peek() || []);\r\n        cachedDiff = null;\r\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\r\n            // Make a copy of the current contents and ensure it's an array\r\n            currentContents = [].concat(currentContents || []);\r\n\r\n            // Compute the diff and issue notifications, but only if someone is listening\r\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n                var changes = getChanges(previousContents, currentContents);\r\n            }\r\n\r\n            // Eliminate references to the old, removed items, so they can be GCed\r\n            previousContents = currentContents;\r\n            cachedDiff = null;\r\n            pendingNotifications = 0;\r\n\r\n            if (changes && changes.length) {\r\n                target['notifySubscribers'](changes, arrayChangeEventName);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getChanges(previousContents, currentContents) {\r\n        // We try to re-use cached diffs.\r\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\r\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\r\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\r\n        if (!cachedDiff || pendingNotifications > 1) {\r\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, { 'sparse': true });\r\n        }\r\n\r\n        return cachedDiff;\r\n    }\r\n\r\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\r\n        // Only run if we're currently tracking changes for this observable array\r\n        // and there aren't any pending deferred notifications.\r\n        if (!trackingChanges || pendingNotifications) {\r\n            return;\r\n        }\r\n        var diff = [],\r\n            arrayLength = rawArray.length,\r\n            argsLength = args.length,\r\n            offset = 0;\r\n\r\n        function pushDiff(status, value, index) {\r\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\r\n        }\r\n        switch (operationName) {\r\n            case 'push':\r\n                offset = arrayLength;\r\n            case 'unshift':\r\n                for (var index = 0; index < argsLength; index++) {\r\n                    pushDiff('added', args[index], offset + index);\r\n                }\r\n                break;\r\n\r\n            case 'pop':\r\n                offset = arrayLength - 1;\r\n            case 'shift':\r\n                if (arrayLength) {\r\n                    pushDiff('deleted', rawArray[offset], offset);\r\n                }\r\n                break;\r\n\r\n            case 'splice':\r\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\r\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\r\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\r\n                    endAddIndex = startIndex + argsLength - 2,\r\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\r\n                    additions = [], deletions = [];\r\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\r\n                    if (index < endDeleteIndex)\r\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\r\n                    if (index < endAddIndex)\r\n                        additions.push(pushDiff('added', args[argsIndex], index));\r\n                }\r\n                ko.utils.findMovesInArrayComparison(deletions, additions);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n        cachedDiff = diff;\r\n    };\r\n};\r\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\r\n    var _latestValue,\r\n        _needsEvaluation = true,\r\n        _isBeingEvaluated = false,\r\n        _suppressDisposalUntilDisposeWhenReturnsFalse = false,\r\n        _isDisposed = false,\r\n        readFunction = evaluatorFunctionOrOptions,\r\n        pure = false,\r\n        isSleeping = false;\r\n\r\n    if (readFunction && typeof readFunction == \"object\") {\r\n        // Single-parameter syntax - everything is on this \"options\" param\r\n        options = readFunction;\r\n        readFunction = options[\"read\"];\r\n    } else {\r\n        // Multi-parameter syntax - construct the options according to the params passed\r\n        options = options || {};\r\n        if (!readFunction)\r\n            readFunction = options[\"read\"];\r\n    }\r\n    if (typeof readFunction != \"function\")\r\n        throw new Error(\"Pass a function that returns the value of the ko.computed\");\r\n\r\n    function addDependencyTracking(id, target, trackingObj) {\r\n        if (pure && target === dependentObservable) {\r\n            throw Error(\"A 'pure' computed must not be called recursively\");\r\n        }\r\n\r\n        dependencyTracking[id] = trackingObj;\r\n        trackingObj._order = _dependenciesCount++;\r\n        trackingObj._version = target.getVersion();\r\n    }\r\n\r\n    function haveDependenciesChanged() {\r\n        var id, dependency;\r\n        for (id in dependencyTracking) {\r\n            if (dependencyTracking.hasOwnProperty(id)) {\r\n                dependency = dependencyTracking[id];\r\n                if (dependency._target.hasChanged(dependency._version)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function disposeComputed() {\r\n        if (!isSleeping && dependencyTracking) {\r\n            ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\r\n                if (dependency.dispose)\r\n                    dependency.dispose();\r\n            });\r\n        }\r\n        dependencyTracking = null;\r\n        _dependenciesCount = 0;\r\n        _isDisposed = true;\r\n        _needsEvaluation = false;\r\n        isSleeping = false;\r\n    }\r\n\r\n    function evaluatePossiblyAsync() {\r\n        var throttleEvaluationTimeout = dependentObservable['throttleEvaluation'];\r\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\r\n            clearTimeout(evaluationTimeoutInstance);\r\n            evaluationTimeoutInstance = setTimeout(function () {\r\n                evaluateImmediate(true /*notifyChange*/);\r\n            }, throttleEvaluationTimeout);\r\n        } else if (dependentObservable._evalRateLimited) {\r\n            dependentObservable._evalRateLimited();\r\n        } else {\r\n            evaluateImmediate(true /*notifyChange*/);\r\n        }\r\n    }\r\n\r\n    function evaluateImmediate(notifyChange) {\r\n        if (_isBeingEvaluated) {\r\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\r\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\r\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\r\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\r\n            return;\r\n        }\r\n\r\n        // Do not evaluate (and possibly capture new dependencies) if disposed\r\n        if (_isDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposeWhen && disposeWhen()) {\r\n            // See comment below about _suppressDisposalUntilDisposeWhenReturnsFalse\r\n            if (!_suppressDisposalUntilDisposeWhenReturnsFalse) {\r\n                dispose();\r\n                return;\r\n            }\r\n        } else {\r\n            // It just did return false, so we can stop suppressing now\r\n            _suppressDisposalUntilDisposeWhenReturnsFalse = false;\r\n        }\r\n\r\n        _isBeingEvaluated = true;\r\n\r\n        try {\r\n            // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\r\n            // Then, during evaluation, we cross off any that are in fact still being used.\r\n            var disposalCandidates = dependencyTracking,\r\n                disposalCount = _dependenciesCount,\r\n                isInitial = pure ? undefined : !_dependenciesCount;   // If we're evaluating when there are no previous dependencies, it must be the first time\r\n\r\n            ko.dependencyDetection.begin({\r\n                callback: function(subscribable, id) {\r\n                    if (!_isDisposed) {\r\n                        if (disposalCount && disposalCandidates[id]) {\r\n                            // Don't want to dispose this subscription, as it's still being used\r\n                            addDependencyTracking(id, subscribable, disposalCandidates[id]);\r\n                            delete disposalCandidates[id];\r\n                            --disposalCount;\r\n                        } else if (!dependencyTracking[id]) {\r\n                            // Brand new subscription - add it\r\n                            addDependencyTracking(id, subscribable, isSleeping ? { _target: subscribable } : subscribable.subscribe(evaluatePossiblyAsync));\r\n                        }\r\n                    }\r\n                },\r\n                computed: dependentObservable,\r\n                isInitial: isInitial\r\n            });\r\n\r\n            dependencyTracking = {};\r\n            _dependenciesCount = 0;\r\n\r\n            try {\r\n                var newValue = evaluatorFunctionTarget ? readFunction.call(evaluatorFunctionTarget) : readFunction();\r\n\r\n            } finally {\r\n                ko.dependencyDetection.end();\r\n\r\n                // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\r\n                if (disposalCount && !isSleeping) {\r\n                    ko.utils.objectForEach(disposalCandidates, function(id, toDispose) {\r\n                        if (toDispose.dispose)\r\n                            toDispose.dispose();\r\n                    });\r\n                }\r\n\r\n                _needsEvaluation = false;\r\n            }\r\n\r\n            if (dependentObservable.isDifferent(_latestValue, newValue)) {\r\n                if (!isSleeping) {\r\n                    notify(_latestValue, \"beforeChange\");\r\n                }\r\n\r\n                _latestValue = newValue;\r\n                if (DEBUG) dependentObservable._latestValue = _latestValue;\r\n\r\n                if (isSleeping) {\r\n                    dependentObservable.updateVersion();\r\n                } else if (notifyChange) {\r\n                    notify(_latestValue);\r\n                }\r\n            }\r\n\r\n            if (isInitial) {\r\n                notify(_latestValue, \"awake\");\r\n            }\r\n        } finally {\r\n            _isBeingEvaluated = false;\r\n        }\r\n\r\n        if (!_dependenciesCount)\r\n            dispose();\r\n    }\r\n\r\n    function dependentObservable() {\r\n        if (arguments.length > 0) {\r\n            if (typeof writeFunction === \"function\") {\r\n                // Writing a value\r\n                writeFunction.apply(evaluatorFunctionTarget, arguments);\r\n            } else {\r\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\r\n            }\r\n            return this; // Permits chained assignments\r\n        } else {\r\n            // Reading the value\r\n            ko.dependencyDetection.registerDependency(dependentObservable);\r\n            if (_needsEvaluation || (isSleeping && haveDependenciesChanged())) {\r\n                evaluateImmediate();\r\n            }\r\n            return _latestValue;\r\n        }\r\n    }\r\n\r\n    function peek() {\r\n        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\r\n        if ((_needsEvaluation && !_dependenciesCount) || (isSleeping && haveDependenciesChanged())) {\r\n            evaluateImmediate();\r\n        }\r\n        return _latestValue;\r\n    }\r\n\r\n    function isActive() {\r\n        return _needsEvaluation || _dependenciesCount > 0;\r\n    }\r\n\r\n    function notify(value, event) {\r\n        dependentObservable[\"notifySubscribers\"](value, event);\r\n    }\r\n\r\n    // By here, \"options\" is always non-null\r\n    var writeFunction = options[\"write\"],\r\n        disposeWhenNodeIsRemoved = options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\r\n        disposeWhenOption = options[\"disposeWhen\"] || options.disposeWhen,\r\n        disposeWhen = disposeWhenOption,\r\n        dispose = disposeComputed,\r\n        dependencyTracking = {},\r\n        _dependenciesCount = 0,\r\n        evaluationTimeoutInstance = null;\r\n\r\n    if (!evaluatorFunctionTarget)\r\n        evaluatorFunctionTarget = options[\"owner\"];\r\n\r\n    ko.subscribable.call(dependentObservable);\r\n    ko.utils.setPrototypeOfOrExtend(dependentObservable, ko.dependentObservable['fn']);\r\n\r\n    dependentObservable.peek = peek;\r\n    dependentObservable.getDependenciesCount = function () { return _dependenciesCount; };\r\n    dependentObservable.hasWriteFunction = typeof writeFunction === \"function\";\r\n    dependentObservable.dispose = function () { dispose(); };\r\n    dependentObservable.isActive = isActive;\r\n\r\n    // Replace the limit function with one that delays evaluation as well.\r\n    var originalLimit = dependentObservable.limit;\r\n    dependentObservable.limit = function(limitFunction) {\r\n        originalLimit.call(dependentObservable, limitFunction);\r\n        dependentObservable._evalRateLimited = function() {\r\n            dependentObservable._rateLimitedBeforeChange(_latestValue);\r\n\r\n            _needsEvaluation = true;    // Mark as dirty\r\n\r\n            // Pass the observable to the rate-limit code, which will access it when\r\n            // it's time to do the notification.\r\n            dependentObservable._rateLimitedChange(dependentObservable);\r\n        }\r\n    };\r\n\r\n    if (options['pure']) {\r\n        pure = true;\r\n        isSleeping = true;     // Starts off sleeping; will awake on the first subscription\r\n        dependentObservable.beforeSubscriptionAdd = function (event) {\r\n            // If asleep, wake up the computed by subscribing to any dependencies.\r\n            if (!_isDisposed && isSleeping && event == 'change') {\r\n                isSleeping = false;\r\n                if (_needsEvaluation || haveDependenciesChanged()) {\r\n                    dependencyTracking = null;\r\n                    _dependenciesCount = 0;\r\n                    _needsEvaluation = true;\r\n                    evaluateImmediate();\r\n                } else {\r\n                    // First put the dependencies in order\r\n                    var dependeciesOrder = [];\r\n                    ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\r\n                        dependeciesOrder[dependency._order] = id;\r\n                    });\r\n                    // Next, subscribe to each one\r\n                    ko.utils.arrayForEach(dependeciesOrder, function(id, order) {\r\n                        var dependency = dependencyTracking[id],\r\n                            subscription = dependency._target.subscribe(evaluatePossiblyAsync);\r\n                        subscription._order = order;\r\n                        subscription._version = dependency._version;\r\n                        dependencyTracking[id] = subscription;\r\n                    });\r\n                }\r\n                if (!_isDisposed) {     // test since evaluating could trigger disposal\r\n                    notify(_latestValue, \"awake\");\r\n                }\r\n            }\r\n        };\r\n\r\n        dependentObservable.afterSubscriptionRemove = function (event) {\r\n            if (!_isDisposed && event == 'change' && !dependentObservable.hasSubscriptionsForEvent('change')) {\r\n                ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\r\n                    if (dependency.dispose) {\r\n                        dependencyTracking[id] = {\r\n                            _target: dependency._target,\r\n                            _order: dependency._order,\r\n                            _version: dependency._version\r\n                        };\r\n                        dependency.dispose();\r\n                    }\r\n                });\r\n                isSleeping = true;\r\n                notify(undefined, \"asleep\");\r\n            }\r\n        };\r\n\r\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\r\n        // simply return the version number. Instead, we check if any of the dependencies have\r\n        // changed and conditionally re-evaluate the computed observable.\r\n        dependentObservable._originalGetVersion = dependentObservable.getVersion;\r\n        dependentObservable.getVersion = function () {\r\n            if (isSleeping && (_needsEvaluation || haveDependenciesChanged())) {\r\n                evaluateImmediate();\r\n            }\r\n            return dependentObservable._originalGetVersion();\r\n        };\r\n    } else if (options['deferEvaluation']) {\r\n        // This will force a computed with deferEvaluation to evaluate when the first subscriptions is registered.\r\n        dependentObservable.beforeSubscriptionAdd = function (event) {\r\n            if (event == 'change' || event == 'beforeChange') {\r\n                peek();\r\n            }\r\n        }\r\n    }\r\n\r\n    ko.exportProperty(dependentObservable, 'peek', dependentObservable.peek);\r\n    ko.exportProperty(dependentObservable, 'dispose', dependentObservable.dispose);\r\n    ko.exportProperty(dependentObservable, 'isActive', dependentObservable.isActive);\r\n    ko.exportProperty(dependentObservable, 'getDependenciesCount', dependentObservable.getDependenciesCount);\r\n\r\n    // Add a \"disposeWhen\" callback that, on each evaluation, disposes if the node was removed without using ko.removeNode.\r\n    if (disposeWhenNodeIsRemoved) {\r\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\r\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\r\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\r\n        _suppressDisposalUntilDisposeWhenReturnsFalse = true;\r\n\r\n        // Only watch for the node's disposal if the value really is a node. It might not be,\r\n        // e.g., { disposeWhenNodeIsRemoved: true } can be used to opt into the \"only dispose\r\n        // after first false result\" behaviour even if there's no specific node to watch. This\r\n        // technique is intended for KO's internal use only and shouldn't be documented or used\r\n        // by application code, as it's likely to change in a future version of KO.\r\n        if (disposeWhenNodeIsRemoved.nodeType) {\r\n            disposeWhen = function () {\r\n                return !ko.utils.domNodeIsAttachedToDocument(disposeWhenNodeIsRemoved) || (disposeWhenOption && disposeWhenOption());\r\n            };\r\n        }\r\n    }\r\n\r\n    // Evaluate, unless sleeping or deferEvaluation is true\r\n    if (!isSleeping && !options['deferEvaluation'])\r\n        evaluateImmediate();\r\n\r\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\r\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\r\n    if (disposeWhenNodeIsRemoved && isActive() && disposeWhenNodeIsRemoved.nodeType) {\r\n        dispose = function() {\r\n            ko.utils.domNodeDisposal.removeDisposeCallback(disposeWhenNodeIsRemoved, dispose);\r\n            disposeComputed();\r\n        };\r\n        ko.utils.domNodeDisposal.addDisposeCallback(disposeWhenNodeIsRemoved, dispose);\r\n    }\r\n\r\n    return dependentObservable;\r\n};\r\n\r\nko.isComputed = function(instance) {\r\n    return ko.hasPrototype(instance, ko.dependentObservable);\r\n};\r\n\r\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\r\nko.dependentObservable[protoProp] = ko.observable;\r\n\r\nko.dependentObservable['fn'] = {\r\n    \"equalityComparer\": valuesArePrimitiveAndEqual\r\n};\r\nko.dependentObservable['fn'][protoProp] = ko.dependentObservable;\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.dependentObservable constructor\r\nif (ko.utils.canSetPrototype) {\r\n    ko.utils.setPrototypeOf(ko.dependentObservable['fn'], ko.subscribable['fn']);\r\n}\r\n\r\nko.exportSymbol('dependentObservable', ko.dependentObservable);\r\nko.exportSymbol('computed', ko.dependentObservable); // Make \"ko.computed\" an alias for \"ko.dependentObservable\"\r\nko.exportSymbol('isComputed', ko.isComputed);\r\n\r\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\r\n    if (typeof evaluatorFunctionOrOptions === 'function') {\r\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\r\n    } else {\r\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\r\n        evaluatorFunctionOrOptions['pure'] = true;\r\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\r\n    }\r\n}\r\nko.exportSymbol('pureComputed', ko.pureComputed);\r\n\r\n(function() {\r\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\r\n\r\n    ko.toJS = function(rootObject) {\r\n        if (arguments.length == 0)\r\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\r\n\r\n        // We just unwrap everything at every level in the object graph\r\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\r\n            // Loop because an observable's value might in turn be another observable wrapper\r\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\r\n                valueToMap = valueToMap();\r\n            return valueToMap;\r\n        });\r\n    };\r\n\r\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\r\n        var plainJavaScriptObject = ko.toJS(rootObject);\r\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\r\n    };\r\n\r\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\r\n        visitedObjects = visitedObjects || new objectLookup();\r\n\r\n        rootObject = mapInputCallback(rootObject);\r\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\r\n        if (!canHaveProperties)\r\n            return rootObject;\r\n\r\n        var outputProperties = rootObject instanceof Array ? [] : {};\r\n        visitedObjects.save(rootObject, outputProperties);\r\n\r\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\r\n            var propertyValue = mapInputCallback(rootObject[indexer]);\r\n\r\n            switch (typeof propertyValue) {\r\n                case \"boolean\":\r\n                case \"number\":\r\n                case \"string\":\r\n                case \"function\":\r\n                    outputProperties[indexer] = propertyValue;\r\n                    break;\r\n                case \"object\":\r\n                case \"undefined\":\r\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\r\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\r\n                        ? previouslyMappedValue\r\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return outputProperties;\r\n    }\r\n\r\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\r\n        if (rootObject instanceof Array) {\r\n            for (var i = 0; i < rootObject.length; i++)\r\n                visitorCallback(i);\r\n\r\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\r\n            if (typeof rootObject['toJSON'] == 'function')\r\n                visitorCallback('toJSON');\r\n        } else {\r\n            for (var propertyName in rootObject) {\r\n                visitorCallback(propertyName);\r\n            }\r\n        }\r\n    };\r\n\r\n    function objectLookup() {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n\r\n    objectLookup.prototype = {\r\n        constructor: objectLookup,\r\n        save: function(key, value) {\r\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n            if (existingIndex >= 0)\r\n                this.values[existingIndex] = value;\r\n            else {\r\n                this.keys.push(key);\r\n                this.values.push(value);\r\n            }\r\n        },\r\n        get: function(key) {\r\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('toJS', ko.toJS);\r\nko.exportSymbol('toJSON', ko.toJSON);\r\n(function () {\r\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\r\n\r\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\r\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\r\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\r\n    ko.selectExtensions = {\r\n        readValue : function(element) {\r\n            switch (ko.utils.tagNameLower(element)) {\r\n                case 'option':\r\n                    if (element[hasDomDataExpandoProperty] === true)\r\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\r\n                    return ko.utils.ieVersion <= 7\r\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\r\n                        : element.value;\r\n                case 'select':\r\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\r\n                default:\r\n                    return element.value;\r\n            }\r\n        },\r\n\r\n        writeValue: function(element, value, allowUnset) {\r\n            switch (ko.utils.tagNameLower(element)) {\r\n                case 'option':\r\n                    switch(typeof value) {\r\n                        case \"string\":\r\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\r\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\r\n                                delete element[hasDomDataExpandoProperty];\r\n                            }\r\n                            element.value = value;\r\n                            break;\r\n                        default:\r\n                            // Store arbitrary object using DomData\r\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\r\n                            element[hasDomDataExpandoProperty] = true;\r\n\r\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\r\n                            element.value = typeof value === \"number\" ? value : \"\";\r\n                            break;\r\n                    }\r\n                    break;\r\n                case 'select':\r\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\r\n                        value = undefined;\r\n                    var selection = -1;\r\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\r\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\r\n                        // Include special check to handle selecting a caption with a blank string value\r\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\r\n                            selection = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\r\n                        element.selectedIndex = selection;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if ((value === null) || (value === undefined))\r\n                        value = \"\";\r\n                    element.value = value;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('selectExtensions', ko.selectExtensions);\r\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\r\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\r\nko.expressionRewriting = (function () {\r\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\r\n\r\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\r\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\r\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\r\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\r\n\r\n    function getWriteableValue(expression) {\r\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\r\n            return false;\r\n        var match = expression.match(javaScriptAssignmentTarget);\r\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\r\n    }\r\n\r\n    // The following regular expressions will be used to split an object-literal string into tokens\r\n\r\n        // These two match strings, either with double quotes or single quotes\r\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\r\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\r\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\r\n        // as a regular expression (this is handled by the parsing loop below).\r\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\r\n        // These characters have special meaning to the parser and must not appear in the middle of a\r\n        // token, except as part of a string.\r\n        specials = ',\"\\'{}()/:[\\\\]',\r\n        // Match text (at least two characters) that does not contain any of the above special characters,\r\n        // although some of the special characters are allowed to start it (all but the colon and comma).\r\n        // The text can contain spaces, but leading or trailing spaces are skipped.\r\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\r\n        // Match any non-space character not matched already. This will match colons and commas, since they're\r\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\r\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\r\n        oneNotSpace = '[^\\\\s]',\r\n\r\n        // Create the actual regular expression by or-ing the above strings. The order is important.\r\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\r\n\r\n        // Match end of previous token to determine whether a slash is a division or regex.\r\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\r\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\r\n\r\n    function parseObjectLiteral(objectLiteralString) {\r\n        // Trim leading and trailing spaces from the string\r\n        var str = ko.utils.stringTrim(objectLiteralString);\r\n\r\n        // Trim braces '{' surrounding the whole object literal\r\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\r\n\r\n        // Split into tokens\r\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\r\n\r\n        if (toks) {\r\n            // Append a comma so that we don't need a separate code block to deal with the last item\r\n            toks.push(',');\r\n\r\n            for (var i = 0, tok; tok = toks[i]; ++i) {\r\n                var c = tok.charCodeAt(0);\r\n                // A comma signals the end of a key/value pair if depth is zero\r\n                if (c === 44) { // \",\"\r\n                    if (depth <= 0) {\r\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\r\n                        key = depth = 0;\r\n                        values = [];\r\n                        continue;\r\n                    }\r\n                // Simply skip the colon that separates the name and value\r\n                } else if (c === 58) { // \":\"\r\n                    if (!depth && !key && values.length === 1) {\r\n                        key = values.pop();\r\n                        continue;\r\n                    }\r\n                // A set of slashes is initially matched as a regular expression, but could be division\r\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\r\n                    // Look at the end of the previous token to determine if the slash is actually division\r\n                    var match = toks[i-1].match(divisionLookBehind);\r\n                    if (match && !keywordRegexLookBehind[match[0]]) {\r\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\r\n                        str = str.substr(str.indexOf(tok) + 1);\r\n                        toks = str.match(bindingToken);\r\n                        toks.push(',');\r\n                        i = -1;\r\n                        // Continue with just the slash\r\n                        tok = '/';\r\n                    }\r\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\r\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\r\n                    ++depth;\r\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\r\n                    --depth;\r\n                // The key will be the first token; if it's a string, trim the quotes\r\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\r\n                    tok = tok.slice(1, -1);\r\n                }\r\n                values.push(tok);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\r\n    var twoWayBindings = {};\r\n\r\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\r\n        bindingOptions = bindingOptions || {};\r\n\r\n        function processKeyValue(key, val) {\r\n            var writableVal;\r\n            function callPreprocessHook(obj) {\r\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\r\n            }\r\n            if (!bindingParams) {\r\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\r\n                    return;\r\n\r\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\r\n                    // For two-way bindings, provide a write method in case the value\r\n                    // isn't a writable observable.\r\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\r\n                }\r\n            }\r\n            // Values are wrapped in a function so that each value can be accessed independently\r\n            if (makeValueAccessors) {\r\n                val = 'function(){return ' + val + ' }';\r\n            }\r\n            resultStrings.push(\"'\" + key + \"':\" + val);\r\n        }\r\n\r\n        var resultStrings = [],\r\n            propertyAccessorResultStrings = [],\r\n            makeValueAccessors = bindingOptions['valueAccessors'],\r\n            bindingParams = bindingOptions['bindingParams'],\r\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\r\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\r\n\r\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\r\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\r\n        });\r\n\r\n        if (propertyAccessorResultStrings.length)\r\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\r\n\r\n        return resultStrings.join(\",\");\r\n    }\r\n\r\n    return {\r\n        bindingRewriteValidators: [],\r\n\r\n        twoWayBindings: twoWayBindings,\r\n\r\n        parseObjectLiteral: parseObjectLiteral,\r\n\r\n        preProcessBindings: preProcessBindings,\r\n\r\n        keyValueArrayContainsKey: function(keyValueArray, key) {\r\n            for (var i = 0; i < keyValueArray.length; i++)\r\n                if (keyValueArray[i]['key'] == key)\r\n                    return true;\r\n            return false;\r\n        },\r\n\r\n        // Internal, private KO utility for updating model properties from within bindings\r\n        // property:            If the property being updated is (or might be) an observable, pass it here\r\n        //                      If it turns out to be a writable observable, it will be written to directly\r\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\r\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\r\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\r\n        // value:               The value to be written\r\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\r\n        //                      it is !== existing value on that writable observable\r\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\r\n            if (!property || !ko.isObservable(property)) {\r\n                var propWriters = allBindings.get('_ko_property_writers');\r\n                if (propWriters && propWriters[key])\r\n                    propWriters[key](value);\r\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\r\n                property(value);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\r\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\r\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\r\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\r\n\r\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\r\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\r\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\r\n// as an internal implementation detail in the short term.\r\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\r\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\r\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\r\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\r\n\r\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\r\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\r\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\r\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\r\n(function() {\r\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\r\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\r\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\r\n    // of that virtual hierarchy\r\n    //\r\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\r\n    // without having to scatter special cases all over the binding and templating code.\r\n\r\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\r\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\r\n    // So, use node.text where available, and node.nodeValue elsewhere\r\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\r\n\r\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\r\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\r\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\r\n\r\n    function isStartComment(node) {\r\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n    }\r\n\r\n    function isEndComment(node) {\r\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n    }\r\n\r\n    function getVirtualChildren(startComment, allowUnbalanced) {\r\n        var currentNode = startComment;\r\n        var depth = 1;\r\n        var children = [];\r\n        while (currentNode = currentNode.nextSibling) {\r\n            if (isEndComment(currentNode)) {\r\n                depth--;\r\n                if (depth === 0)\r\n                    return children;\r\n            }\r\n\r\n            children.push(currentNode);\r\n\r\n            if (isStartComment(currentNode))\r\n                depth++;\r\n        }\r\n        if (!allowUnbalanced)\r\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\r\n        return null;\r\n    }\r\n\r\n    function getMatchingEndComment(startComment, allowUnbalanced) {\r\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\r\n        if (allVirtualChildren) {\r\n            if (allVirtualChildren.length > 0)\r\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\r\n            return startComment.nextSibling;\r\n        } else\r\n            return null; // Must have no matching end comment, and allowUnbalanced is true\r\n    }\r\n\r\n    function getUnbalancedChildTags(node) {\r\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\r\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\r\n        var childNode = node.firstChild, captureRemaining = null;\r\n        if (childNode) {\r\n            do {\r\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\r\n                    captureRemaining.push(childNode);\r\n                else if (isStartComment(childNode)) {\r\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\r\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\r\n                        childNode = matchingEndComment;\r\n                    else\r\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\r\n                } else if (isEndComment(childNode)) {\r\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\r\n                }\r\n            } while (childNode = childNode.nextSibling);\r\n        }\r\n        return captureRemaining;\r\n    }\r\n\r\n    ko.virtualElements = {\r\n        allowedBindings: {},\r\n\r\n        childNodes: function(node) {\r\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\r\n        },\r\n\r\n        emptyNode: function(node) {\r\n            if (!isStartComment(node))\r\n                ko.utils.emptyDomNode(node);\r\n            else {\r\n                var virtualChildren = ko.virtualElements.childNodes(node);\r\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\r\n                    ko.removeNode(virtualChildren[i]);\r\n            }\r\n        },\r\n\r\n        setDomNodeChildren: function(node, childNodes) {\r\n            if (!isStartComment(node))\r\n                ko.utils.setDomNodeChildren(node, childNodes);\r\n            else {\r\n                ko.virtualElements.emptyNode(node);\r\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\r\n                for (var i = 0, j = childNodes.length; i < j; i++)\r\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\r\n            }\r\n        },\r\n\r\n        prepend: function(containerNode, nodeToPrepend) {\r\n            if (!isStartComment(containerNode)) {\r\n                if (containerNode.firstChild)\r\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\r\n                else\r\n                    containerNode.appendChild(nodeToPrepend);\r\n            } else {\r\n                // Start comments must always have a parent and at least one following sibling (the end comment)\r\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\r\n            }\r\n        },\r\n\r\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\r\n            if (!insertAfterNode) {\r\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\r\n            } else if (!isStartComment(containerNode)) {\r\n                // Insert after insertion point\r\n                if (insertAfterNode.nextSibling)\r\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\r\n                else\r\n                    containerNode.appendChild(nodeToInsert);\r\n            } else {\r\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\r\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\r\n            }\r\n        },\r\n\r\n        firstChild: function(node) {\r\n            if (!isStartComment(node))\r\n                return node.firstChild;\r\n            if (!node.nextSibling || isEndComment(node.nextSibling))\r\n                return null;\r\n            return node.nextSibling;\r\n        },\r\n\r\n        nextSibling: function(node) {\r\n            if (isStartComment(node))\r\n                node = getMatchingEndComment(node);\r\n            if (node.nextSibling && isEndComment(node.nextSibling))\r\n                return null;\r\n            return node.nextSibling;\r\n        },\r\n\r\n        hasBindingValue: isStartComment,\r\n\r\n        virtualNodeBindingValue: function(node) {\r\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\r\n            return regexMatch ? regexMatch[1] : null;\r\n        },\r\n\r\n        normaliseVirtualElementDomStructure: function(elementVerified) {\r\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\r\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\r\n            // that are direct descendants of <ul> into the preceding <li>)\r\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\r\n                return;\r\n\r\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\r\n            // must be intended to appear *after* that child, so move them there.\r\n            var childNode = elementVerified.firstChild;\r\n            if (childNode) {\r\n                do {\r\n                    if (childNode.nodeType === 1) {\r\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\r\n                        if (unbalancedTags) {\r\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\r\n                            var nodeToInsertBefore = childNode.nextSibling;\r\n                            for (var i = 0; i < unbalancedTags.length; i++) {\r\n                                if (nodeToInsertBefore)\r\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\r\n                                else\r\n                                    elementVerified.appendChild(unbalancedTags[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                } while (childNode = childNode.nextSibling);\r\n            }\r\n        }\r\n    };\r\n})();\r\nko.exportSymbol('virtualElements', ko.virtualElements);\r\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\r\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\r\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\r\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\r\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\r\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\r\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\r\n(function() {\r\n    var defaultBindingAttributeName = \"data-bind\";\r\n\r\n    ko.bindingProvider = function() {\r\n        this.bindingCache = {};\r\n    };\r\n\r\n    ko.utils.extend(ko.bindingProvider.prototype, {\r\n        'nodeHasBindings': function(node) {\r\n            switch (node.nodeType) {\r\n                case 1: // Element\r\n                    return node.getAttribute(defaultBindingAttributeName) != null\r\n                        || ko.components['getComponentNameForNode'](node);\r\n                case 8: // Comment node\r\n                    return ko.virtualElements.hasBindingValue(node);\r\n                default: return false;\r\n            }\r\n        },\r\n\r\n        'getBindings': function(node, bindingContext) {\r\n            var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\r\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\r\n        },\r\n\r\n        'getBindingAccessors': function(node, bindingContext) {\r\n            var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\r\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\r\n        },\r\n\r\n        // The following function is only used internally by this default provider.\r\n        // It's not part of the interface definition for a general binding provider.\r\n        'getBindingsString': function(node, bindingContext) {\r\n            switch (node.nodeType) {\r\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\r\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\r\n                default: return null;\r\n            }\r\n        },\r\n\r\n        // The following function is only used internally by this default provider.\r\n        // It's not part of the interface definition for a general binding provider.\r\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\r\n            try {\r\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\r\n                return bindingFunction(bindingContext, node);\r\n            } catch (ex) {\r\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\r\n                throw ex;\r\n            }\r\n        }\r\n    });\r\n\r\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\r\n\r\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\r\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\r\n        return cache[cacheKey]\r\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\r\n    }\r\n\r\n    function createBindingsStringEvaluator(bindingsString, options) {\r\n        // Build the source for a function that evaluates \"expression\"\r\n        // For each scope variable, add an extra level of \"with\" nesting\r\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\r\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\r\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\r\n        return new Function(\"$context\", \"$element\", functionBody);\r\n    }\r\n})();\r\n\r\nko.exportSymbol('bindingProvider', ko.bindingProvider);\r\n(function () {\r\n    ko.bindingHandlers = {};\r\n\r\n    // The following element types will not be recursed into during binding. In the future, we\r\n    // may consider adding <template> to this list, because such elements' contents are always\r\n    // intended to be bound in a different context from where they appear in the document.\r\n    var bindingDoesNotRecurseIntoElementTypes = {\r\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\r\n        // because it's unexpected and a potential XSS issue\r\n        'script': true,\r\n        'textarea': true\r\n    };\r\n\r\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\r\n    ko['getBindingHandler'] = function(bindingKey) {\r\n        return ko.bindingHandlers[bindingKey];\r\n    };\r\n\r\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\r\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\r\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\r\n\r\n        // The binding context object includes static properties for the current, parent, and root view models.\r\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\r\n        // any child contexts, must be updated when the view model is changed.\r\n        function updateContext() {\r\n            // Most of the time, the context will directly get a view model object, but if a function is given,\r\n            // we call the function to retrieve the view model. If the function accesses any obsevables or returns\r\n            // an observable, the dependency is tracked, and those observables can later cause the binding\r\n            // context to be updated.\r\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\r\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\r\n\r\n            if (parentContext) {\r\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\r\n                // parent context is updated, this context will also be updated.\r\n                if (parentContext._subscribable)\r\n                    parentContext._subscribable();\r\n\r\n                // Copy $root and any custom properties from the parent context\r\n                ko.utils.extend(self, parentContext);\r\n\r\n                // Because the above copy overwrites our own properties, we need to reset them.\r\n                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\r\n                if (subscribable) {\r\n                    self._subscribable = subscribable;\r\n                }\r\n            } else {\r\n                self['$parents'] = [];\r\n                self['$root'] = dataItem;\r\n\r\n                // Export 'ko' in the binding context so it will be available in bindings and templates\r\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\r\n                // See https://github.com/SteveSanderson/knockout/issues/490\r\n                self['ko'] = ko;\r\n            }\r\n            self['$rawData'] = dataItemOrObservable;\r\n            self['$data'] = dataItem;\r\n            if (dataItemAlias)\r\n                self[dataItemAlias] = dataItem;\r\n\r\n            // The extendCallback function is provided when creating a child context or extending a context.\r\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\r\n            // function could also add dependencies to this binding context.\r\n            if (extendCallback)\r\n                extendCallback(self, parentContext, dataItem);\r\n\r\n            return self['$data'];\r\n        }\r\n        function disposeWhen() {\r\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\r\n        }\r\n\r\n        var self = this,\r\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\r\n            nodes,\r\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\r\n\r\n        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\r\n        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\r\n        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\r\n        // the context object.\r\n        if (subscribable.isActive()) {\r\n            self._subscribable = subscribable;\r\n\r\n            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\r\n            subscribable['equalityComparer'] = null;\r\n\r\n            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\r\n            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\r\n            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\r\n            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\r\n\r\n            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\r\n            nodes = [];\r\n            subscribable._addNode = function(node) {\r\n                nodes.push(node);\r\n                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\r\n                    ko.utils.arrayRemoveItem(nodes, node);\r\n                    if (!nodes.length) {\r\n                        subscribable.dispose();\r\n                        self._subscribable = subscribable = undefined;\r\n                    }\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\r\n    // any obsevables, the new child context will automatically get a dependency on the parent context.\r\n    // But this does not mean that the $data value of the child context will also get updated. If the child\r\n    // view model also depends on the parent view model, you must provide a function that returns the correct\r\n    // view model on each update.\r\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\r\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\r\n            // Extend the context hierarchy by setting the appropriate pointers\r\n            self['$parentContext'] = parentContext;\r\n            self['$parent'] = parentContext['$data'];\r\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\r\n            self['$parents'].unshift(self['$parent']);\r\n            if (extendCallback)\r\n                extendCallback(self);\r\n        });\r\n    };\r\n\r\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\r\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\r\n    // when an observable view model is updated.\r\n    ko.bindingContext.prototype['extend'] = function(properties) {\r\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\r\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\r\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\r\n            // This \"child\" context doesn't directly track a parent observable view model,\r\n            // so we need to manually set the $rawData value to match the parent.\r\n            self['$rawData'] = parentContext['$rawData'];\r\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\r\n        });\r\n    };\r\n\r\n    // Returns the valueAccesor function for a binding value\r\n    function makeValueAccessor(value) {\r\n        return function() {\r\n            return value;\r\n        };\r\n    }\r\n\r\n    // Returns the value of a valueAccessor function\r\n    function evaluateValueAccessor(valueAccessor) {\r\n        return valueAccessor();\r\n    }\r\n\r\n    // Given a function that returns bindings, create and return a new object that contains\r\n    // binding value-accessors functions. Each accessor function calls the original function\r\n    // so that it always gets the latest value and all dependencies are captured. This is used\r\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\r\n    function makeAccessorsFromFunction(callback) {\r\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\r\n            return function() {\r\n                return callback()[key];\r\n            };\r\n        });\r\n    }\r\n\r\n    // Given a bindings function or object, create and return a new object that contains\r\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\r\n    function makeBindingAccessors(bindings, context, node) {\r\n        if (typeof bindings === 'function') {\r\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\r\n        } else {\r\n            return ko.utils.objectMap(bindings, makeValueAccessor);\r\n        }\r\n    }\r\n\r\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\r\n    // It must be called with 'this' set to the provider instance.\r\n    function getBindingsAndMakeAccessors(node, context) {\r\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\r\n    }\r\n\r\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\r\n        var validator = ko.virtualElements.allowedBindings[bindingName];\r\n        if (!validator)\r\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\r\n    }\r\n\r\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\r\n        var currentChild,\r\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\r\n            provider = ko.bindingProvider['instance'],\r\n            preprocessNode = provider['preprocessNode'];\r\n\r\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\r\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\r\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\r\n        // trigger insertion of <template> contents at that point in the document.\r\n        if (preprocessNode) {\r\n            while (currentChild = nextInQueue) {\r\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n                preprocessNode.call(provider, currentChild);\r\n            }\r\n            // Reset nextInQueue for the next loop\r\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\r\n        }\r\n\r\n        while (currentChild = nextInQueue) {\r\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\r\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\r\n        }\r\n    }\r\n\r\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\r\n        var shouldBindDescendants = true;\r\n\r\n        // Perf optimisation: Apply bindings only if...\r\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\r\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\r\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\r\n        var isElement = (nodeVerified.nodeType === 1);\r\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\r\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\r\n\r\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\r\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\r\n        if (shouldApplyBindings)\r\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\r\n\r\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\r\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\r\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\r\n            //    hence bindingContextsMayDifferFromDomParentElement is false\r\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\r\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\r\n            //    hence bindingContextsMayDifferFromDomParentElement is true\r\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\r\n        }\r\n    }\r\n\r\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\r\n\r\n\r\n    function topologicalSortBindings(bindings) {\r\n        // Depth-first sort\r\n        var result = [],                // The list of key/handler pairs that we will return\r\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\r\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\r\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\r\n            if (!bindingsConsidered[bindingKey]) {\r\n                var binding = ko['getBindingHandler'](bindingKey);\r\n                if (binding) {\r\n                    // First add dependencies (if any) of the current binding\r\n                    if (binding['after']) {\r\n                        cyclicDependencyStack.push(bindingKey);\r\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\r\n                            if (bindings[bindingDependencyKey]) {\r\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\r\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\r\n                                } else {\r\n                                    pushBinding(bindingDependencyKey);\r\n                                }\r\n                            }\r\n                        });\r\n                        cyclicDependencyStack.length--;\r\n                    }\r\n                    // Next add the current binding\r\n                    result.push({ key: bindingKey, handler: binding });\r\n                }\r\n                bindingsConsidered[bindingKey] = true;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\r\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\r\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\r\n        if (!sourceBindings) {\r\n            if (alreadyBound) {\r\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\r\n            }\r\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\r\n        }\r\n\r\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\r\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\r\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\r\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\r\n            ko.storedBindingContextForNode(node, bindingContext);\r\n\r\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\r\n        var bindings;\r\n        if (sourceBindings && typeof sourceBindings !== 'function') {\r\n            bindings = sourceBindings;\r\n        } else {\r\n            var provider = ko.bindingProvider['instance'],\r\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\r\n\r\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\r\n            // the binding context is updated or if the binding provider accesses observables.\r\n            var bindingsUpdater = ko.dependentObservable(\r\n                function() {\r\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\r\n                    // Register a dependency on the binding context to support obsevable view models.\r\n                    if (bindings && bindingContext._subscribable)\r\n                        bindingContext._subscribable();\r\n                    return bindings;\r\n                },\r\n                null, { disposeWhenNodeIsRemoved: node }\r\n            );\r\n\r\n            if (!bindings || !bindingsUpdater.isActive())\r\n                bindingsUpdater = null;\r\n        }\r\n\r\n        var bindingHandlerThatControlsDescendantBindings;\r\n        if (bindings) {\r\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\r\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\r\n            // the latest binding value and registers a dependency on the binding updater.\r\n            var getValueAccessor = bindingsUpdater\r\n                ? function(bindingKey) {\r\n                    return function() {\r\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\r\n                    };\r\n                } : function(bindingKey) {\r\n                    return bindings[bindingKey];\r\n                };\r\n\r\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\r\n            function allBindings() {\r\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\r\n            }\r\n            // The following is the 3.x allBindings API\r\n            allBindings['get'] = function(key) {\r\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\r\n            };\r\n            allBindings['has'] = function(key) {\r\n                return key in bindings;\r\n            };\r\n\r\n            // First put the bindings into the right order\r\n            var orderedBindings = topologicalSortBindings(bindings);\r\n\r\n            // Go through the sorted bindings, calling init and update for each\r\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\r\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\r\n                // so bindingKeyAndHandler.handler will always be nonnull.\r\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\r\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\r\n                    bindingKey = bindingKeyAndHandler.key;\r\n\r\n                if (node.nodeType === 8) {\r\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\r\n                }\r\n\r\n                try {\r\n                    // Run init, ignoring any dependencies\r\n                    if (typeof handlerInitFn == \"function\") {\r\n                        ko.dependencyDetection.ignore(function() {\r\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\r\n\r\n                            // If this binding handler claims to control descendant bindings, make a note of this\r\n                            if (initResult && initResult['controlsDescendantBindings']) {\r\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\r\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    // Run update in its own computed wrapper\r\n                    if (typeof handlerUpdateFn == \"function\") {\r\n                        ko.dependentObservable(\r\n                            function() {\r\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\r\n                            },\r\n                            null,\r\n                            { disposeWhenNodeIsRemoved: node }\r\n                        );\r\n                    }\r\n                } catch (ex) {\r\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\r\n                    throw ex;\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\r\n        };\r\n    };\r\n\r\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\r\n    ko.storedBindingContextForNode = function (node, bindingContext) {\r\n        if (arguments.length == 2) {\r\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\r\n            if (bindingContext._subscribable)\r\n                bindingContext._subscribable._addNode(node);\r\n        } else {\r\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\r\n        }\r\n    }\r\n\r\n    function getBindingContext(viewModelOrBindingContext) {\r\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\r\n            ? viewModelOrBindingContext\r\n            : new ko.bindingContext(viewModelOrBindingContext);\r\n    }\r\n\r\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\r\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\r\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\r\n    };\r\n\r\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n        var context = getBindingContext(viewModelOrBindingContext);\r\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\r\n    };\r\n\r\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\r\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\r\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\r\n    };\r\n\r\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\r\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\r\n        if (!jQueryInstance && window['jQuery']) {\r\n            jQueryInstance = window['jQuery'];\r\n        }\r\n\r\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\r\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\r\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\r\n\r\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\r\n    };\r\n\r\n    // Retrieving binding context from arbitrary nodes\r\n    ko.contextFor = function(node) {\r\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\r\n        switch (node.nodeType) {\r\n            case 1:\r\n            case 8:\r\n                var context = ko.storedBindingContextForNode(node);\r\n                if (context) return context;\r\n                if (node.parentNode) return ko.contextFor(node.parentNode);\r\n                break;\r\n        }\r\n        return undefined;\r\n    };\r\n    ko.dataFor = function(node) {\r\n        var context = ko.contextFor(node);\r\n        return context ? context['$data'] : undefined;\r\n    };\r\n\r\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\r\n    ko.exportSymbol('applyBindings', ko.applyBindings);\r\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\r\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\r\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\r\n    ko.exportSymbol('contextFor', ko.contextFor);\r\n    ko.exportSymbol('dataFor', ko.dataFor);\r\n})();\r\n(function(undefined) {\r\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\r\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\r\n\r\n    ko.components = {\r\n        get: function(componentName, callback) {\r\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\r\n            if (cachedDefinition) {\r\n                // It's already loaded and cached. Reuse the same definition object.\r\n                // Note that for API consistency, even cache hits complete asynchronously by default.\r\n                // You can bypass this by putting synchronous:true on your component config.\r\n                if (cachedDefinition.isSynchronousComponent) {\r\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\r\n                        callback(cachedDefinition.definition);\r\n                    });\r\n                } else {\r\n                    setTimeout(function() { callback(cachedDefinition.definition); }, 0);\r\n                }\r\n            } else {\r\n                // Join the loading process that is already underway, or start a new one.\r\n                loadComponentAndNotify(componentName, callback);\r\n            }\r\n        },\r\n\r\n        clearCachedDefinition: function(componentName) {\r\n            delete loadedDefinitionsCache[componentName];\r\n        },\r\n\r\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\r\n    };\r\n\r\n    function getObjectOwnProperty(obj, propName) {\r\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\r\n    }\r\n\r\n    function loadComponentAndNotify(componentName, callback) {\r\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\r\n            completedAsync;\r\n        if (!subscribable) {\r\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\r\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\r\n            subscribable.subscribe(callback);\r\n\r\n            beginLoadingComponent(componentName, function(definition, config) {\r\n                var isSynchronousComponent = !!(config && config['synchronous']);\r\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\r\n                delete loadingSubscribablesCache[componentName];\r\n\r\n                // For API consistency, all loads complete asynchronously. However we want to avoid\r\n                // adding an extra setTimeout if it's unnecessary (i.e., the completion is already\r\n                // async) since setTimeout(..., 0) still takes about 16ms or more on most browsers.\r\n                //\r\n                // You can bypass the 'always synchronous' feature by putting the synchronous:true\r\n                // flag on your component configuration when you register it.\r\n                if (completedAsync || isSynchronousComponent) {\r\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\r\n                    // See comment in loaderRegistryBehaviors.js for reasoning\r\n                    subscribable['notifySubscribers'](definition);\r\n                } else {\r\n                    setTimeout(function() {\r\n                        subscribable['notifySubscribers'](definition);\r\n                    }, 0);\r\n                }\r\n            });\r\n            completedAsync = true;\r\n        } else {\r\n            subscribable.subscribe(callback);\r\n        }\r\n    }\r\n\r\n    function beginLoadingComponent(componentName, callback) {\r\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\r\n            if (config) {\r\n                // We have a config, so now load its definition\r\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\r\n                    callback(definition, config);\r\n                });\r\n            } else {\r\n                // The component has no config - it's unknown to all the loaders.\r\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\r\n                // process and this callback would not run. For this callback to run, all loaders must\r\n                // have confirmed they don't know about this component.\r\n                callback(null, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\r\n        // On the first call in the stack, start with the full set of loaders\r\n        if (!candidateLoaders) {\r\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\r\n        }\r\n\r\n        // Try the next candidate\r\n        var currentCandidateLoader = candidateLoaders.shift();\r\n        if (currentCandidateLoader) {\r\n            var methodInstance = currentCandidateLoader[methodName];\r\n            if (methodInstance) {\r\n                var wasAborted = false,\r\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\r\n                        if (wasAborted) {\r\n                            callback(null);\r\n                        } else if (result !== null) {\r\n                            // This candidate returned a value. Use it.\r\n                            callback(result);\r\n                        } else {\r\n                            // Try the next candidate\r\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n                        }\r\n                    }));\r\n\r\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\r\n                // that we'll extend the API to support synchronous return values in the future. It won't be\r\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\r\n                if (synchronousReturnValue !== undefined) {\r\n                    wasAborted = true;\r\n\r\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\r\n                    // KO's specs running tidily, since we can observe the loading got aborted without\r\n                    // having exceptions cluttering up the console too.\r\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\r\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\r\n                    }\r\n                }\r\n            } else {\r\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\r\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n            }\r\n        } else {\r\n            // No candidates returned a value\r\n            callback(null);\r\n        }\r\n    }\r\n\r\n    // Reference the loaders via string name so it's possible for developers\r\n    // to replace the whole array by assigning to ko.components.loaders\r\n    ko.components['loaders'] = [];\r\n\r\n    ko.exportSymbol('components', ko.components);\r\n    ko.exportSymbol('components.get', ko.components.get);\r\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\r\n})();\r\n(function(undefined) {\r\n\r\n    // The default loader is responsible for two things:\r\n    // 1. Maintaining the default in-memory registry of component configuration objects\r\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\r\n    // 2. Answering requests for components by fetching configuration objects\r\n    //    from that default in-memory registry and resolving them into standard\r\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\r\n    // Custom loaders may override either of these facilities, i.e.,\r\n    // 1. To supply configuration objects from some other source (e.g., conventions)\r\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\r\n\r\n    var defaultConfigRegistry = {};\r\n\r\n    ko.components.register = function(componentName, config) {\r\n        if (!config) {\r\n            throw new Error('Invalid configuration for ' + componentName);\r\n        }\r\n\r\n        if (ko.components.isRegistered(componentName)) {\r\n            throw new Error('Component ' + componentName + ' is already registered');\r\n        }\r\n\r\n        defaultConfigRegistry[componentName] = config;\r\n    }\r\n\r\n    ko.components.isRegistered = function(componentName) {\r\n        return componentName in defaultConfigRegistry;\r\n    }\r\n\r\n    ko.components.unregister = function(componentName) {\r\n        delete defaultConfigRegistry[componentName];\r\n        ko.components.clearCachedDefinition(componentName);\r\n    }\r\n\r\n    ko.components.defaultLoader = {\r\n        'getConfig': function(componentName, callback) {\r\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\r\n                ? defaultConfigRegistry[componentName]\r\n                : null;\r\n            callback(result);\r\n        },\r\n\r\n        'loadComponent': function(componentName, config, callback) {\r\n            var errorCallback = makeErrorCallback(componentName);\r\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\r\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\r\n            });\r\n        },\r\n\r\n        'loadTemplate': function(componentName, templateConfig, callback) {\r\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\r\n        },\r\n\r\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\r\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\r\n        }\r\n    };\r\n\r\n    var createViewModelKey = 'createViewModel';\r\n\r\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\r\n    // into the standard component definition format:\r\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\r\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\r\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\r\n    // so this is implemented manually below.\r\n    function resolveConfig(componentName, errorCallback, config, callback) {\r\n        var result = {},\r\n            makeCallBackWhenZero = 2,\r\n            tryIssueCallback = function() {\r\n                if (--makeCallBackWhenZero === 0) {\r\n                    callback(result);\r\n                }\r\n            },\r\n            templateConfig = config['template'],\r\n            viewModelConfig = config['viewModel'];\r\n\r\n        if (templateConfig) {\r\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\r\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\r\n                    result['template'] = resolvedTemplate;\r\n                    tryIssueCallback();\r\n                });\r\n            });\r\n        } else {\r\n            tryIssueCallback();\r\n        }\r\n\r\n        if (viewModelConfig) {\r\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\r\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\r\n                    result[createViewModelKey] = resolvedViewModel;\r\n                    tryIssueCallback();\r\n                });\r\n            });\r\n        } else {\r\n            tryIssueCallback();\r\n        }\r\n    }\r\n\r\n    function resolveTemplate(errorCallback, templateConfig, callback) {\r\n        if (typeof templateConfig === 'string') {\r\n            // Markup - parse it\r\n            callback(ko.utils.parseHtmlFragment(templateConfig));\r\n        } else if (templateConfig instanceof Array) {\r\n            // Assume already an array of DOM nodes - pass through unchanged\r\n            callback(templateConfig);\r\n        } else if (isDocumentFragment(templateConfig)) {\r\n            // Document fragment - use its child nodes\r\n            callback(ko.utils.makeArray(templateConfig.childNodes));\r\n        } else if (templateConfig['element']) {\r\n            var element = templateConfig['element'];\r\n            if (isDomElement(element)) {\r\n                // Element instance - copy its child nodes\r\n                callback(cloneNodesFromTemplateSourceElement(element));\r\n            } else if (typeof element === 'string') {\r\n                // Element ID - find it, then copy its child nodes\r\n                var elemInstance = document.getElementById(element);\r\n                if (elemInstance) {\r\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\r\n                } else {\r\n                    errorCallback('Cannot find element with ID ' + element);\r\n                }\r\n            } else {\r\n                errorCallback('Unknown element type: ' + element);\r\n            }\r\n        } else {\r\n            errorCallback('Unknown template value: ' + templateConfig);\r\n        }\r\n    }\r\n\r\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\r\n        if (typeof viewModelConfig === 'function') {\r\n            // Constructor - convert to standard factory function format\r\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\r\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\r\n            // be used in factory functions, not viewmodel constructors.\r\n            callback(function (params /*, componentInfo */) {\r\n                return new viewModelConfig(params);\r\n            });\r\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\r\n            // Already a factory function - use it as-is\r\n            callback(viewModelConfig[createViewModelKey]);\r\n        } else if ('instance' in viewModelConfig) {\r\n            // Fixed object instance - promote to createViewModel format for API consistency\r\n            var fixedInstance = viewModelConfig['instance'];\r\n            callback(function (params, componentInfo) {\r\n                return fixedInstance;\r\n            });\r\n        } else if ('viewModel' in viewModelConfig) {\r\n            // Resolved AMD module whose value is of the form { viewModel: ... }\r\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\r\n        } else {\r\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\r\n        }\r\n    }\r\n\r\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\r\n        switch (ko.utils.tagNameLower(elemInstance)) {\r\n            case 'script':\r\n                return ko.utils.parseHtmlFragment(elemInstance.text);\r\n            case 'textarea':\r\n                return ko.utils.parseHtmlFragment(elemInstance.value);\r\n            case 'template':\r\n                // For browsers with proper <template> element support (i.e., where the .content property\r\n                // gives a document fragment), use that document fragment.\r\n                if (isDocumentFragment(elemInstance.content)) {\r\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\r\n                }\r\n        }\r\n\r\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\r\n        // understand <template> and just treat it as a regular container\r\n        return ko.utils.cloneNodes(elemInstance.childNodes);\r\n    }\r\n\r\n    function isDomElement(obj) {\r\n        if (window['HTMLElement']) {\r\n            return obj instanceof HTMLElement;\r\n        } else {\r\n            return obj && obj.tagName && obj.nodeType === 1;\r\n        }\r\n    }\r\n\r\n    function isDocumentFragment(obj) {\r\n        if (window['DocumentFragment']) {\r\n            return obj instanceof DocumentFragment;\r\n        } else {\r\n            return obj && obj.nodeType === 11;\r\n        }\r\n    }\r\n\r\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\r\n        if (typeof config['require'] === 'string') {\r\n            // The config is the value of an AMD module\r\n            if (amdRequire || window['require']) {\r\n                (amdRequire || window['require'])([config['require']], callback);\r\n            } else {\r\n                errorCallback('Uses require, but no AMD loader is present');\r\n            }\r\n        } else {\r\n            callback(config);\r\n        }\r\n    }\r\n\r\n    function makeErrorCallback(componentName) {\r\n        return function (message) {\r\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\r\n        };\r\n    }\r\n\r\n    ko.exportSymbol('components.register', ko.components.register);\r\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\r\n    ko.exportSymbol('components.unregister', ko.components.unregister);\r\n\r\n    // Expose the default loader so that developers can directly ask it for configuration\r\n    // or to resolve configuration\r\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\r\n\r\n    // By default, the default loader is the only registered component loader\r\n    ko.components['loaders'].push(ko.components.defaultLoader);\r\n\r\n    // Privately expose the underlying config registry for use in old-IE shim\r\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\r\n})();\r\n(function (undefined) {\r\n    // Overridable API for determining which component name applies to a given node. By overriding this,\r\n    // you can for example map specific tagNames to components that are not preregistered.\r\n    ko.components['getComponentNameForNode'] = function(node) {\r\n        var tagNameLower = ko.utils.tagNameLower(node);\r\n        return ko.components.isRegistered(tagNameLower) && tagNameLower;\r\n    };\r\n\r\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\r\n        // Determine if it's really a custom element matching a component\r\n        if (node.nodeType === 1) {\r\n            var componentName = ko.components['getComponentNameForNode'](node);\r\n            if (componentName) {\r\n                // It does represent a component, so add a component binding for it\r\n                allBindings = allBindings || {};\r\n\r\n                if (allBindings['component']) {\r\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\r\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\r\n                }\r\n\r\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\r\n\r\n                allBindings['component'] = valueAccessors\r\n                    ? function() { return componentBindingValue; }\r\n                    : componentBindingValue;\r\n            }\r\n        }\r\n\r\n        return allBindings;\r\n    }\r\n\r\n    var nativeBindingProviderInstance = new ko.bindingProvider();\r\n\r\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\r\n        var paramsAttribute = elem.getAttribute('params');\r\n\r\n        if (paramsAttribute) {\r\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\r\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\r\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\r\n                }),\r\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\r\n                    var paramValue = paramValueComputed.peek();\r\n                    // Does the evaluation of the parameter value unwrap any observables?\r\n                    if (!paramValueComputed.isActive()) {\r\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\r\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\r\n                        return paramValue;\r\n                    } else {\r\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\r\n                        // level of observability, and any inner (resulting model value) level of observability.\r\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\r\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\r\n                        return ko.computed({\r\n                            'read': function() {\r\n                                return ko.utils.unwrapObservable(paramValueComputed());\r\n                            },\r\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\r\n                                paramValueComputed()(value);\r\n                            },\r\n                            disposeWhenNodeIsRemoved: elem\r\n                        });\r\n                    }\r\n                });\r\n\r\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\r\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\r\n            // (model value) observability, or in case the model value observable has subobservables.\r\n            if (!result.hasOwnProperty('$raw')) {\r\n                result['$raw'] = rawParamComputedValues;\r\n            }\r\n\r\n            return result;\r\n        } else {\r\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\r\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\r\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\r\n            return { '$raw': {} };\r\n        }\r\n    }\r\n\r\n    // --------------------------------------------------------------------------------\r\n    // Compatibility code for older (pre-HTML5) IE browsers\r\n\r\n    if (ko.utils.ieVersion < 9) {\r\n        // Whenever you preregister a component, enable it as a custom element in the current document\r\n        ko.components['register'] = (function(originalFunction) {\r\n            return function(componentName) {\r\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\r\n                return originalFunction.apply(this, arguments);\r\n            }\r\n        })(ko.components['register']);\r\n\r\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\r\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\r\n        document.createDocumentFragment = (function(originalFunction) {\r\n            return function() {\r\n                var newDocFrag = originalFunction(),\r\n                    allComponents = ko.components._allRegisteredComponents;\r\n                for (var componentName in allComponents) {\r\n                    if (allComponents.hasOwnProperty(componentName)) {\r\n                        newDocFrag.createElement(componentName);\r\n                    }\r\n                }\r\n                return newDocFrag;\r\n            };\r\n        })(document.createDocumentFragment);\r\n    }\r\n})();(function(undefined) {\r\n\r\n    var componentLoadingOperationUniqueId = 0;\r\n\r\n    ko.bindingHandlers['component'] = {\r\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\r\n            var currentViewModel,\r\n                currentLoadingOperationId,\r\n                disposeAssociatedComponentViewModel = function () {\r\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\r\n                    if (typeof currentViewModelDispose === 'function') {\r\n                        currentViewModelDispose.call(currentViewModel);\r\n                    }\r\n\r\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\r\n                    currentLoadingOperationId = null;\r\n                },\r\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\r\n\r\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\r\n\r\n            ko.computed(function () {\r\n                var value = ko.utils.unwrapObservable(valueAccessor()),\r\n                    componentName, componentParams;\r\n\r\n                if (typeof value === 'string') {\r\n                    componentName = value;\r\n                } else {\r\n                    componentName = ko.utils.unwrapObservable(value['name']);\r\n                    componentParams = ko.utils.unwrapObservable(value['params']);\r\n                }\r\n\r\n                if (!componentName) {\r\n                    throw new Error('No component name specified');\r\n                }\r\n\r\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\r\n                ko.components.get(componentName, function(componentDefinition) {\r\n                    // If this is not the current load operation for this element, ignore it.\r\n                    if (currentLoadingOperationId !== loadingOperationId) {\r\n                        return;\r\n                    }\r\n\r\n                    // Clean up previous state\r\n                    disposeAssociatedComponentViewModel();\r\n\r\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\r\n                    if (!componentDefinition) {\r\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\r\n                    }\r\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\r\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\r\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\r\n                            ctx['$component'] = componentViewModel;\r\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\r\n                        });\r\n                    currentViewModel = componentViewModel;\r\n                    ko.applyBindingsToDescendants(childBindingContext, element);\r\n                });\r\n            }, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n            return { 'controlsDescendantBindings': true };\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings['component'] = true;\r\n\r\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\r\n        var template = componentDefinition['template'];\r\n        if (!template) {\r\n            throw new Error('Component \\'' + componentName + '\\' has no template');\r\n        }\r\n\r\n        var clonedNodesArray = ko.utils.cloneNodes(template);\r\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\r\n    }\r\n\r\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\r\n        var componentViewModelFactory = componentDefinition['createViewModel'];\r\n        return componentViewModelFactory\r\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\r\n            : componentParams; // Template-only component\r\n    }\r\n\r\n})();\r\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\r\nko.bindingHandlers['attr'] = {\r\n    'update': function(element, valueAccessor, allBindings) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\r\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\r\n            attrValue = ko.utils.unwrapObservable(attrValue);\r\n\r\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\r\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\r\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\r\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\r\n            if (toRemove)\r\n                element.removeAttribute(attrName);\r\n\r\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\r\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\r\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\r\n            // property for IE <= 8.\r\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\r\n                attrName = attrHtmlToJavascriptMap[attrName];\r\n                if (toRemove)\r\n                    element.removeAttribute(attrName);\r\n                else\r\n                    element[attrName] = attrValue;\r\n            } else if (!toRemove) {\r\n                element.setAttribute(attrName, attrValue.toString());\r\n            }\r\n\r\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\r\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\r\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\r\n            // entirely, and there's no strong reason to allow for such casing in HTML.\r\n            if (attrName === \"name\") {\r\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\r\n            }\r\n        });\r\n    }\r\n};\r\n(function() {\r\n\r\nko.bindingHandlers['checked'] = {\r\n    'after': ['value', 'attr'],\r\n    'init': function (element, valueAccessor, allBindings) {\r\n        var checkedValue = ko.pureComputed(function() {\r\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\r\n            if (allBindings['has']('checkedValue')) {\r\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n            } else if (allBindings['has']('value')) {\r\n                return ko.utils.unwrapObservable(allBindings.get('value'));\r\n            }\r\n\r\n            return element.value;\r\n        });\r\n\r\n        function updateModel() {\r\n            // This updates the model value from the view value.\r\n            // It runs in response to DOM events (click) and changes in checkedValue.\r\n            var isChecked = element.checked,\r\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\r\n\r\n            // When we're first setting up this computed, don't change any model state.\r\n            if (ko.computedContext.isInitial()) {\r\n                return;\r\n            }\r\n\r\n            // We can ignore unchecked radio buttons, because some other radio\r\n            // button will be getting checked, and that one can take care of updating state.\r\n            if (isRadio && !isChecked) {\r\n                return;\r\n            }\r\n\r\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n            if (isValueArray) {\r\n                if (oldElemValue !== elemValue) {\r\n                    // When we're responding to the checkedValue changing, and the element is\r\n                    // currently checked, replace the old elem value with the new elem value\r\n                    // in the model array.\r\n                    if (isChecked) {\r\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, true);\r\n                        ko.utils.addOrRemoveItem(modelValue, oldElemValue, false);\r\n                    }\r\n\r\n                    oldElemValue = elemValue;\r\n                } else {\r\n                    // When we're responding to the user having checked/unchecked a checkbox,\r\n                    // add/remove the element value to the model array.\r\n                    ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\r\n                }\r\n            } else {\r\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n            }\r\n        };\r\n\r\n        function updateView() {\r\n            // This updates the view value from the model value.\r\n            // It runs in response to changes in the bound (checked) value.\r\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n            if (isValueArray) {\r\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\r\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\r\n            } else if (isCheckbox) {\r\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\r\n                element.checked = modelValue;\r\n            } else {\r\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\r\n                element.checked = (checkedValue() === modelValue);\r\n            }\r\n        };\r\n\r\n        var isCheckbox = element.type == \"checkbox\",\r\n            isRadio = element.type == \"radio\";\r\n\r\n        // Only bind to check boxes and radio buttons\r\n        if (!isCheckbox && !isRadio) {\r\n            return;\r\n        }\r\n\r\n        var isValueArray = isCheckbox && (ko.utils.unwrapObservable(valueAccessor()) instanceof Array),\r\n            oldElemValue = isValueArray ? checkedValue() : undefined,\r\n            useCheckedValue = isRadio || isValueArray;\r\n\r\n        // IE 6 won't allow radio buttons to be selected unless they have a name\r\n        if (isRadio && !element.name)\r\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\r\n\r\n        // Set up two computeds to update the binding:\r\n\r\n        // The first responds to changes in the checkedValue value and to element clicks\r\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\r\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\r\n\r\n        // The second responds to changes in the model value (the one associated with the checked binding)\r\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['checked'] = true;\r\n\r\nko.bindingHandlers['checkedValue'] = {\r\n    'update': function (element, valueAccessor) {\r\n        element.value = ko.utils.unwrapObservable(valueAccessor());\r\n    }\r\n};\r\n\r\n})();var classesWrittenByBindingKey = '__ko__cssValue';\r\nko.bindingHandlers['css'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor());\r\n        if (value !== null && typeof value == \"object\") {\r\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\r\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\r\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\r\n            });\r\n        } else {\r\n            value = String(value || ''); // Make sure we don't try to store or set a non-string value\r\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\r\n            element[classesWrittenByBindingKey] = value;\r\n            ko.utils.toggleDomNodeCssClass(element, value, true);\r\n        }\r\n    }\r\n};\r\nko.bindingHandlers['enable'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor());\r\n        if (value && element.disabled)\r\n            element.removeAttribute(\"disabled\");\r\n        else if ((!value) && (!element.disabled))\r\n            element.disabled = true;\r\n    }\r\n};\r\n\r\nko.bindingHandlers['disable'] = {\r\n    'update': function (element, valueAccessor) {\r\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\r\n    }\r\n};\r\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\r\n// e.g. click:handler instead of the usual full-length event:{click:handler}\r\nfunction makeEventHandlerShortcut(eventName) {\r\n    ko.bindingHandlers[eventName] = {\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var newValueAccessor = function () {\r\n                var result = {};\r\n                result[eventName] = valueAccessor();\r\n                return result;\r\n            };\r\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\r\n        }\r\n    }\r\n}\r\n\r\nko.bindingHandlers['event'] = {\r\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        var eventsToHandle = valueAccessor() || {};\r\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\r\n            if (typeof eventName == \"string\") {\r\n                ko.utils.registerEventHandler(element, eventName, function (event) {\r\n                    var handlerReturnValue;\r\n                    var handlerFunction = valueAccessor()[eventName];\r\n                    if (!handlerFunction)\r\n                        return;\r\n\r\n                    try {\r\n                        // Take all the event args, and prefix with the viewmodel\r\n                        var argsForHandler = ko.utils.makeArray(arguments);\r\n                        viewModel = bindingContext['$data'];\r\n                        argsForHandler.unshift(viewModel);\r\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\r\n                    } finally {\r\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                            if (event.preventDefault)\r\n                                event.preventDefault();\r\n                            else\r\n                                event.returnValue = false;\r\n                        }\r\n                    }\r\n\r\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\r\n                    if (!bubble) {\r\n                        event.cancelBubble = true;\r\n                        if (event.stopPropagation)\r\n                            event.stopPropagation();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\r\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\r\nko.bindingHandlers['foreach'] = {\r\n    makeTemplateValueAccessor: function(valueAccessor) {\r\n        return function() {\r\n            var modelValue = valueAccessor(),\r\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\r\n\r\n            // If unwrappedValue is the array, pass in the wrapped value on its own\r\n            // The value will be unwrapped and tracked within the template binding\r\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\r\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\r\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\r\n\r\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\r\n            ko.utils.unwrapObservable(modelValue);\r\n            return {\r\n                'foreach': unwrappedValue['data'],\r\n                'as': unwrappedValue['as'],\r\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\r\n                'afterAdd': unwrappedValue['afterAdd'],\r\n                'beforeRemove': unwrappedValue['beforeRemove'],\r\n                'afterRender': unwrappedValue['afterRender'],\r\n                'beforeMove': unwrappedValue['beforeMove'],\r\n                'afterMove': unwrappedValue['afterMove'],\r\n                'templateEngine': ko.nativeTemplateEngine.instance\r\n            };\r\n        };\r\n    },\r\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\r\n    },\r\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\r\n    }\r\n};\r\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\r\nko.virtualElements.allowedBindings['foreach'] = true;\r\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\r\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\r\nko.bindingHandlers['hasfocus'] = {\r\n    'init': function(element, valueAccessor, allBindings) {\r\n        var handleElementFocusChange = function(isFocused) {\r\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\r\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\r\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\r\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\r\n            // from calling 'blur()' on the element when it loses focus.\r\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\r\n            element[hasfocusUpdatingProperty] = true;\r\n            var ownerDoc = element.ownerDocument;\r\n            if (\"activeElement\" in ownerDoc) {\r\n                var active;\r\n                try {\r\n                    active = ownerDoc.activeElement;\r\n                } catch(e) {\r\n                    // IE9 throws if you access activeElement during page load (see issue #703)\r\n                    active = ownerDoc.body;\r\n                }\r\n                isFocused = (active === element);\r\n            }\r\n            var modelValue = valueAccessor();\r\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\r\n\r\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\r\n            element[hasfocusLastValue] = isFocused;\r\n            element[hasfocusUpdatingProperty] = false;\r\n        };\r\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\r\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\r\n\r\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\r\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\r\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\r\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\r\n    },\r\n    'update': function(element, valueAccessor) {\r\n        var value = !!ko.utils.unwrapObservable(valueAccessor()); //force boolean to compare with last value\r\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\r\n            value ? element.focus() : element.blur();\r\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]); // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\r\n        }\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\r\n\r\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\r\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\r\nko.bindingHandlers['html'] = {\r\n    'init': function() {\r\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\r\n        return { 'controlsDescendantBindings': true };\r\n    },\r\n    'update': function (element, valueAccessor) {\r\n        // setHtml will unwrap the value if needed\r\n        ko.utils.setHtml(element, valueAccessor());\r\n    }\r\n};\r\n// Makes a binding like with or if\r\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\r\n    ko.bindingHandlers[bindingKey] = {\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var didDisplayOnLastUpdate,\r\n                savedNodes;\r\n            ko.computed(function() {\r\n                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\r\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\r\n                    isFirstRender = !savedNodes,\r\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\r\n\r\n                if (needsRefresh) {\r\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\r\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\r\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\r\n                    }\r\n\r\n                    if (shouldDisplay) {\r\n                        if (!isFirstRender) {\r\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\r\n                        }\r\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\r\n                    } else {\r\n                        ko.virtualElements.emptyNode(element);\r\n                    }\r\n\r\n                    didDisplayOnLastUpdate = shouldDisplay;\r\n                }\r\n            }, null, { disposeWhenNodeIsRemoved: element });\r\n            return { 'controlsDescendantBindings': true };\r\n        }\r\n    };\r\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\r\n    ko.virtualElements.allowedBindings[bindingKey] = true;\r\n}\r\n\r\n// Construct the actual binding handlers\r\nmakeWithIfBinding('if');\r\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\r\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\r\n    function(bindingContext, dataValue) {\r\n        return bindingContext['createChildContext'](dataValue);\r\n    }\r\n);\r\nvar captionPlaceholder = {};\r\nko.bindingHandlers['options'] = {\r\n    'init': function(element) {\r\n        if (ko.utils.tagNameLower(element) !== \"select\")\r\n            throw new Error(\"options binding applies only to SELECT elements\");\r\n\r\n        // Remove all existing <option>s.\r\n        while (element.length > 0) {\r\n            element.remove(0);\r\n        }\r\n\r\n        // Ensures that the binding processor doesn't try to bind the options\r\n        return { 'controlsDescendantBindings': true };\r\n    },\r\n    'update': function (element, valueAccessor, allBindings) {\r\n        function selectedOptions() {\r\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\r\n        }\r\n\r\n        var selectWasPreviouslyEmpty = element.length == 0,\r\n            multiple = element.multiple,\r\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\r\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\r\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n            arrayToDomNodeChildrenOptions = {},\r\n            captionValue,\r\n            filteredArray,\r\n            previousSelectedValues = [];\r\n\r\n        if (!valueAllowUnset) {\r\n            if (multiple) {\r\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\r\n            } else if (element.selectedIndex >= 0) {\r\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\r\n            }\r\n        }\r\n\r\n        if (unwrappedArray) {\r\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                unwrappedArray = [unwrappedArray];\r\n\r\n            // Filter out any entries marked as destroyed\r\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n            });\r\n\r\n            // If caption is included, add it to the array\r\n            if (allBindings['has']('optionsCaption')) {\r\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                // If caption value is null or undefined, don't show a caption\r\n                if (captionValue !== null && captionValue !== undefined) {\r\n                    filteredArray.unshift(captionPlaceholder);\r\n                }\r\n            }\r\n        } else {\r\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\r\n        }\r\n\r\n        function applyToObject(object, predicate, defaultValue) {\r\n            var predicateType = typeof predicate;\r\n            if (predicateType == \"function\")    // Given a function; run it against the data value\r\n                return predicate(object);\r\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\r\n                return object[predicate];\r\n            else                                // Given no optionsText arg; use the data value itself\r\n                return defaultValue;\r\n        }\r\n\r\n        // The following functions can run at two different times:\r\n        // The first is when the whole array is being updated directly from this binding handler.\r\n        // The second is when an observable value for a specific array entry is updated.\r\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\r\n        var itemUpdate = false;\r\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\r\n            if (oldOptions.length) {\r\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\r\n                itemUpdate = true;\r\n            }\r\n            var option = element.ownerDocument.createElement(\"option\");\r\n            if (arrayEntry === captionPlaceholder) {\r\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                ko.selectExtensions.writeValue(option, undefined);\r\n            } else {\r\n                // Apply a value to the option element\r\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\r\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\r\n\r\n                // Apply some text to the option element\r\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\r\n                ko.utils.setTextContent(option, optionText);\r\n            }\r\n            return [option];\r\n        }\r\n\r\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\r\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\r\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\r\n            function (option) {\r\n                element.removeChild(option);\r\n            };\r\n\r\n        function setSelectionCallback(arrayEntry, newOptions) {\r\n            if (itemUpdate && valueAllowUnset) {\r\n                // The model value is authoritative, so make sure its value is the one selected\r\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\r\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n            } else if (previousSelectedValues.length) {\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\r\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\r\n\r\n                // If this option was changed from being selected during a single-item update, notify the change\r\n                if (itemUpdate && !isSelected) {\r\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var callback = setSelectionCallback;\r\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\r\n            callback = function(arrayEntry, newOptions) {\r\n                setSelectionCallback(arrayEntry, newOptions);\r\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\r\n            }\r\n        }\r\n\r\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\r\n\r\n        ko.dependencyDetection.ignore(function () {\r\n            if (valueAllowUnset) {\r\n                // The model value is authoritative, so make sure its value is the one selected\r\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n            } else {\r\n                // Determine if the selection has changed as a result of updating the options list\r\n                var selectionChanged;\r\n                if (multiple) {\r\n                    // For a multiple-select box, compare the new selection count to the previous one\r\n                    // But if nothing was selected before, the selection can't have changed\r\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\r\n                } else {\r\n                    // For a single-select box, compare the current value to the previous value\r\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\r\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\r\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\r\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\r\n                }\r\n\r\n                // Ensure consistency between model value and selected option.\r\n                // If the dropdown was changed so that selection is no longer the same,\r\n                // notify the value or selectedOptions binding.\r\n                if (selectionChanged) {\r\n                    ko.utils.triggerEvent(element, \"change\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Workaround for IE bug\r\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\r\n\r\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\r\n            element.scrollTop = previousScrollTop;\r\n    }\r\n};\r\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\r\nko.bindingHandlers['selectedOptions'] = {\r\n    'after': ['options', 'foreach'],\r\n    'init': function (element, valueAccessor, allBindings) {\r\n        ko.utils.registerEventHandler(element, \"change\", function () {\r\n            var value = valueAccessor(), valueToWrite = [];\r\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                if (node.selected)\r\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\r\n            });\r\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\r\n        });\r\n    },\r\n    'update': function (element, valueAccessor) {\r\n        if (ko.utils.tagNameLower(element) != \"select\")\r\n            throw new Error(\"values binding applies only to SELECT elements\");\r\n\r\n        var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n        if (newValue && typeof newValue.length == \"number\") {\r\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\r\n                ko.utils.setOptionNodeSelectionState(node, isSelected);\r\n            });\r\n        }\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\r\nko.bindingHandlers['style'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\r\n            styleValue = ko.utils.unwrapObservable(styleValue);\r\n\r\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\r\n                // Empty string removes the value, whereas null/undefined have no effect\r\n                styleValue = \"\";\r\n            }\r\n\r\n            element.style[styleName] = styleValue;\r\n        });\r\n    }\r\n};\r\nko.bindingHandlers['submit'] = {\r\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        if (typeof valueAccessor() != \"function\")\r\n            throw new Error(\"The value for a submit binding must be a function\");\r\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\r\n            var handlerReturnValue;\r\n            var value = valueAccessor();\r\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\r\n            finally {\r\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                    if (event.preventDefault)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nko.bindingHandlers['text'] = {\r\n    'init': function() {\r\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\r\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\r\n        return { 'controlsDescendantBindings': true };\r\n    },\r\n    'update': function (element, valueAccessor) {\r\n        ko.utils.setTextContent(element, valueAccessor());\r\n    }\r\n};\r\nko.virtualElements.allowedBindings['text'] = true;\r\n(function () {\r\n\r\nif (window && window.navigator) {\r\n    var parseVersion = function (matches) {\r\n        if (matches) {\r\n            return parseFloat(matches[1]);\r\n        }\r\n    };\r\n\r\n    // Detect various browser versions because some old versions don't fully support the 'input' event\r\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\r\n        userAgent = window.navigator.userAgent,\r\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\r\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\r\n}\r\n\r\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\r\n// But it does fire the 'selectionchange' event on many of those, presumably because the\r\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\r\n// fired at the document level only and doesn't directly indicate which element changed. We\r\n// set up just one event handler for the document and use 'activeElement' to determine which\r\n// element was changed.\r\nif (ko.utils.ieVersion < 10) {\r\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\r\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\r\n    var selectionChangeHandler = function(event) {\r\n        var target = this.activeElement,\r\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\r\n        if (handler) {\r\n            handler(event);\r\n        }\r\n    };\r\n    var registerForSelectionChangeEvent = function (element, handler) {\r\n        var ownerDoc = element.ownerDocument;\r\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\r\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\r\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\r\n        }\r\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\r\n    };\r\n}\r\n\r\nko.bindingHandlers['textInput'] = {\r\n    'init': function (element, valueAccessor, allBindings) {\r\n\r\n        var previousElementValue = element.value,\r\n            timeoutHandle,\r\n            elementValueBeforeEvent;\r\n\r\n        var updateModel = function (event) {\r\n            clearTimeout(timeoutHandle);\r\n            elementValueBeforeEvent = timeoutHandle = undefined;\r\n\r\n            var elementValue = element.value;\r\n            if (previousElementValue !== elementValue) {\r\n                // Provide a way for tests to know exactly which event was processed\r\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\r\n                previousElementValue = elementValue;\r\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\r\n            }\r\n        };\r\n\r\n        var deferUpdateModel = function (event) {\r\n            if (!timeoutHandle) {\r\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\r\n                // event firing and the updateModel function running. This allows us to ignore model\r\n                // updates that are from the previous state of the element, usually due to techniques\r\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\r\n                elementValueBeforeEvent = element.value;\r\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\r\n                timeoutHandle = setTimeout(handler, 4);\r\n            }\r\n        };\r\n\r\n        var updateView = function () {\r\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n            if (modelValue === null || modelValue === undefined) {\r\n                modelValue = '';\r\n            }\r\n\r\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\r\n                setTimeout(updateView, 4);\r\n                return;\r\n            }\r\n\r\n            // Update the element only if the element and model are different. On some browsers, updating the value\r\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\r\n            if (element.value !== modelValue) {\r\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\r\n                element.value = modelValue;\r\n            }\r\n        };\r\n\r\n        var onEvent = function (event, handler) {\r\n            ko.utils.registerEventHandler(element, event, handler);\r\n        };\r\n\r\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\r\n            // Provide a way for tests to specify exactly which events are bound\r\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\r\n                if (eventName.slice(0,5) == 'after') {\r\n                    onEvent(eventName.slice(5), deferUpdateModel);\r\n                } else {\r\n                    onEvent(eventName, updateModel);\r\n                }\r\n            });\r\n        } else {\r\n            if (ko.utils.ieVersion < 10) {\r\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\r\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\r\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\r\n                // when using autocomplete, we'll use 'propertychange' for it also.\r\n                onEvent('propertychange', function(event) {\r\n                    if (event.propertyName === 'value') {\r\n                        updateModel(event);\r\n                    }\r\n                });\r\n\r\n                if (ko.utils.ieVersion == 8) {\r\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\r\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\r\n                    // events too.\r\n                    onEvent('keyup', updateModel);      // A single keystoke\r\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\r\n                }\r\n                if (ko.utils.ieVersion >= 8) {\r\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\r\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\r\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\r\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\r\n                    // These are also needed in IE8 because of the bug described above.\r\n                    registerForSelectionChangeEvent(element, updateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\r\n                    onEvent('dragend', deferUpdateModel);\r\n                }\r\n            } else {\r\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\r\n                // through the user interface.\r\n                onEvent('input', updateModel);\r\n\r\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\r\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\r\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\r\n                    onEvent('keydown', deferUpdateModel);\r\n                    onEvent('paste', deferUpdateModel);\r\n                    onEvent('cut', deferUpdateModel);\r\n                } else if (operaVersion < 11) {\r\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\r\n                    // We can try to catch some of those using 'keydown'.\r\n                    onEvent('keydown', deferUpdateModel);\r\n                } else if (firefoxVersion < 4.0) {\r\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\r\n                    onEvent('DOMAutoComplete', updateModel);\r\n\r\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\r\n                    onEvent('dragdrop', updateModel);       // <3.5\r\n                    onEvent('drop', updateModel);           // 3.5\r\n                }\r\n            }\r\n        }\r\n\r\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\r\n        onEvent('change', updateModel);\r\n\r\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n    }\r\n};\r\nko.expressionRewriting.twoWayBindings['textInput'] = true;\r\n\r\n// textinput is an alias for textInput\r\nko.bindingHandlers['textinput'] = {\r\n    // preprocess is the only way to set up a full alias\r\n    'preprocess': function (value, name, addBinding) {\r\n        addBinding('textInput', value);\r\n    }\r\n};\r\n\r\n})();ko.bindingHandlers['uniqueName'] = {\r\n    'init': function (element, valueAccessor) {\r\n        if (valueAccessor()) {\r\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\r\n            ko.utils.setElementName(element, name);\r\n        }\r\n    }\r\n};\r\nko.bindingHandlers['uniqueName'].currentIndex = 0;\r\nko.bindingHandlers['value'] = {\r\n    'after': ['options', 'foreach'],\r\n    'init': function (element, valueAccessor, allBindings) {\r\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\r\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\r\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\r\n            return;\r\n        }\r\n\r\n        // Always catch \"change\" event; possibly other events too if asked\r\n        var eventsToCatch = [\"change\"];\r\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\r\n        var propertyChangedFired = false;\r\n        var elementValueBeforeEvent = null;\r\n\r\n        if (requestedEventsToCatch) {\r\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\r\n                requestedEventsToCatch = [requestedEventsToCatch];\r\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\r\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\r\n        }\r\n\r\n        var valueUpdateHandler = function() {\r\n            elementValueBeforeEvent = null;\r\n            propertyChangedFired = false;\r\n            var modelValue = valueAccessor();\r\n            var elementValue = ko.selectExtensions.readValue(element);\r\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\r\n        }\r\n\r\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\r\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\r\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\r\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\r\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\r\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\r\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\r\n            ko.utils.registerEventHandler(element, \"blur\", function() {\r\n                if (propertyChangedFired) {\r\n                    valueUpdateHandler();\r\n                }\r\n            });\r\n        }\r\n\r\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\r\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\r\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\r\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\r\n            var handler = valueUpdateHandler;\r\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\r\n                handler = function() {\r\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\r\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\r\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\r\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\r\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\r\n                    // techniques like rateLimit can trigger model changes at critical moments that will\r\n                    // override the user's inputs, causing keystrokes to be lost.\r\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\r\n                    setTimeout(valueUpdateHandler, 0);\r\n                };\r\n                eventName = eventName.substring(\"after\".length);\r\n            }\r\n            ko.utils.registerEventHandler(element, eventName, handler);\r\n        });\r\n\r\n        var updateFromModel = function () {\r\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n            var elementValue = ko.selectExtensions.readValue(element);\r\n\r\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\r\n                setTimeout(updateFromModel, 0);\r\n                return;\r\n            }\r\n\r\n            var valueHasChanged = (newValue !== elementValue);\r\n\r\n            if (valueHasChanged) {\r\n                if (ko.utils.tagNameLower(element) === \"select\") {\r\n                    var allowUnset = allBindings.get('valueAllowUnset');\r\n                    var applyValueAction = function () {\r\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\r\n                    };\r\n                    applyValueAction();\r\n\r\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\r\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\r\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                    } else {\r\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\r\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\r\n                        // to apply the value as well.\r\n                        setTimeout(applyValueAction, 0);\r\n                    }\r\n                } else {\r\n                    ko.selectExtensions.writeValue(element, newValue);\r\n                }\r\n            }\r\n        };\r\n\r\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\r\n    },\r\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\r\n};\r\nko.expressionRewriting.twoWayBindings['value'] = true;\r\nko.bindingHandlers['visible'] = {\r\n    'update': function (element, valueAccessor) {\r\n        var value = ko.utils.unwrapObservable(valueAccessor());\r\n        var isCurrentlyVisible = !(element.style.display == \"none\");\r\n        if (value && !isCurrentlyVisible)\r\n            element.style.display = \"\";\r\n        else if ((!value) && isCurrentlyVisible)\r\n            element.style.display = \"none\";\r\n    }\r\n};\r\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\r\nmakeEventHandlerShortcut('click');\r\n// If you want to make a custom template engine,\r\n//\r\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\r\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\r\n//\r\n//        function (templateSource, bindingContext, options) {\r\n//            // - templateSource.text() is the text of the template you should render\r\n//            // - bindingContext.$data is the data you should pass into the template\r\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\r\n//            //     and bindingContext.$root available in the template too\r\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\r\n//            // - templateDocument is the document object of the template\r\n//            //\r\n//            // Return value: an array of DOM nodes\r\n//        }\r\n//\r\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\r\n//\r\n//        function (script) {\r\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\r\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\r\n//        }\r\n//\r\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\r\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\r\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\r\n\r\nko.templateEngine = function () { };\r\n\r\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n    throw new Error(\"Override renderTemplateSource\");\r\n};\r\n\r\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\r\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\r\n};\r\n\r\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\r\n    // Named template\r\n    if (typeof template == \"string\") {\r\n        templateDocument = templateDocument || document;\r\n        var elem = templateDocument.getElementById(template);\r\n        if (!elem)\r\n            throw new Error(\"Cannot find template with ID \" + template);\r\n        return new ko.templateSources.domElement(elem);\r\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\r\n        // Anonymous template\r\n        return new ko.templateSources.anonymousTemplate(template);\r\n    } else\r\n        throw new Error(\"Unknown template type: \" + template);\r\n};\r\n\r\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\r\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\r\n};\r\n\r\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\r\n    // Skip rewriting if requested\r\n    if (this['allowTemplateRewriting'] === false)\r\n        return true;\r\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\r\n};\r\n\r\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\r\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n    var rewritten = rewriterCallback(templateSource['text']());\r\n    templateSource['text'](rewritten);\r\n    templateSource['data'](\"isRewritten\", true);\r\n};\r\n\r\nko.exportSymbol('templateEngine', ko.templateEngine);\r\n\r\nko.templateRewriting = (function () {\r\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\r\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\r\n\r\n    function validateDataBindValuesForRewriting(keyValueArray) {\r\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\r\n        for (var i = 0; i < keyValueArray.length; i++) {\r\n            var key = keyValueArray[i]['key'];\r\n            if (allValidators.hasOwnProperty(key)) {\r\n                var validator = allValidators[key];\r\n\r\n                if (typeof validator === \"function\") {\r\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\r\n                    if (possibleErrorMessage)\r\n                        throw new Error(possibleErrorMessage);\r\n                } else if (!validator) {\r\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\r\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\r\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\r\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\r\n\r\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\r\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\r\n        // extra indirection.\r\n        var applyBindingsToNextSiblingScript =\r\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\r\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\r\n    }\r\n\r\n    return {\r\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\r\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\r\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\r\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\r\n                }, templateDocument);\r\n        },\r\n\r\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\r\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\r\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\r\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\r\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\r\n            });\r\n        },\r\n\r\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\r\n            return ko.memoization.memoize(function (domNode, bindingContext) {\r\n                var nodeToBind = domNode.nextSibling;\r\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\r\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n// Exported only because it has to be referenced by string lookup from within rewritten template\r\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\r\n(function() {\r\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\r\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\r\n    //\r\n    // Two are provided by default:\r\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\r\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\r\n    //                                           without reading/writing the actual element text content, since it will be overwritten\r\n    //                                           with the rendered template output.\r\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\r\n    // Template sources need to have the following functions:\r\n    //   text()             - returns the template text from your storage location\r\n    //   text(value)        - writes the supplied template text to your storage location\r\n    //   data(key)          - reads values stored using data(key, value) - see below\r\n    //   data(key, value)   - associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\r\n    //\r\n    // Optionally, template sources can also have the following functions:\r\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\r\n    //   nodes(value)       - writes the given DOM element to your storage location\r\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\r\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\r\n    //\r\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\r\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\r\n\r\n    ko.templateSources = {};\r\n\r\n    // ---- ko.templateSources.domElement -----\r\n\r\n    ko.templateSources.domElement = function(element) {\r\n        this.domElement = element;\r\n    }\r\n\r\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\r\n        var tagNameLower = ko.utils.tagNameLower(this.domElement),\r\n            elemContentsProperty = tagNameLower === \"script\" ? \"text\"\r\n                                 : tagNameLower === \"textarea\" ? \"value\"\r\n                                 : \"innerHTML\";\r\n\r\n        if (arguments.length == 0) {\r\n            return this.domElement[elemContentsProperty];\r\n        } else {\r\n            var valueToWrite = arguments[0];\r\n            if (elemContentsProperty === \"innerHTML\")\r\n                ko.utils.setHtml(this.domElement, valueToWrite);\r\n            else\r\n                this.domElement[elemContentsProperty] = valueToWrite;\r\n        }\r\n    };\r\n\r\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\r\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\r\n        if (arguments.length === 1) {\r\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\r\n        } else {\r\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\r\n        }\r\n    };\r\n\r\n    // ---- ko.templateSources.anonymousTemplate -----\r\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\r\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\r\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\r\n\r\n    var anonymousTemplatesDomDataKey = ko.utils.domData.nextKey();\r\n    ko.templateSources.anonymousTemplate = function(element) {\r\n        this.domElement = element;\r\n    }\r\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\r\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\r\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\r\n        if (arguments.length == 0) {\r\n            var templateData = ko.utils.domData.get(this.domElement, anonymousTemplatesDomDataKey) || {};\r\n            if (templateData.textData === undefined && templateData.containerData)\r\n                templateData.textData = templateData.containerData.innerHTML;\r\n            return templateData.textData;\r\n        } else {\r\n            var valueToWrite = arguments[0];\r\n            ko.utils.domData.set(this.domElement, anonymousTemplatesDomDataKey, {textData: valueToWrite});\r\n        }\r\n    };\r\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\r\n        if (arguments.length == 0) {\r\n            var templateData = ko.utils.domData.get(this.domElement, anonymousTemplatesDomDataKey) || {};\r\n            return templateData.containerData;\r\n        } else {\r\n            var valueToWrite = arguments[0];\r\n            ko.utils.domData.set(this.domElement, anonymousTemplatesDomDataKey, {containerData: valueToWrite});\r\n        }\r\n    };\r\n\r\n    ko.exportSymbol('templateSources', ko.templateSources);\r\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\r\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\r\n})();\r\n(function () {\r\n    var _templateEngine;\r\n    ko.setTemplateEngine = function (templateEngine) {\r\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\r\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\r\n        _templateEngine = templateEngine;\r\n    }\r\n\r\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\r\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\r\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\r\n            nextInQueue = ko.virtualElements.nextSibling(node);\r\n            action(node, nextInQueue);\r\n        }\r\n    }\r\n\r\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\r\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\r\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\r\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\r\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\r\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\r\n\r\n        if (continuousNodeArray.length) {\r\n            var firstNode = continuousNodeArray[0],\r\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\r\n                parentNode = firstNode.parentNode,\r\n                provider = ko.bindingProvider['instance'],\r\n                preprocessNode = provider['preprocessNode'];\r\n\r\n            if (preprocessNode) {\r\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\r\n                    var nodePreviousSibling = node.previousSibling;\r\n                    var newNodes = preprocessNode.call(provider, node);\r\n                    if (newNodes) {\r\n                        if (node === firstNode)\r\n                            firstNode = newNodes[0] || nextNodeInRange;\r\n                        if (node === lastNode)\r\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\r\n                    }\r\n                });\r\n\r\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\r\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\r\n                // first node needs to be in the array).\r\n                continuousNodeArray.length = 0;\r\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\r\n                    return;\r\n                }\r\n                if (firstNode === lastNode) {\r\n                    continuousNodeArray.push(firstNode);\r\n                } else {\r\n                    continuousNodeArray.push(firstNode, lastNode);\r\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n                }\r\n            }\r\n\r\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\r\n            // whereas a regular applyBindings won't introduce new memoized nodes\r\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                if (node.nodeType === 1 || node.nodeType === 8)\r\n                    ko.applyBindings(bindingContext, node);\r\n            });\r\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                if (node.nodeType === 1 || node.nodeType === 8)\r\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\r\n            });\r\n\r\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\r\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n        }\r\n    }\r\n\r\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\r\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\r\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\r\n                                        : null;\r\n    }\r\n\r\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\r\n        options = options || {};\r\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\r\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\r\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\r\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\r\n\r\n        // Loosely check result is an array of DOM nodes\r\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\r\n            throw new Error(\"Template engine must return an array of DOM nodes\");\r\n\r\n        var haveAddedNodesToParent = false;\r\n        switch (renderMode) {\r\n            case \"replaceChildren\":\r\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\r\n                haveAddedNodesToParent = true;\r\n                break;\r\n            case \"replaceNode\":\r\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\r\n                haveAddedNodesToParent = true;\r\n                break;\r\n            case \"ignoreTargetNode\": break;\r\n            default:\r\n                throw new Error(\"Unknown renderMode: \" + renderMode);\r\n        }\r\n\r\n        if (haveAddedNodesToParent) {\r\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\r\n            if (options['afterRender'])\r\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\r\n        }\r\n\r\n        return renderedNodesArray;\r\n    }\r\n\r\n    function resolveTemplateName(template, data, context) {\r\n        // The template can be specified as:\r\n        if (ko.isObservable(template)) {\r\n            // 1. An observable, with string value\r\n            return template();\r\n        } else if (typeof template === 'function') {\r\n            // 2. A function of (data, context) returning a string\r\n            return template(data, context);\r\n        } else {\r\n            // 3. A string\r\n            return template;\r\n        }\r\n    }\r\n\r\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\r\n        options = options || {};\r\n        if ((options['templateEngine'] || _templateEngine) == undefined)\r\n            throw new Error(\"Set a template engine before calling renderTemplate\");\r\n        renderMode = renderMode || \"replaceChildren\";\r\n\r\n        if (targetNodeOrNodeArray) {\r\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n\r\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\r\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\r\n\r\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\r\n                function () {\r\n                    // Ensure we've got a proper binding context to work with\r\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\r\n                        ? dataOrBindingContext\r\n                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\r\n\r\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\r\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\r\n\r\n                    if (renderMode == \"replaceNode\") {\r\n                        targetNodeOrNodeArray = renderedNodesArray;\r\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n                    }\r\n                },\r\n                null,\r\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\r\n            );\r\n        } else {\r\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\r\n            return ko.memoization.memoize(function (domNode) {\r\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\r\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\r\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\r\n        var arrayItemContext;\r\n\r\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\r\n        var executeTemplateForArrayItem = function (arrayValue, index) {\r\n            // Support selecting template as a function of the data being rendered\r\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\r\n                context['$index'] = index;\r\n            });\r\n\r\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\r\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\r\n        }\r\n\r\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\r\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\r\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\r\n            if (options['afterRender'])\r\n                options['afterRender'](addedNodesArray, arrayValue);\r\n\r\n            // release the \"cache\" variable, so that it can be collected by\r\n            // the GC when its value isn't used from within the bindings anymore.\r\n            arrayItemContext = null;\r\n        };\r\n\r\n        return ko.dependentObservable(function () {\r\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\r\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                unwrappedArray = [unwrappedArray];\r\n\r\n            // Filter out any entries marked as destroyed\r\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n            });\r\n\r\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\r\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\r\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\r\n\r\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\r\n    };\r\n\r\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\r\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\r\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\r\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\r\n            oldComputed.dispose();\r\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\r\n    }\r\n\r\n    ko.bindingHandlers['template'] = {\r\n        'init': function(element, valueAccessor) {\r\n            // Support anonymous templates\r\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\r\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\r\n                // It's a named template - clear the element\r\n                ko.virtualElements.emptyNode(element);\r\n            } else if ('nodes' in bindingValue) {\r\n                // We've been given an array of DOM nodes. Save them as the template source.\r\n                // There is no known use case for the node array being an observable array (if the output\r\n                // varies, put that behavior *into* your template - that's what templates are for), and\r\n                // the implementation would be a mess, so assert that it's not observable.\r\n                var nodes = bindingValue['nodes'] || [];\r\n                if (ko.isObservable(nodes)) {\r\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\r\n                }\r\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\r\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n            } else {\r\n                // It's an anonymous template - store the element contents, then clear the element\r\n                var templateNodes = ko.virtualElements.childNodes(element),\r\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\r\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n            }\r\n            return { 'controlsDescendantBindings': true };\r\n        },\r\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var value = valueAccessor(),\r\n                dataValue,\r\n                options = ko.utils.unwrapObservable(value),\r\n                shouldDisplay = true,\r\n                templateComputed = null,\r\n                templateName;\r\n\r\n            if (typeof options == \"string\") {\r\n                templateName = value;\r\n                options = {};\r\n            } else {\r\n                templateName = options['name'];\r\n\r\n                // Support \"if\"/\"ifnot\" conditions\r\n                if ('if' in options)\r\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\r\n                if (shouldDisplay && 'ifnot' in options)\r\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\r\n\r\n                dataValue = ko.utils.unwrapObservable(options['data']);\r\n            }\r\n\r\n            if ('foreach' in options) {\r\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\r\n                var dataArray = (shouldDisplay && options['foreach']) || [];\r\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\r\n            } else if (!shouldDisplay) {\r\n                ko.virtualElements.emptyNode(element);\r\n            } else {\r\n                // Render once for this single data point (or use the viewModel if no data was provided)\r\n                var innerBindingContext = ('data' in options) ?\r\n                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\r\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\r\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\r\n            }\r\n\r\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\r\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\r\n        }\r\n    };\r\n\r\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\r\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\r\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\r\n\r\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\r\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\r\n\r\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\r\n            return null; // Named templates can be rewritten, so return \"no error\"\r\n        return \"This template engine does not support anonymous templates nested within its templates\";\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings['template'] = true;\r\n})();\r\n\r\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\r\nko.exportSymbol('renderTemplate', ko.renderTemplate);\r\n// Go through the items that have been added and deleted and try to find matches between them.\r\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\r\n    if (left.length && right.length) {\r\n        var failedCompares, l, r, leftItem, rightItem;\r\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\r\n            for (r = 0; rightItem = right[r]; ++r) {\r\n                if (leftItem['value'] === rightItem['value']) {\r\n                    leftItem['moved'] = rightItem['index'];\r\n                    rightItem['moved'] = leftItem['index'];\r\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\r\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\r\n                    break;\r\n                }\r\n            }\r\n            failedCompares += r;\r\n        }\r\n    }\r\n};\r\n\r\nko.utils.compareArrays = (function () {\r\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\r\n\r\n    // Simple calculation based on Levenshtein distance.\r\n    function compareArrays(oldArray, newArray, options) {\r\n        // For backward compatibility, if the third arg is actually a bool, interpret\r\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\r\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\r\n        oldArray = oldArray || [];\r\n        newArray = newArray || [];\r\n\r\n        if (oldArray.length <= newArray.length)\r\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\r\n        else\r\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\r\n    }\r\n\r\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\r\n        var myMin = Math.min,\r\n            myMax = Math.max,\r\n            editDistanceMatrix = [],\r\n            smlIndex, smlIndexMax = smlArray.length,\r\n            bigIndex, bigIndexMax = bigArray.length,\r\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\r\n            maxDistance = smlIndexMax + bigIndexMax + 1,\r\n            thisRow, lastRow,\r\n            bigIndexMaxForRow, bigIndexMinForRow;\r\n\r\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\r\n            lastRow = thisRow;\r\n            editDistanceMatrix.push(thisRow = []);\r\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\r\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\r\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\r\n                if (!bigIndex)\r\n                    thisRow[bigIndex] = smlIndex + 1;\r\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\r\n                    thisRow[bigIndex] = bigIndex + 1;\r\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\r\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\r\n                else {\r\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\r\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\r\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\r\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\r\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\r\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\r\n                notInSml.push(editScript[editScript.length] = {     // added\r\n                    'status': statusNotInSml,\r\n                    'value': bigArray[--bigIndex],\r\n                    'index': bigIndex });\r\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\r\n                notInBig.push(editScript[editScript.length] = {     // deleted\r\n                    'status': statusNotInBig,\r\n                    'value': smlArray[--smlIndex],\r\n                    'index': smlIndex });\r\n            } else {\r\n                --bigIndex;\r\n                --smlIndex;\r\n                if (!options['sparse']) {\r\n                    editScript.push({\r\n                        'status': \"retained\",\r\n                        'value': bigArray[bigIndex] });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\r\n        // smlIndexMax keeps the time complexity of this algorithm linear.\r\n        ko.utils.findMovesInArrayComparison(notInSml, notInBig, smlIndexMax * 10);\r\n\r\n        return editScript.reverse();\r\n    }\r\n\r\n    return compareArrays;\r\n})();\r\n\r\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\r\n(function () {\r\n    // Objective:\r\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\r\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\r\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\r\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\r\n    //   previously mapped - retain those nodes, and just insert/delete other ones\r\n\r\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\r\n    // You can use this, for example, to activate bindings on those nodes.\r\n\r\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\r\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\r\n        var mappedNodes = [];\r\n        var dependentObservable = ko.dependentObservable(function() {\r\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\r\n\r\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\r\n            if (mappedNodes.length > 0) {\r\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\r\n                if (callbackAfterAddingNodes)\r\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\r\n            }\r\n\r\n            // Replace the contents of the mappedNodes array, thereby updating the record\r\n            // of which nodes would be deleted if valueToMap was itself later removed\r\n            mappedNodes.length = 0;\r\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\r\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\r\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\r\n    }\r\n\r\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey();\r\n\r\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\r\n        // Compare the provided array against the previous one\r\n        array = array || [];\r\n        options = options || {};\r\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\r\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\r\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\r\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\r\n\r\n        // Build the new mapping result\r\n        var newMappingResult = [];\r\n        var lastMappingResultIndex = 0;\r\n        var newMappingResultIndex = 0;\r\n\r\n        var nodesToDelete = [];\r\n        var itemsToProcess = [];\r\n        var itemsForBeforeRemoveCallbacks = [];\r\n        var itemsForMoveCallbacks = [];\r\n        var itemsForAfterAddCallbacks = [];\r\n        var mapData;\r\n\r\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\r\n            mapData = lastMappingResult[oldPosition];\r\n            if (newMappingResultIndex !== oldPosition)\r\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\r\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\r\n            mapData.indexObservable(newMappingResultIndex++);\r\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\r\n            newMappingResult.push(mapData);\r\n            itemsToProcess.push(mapData);\r\n        }\r\n\r\n        function callCallback(callback, items) {\r\n            if (callback) {\r\n                for (var i = 0, n = items.length; i < n; i++) {\r\n                    if (items[i]) {\r\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\r\n                            callback(node, i, items[i].arrayEntry);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\r\n            movedIndex = editScriptItem['moved'];\r\n            switch (editScriptItem['status']) {\r\n                case \"deleted\":\r\n                    if (movedIndex === undefined) {\r\n                        mapData = lastMappingResult[lastMappingResultIndex];\r\n\r\n                        // Stop tracking changes to the mapping for these nodes\r\n                        if (mapData.dependentObservable)\r\n                            mapData.dependentObservable.dispose();\r\n\r\n                        // Queue these nodes for later removal\r\n                        nodesToDelete.push.apply(nodesToDelete, ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode));\r\n                        if (options['beforeRemove']) {\r\n                            itemsForBeforeRemoveCallbacks[i] = mapData;\r\n                            itemsToProcess.push(mapData);\r\n                        }\r\n                    }\r\n                    lastMappingResultIndex++;\r\n                    break;\r\n\r\n                case \"retained\":\r\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\r\n                    break;\r\n\r\n                case \"added\":\r\n                    if (movedIndex !== undefined) {\r\n                        itemMovedOrRetained(i, movedIndex);\r\n                    } else {\r\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\r\n                        newMappingResult.push(mapData);\r\n                        itemsToProcess.push(mapData);\r\n                        if (!isFirstExecution)\r\n                            itemsForAfterAddCallbacks[i] = mapData;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Call beforeMove first before any changes have been made to the DOM\r\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\r\n\r\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\r\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\r\n\r\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\r\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\r\n            // Get nodes for newly added items\r\n            if (!mapData.mappedNodes)\r\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\r\n\r\n            // Put nodes in the right place if they aren't there already\r\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\r\n                if (node !== nextNode)\r\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\r\n            }\r\n\r\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\r\n            if (!mapData.initialized && callbackAfterAddingNodes) {\r\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\r\n                mapData.initialized = true;\r\n            }\r\n        }\r\n\r\n        // If there's a beforeRemove callback, call it after reordering.\r\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\r\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\r\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\r\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\r\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\r\n\r\n        // Finally call afterMove and afterAdd callbacks\r\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\r\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\r\n\r\n        // Store a copy of the array items we just considered so we can difference it next time\r\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\r\n    }\r\n})();\r\n\r\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\r\nko.nativeTemplateEngine = function () {\r\n    this['allowTemplateRewriting'] = false;\r\n}\r\n\r\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\r\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\r\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\r\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\r\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\r\n\r\n    if (templateNodes) {\r\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\r\n    } else {\r\n        var templateText = templateSource['text']();\r\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\r\n    }\r\n};\r\n\r\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\r\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\r\n\r\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\r\n(function() {\r\n    ko.jqueryTmplTemplateEngine = function () {\r\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\r\n        // doesn't expose a version number, so we have to infer it.\r\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\r\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\r\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\r\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\r\n                return 0;\r\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\r\n            try {\r\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\r\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\r\n                    return 2; // Final version of jquery.tmpl\r\n                }\r\n            } catch(ex) { /* Apparently not the version we were looking for */ }\r\n\r\n            return 1; // Any older version that we don't support\r\n        })();\r\n\r\n        function ensureHasReferencedJQueryTemplates() {\r\n            if (jQueryTmplVersion < 2)\r\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\r\n        }\r\n\r\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\r\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\r\n        }\r\n\r\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\r\n            templateDocument = templateDocument || document;\r\n            options = options || {};\r\n            ensureHasReferencedJQueryTemplates();\r\n\r\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\r\n            var precompiled = templateSource['data']('precompiled');\r\n            if (!precompiled) {\r\n                var templateText = templateSource['text']() || \"\";\r\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\r\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\r\n\r\n                precompiled = jQueryInstance['template'](null, templateText);\r\n                templateSource['data']('precompiled', precompiled);\r\n            }\r\n\r\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\r\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\r\n\r\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\r\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\r\n\r\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\r\n            return resultNodes;\r\n        };\r\n\r\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\r\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\r\n        };\r\n\r\n        this['addTemplate'] = function(templateName, templateMarkup) {\r\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\r\n        };\r\n\r\n        if (jQueryTmplVersion > 0) {\r\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\r\n                open: \"__.push($1 || '');\"\r\n            };\r\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\r\n                open: \"with($1) {\",\r\n                close: \"} \"\r\n            };\r\n        }\r\n    };\r\n\r\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\r\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\r\n\r\n    // Use this one by default *only if jquery.tmpl is referenced*\r\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\r\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\r\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\r\n\r\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\r\n})();\r\n}));\r\n}());\r\n})();\r\n","mage/tabs.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\",\r\n    \"mage/mage\",\r\n    \"mage/collapsible\"\r\n], function($){\r\n    \"use strict\";\r\n        \r\n    $.widget(\"mage.tabs\", {\r\n        options: {\r\n            active: 0,\r\n            disabled: [],\r\n            openOnFocus: true,\r\n            collapsible: false,\r\n            collapsibleElement: \"[data-role=collapsible]\",\r\n            header: \"[data-role=title]\",\r\n            content: \"[data-role=content]\",\r\n            trigger: \"[data-role=trigger]\",\r\n            closedState: null,\r\n            openedState: null,\r\n            disabledState: null,\r\n            ajaxUrlElement: \"[data-ajax=true]\",\r\n            ajaxContent: false,\r\n            loadingClass: null,\r\n            saveState: false,\r\n            animate: false,\r\n            icons: {\r\n                activeHeader: null,\r\n                header: null\r\n            }\r\n        },\r\n\r\n        _create : function () {\r\n            if((typeof this.options.disabled) === \"string\") {\r\n                this.options.disabled = this.options.disabled.split(\" \").map(function(item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n            }\r\n            this._processPanels();\r\n\r\n            this._handleDeepLinking();\r\n\r\n            this._processTabIndex();\r\n\r\n            this._closeOthers();\r\n\r\n            this._bind();\r\n        },\r\n\r\n        _destroy: function() {\r\n            $.each(this.collapsibles, function() {\r\n                $(this).collapsible(\"destroy\");\r\n            });\r\n        },\r\n\r\n        /**\r\n         * If deep linking is used, all sections must be closed but the one that contains the anchor.\r\n         * @private\r\n         */\r\n        _handleDeepLinking: function() {\r\n            var self = this,\r\n                anchor = window.location.hash,\r\n                isValid = $.mage.isValidSelector(anchor),\r\n                anchorId = anchor.replace(\"#\",\"\");\r\n\r\n            if (anchor && isValid) {\r\n                $.each(self.contents,function(i) {\r\n                    if($(this).attr(\"id\") === anchorId) {\r\n                        self.collapsibles.not(self.collapsibles.eq(i)).collapsible(\"forceDeactivate\");\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * When the widget gets instantiated, the first tab that is not disabled receive focusable property\r\n         * Updated: for accessibility all tabs receive tabIndex 0\r\n         * @private\r\n         */\r\n        _processTabIndex: function() {\r\n            var self = this;\r\n            self.triggers.attr(\"tabIndex\",0);\r\n            $.each(this.collapsibles, function(i) {\r\n                if(!$(this).collapsible(\"option\",\"disabled\")) {\r\n                    self.triggers.eq(i).attr(\"tabIndex\", 0);\r\n                    return false;\r\n                }\r\n            });\r\n            $.each(this.collapsibles, function(i) {\r\n                $(this).on(\"beforeOpen\", function () {\r\n                    self.triggers.attr(\"tabIndex\",0);\r\n                    self.triggers.eq(i).attr(\"tabIndex\",0);\r\n\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Prepare the elements for instantiating the collapsible widget\r\n         * @private\r\n         */\r\n        _processPanels: function() {\r\n            this.contents = this.element.find(this.options.content);\r\n\r\n            this.collapsibles = this.element.find(this.options.collapsibleElement);\r\n\r\n            this.collapsibles\r\n                .attr('role', 'presentation')\r\n                .parent()\r\n                .attr('role', 'tablist');\r\n\r\n            this.headers = this.element.find(this.options.header);\r\n            if (this.headers.length === 0) {\r\n                this.headers = this.collapsibles;\r\n            }\r\n            this.triggers = this.element.find(this.options.trigger);\r\n            if (this.triggers.length === 0) {\r\n                this.triggers = this.headers;\r\n            }\r\n            this._callCollapsible();\r\n        },\r\n\r\n        /**\r\n         * Setting the disabled and active tabs and calling instantiation of collapsible\r\n         * @private\r\n         */\r\n        _callCollapsible: function() {\r\n            var self = this,\r\n                disabled = false,\r\n                active = false;\r\n\r\n            $.each(this.collapsibles, function(i) {\r\n                disabled = active = false;\r\n                if($.inArray(i,self.options.disabled) !== -1) {\r\n                    disabled = true;\r\n                }\r\n                if(i === self.options.active) {\r\n                    active = true;\r\n                }\r\n                self._instantiateCollapsible(this,i,active,disabled);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Instantiate collapsible\r\n         * @param element\r\n         * @param index\r\n         * @param active\r\n         * @param disabled\r\n         * @private\r\n         */\r\n        _instantiateCollapsible: function(element,index,active,disabled) {\r\n            $(element).collapsible(\r\n                $.extend({}, this.options, {\r\n                    active: active,\r\n                    disabled: disabled,\r\n                    header: this.headers.eq(index),\r\n                    content: this.contents.eq(index),\r\n                    trigger: this.triggers.eq(index)}\r\n                ));\r\n        },\r\n\r\n        /**\r\n         * Adding callback to close others tabs when one gets opened\r\n         * @private\r\n         */\r\n        _closeOthers: function() {\r\n            var self = this;\r\n            $.each(this.collapsibles, function() {\r\n                $(this).on(\"beforeOpen\", function () {\r\n                    self.collapsibles.not(this).collapsible(\"forceDeactivate\");\r\n                });\r\n            });\r\n        },\r\n\r\n        activate: function(index) {\r\n            this._toggleActivate(\"activate\",index);\r\n        },\r\n\r\n        deactivate: function(index) {\r\n            this._toggleActivate(\"deactivate\",index);\r\n        },\r\n\r\n        _toggleActivate: function(action,index) {\r\n            this.collapsibles.eq(index).collapsible(action);\r\n        },\r\n\r\n        disable: function(index) {\r\n            this._toggleEnable(\"disable\",index);\r\n        },\r\n\r\n        enable: function(index) {\r\n            this._toggleEnable(\"enable\",index);\r\n        },\r\n\r\n        _toggleEnable: function(action,index) {\r\n            if($.isArray( index )) {\r\n                var self = this;\r\n                $.each(index, function() {\r\n                    self.collapsibles.eq(this).collapsible(action);\r\n                });\r\n            } else if(index === undefined) {\r\n                this.collapsibles.collapsible(action);\r\n            } else {\r\n                this.collapsibles.eq(index).collapsible(action);\r\n            }\r\n        },\r\n\r\n        _keydown: function( event ) {\r\n            if ( event.altKey || event.ctrlKey ) {\r\n                return;\r\n            }\r\n            var keyCode = $.ui.keyCode,\r\n                toFocus = false,\r\n                toFocusIndex,\r\n                enabledTriggers = [],\r\n                length,\r\n                currentIndex,\r\n                self = this;\r\n\r\n            $.each(this.triggers, function() {\r\n                if(!self.collapsibles.eq(self.triggers.index($(this))).collapsible(\"option\",\"disabled\")) {\r\n                    enabledTriggers.push(this);\r\n                }\r\n            });\r\n            length = $(enabledTriggers).length;\r\n            currentIndex = $(enabledTriggers).index(event.target);\r\n            var nextToFocus = function(direction) {\r\n                if(length > 0) {\r\n                    if(direction === \"right\") {\r\n                        toFocusIndex = (currentIndex + 1) % length;\r\n                    } else {\r\n                        toFocusIndex = (currentIndex + length - 1) % length;\r\n                    }\r\n                    return enabledTriggers[toFocusIndex];\r\n                }\r\n                else return event.target;\r\n            };\r\n\r\n            switch ( event.keyCode ) {\r\n                case keyCode.RIGHT:\r\n                case keyCode.DOWN:\r\n                    toFocus = nextToFocus(\"right\");\r\n                    break;\r\n                case keyCode.LEFT:\r\n                case keyCode.UP:\r\n                    toFocus = nextToFocus(\"left\");\r\n                    break;\r\n                case keyCode.HOME:\r\n                    toFocus = enabledTriggers[0];\r\n                    break;\r\n                case keyCode.END:\r\n                    toFocus = enabledTriggers[length - 1];\r\n                    break;\r\n            }\r\n\r\n            if ( toFocus ) {\r\n                toFocusIndex = this.triggers.index(toFocus);\r\n                $( event.target ).attr( \"tabIndex\", -1 );\r\n                $( toFocus ).attr( \"tabIndex\", 0 );\r\n                toFocus.focus();\r\n                if(this.options.openOnFocus) {\r\n                    this.activate(toFocusIndex);\r\n                }\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        _bind: function () {\r\n            var events = {\r\n                keydown: \"_keydown\"\r\n            };\r\n            this._off(this.triggers);\r\n            this._on(this.triggers, events);\r\n        }\r\n    });\r\n\r\n    return $.mage.tabs;\r\n});\r\n","mage/terms.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    \"jquery\"\r\n], function($){\r\n\r\n    'use strict';\r\n\r\n    $.fn.terms = function(args){\r\n\r\n        // default\r\n        var defaults = {\r\n            start:0,\r\n            wrapper:'',\r\n            showAnchor:'',\r\n            effects:'slide'\r\n        };\r\n\r\n        var options = $.extend(defaults, args);\r\n\r\n        this.each(function() {\r\n            var obj = $(this),\r\n                wrapper = (options.wrapper !== '') ? '> ' + options.wrapper : '',\r\n                switches = $(wrapper + '> [data-section=\"title\"] > [data-toggle=\"switch\"]',obj),\r\n                terms = $(wrapper + '> [data-section=\"content\"]',obj),\r\n                t = switches.length,\r\n                marginTop = $(switches[0]).closest('[data-section=\"title\"]').css('position') == 'absolute' ? 0 : null,\r\n                title,\r\n                current,\r\n\r\n                init = function() {\r\n                    if (t > 0) {\r\n                        if($(switches[0]).closest('[data-section=\"title\"]').css('display')=='table-cell') {\r\n                            obj.addClass('adjusted');\r\n                            var linksList;\r\n                            if (obj[0].tagName=='DL') {\r\n                                linksList = $('<dd>');\r\n                            } else {\r\n                                linksList = $('<div>');\r\n                            }\r\n                            linksList.addClass('sections-nav');\r\n                            obj.prepend(linksList);\r\n\r\n                            for (var i=0; i < t; i++) {\r\n                                title = $(switches[i]).html();\r\n                                var classes = $(switches[i]).closest('[data-section=\"title\"]').attr('class');\r\n                                var dataSection = $(switches[i]).closest('[data-section=\"title\"]').attr('data-section');\r\n                                var itemHref = $(switches[i]).attr('href');\r\n                                var itemClass = $(switches[i]).attr('class');\r\n                                $(switches[i]).parent('[data-section=\"title\"]').hide();\r\n                                switches[i] = $('<a/>',{\r\n                                    href: itemHref,\r\n                                    'class' : itemClass,\r\n                                    html: title\r\n                                }).appendTo(linksList);\r\n                                $(switches[i]).wrap('<strong class=\"'+classes+'\" data-section=\"'+dataSection+'\" />');\r\n                            }\r\n                        }\r\n                        $(switches).each(function(ind,el){\r\n                            $(el).click(function(event){\r\n                                event.preventDefault();\r\n                                showItem(ind);\r\n                            });\r\n                            if (marginTop !== null) {\r\n                                $(el).closest('[data-section=\"title\"]').css({'top' : marginTop + 'px'});\r\n                                marginTop = marginTop + $(el).closest('[data-section=\"title\"]').outerHeight(true);\r\n                                obj.css({'min-height' : marginTop + 'px' });\r\n                            }\r\n                        });\r\n\r\n                        var fromUrl = false;\r\n                        if (window.location.hash.length > 0) {\r\n                            $(terms).each(function(ind,el) {\r\n                                if ( '#info-'+$(el).attr('id') == window.location.hash) {\r\n                                    showItem(ind);\r\n                                    $('html, body').animate({\r\n                                        scrollTop: $(switches[ind]).offset().top\r\n                                    }, 700);\r\n                                    fromUrl = true;\r\n                                }\r\n                            });\r\n                        }\r\n                        if (fromUrl === false) {\r\n                            if ( options.start % 1 === 0 ) {\r\n                                current = options.start + 1;\r\n                                showItem(options.start);\r\n                            } else {\r\n                                $(terms).each(function(ind,el) {\r\n                                    if ( $(el).attr('id') == options.start) {\r\n                                        current = ind + 1;\r\n                                        showItem(ind);\r\n                                        $('html, body').animate({\r\n                                            scrollTop: $(switches[ind]).offset().top\r\n                                        }, 700);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n\r\n\r\n                showItem = function(item) {\r\n                    if (item != current && !$(switches[item]).closest('[data-section=\"title\"]').hasClass('disabled') ) {\r\n                        $(switches).closest('[data-section=\"title\"]').removeClass('active');\r\n                        if (options.wrapper !== '') {\r\n                            $(switches).parent().parent().removeClass('active');\r\n                        }\r\n                        $(terms).removeClass('active');\r\n                        $(switches[item]).closest('[data-section=\"title\"]').addClass('active');\r\n                        if (options.wrapper !== '') {\r\n                            $(switches[current]).parent().parent().addClass('active');\r\n                        }\r\n                        $(terms[item]).addClass('active');\r\n\r\n                        /*if ($(terms[item]).attr('id')) {\r\n                         scr = document.body.scrollTop;\r\n                         window.location.hash='#tab-' + $(terms[item]).attr('id');\r\n                         document.body.scrollTop = scr;\r\n                         }*/\r\n                        current = item;\r\n                    } else if (\r\n                    // Check if this is accordion width as criteria for now\r\n                        (obj.attr('data-sections') == 'accordion' ||\r\n                            $(switches[item]).closest('[data-section=\"title\"]').css('width') == obj.css('width')\r\n                            ) &&\r\n                            item == current && !$(switches[item]).closest('[data-section=\"title\"]').hasClass('disabled')\r\n                        ) {\r\n                        $(switches).closest('[data-section=\"title\"]').removeClass('active');\r\n                        if (options.wrapper !== '') {\r\n                            $(switches).parent().parent().removeClass('active');\r\n                        }\r\n                        $(terms).removeClass('active');\r\n                        current = -1;\r\n                    }\r\n                };\r\n\r\n            init();\r\n        });\r\n    };\r\n\r\n    return function(data, el){\r\n        $(el).terms(data);\r\n    };\r\n});\r\n","mage/toggle.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget(\"mage.toggleAdvanced\", {\r\n\r\n        options: {\r\n            baseToggleClass: \"active\"      // Class used to be toggled on clicked element\r\n        },\r\n\r\n        /**\r\n         * Toggle creation\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.beforeCreate();\r\n            this._bindCore();\r\n            this.afterCreate();\r\n        },\r\n\r\n        /**\r\n         *  Core bound events & setup\r\n         * @protected\r\n         */\r\n        _bindCore: function() {\r\n            var widget = this;\r\n            this.element.on('click', $.proxy(function(e) {\r\n                widget._onClick();\r\n                e.preventDefault();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Binding Click event\r\n         *\r\n         * @protected\r\n         */\r\n        _onClick: function() {\r\n            this._prepareOptions();\r\n            this._toggleSelectors();\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         */\r\n        _prepareOptions: function() {\r\n            this.options.baseToggleClass = (this.element.data('base-toggle-class')) ?\r\n                this.element.data('base-toggle-class') :this.options.baseToggleClass;\r\n        },\r\n\r\n        /**\r\n         * Method responsible for hiding and revealing specified DOM elements\r\n         * Toggle the class on clicked element\r\n         *\r\n         * @protected\r\n         */\r\n        _toggleSelectors: function () {\r\n            this.element.toggleClass(this.options.baseToggleClass);\r\n        },\r\n\r\n        /**\r\n         * Method used to inject 3rd party functionality before create\r\n         * @public\r\n         */\r\n        beforeCreate: function() {},\r\n\r\n        /**\r\n         * Method used to inject 3rd party functionality after create\r\n         * @public\r\n         */\r\n        afterCreate: function() {}\r\n    });\r\n\r\n    // Extension for mage.toggle - Adding selectors support for other DOM elements we wish to toggle\r\n    $.widget('mage.toggleAdvanced', $.mage.toggleAdvanced, {\r\n\r\n        options: {\r\n            selectorsToggleClass: \"hidden\",    // Class used to be toggled on selectors DOM elements\r\n            toggleContainers: null\r\n        },\r\n\r\n        /**\r\n         * Method responsible for hiding and revealing specified DOM elements\r\n         * If data-toggle-selectors attribute is present - toggle will be done on these selectors\r\n         * Otherwise we toggle the class on clicked element\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _toggleSelectors: function () {\r\n            this._super();\r\n            if (this.options.toggleContainers) {\r\n                $(this.options.toggleContainers).toggleClass(this.options.selectorsToggleClass);\r\n            } else {\r\n                this.element.toggleClass(this.options.baseToggleClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _prepareOptions: function() {\r\n            this.options.selectorsToggleClass = (this.element.data('selectors-toggle-class')) ?\r\n                this.element.data('selectors-toggle-class') :this.options.selectorsToggleClass;\r\n            this.options.toggleContainers = (this.element.data('toggle-selectors')) ?\r\n                this.element.data('toggle-selectors') :this.options.toggleContainers;\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    // Extension for mage.toggle - Adding label toggle\r\n    $.widget('mage.toggleAdvanced', $.mage.toggleAdvanced, {\r\n\r\n        options: {\r\n            newLabel: null,             // Text of the new label to be used on toggle\r\n            curLabel: null,             // Text of the old label to be used on toggle\r\n            currentLabelElement: null   // Current label container\r\n        },\r\n\r\n        /**\r\n         * Binding Click event\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _onClick: function() {\r\n            this._super();\r\n            this._toggleLabel();\r\n        },\r\n\r\n        /**\r\n         * Method responsible for replacing clicked element labels\r\n         * @protected\r\n         */\r\n        _toggleLabel: function() {\r\n            if (this.options.newLabel) {\r\n                var cachedLabel = this.options.newLabel,\r\n                    currentLabelSelector = (this.options.currentLabelElement) ?\r\n                        $(this.options.currentLabelElement) : this.element;\r\n\r\n                this.element.data('toggle-label', this.options.curLabel);\r\n                currentLabelSelector.html(this.options.newLabel);\r\n\r\n                this.options.curLabel = this.options.newLabel;\r\n                this.options.newLabel = cachedLabel;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _prepareOptions: function() {\r\n            this.options.newLabel = (this.element.data('toggle-label')) ?\r\n                this.element.data('toggle-label') : this.options.newLabel;\r\n\r\n            this.options.currentLabelElement = (this.element.data('current-label-el')) ?\r\n                this.element.data('current-label-el') : this.options.currentLabelElement;\r\n\r\n            if(!this.options.currentLabelElement) {\r\n                this.options.currentLabelElement = this.element;\r\n            }\r\n\r\n            this.options.curLabel = $(this.options.currentLabelElement).html();\r\n\r\n            this._super();\r\n        }\r\n    });\r\n    \r\n    return $.mage.toggleAdvanced;\r\n});\r\n","mage/translate-inline.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\n(function (root, factory) {\r\n    'use strict';\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            \"jquery\",\r\n            \"mage/template\",\r\n            \"jquery/ui\",\r\n            \"mage/translate\"\r\n        ], factory);\r\n    } else {\r\n        factory(root.jQuery, root.mageTemplate);\r\n    }\r\n}(this, function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget(\"mage.translateInline\", $.ui.dialog, {\r\n        options: {\r\n            translateForm: {\r\n                template: '#translate-form-template',\r\n                data: {\r\n                    id: 'translate-inline-form',\r\n                    message: 'Please refresh the page to see your changes after submitting this form.'\r\n                }\r\n            },\r\n            autoOpen : false,\r\n            translateArea: null,\r\n            modal: true,\r\n            dialogClass: 'popup-window',\r\n            width: '75%',\r\n            title: $.mage.__('Translate'),\r\n            height: 470,\r\n            position: {\r\n                my: 'left top',\r\n                at: 'center top',\r\n                of: 'body'\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Submit'),\r\n                'class': 'action-primary',\r\n                click: function(e) {\r\n                    $(this).translateInline('submit');\r\n                }\r\n            },\r\n            {\r\n                text: $.mage.__('Close'),\r\n                'class': 'action-close',\r\n                click: function() {\r\n                    $(this).translateInline('close');\r\n                }\r\n            }],\r\n            open: function () {\r\n                $(this).closest('.ui-dialog').addClass('ui-dialog-active');\r\n\r\n                var topMargin = jQuery(this).closest('.ui-dialog').children('.ui-dialog-titlebar').outerHeight() + 45;\r\n                jQuery(this).closest('.ui-dialog').css('margin-top', topMargin);\r\n            },\r\n            close: function () {\r\n                $(this).closest('.ui-dialog').removeClass('ui-dialog-active');\r\n            }\r\n        },\r\n        /**\r\n         * Translate Inline creation\r\n         * @protected\r\n         */\r\n        _create: function() {\r\n            this.tmpl = mageTemplate(this.options.translateForm.template);\r\n            (this.options.translateArea && $(this.options.translateArea).length ?\r\n                $(this.options.translateArea) :\r\n                this.element.closest('body'))\r\n                    .on('edit.editTrigger', $.proxy(this._onEdit, this));\r\n            this._super();\r\n        },\r\n\r\n        _prepareContent: function(templateData) {\r\n            var data = $.extend({\r\n                items: templateData,\r\n                escape: $.mage.escapeHTML\r\n            }, this.options.translateForm.data);\r\n            this.data = data;\r\n\r\n            return $(this.tmpl({\r\n                data: data\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * Render translation form and open dialog\r\n         * @param {Object} event object\r\n         * @protected\r\n         */\r\n        _onEdit: function(e) {\r\n            this.target = e.target;\r\n            this.element.html(this._prepareContent($(e.target).data('translate')));\r\n            this.open(e);\r\n        },\r\n\r\n        submit: function() {\r\n            if (this.formIsSubmitted) {\r\n                return;\r\n            }\r\n            this._formSubmit();\r\n        },\r\n        /**\r\n         * Send ajax request on form submit\r\n         * @protected\r\n         */\r\n        _formSubmit: function() {\r\n            this.formIsSubmitted = true;\r\n            var parameters = $.param({area: this.options.area}) +\r\n                '&' + $('#' + this.options.translateForm.data.id).serialize();\r\n\r\n            $.ajax({\r\n                url: this.options.ajaxUrl,\r\n                type: 'POST',\r\n                data: parameters,\r\n                loaderContext: this.element,\r\n                showLoader: true\r\n            }).complete($.proxy(this._formSubmitComplete, this));\r\n        },\r\n\r\n        _formSubmitComplete: function(response) {\r\n            this.close();\r\n            this.formIsSubmitted = false;\r\n            this._updatePlaceholder(response.responseJSON[this.data.items[0]['original']])\r\n        },\r\n\r\n        _updatePlaceholder: function(newValue) {\r\n            var target = jQuery(this.target);\r\n            target.data('translate')[0]['shown'] = newValue;\r\n            target.data('translate')[0]['translated'] = newValue;\r\n            target.html(newValue);\r\n        },\r\n\r\n        /**\r\n         * Destroy translateInline\r\n         */\r\n        destroy: function() {\r\n            this.element.off('.editTrigger');\r\n            this._super();\r\n        }\r\n    });\r\n    /*\r\n     * @TODO move the \"escapeHTML\" method into the file with global utility functions\r\n     */\r\n    $.extend(true, $, {\r\n        mage: {\r\n            escapeHTML: function(str) {\r\n                return str ?\r\n                    jQuery('<div/>').text(str).html().replace(/\"/g, '&quot;'):\r\n                    false;\r\n            }\r\n        }\r\n    });\r\n\r\n    $.widget('ui.button', $.ui.button, {\r\n        _create: function () {\r\n            this._super();\r\n            /**\r\n             * Decode HTML entities to prevent incorrect rendering of dialog button label\r\n             */\r\n            this.options.label = this.options.label\r\n                ? jQuery('<div/>').html(this.options.label).text()\r\n                : this.options.label;\r\n            /**\r\n             * Reset button to make decoded label visible\r\n             */\r\n            this._resetButton();\r\n        }\r\n    });\r\n\r\n    $.widget('ui.dialog', $.ui.dialog, {\r\n        /**\r\n         * Prevent rendering of dialog title as escaped HTML\r\n         */\r\n        _title: function (title) {\r\n            this._super(title);\r\n            if (this.options.title) {\r\n                title.html(this.options.title);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.translateInline;\r\n}));\r\n","mage/validation.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint regexdash:true eqnull:true browser:true jquery:true*/\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            'jquery',\r\n            'jquery/ui',\r\n            'jquery/validate',\r\n            'mage/translate'\r\n        ], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    \"use strict\";\r\n    $.extend(true, $, {\r\n        // @TODO: Move methods 'isEmpty', 'isEmptyNoTrim', 'parseNumber', 'stripHtml' in file with utility functions\r\n        mage: {\r\n            /**\r\n             * Check if string is empty with trim\r\n             * @param {string} value\r\n             */\r\n            isEmpty: function (value) {\r\n                return (value === '' || value === undefined || (value == null) || (value.length === 0) || /^\\s+$/.test(value));\r\n            },\r\n\r\n            /**\r\n             * Check if string is empty no trim\r\n             * @param {string} value\r\n             */\r\n            isEmptyNoTrim: function (value) {\r\n                return (value === '' || (value == null) || (value.length === 0));\r\n            },\r\n\r\n\r\n            /**\r\n             * Checks if {value} is between numbers {from} and {to}\r\n             * @param {string} value\r\n             * @param {string} from\r\n             * @param {string} to\r\n             * @returns {boolean}\r\n             */\r\n            isBetween: function (value, from, to) {\r\n                return ($.mage.isEmpty(from) || value >= $.mage.parseNumber(from)) &&\r\n                    ($.mage.isEmpty(to) || value <= $.mage.parseNumber(to));\r\n            },\r\n\r\n            /**\r\n             * Parse price string\r\n             * @param {string} value\r\n             */\r\n            parseNumber: function (value) {\r\n                if (typeof value !== 'string') {\r\n                    return parseFloat(value);\r\n                }\r\n                var isDot = value.indexOf('.');\r\n                var isComa = value.indexOf(',');\r\n                if (isDot !== -1 && isComa !== -1) {\r\n                    if (isComa > isDot) {\r\n                        value = value.replace('.', '').replace(',', '.');\r\n                    } else {\r\n                        value = value.replace(',', '');\r\n                    }\r\n                } else if (isComa !== -1) {\r\n                    value = value.replace(',', '.');\r\n                }\r\n                return parseFloat(value);\r\n            },\r\n\r\n            /**\r\n             * Removes HTML tags and space characters, numbers and punctuation.\r\n             * @param value Value being stripped.\r\n             * @return {*}\r\n             */\r\n            stripHtml: function (value) {\r\n                return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                    .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n            }\r\n        }\r\n    });\r\n\r\n    $.validator.addMethod = function (name, method, message, dontSkip) {\r\n        $.validator.methods[name] = method;\r\n        $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];\r\n\r\n        if (method.length < 3 || dontSkip) {\r\n            $.validator.addClassRules(name, $.validator.normalizeRule(name));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Javascript object with credit card types\r\n     * 0 - regexp for card number\r\n     * 1 - regexp for cvn\r\n     * 2 - check or not credit card number trough Luhn algorithm by\r\n     */\r\n    var creditCartTypes = {\r\n        'SO': [new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],\r\n        'SM': [new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|(^(4936)([0-9]{12}$|[0-9]{14,15}$))'), new RegExp('^([0-9]{3}|[0-9]{4})?$'), true],\r\n        'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MC': [new RegExp('^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$'), new RegExp('^[0-9]{3}$'), true],\r\n        'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],\r\n        'DI': [new RegExp('^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'JCB': [new RegExp('^35(2[8-9]|[3-8])\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'DN': [new RegExp('^(3(0[0-5]|095|6|[8-9]))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'UN': [new RegExp('^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MI': [new RegExp('^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MD': [new RegExp('^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$'), new RegExp('^[0-9]{3}$'), true]\r\n    };\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = \"0123456789\",\r\n            w = \"\", i, j, k, m, c, a, x;\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n            if (v.indexOf(x, 0) != -1)\r\n                w += x;\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n        return (c % 10 === 0);\r\n    }\r\n\r\n    /**\r\n     * validate all table required inputs at once, using single hidden input\r\n     * @param {String} value\r\n     * @param {HTMLElement} element\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    function tableSingleValidation(value, element) {\r\n        var empty = $(element).closest('table')\r\n            .find('input.required-option:visible')\r\n            .filter(function (i, el) {\r\n                return $.mage.isEmpty(el.value);\r\n            })\r\n            .length;\r\n        return empty === 0;\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    var rules = {\r\n        \"max-words\": [\r\n            function (value, element, params) {\r\n                return this.optional(element) || $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length < params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        \"min-words\": [\r\n            function (value, element, params) {\r\n                return this.optional(element) || $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        \"range-words\": [\r\n            function (value, element, params) {\r\n                return this.optional(element) ||\r\n                    $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length >= params[0] &&\r\n                    value.match(/bw+b/g).length < params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        \"letters-with-basic-punc\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^[a-z\\-.,()'\\\"\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        \"alphanumeric\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        \"letters-only\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        \"no-whitespace\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        \"zip-range\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        \"integer\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        \"vinUS\": [\r\n            function (v) {\r\n                if (v.length !== 17) {\r\n                    return false;\r\n                }\r\n                var i, n, d, f, cd, cdv;\r\n                var LL = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n                var VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9];\r\n                var FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];\r\n                var rs = 0;\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = v.slice(i, i + 1);\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {\r\n                            if (d.toUpperCase() === LL[n]) {\r\n                                d = VL[n];\r\n                                d *= f;\r\n                                if (isNaN(cdv) && n === 8) {\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n                cd = rs % 11;\r\n                if (cd === 10) {\r\n                    cd = \"X\";\r\n                }\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        \"dateITA\": [\r\n            function (value, element) {\r\n                var check = false;\r\n                var re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\r\n                if (re.test(value)) {\r\n                    var adata = value.split('/');\r\n                    var gg = parseInt(adata[0], 10);\r\n                    var mm = parseInt(adata[1], 10);\r\n                    var aaaa = parseInt(adata[2], 10);\r\n                    var xdata = new Date(aaaa, mm - 1, gg);\r\n                    if ((xdata.getFullYear() === aaaa) &&\r\n                        (xdata.getMonth() === mm - 1) && (xdata.getDate() === gg )) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n                return this.optional(element) || check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        \"dateNL\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            'Vul hier een geldige datum in.'\r\n        ],\r\n        \"time\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        \"time12h\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\ [AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        \"phoneUS\": [\r\n            function (phone_number, element) {\r\n                phone_number = phone_number.replace(/\\s+/g, \"\");\r\n                return this.optional(element) || phone_number.length > 9 &&\r\n                    phone_number.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        \"phoneUK\": [\r\n            function (phone_number, element) {\r\n                return this.optional(element) || phone_number.length > 9 &&\r\n                    phone_number.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        \"mobileUK\": [\r\n            function (phone_number, element) {\r\n                return this.optional(element) || phone_number.length > 9 &&\r\n                    phone_number.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        \"stripped-min-length\": [\r\n            function (value, element, param) {\r\n                return $(value).text().length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n        \"email2\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        \"url2\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n        \"credit-card-types\": [\r\n            function (value, element, param) {\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, \"\");\r\n\r\n                var validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        \"ipv4\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        \"ipv6\": [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n        \"pattern\": [\r\n            function (value, element, param) {\r\n                return this.optional(element) || param.test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        \"allow-container-className\": [\r\n            function (element) {\r\n                if (element.type === 'radio' || element.type === 'checkbox') {\r\n                    return $(element).hasClass('change-container-classname');\r\n                }\r\n            },\r\n            ''\r\n        ],\r\n        \"validate-no-html-tags\": [\r\n            function (value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        \"validate-select\": [\r\n            function (value) {\r\n                return ((value !== \"none\") && (value != null) && (value.length !== 0));\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        \"validate-no-empty\": [\r\n            function (value) {\r\n                return !$.mage.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        \"validate-alphanum-with-spaces\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z0-9 ]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        \"validate-data\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')\r\n        ],\r\n        \"validate-street\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        \"validate-phoneStrict\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        \"validate-phoneLax\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        \"validate-fax\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        \"validate-email\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        \"validate-emailSender\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[\\S ]+$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        \"validate-password\": [\r\n            function (v) {\r\n                if (v == null) {\r\n                    return false;\r\n                }\r\n                /*strip leading and trailing spaces*/\r\n                var pass = $.trim(v);\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        \"validate-admin-password\": [\r\n            function (v) {\r\n                if (v == null) {\r\n                    return false;\r\n                }\r\n                var pass = $.trim(v);\r\n                /*strip leading and trailing spaces*/\r\n                if (0 === pass.length) {\r\n                    return true;\r\n                }\r\n                if (!(/[a-z]/i.test(v)) || !(/[0-9]/.test(v))) {\r\n                    return false;\r\n                }\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        \"validate-customer-password\": [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    length = 0,\r\n                    counter = 0;\r\n                var passwordMinLength = $(elm).data('password-min-length');\r\n                var passwordMinCharacterSets = $(elm).data('password-min-character-sets');\r\n                var pass = $.trim(v);\r\n                var result = pass.length >= passwordMinLength;\r\n                if (result == false) {\r\n                    /*eslint-disable max-len*/\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength);\r\n\r\n                    /*eslint-enable max-len*/\r\n                    return result;\r\n                }\r\n                if (pass.match(/\\d+/)) {\r\n                    counter ++;\r\n                }\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter ++;\r\n                }\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter ++;\r\n                }\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter ++;\r\n                }\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n\r\n                    /*eslint-disable max-len*/\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets);\r\n\r\n                    /*eslint-enable max-len*/\r\n                }\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        \"validate-url\": [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = (v || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        \"validate-clean-url\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        \"validate-xml-identifier\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        \"validate-ssn\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        \"validate-zip-us\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        \"validate-date-au\": [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                var regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\r\n                if ($.mage.isEmpty(v) || !regex.test(v)) {\r\n                    return false;\r\n                }\r\n                var d = new Date(v.replace(regex, '$2/$1/$3'));\r\n                return parseInt(RegExp.$2, 10) === (1 + d.getMonth()) &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        \"validate-currency-dollar\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        \"validate-not-negative-number\": [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n                return !isNaN(v) && v >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        \"validate-zero-or-greater\": [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n                return !isNaN(v) && v >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        \"validate-greater-than-zero\": [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n                return !isNaN(v) && v > 0;\r\n            },\r\n            $.mage.__('Please enter a number greater than 0 in this field.')\r\n        ],\r\n        \"validate-css-length\": [\r\n            function (v) {\r\n                if (v !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(v);\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        /** @description Additional methods */\r\n        \"validate-number\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || (!isNaN($.mage.parseNumber(v)) && /^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(v));\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        \"required-number\": [\r\n            function (v) {\r\n                return !!v.length;\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        \"validate-number-range\": [\r\n            function (v, elm, param) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                var numValue = $.mage.parseNumber(v);\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                var dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/,\r\n                    classNameRange = /^number-range-(-?[\\d.,]+)?-(-?[\\d.,]+)?$/,\r\n                    result = true,\r\n                    range, m, classes, ii;\r\n\r\n                range = param;\r\n                if (typeof range === 'object') {\r\n                    m = dataAttrRange.exec(range);\r\n                    if (m) {\r\n                        result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                } else if (elm && elm.className) {\r\n                    classes = elm.className.split(\" \");\r\n                    ii = classes.length;\r\n\r\n                    while (ii--) {\r\n                        range = classes[ii];\r\n                        m = classNameRange.exec(range);\r\n                        if (m) {\r\n                            result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.'),\r\n            true\r\n        ],\r\n        \"validate-digits\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || !/[^\\d]/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        \"validate-digits-range\": [\r\n            function (v, elm, param) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                var numValue = $.mage.parseNumber(v);\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                var dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/,\r\n                    classNameRange = /^digits-range-(-?\\d+)?-(-?\\d+)?$/,\r\n                    result = true,\r\n                    range, m, classes, ii;\r\n                range = param;\r\n\r\n                if (typeof range === 'object') {\r\n                    m = dataAttrRange.exec(range);\r\n                    if (m) {\r\n                        result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                } else if (elm && elm.className) {\r\n                    classes = elm.className.split(\" \");\r\n                    ii = classes.length;\r\n\r\n                    while (ii--) {\r\n                        range = classes[ii];\r\n                        m = classNameRange.exec(range);\r\n                        if (m) {\r\n                            result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.'),\r\n            true\r\n        ],\r\n        'validate-range': [\r\n            function (v, elm) {\r\n                var minValue, maxValue;\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](v)) {\r\n                    minValue = maxValue = $.mage.parseNumber(v);\r\n                } else {\r\n                    var ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(v);\r\n\r\n                    if (ranges) {\r\n                        minValue = $.mage.parseNumber(ranges[1]);\r\n                        maxValue = $.mage.parseNumber(ranges[2]);\r\n                        if (minValue > maxValue) {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n                var reRange = /^range-(-?\\d+)?-(-?\\d+)?$/,\r\n                    result = true;\r\n\r\n                var values = $(elm).prop('class').split(\" \");\r\n\r\n                for (var i = values.length - 1; i >= 0; i--) {\r\n                    var name = values[i];\r\n                    var validRange = reRange.exec(name);\r\n                    if (validRange) {\r\n                        var minValidRange = $.mage.parseNumber(validRange[1]);\r\n                        var maxValidRange = $.mage.parseNumber(validRange[2]);\r\n                        result = result &&\r\n                        (isNaN(minValidRange) || minValue >= minValidRange) &&\r\n                        (isNaN(maxValidRange) || maxValue <= maxValidRange);\r\n                    }\r\n                }\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        \"validate-alpha\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        \"validate-code\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-z]+[a-z0-9_]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')\r\n        ],\r\n        \"validate-alphanum\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z0-9]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.')\r\n        ],\r\n        \"validate-date\": [\r\n            function (v) {\r\n                var test = new Date(v);\r\n                return $.mage.isEmptyNoTrim(v) || !isNaN(test);\r\n            },\r\n            $.mage.__('Please enter a valid date.')\r\n\r\n        ],\r\n        \"validate-date-range\": [\r\n            function (v, elm) {\r\n                var m = /\\bdate-range-(\\w+)-(\\w+)\\b/.exec(elm.className);\r\n                if (!m || m[2] === 'to' || $.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                var currentYear = new Date().getFullYear() + '';\r\n                var normalizedTime = function (v) {\r\n                    v = v.split(/[.\\/]/);\r\n                    if (v[2] && v[2].length < 4) {\r\n                        v[2] = currentYear.substr(0, v[2].length) + v[2];\r\n                    }\r\n                    return new Date(v.join('/')).getTime();\r\n                };\r\n\r\n                var dependentElements = $(elm.form).find('.validate-date-range.date-range-' + m[1] + '-to');\r\n                return !dependentElements.length || $.mage.isEmptyNoTrim(dependentElements[0].value) ||\r\n                    normalizedTime(v) <= normalizedTime(dependentElements[0].value);\r\n            },\r\n            $.mage.__('Make sure the To Date is later than or the same as the From Date.')\r\n        ],\r\n        \"validate-cpassword\": [\r\n            function () {\r\n                var conf = $('#confirmation').length > 0 ? $('#confirmation') : $($('.validate-cpassword')[0]);\r\n                var pass = false;\r\n                if ($('#password')) {\r\n                    pass = $('#password');\r\n                }\r\n                var passwordElements = $('.validate-password');\r\n                for (var i = 0; i < passwordElements.length; i++) {\r\n                    var passwordElement = $(passwordElements[i]);\r\n                    if (passwordElement.closest('form').attr('id') === conf.closest('form').attr('id')) {\r\n                        pass = passwordElement;\r\n                    }\r\n                }\r\n                if ($('.validate-admin-password').length) {\r\n                    pass = $($('.validate-admin-password')[0]);\r\n                }\r\n                return (pass.val() === conf.val());\r\n            },\r\n            $.mage.__('Please make sure your passwords match.')\r\n        ],\r\n        \"validate-identifier\": [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").')\r\n        ],\r\n        \"validate-zip-international\": [\r\n            /*function(v) {\r\n             // @TODO: Cleanup\r\n             return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n             }*/\r\n            function () {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        \"validate-one-required\": [\r\n            function (v, elm) {\r\n                var p = $(elm).parent();\r\n                var options = p.find('input');\r\n                return options.map(function (elm) {\r\n                        return $(elm).val();\r\n                    }).length > 0;\r\n            },\r\n            $.mage.__('Please select one of the options above.')\r\n        ],\r\n        \"validate-state\": [\r\n            function (v) {\r\n                return (v !== 0 || v === '');\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        \"required-file\": [\r\n            function (v, elm) {\r\n                var result = !$.mage.isEmptyNoTrim(v);\r\n                if (!result) {\r\n                    var ovId = $(elm).attr('id') + '_value';\r\n                    if ($(ovId)) {\r\n                        result = !$.mage.isEmptyNoTrim($(ovId).val());\r\n                    }\r\n                }\r\n                return result;\r\n            },\r\n            $.mage.__('Please select a file.')\r\n        ],\r\n        \"validate-ajax-error\": [\r\n            function (v, element) {\r\n                element = $(element);\r\n                element.on('change.ajaxError', function () {\r\n                    element.removeClass('validate-ajax-error');\r\n                    element.off('change.ajaxError');\r\n                });\r\n                return !element.hasClass('validate-ajax-error');\r\n            },\r\n            ''\r\n        ],\r\n        \"validate-optional-datetime\": [\r\n            function (v, elm, param) {\r\n                var dateTimeParts = $('.datetime-picker[id^=\"options_' + param + '\"]'),\r\n                    hasWithValue = false, hasWithNoValue = false,\r\n                    pattern = /day_part$/i;\r\n                for (var i = 0; i < dateTimeParts.length; i++) {\r\n                    if (!pattern.test($(dateTimeParts[i]).attr('id'))) {\r\n                        if ($(dateTimeParts[i]).val() === \"\") {\r\n                            hasWithValue = true;\r\n                        } else {\r\n                            hasWithNoValue = true;\r\n                        }\r\n                    }\r\n                }\r\n                return hasWithValue ^ hasWithNoValue;\r\n            },\r\n            $.mage.__('The field isn\\'t complete.')\r\n        ],\r\n        \"validate-required-datetime\": [\r\n            function (v, elm, param) {\r\n                var dateTimeParts = $('.datetime-picker[id^=\"options_' + param + '\"]');\r\n                for (var i = 0; i < dateTimeParts.length; i++) {\r\n                    if (dateTimeParts[i].value === \"\") {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        \"validate-one-required-by-name\": [\r\n            function (v, elm, selector) {\r\n                var name = elm.name.replace(/([\\\\\"])/g, '\\\\$1'),\r\n                    container = this.currentForm,\r\n                    selector = selector === true ? 'input[name=\"' + name + '\"]:checked' : selector;\r\n\r\n                return !!container.querySelectorAll(selector).length;\r\n            },\r\n            $.mage.__('Please select one of the options.')\r\n        ],\r\n        \"less-than-equals-to\": [\r\n            function (value, element, params) {\r\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\r\n                    this.lteToVal = $(params).val();\r\n                    return parseFloat(value) <= parseFloat($(params).val());\r\n                }\r\n                return true;\r\n            },\r\n            function () {\r\n                var message = $.mage.__('Please enter a value less than or equal to %s.');\r\n                return message.replace('%s', this.lteToVal);\r\n            }\r\n        ],\r\n        \"greater-than-equals-to\": [\r\n            function (value, element, params) {\r\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\r\n                    this.gteToVal = $(params).val();\r\n                    return parseFloat(value) >= parseFloat($(params).val());\r\n                }\r\n                return true;\r\n            },\r\n            function () {\r\n                var message = $.mage.__('Please enter a value greater than or equal to %s.');\r\n                return message.replace('%s', this.gteToVal);\r\n            }\r\n        ],\r\n        \"validate-emails\": [\r\n            function (value) {\r\n                if ($.mage.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                var valid_regexp = /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i,\r\n                    emails = value.split(/[\\s\\n\\,]+/g);\r\n                for (var i = 0; i < emails.length; i++) {\r\n                    if (!valid_regexp.test(emails[i].trim())) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__(\"Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.\")\r\n        ],\r\n\r\n        \"validate-cc-type-select\": [\r\n            /**\r\n             * Validate credit card type matches credit card number\r\n             * @param value - select credit card type\r\n             * @param element - element contains the select box for credit card types\r\n             * @param params - selector for credit card number\r\n             * @return {boolean}\r\n             */\r\n                function (value, element, params) {\r\n                if (value && params && creditCartTypes[value]) {\r\n                    return creditCartTypes[value][0].test($(params).val().replace(/\\s+/g, ''));\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('Card type does not match credit card number.')\r\n        ],\r\n        \"validate-cc-number\": [\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             * @param value - credit card number\r\n             * @return {boolean}\r\n             */\r\n                function (value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        \"validate-cc-type\": [\r\n            /**\r\n             * Validate credit card number is for the correct credit card type\r\n             * @param value - credit card number\r\n             * @param element - element contains credit card number\r\n             * @param params - selector for credit card type\r\n             * @return {boolean}\r\n             */\r\n                function (value, element, params) {\r\n                if (value && params) {\r\n                    var ccType = $(params).val();\r\n                    value = value.replace(/\\s/g, '').replace(/\\-/g, '');\r\n                    if (creditCartTypes[ccType] && creditCartTypes[ccType][0]) {\r\n                        return creditCartTypes[ccType][0].test(value);\r\n                    } else if (creditCartTypes[ccType] && !creditCartTypes[ccType][0]) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('Credit card number does not match credit card type.')\r\n        ],\r\n        \"validate-cc-exp\": [\r\n            /**\r\n             * Validate credit card expiration date, make sure it's within the year and not before current month\r\n             * @param value - month\r\n             * @param element - element contains month\r\n             * @param params - year selector\r\n             * @return {Boolean}\r\n             */\r\n                function (value, element, params) {\r\n                var isValid = false;\r\n                if (value && params) {\r\n                    var month = value,\r\n                        year = $(params).val(),\r\n                        currentTime = new Date(),\r\n                        currentMonth = currentTime.getMonth() + 1,\r\n                        currentYear = currentTime.getFullYear();\r\n                    isValid = !year || year > currentYear || (year == currentYear && month >= currentMonth);\r\n                }\r\n                return isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration date.')\r\n        ],\r\n        \"validate-cc-cvn\": [\r\n            /**\r\n             * Validate credit card cvn based on credit card type\r\n             * @param value - credit card cvn\r\n             * @param element - element contains credit card cvn\r\n             * @param params - credit card type selector\r\n             * @return {*}\r\n             */\r\n                function (value, element, params) {\r\n                if (value && params) {\r\n                    var ccType = $(params).val();\r\n                    if (creditCartTypes[ccType] && creditCartTypes[ccType][0]) {\r\n                        return creditCartTypes[ccType][1].test(value);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        \"validate-cc-ukss\": [\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled\r\n             * @param value - input field value\r\n             * @return {*}\r\n             */\r\n                function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n\r\n        \"validate-length\": [\r\n            function (v, elm) {\r\n                var reMax = new RegExp(/^maximum-length-[0-9]+$/),\r\n                    reMin = new RegExp(/^minimum-length-[0-9]+$/),\r\n                    validator = this,\r\n                    result = true,\r\n                    length = 0;\r\n                $.each(elm.className.split(' '), function (index, name) {\r\n                    if (name.match(reMax) && result) {\r\n                        length = name.split('-')[2];\r\n                        validator.attrLength = length;\r\n                        result = (v.length <= length);\r\n                    }\r\n                    if (name.match(reMin) && result && $.mage.isEmpty(v)) {\r\n                        length = name.split('-')[2];\r\n                        result = v.length >= length;\r\n                    }\r\n                });\r\n                return result;\r\n            }, function () {\r\n                return $.mage.__(\"Maximum length of this field must be equal or less than %1 symbols.\")\r\n                    .replace('%1', this.attrLength);\r\n            }\r\n        ],\r\n        'required-entry': [\r\n            function (value) {\r\n                return !$.mage.isEmpty(value);\r\n            }, $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function (v) {\r\n                if (v.length)\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(v);\r\n                else\r\n                    return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function (v) {\r\n                var isValid = !$.mage.isEmpty(v);\r\n                var values = v.split(',');\r\n                for (var i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-per-page-value': [\r\n            function (v, elm) {\r\n                if ($.mage.isEmpty(v)) {\r\n                    return false;\r\n                }\r\n                var values = $('#' + elm.id + '_values').val().split(',');\r\n                return values.indexOf(v) != -1;\r\n            },\r\n            $.mage.__('Please enter a valid value from list')\r\n        ],\r\n        'validate-new-password': [\r\n            function (v) {\r\n\r\n                if ($.validator.methods['validate-password'] && !$.validator.methods['validate-password'](v)) {\r\n                    return false;\r\n                }\r\n                if ($.mage.isEmpty(v) && v !== '') {\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'required-if-not-specified': [\r\n            function (value, element, params) {\r\n                var valid = false;\r\n\r\n                // if there is an alternate, determine its validity\r\n                var alternate = $(params);\r\n                if (alternate.length > 0) {\r\n                    valid = this.check(alternate);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        var alternateValue = alternate.val();\r\n                        if (typeof alternateValue == 'undefined' || alternateValue.length === 0) {\r\n                            valid = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!valid)\r\n                    valid = !this.optional(element);\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'required-if-all-sku-empty-and-file-not-loaded': [\r\n            function (value, element, params) {\r\n                var valid = false;\r\n                var alternate = $(params.specifiedId);\r\n\r\n                if (alternate.length > 0) {\r\n                    valid = this.check(alternate);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        var alternateValue = alternate.val();\r\n                        if (typeof alternateValue == 'undefined' || alternateValue.length === 0) {\r\n                            valid = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!valid)\r\n                    valid = !this.optional(element);\r\n\r\n                $('input[' + params.dataSku + '=true]').each(function () {\r\n                    if ($(this).val() !== '') {\r\n                        valid = true;\r\n                    }\r\n                });\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('Please enter valid SKU key.')\r\n        ],\r\n        'required-if-specified': [\r\n            function (value, element, params) {\r\n                var valid = true;\r\n\r\n                // if there is an dependent, determine its validity\r\n                var dependent = $(params);\r\n                if (dependent.length > 0) {\r\n                    valid = this.check(dependent);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        var dependentValue = dependent.val();\r\n                        valid = typeof dependentValue != 'undefined' && dependentValue.length > 0;\r\n                    }\r\n                }\r\n\r\n                if (valid) {\r\n                    valid = !this.optional(element);\r\n                } else {\r\n                    valid = true; // dependent was not valid, so don't even check\r\n                }\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'required-number-if-specified': [\r\n            function (value, element, params) {\r\n                var valid = true,\r\n                    dependent = $(params),\r\n                    depeValue;\r\n\r\n                if (dependent.length) {\r\n                    valid = this.check(dependent);\r\n\r\n                    if (valid) {\r\n                        depeValue = dependent[0].value;\r\n                        valid = !!(depeValue && depeValue.length);\r\n                    }\r\n                }\r\n\r\n                return valid ? !!value.length : true;\r\n            },\r\n            $.mage.__('Please enter a valid number.')\r\n        ],\r\n        'datetime-validation': [\r\n            function (value, element) {\r\n                var isValid = true;\r\n\r\n                if ($(element).val().length === 0) {\r\n                    isValid = false;\r\n                    $(element).addClass('mage-error');\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('This is required field')\r\n        ],\r\n        'required-text-swatch-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in the each row.')\r\n        ],\r\n        'required-visual-swatch-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in the each row.')\r\n        ],\r\n        'required-dropdown-attribute-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in the each row.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, element, params) {\r\n                // obtain values for validation\r\n                var qty = $.mage.parseNumber(value);\r\n\r\n                // validate quantity\r\n                var isMinAllowedValid = typeof params.minAllowed === 'undefined' || (qty >= $.mage.parseNumber(params.minAllowed));\r\n                var isMaxAllowedValid = typeof params.maxAllowed === 'undefined' || (qty <= $.mage.parseNumber(params.maxAllowed));\r\n                var isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined' || (qty % $.mage.parseNumber(params.qtyIncrements) === 0);\r\n\r\n                return isMaxAllowedValid && isMinAllowedValid && isQtyIncrementsValid && qty > 0;\r\n            },\r\n            ''\r\n        ]\r\n    };\r\n\r\n    $.each(rules, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n    $.validator.addClassRules({\r\n        \"required-option\": {\r\n            required: true\r\n        },\r\n        \"required-options-count\": {\r\n            required: true\r\n        },\r\n        \"validate-both-passwords\": {\r\n            'validate-cpassword': true\r\n        }\r\n    });\r\n    $.validator.messages = $.extend($.validator.messages, {\r\n        required: $.mage.__('This is a required field.'),\r\n        remote: $.mage.__('Please fix this field.'),\r\n        email: $.mage.__('Please enter a valid email address.'),\r\n        url: $.mage.__('Please enter a valid URL.'),\r\n        date: $.mage.__('Please enter a valid date.'),\r\n        dateISO: $.mage.__('Please enter a valid date (ISO).'),\r\n        number: $.mage.__('Please enter a valid number.'),\r\n        digits: $.mage.__('Please enter only digits.'),\r\n        creditcard: $.mage.__('Please enter a valid credit card number.'),\r\n        equalTo: $.mage.__('Please enter the same value again.'),\r\n        maxlength: $.validator.format($.mage.__('Please enter no more than {0} characters.')),\r\n        minlength: $.validator.format($.mage.__('Please enter at least {0} characters.')),\r\n        rangelength: $.validator.format($.mage.__('Please enter a value between {0} and {1} characters long.')),\r\n        range: $.validator.format($.mage.__('Please enter a value between {0} and {1}.')),\r\n        max: $.validator.format($.mage.__('Please enter a value less than or equal to {0}.')),\r\n        min: $.validator.format($.mage.__('Please enter a value greater than or equal to {0}.'))\r\n    });\r\n\r\n    if ($.metadata) {\r\n        // Setting the type as html5 to enable data-validate attribute\r\n        $.metadata.setType(\"html5\");\r\n    }\r\n\r\n    var showLabel = $.validator.prototype.showLabel;\r\n    $.extend(true, $.validator.prototype, {\r\n        showLabel: function (element, message) {\r\n            showLabel.call(this, element, message);\r\n\r\n            // ARIA (adding aria-invalid & aria-describedby)\r\n            var label = this.errorsFor(element),\r\n                elem = $(element);\r\n\r\n            if (!label.attr('id')) {\r\n                label.attr('id', this.idOrName(element) + '-error');\r\n            }\r\n            elem.attr('aria-invalid', 'true')\r\n                .attr('aria-describedby', label.attr('id'));\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Validate form field without instantiating validate plug-in\r\n     * @param {Element||String} element - DOM element or selector\r\n     * @return {Boolean} validation result\r\n     */\r\n    $.validator.validateElement = function (element) {\r\n        element = $(element);\r\n        var form = element.get(0).form,\r\n            validator = form ? $(form).data('validator') : null;\r\n        if (validator) {\r\n            return validator.element(element.get(0));\r\n        } else {\r\n            var valid = true,\r\n                classes = element.prop('class').split(' ');\r\n            $.each(classes, $.proxy(function (i, className) {\r\n                if (this.methods[className] && !this.methods[className](element.val(), element.get(0))) {\r\n                    valid = false;\r\n                    return valid;\r\n                }\r\n            }, this));\r\n            return valid;\r\n        }\r\n    };\r\n\r\n    var originValidateDelegate = $.fn.validateDelegate;\r\n\r\n    $.fn.validateDelegate = function () {\r\n        if (!this[0].form) {\r\n            return this;\r\n        }\r\n\r\n        return originValidateDelegate.apply(this, arguments);\r\n    };\r\n\r\n    /**\r\n     * Validate single element.\r\n     *\r\n     * @param {Element} element\r\n     * @param {Object} config\r\n     * @returns {*}\r\n     */\r\n    $.validator.validateSingleElement = function (element, config) {\r\n        var errors = {},\r\n            valid = true,\r\n            validateConfig = {\r\n                errorElement: 'label',\r\n                ignore: '.ignore-validate'\r\n            },\r\n            form, validator, classes, elementValue;\r\n\r\n        $.extend(validateConfig, config);\r\n        element = $(element).not(validateConfig.ignore);\r\n\r\n        if (!element.length) {\r\n            return true;\r\n        }\r\n\r\n        form = element.get(0).form;\r\n        validator = form ? $(form).data('validator') : null;\r\n\r\n        if (validator) {\r\n            return validator.element(element.get(0));\r\n        }\r\n\r\n        classes = element.prop('class').split(' ');\r\n        validator = element.parent().data('validator') ||\r\n            $.mage.validation(validateConfig, element.parent()).validate;\r\n\r\n        element.removeClass(validator.settings.errorClass);\r\n        validator.toHide = validator.toShow;\r\n        validator.hideErrors();\r\n        validator.toShow = validator.toHide = $([]);\r\n\r\n        $.each(classes, $.proxy(function (i, className) {\r\n            elementValue = element.val();\r\n            if (element.is(':checkbox') || element.is(':radio')) {\r\n                elementValue = element.is(':checked') || null;\r\n            }\r\n            if (this.methods[className] && !this.methods[className](elementValue, element.get(0))) {\r\n                valid = false;\r\n                errors[element.get(0).name] = this.messages[className];\r\n                validator.invalid[element.get(0).name] = true;\r\n                validator.showErrors(errors);\r\n\r\n                return valid;\r\n            }\r\n        }, this));\r\n\r\n        return valid;\r\n    };\r\n\r\n    $.widget(\"mage.validation\", {\r\n        options: {\r\n            meta: \"validate\",\r\n            onfocusout: false,\r\n            onkeyup: false,\r\n            onclick: false,\r\n            ignoreTitle: true,\r\n            errorClass: 'mage-error',\r\n            errorElement: 'div',\r\n            errorPlacement: function (error, element) {\r\n                var errorPlacement = element;\r\n                // logic for date-picker error placement\r\n                if (element.hasClass('hasDatepicker')) {\r\n                    errorPlacement = element.siblings('img');\r\n                }\r\n                // logic for field wrapper\r\n                var fieldWrapper = element.closest('.addon');\r\n                if (fieldWrapper.length) {\r\n                    errorPlacement = fieldWrapper.after(error);\r\n                }\r\n                //logic for checkboxes/radio\r\n                if (element.is(':checkbox') || element.is(':radio')) {\r\n                    errorPlacement = element.siblings('label').last();\r\n                }\r\n                errorPlacement.after(error);\r\n            }\r\n        },\r\n        /**\r\n         * Check if form pass validation rules without submit\r\n         * @return boolean\r\n         */\r\n        isValid: function () {\r\n            return this.element.valid();\r\n        },\r\n\r\n        /**\r\n         * Remove validation error messages\r\n         */\r\n        clearError: function () {\r\n            if (arguments.length) {\r\n                $.each(arguments, $.proxy(function (index, item) {\r\n                    this.validate.prepareElement(item);\r\n                    this.validate.hideErrors();\r\n                }, this));\r\n            } else {\r\n                this.validate.resetForm();\r\n            }\r\n        },\r\n        /**\r\n         * Validation creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this.validate = this.element.validate(this.options);\r\n\r\n            // ARIA (adding aria-required attribute)\r\n            this.element\r\n                .find('.field.required')\r\n                .find('.control')\r\n                .find('input, select, textarea')\r\n                .attr('aria-required', 'true');\r\n\r\n            this._listenFormValidate();\r\n        },\r\n        /**\r\n         * Validation listening\r\n         * @protected\r\n         */\r\n        _listenFormValidate: function () {\r\n            $('form').on('invalid-form.validate', function (event, validation) {\r\n                var firstActive = $(validation.errorList[0].element || []),\r\n                    lastActive = $(validation.findLastActive() || validation.errorList.length && validation.errorList[0].element || []);\r\n\r\n                if (lastActive.is(':hidden')) {\r\n                    var parent = lastActive.parent();\r\n                    var windowHeight = $(window).height();\r\n                    $('html, body').animate({\r\n                        scrollTop: parent.offset().top - windowHeight / 2\r\n                    });\r\n                }\r\n\r\n                // ARIA (removing aria attributes if success)\r\n                var successList = validation.successList;\r\n                if (successList.length) {\r\n                    $.each(successList, function () {\r\n                        $(this)\r\n                            .removeAttr('aria-describedby')\r\n                            .removeAttr('aria-invalid');\r\n                    })\r\n                }\r\n                if (firstActive.length) {\r\n                    firstActive.focus();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.validation;\r\n}));\r\n","mage/app/config.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint regexdash:true eqnull:true browser:true jquery:true*/\r\ndefine([], function () {\r\n    var baseUrl = '';\r\n    return {\r\n        getBaseUrl: function () {\r\n            return this.values.baseUrl;\r\n        },\r\n        getFormKey: function() {\r\n            return this.values.formKey;\r\n        }\r\n    }\r\n});\r\n","mage/apply/main.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    './scripts'\r\n], function (_, $, processScripts) {\r\n    'use strict';\r\n\r\n    var dataAttr = 'data-mage-init',\r\n        nodeSelector = '[' + dataAttr + ']';\r\n\r\n    /**\r\n     * Initializes components assigned to a specified element via data-* attribute.\r\n     *\r\n     * @param {HTMLElement} el - Element to initialize components with.\r\n     * @param {Object|String} config - Initial components' config.\r\n     * @param {String} component - Components' path.\r\n     */\r\n    function init(el, config, component) {\r\n        require([component], function (fn) {\r\n\r\n            if (typeof fn === 'object') {\r\n                fn = fn[component].bind(fn);\r\n            }\r\n\r\n            if (_.isFunction(fn)) {\r\n                fn(config, el);\r\n            } else if ($(el)[component]) {\r\n                $(el)[component](config);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Parses elements 'data-mage-init' attribute as a valid JSON data.\r\n     * Note: data-mage-init attribute will be removed.\r\n     *\r\n     * @param {HTMLElement} el - Element whose attribute should be parsed.\r\n     * @returns {Object}\r\n     */\r\n    function getData(el) {\r\n        var data = el.getAttribute(dataAttr);\r\n\r\n        el.removeAttribute(dataAttr);\r\n\r\n        return {\r\n            el: el,\r\n            data: JSON.parse(data)\r\n        };\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Initializes components assigned to HTML elements via [data-mage-init].\r\n         *\r\n         * @example Sample 'data-mage-init' declaration.\r\n         *      data-mage-init='{\"path/to/component\": {\"foo\": \"bar\"}}'\r\n         */\r\n        apply: function () {\r\n            var virtuals = processScripts(),\r\n                nodes = document.querySelectorAll(nodeSelector);\r\n\r\n            _.toArray(nodes)\r\n                .map(getData)\r\n                .concat(virtuals)\r\n                .forEach(function (itemContainer) {\r\n                    var element = itemContainer.el;\r\n\r\n                    _.each(itemContainer.data, function (obj, key) {\r\n                            if (obj.mixins) {\r\n                                require(obj.mixins, function () {\r\n                                    for (var i = 0, len = arguments.length; i < len; i++) {\r\n                                        $.extend(true, itemContainer.data[key], arguments[i](itemContainer.data[key], element));\r\n                                    }\r\n\r\n                                    delete obj.mixins;\r\n                                    init.call(null, element, obj, key);\r\n                                });\r\n                            } else {\r\n                                init.call(null, element, obj, key);\r\n                            }\r\n\r\n                        }\r\n                    );\r\n\r\n                });\r\n        },\r\n        applyFor: init\r\n    };\r\n});\r\n","mage/apply/scripts.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery'\r\n], function (_, $) {\r\n    'use strict';\r\n\r\n    var scriptSelector = 'script[type=\"text/x-magento-init\"]',\r\n        dataAttr = 'data-mage-init',\r\n        virtuals = [];\r\n\r\n    /**\r\n     * Adds components to the virtual list.\r\n     *\r\n     * @param {Object} components\r\n     */\r\n    function addVirtual(components) {\r\n        virtuals.push({\r\n            el: false,\r\n            data: components\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Merges provided data with a current data\r\n     * of a elements' \"data-mage-init\" attribute.\r\n     *\r\n     * @param {Object} components - Object with components and theirs configuration.\r\n     * @param {HTMLElement} elem - Element whose data should be modified.\r\n     */\r\n    function setData(components, elem) {\r\n        var data = elem.getAttribute(dataAttr);\r\n\r\n        data = !!data ? JSON.parse(data) : {};\r\n        _.each(components, function(obj, key) {\r\n            if (_.has(obj, 'mixins')) {\r\n                data[key] = data[key] || {};\r\n                data[key].mixins = data[key].mixins || [];\r\n                data[key].mixins = data[key].mixins.concat(obj.mixins);\r\n                delete obj.mixins;\r\n            }\r\n        });\r\n\r\n        data = $.extend(true, data, components);\r\n        data = JSON.stringify(data);\r\n        elem.setAttribute(dataAttr, data);\r\n    }\r\n\r\n    /**\r\n     * Search for the elements by privded selector and extends theirs data.\r\n     *\r\n     * @param {Object} components - Object with components and theirs configuration.\r\n     * @param {String} selector - Selector for the elements.\r\n     */\r\n    function processElems(components, selector) {\r\n        var elems,\r\n            iterator;\r\n\r\n        if (selector === '*') {\r\n            addVirtual(components);\r\n\r\n            return;\r\n        }\r\n\r\n        elems = document.querySelectorAll(selector);\r\n        iterator = setData.bind(null, components);\r\n\r\n        _.toArray(elems).forEach(iterator);\r\n    }\r\n\r\n    /**\r\n     * Parses content of a provided script node.\r\n     * Note: node will be removed from DOM.\r\n     *\r\n     * @param {HTMLScriptElement} node - Node to be processed.\r\n     * @returns {Object}\r\n     */\r\n    function getNodeData(node) {\r\n        var data = node.textContent;\r\n\r\n        node.parentNode.removeChild(node);\r\n\r\n        return JSON.parse(data);\r\n    }\r\n\r\n    /**\r\n     * Parses 'script' tags with a custom type attribute and moves it's data\r\n     * to a 'data-mage-init' attribute of an elemennt found by provided selector.\r\n     * Note: All found script nodes will be removed from DOM.\r\n     *\r\n     * @returns {Array} An array of components not assigned to the specific element.\r\n     *\r\n     * @example Sample declaration.\r\n     *      <script type=\"text/x-magento-init\">\r\n     *          {\r\n     *              \"body\": {\r\n     *                  \"path/to/component\": {\"foo\": \"bar\"}\r\n     *              }\r\n     *          }\r\n     *      </script>\r\n     *\r\n     * @example Providing data without selector.\r\n     *      {\r\n     *          \"*\": {\r\n     *              \"path/to/component\": {\"bar\": \"baz\"}\r\n     *          }\r\n     *      }\r\n     */\r\n    return function () {\r\n        var nodes = document.querySelectorAll(scriptSelector);\r\n\r\n        _.toArray(nodes)\r\n            .map(getNodeData)\r\n            .forEach(function (item) {\r\n                _.each(item, processElems);\r\n            });\r\n\r\n        return virtuals.splice(0, virtuals.length);\r\n    };\r\n});\r\n","mage/gallery/gallery.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'fotorama/fotorama',\r\n    'underscore',\r\n    'matchMedia',\r\n    'mage/template',\r\n    'text!mage/gallery/gallery.html',\r\n    'uiClass',\r\n    'mage/translate'\r\n], function ($, fotorama, _, mediaCheck, template, galleryTpl, Class, $t) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Retrieves index if the main item.\r\n     * @param {Array.<Object>} data - Set of gallery items.\r\n     */\r\n    var getMainImageIndex = function (data) {\r\n            var mainIndex;\r\n            if (_.every(data, function (item) {\r\n                    return _.isObject(item);\r\n                })\r\n            ) {\r\n                mainIndex = _.findIndex(data, function (item) {\r\n                    return item.isMain;\r\n                });\r\n            }\r\n            return mainIndex > 0 ? mainIndex : 0;\r\n        },\r\n\r\n        /**\r\n         * Helper for parse translate property\r\n         *\r\n         * @param {Element} el - el that to parse\r\n         * @returns {Array} - array of properties.\r\n         */\r\n        getTranslate = function (el) {\r\n            var slideTransform = $(el).attr('style').split(';');\r\n\r\n            slideTransform = $.map(slideTransform, function (style) {\r\n                style = style.trim();\r\n\r\n                if (style.startsWith('transform: translate3d')) {\r\n                    return style.match(/transform: translate3d\\((.+)px,(.+)px,(.+)px\\)/);\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return slideTransform.filter(Boolean);\r\n        },\r\n\r\n        _toNumber = function (str) {\r\n\r\n            var type = typeof(str);\r\n\r\n            if (type === 'string') {\r\n                return parseInt(str);\r\n            } else {\r\n                return str;\r\n            }\r\n        };\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            settings: {},\r\n            config: {},\r\n            startConfig: {}\r\n        },\r\n\r\n        /**\r\n         * Checks if device has touch interface.\r\n         * @return {Boolean} The result of searching touch events on device.\r\n         */\r\n        isTouchEnabled: (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n\r\n        /**\r\n         * Initializes gallery.\r\n         * @param {Object} config - Gallery configuration.\r\n         * @param {String} element - String selector of gallery DOM element.\r\n         */\r\n        initialize: function (config, element) {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            _.bindAll(this,\r\n                '_focusSwitcher'\r\n            );\r\n\r\n            /*turn off arrows for touch devices*/\r\n            if (this.isTouchEnabled) {\r\n                config.options.arrows = false;\r\n\r\n                if (config.fullscreen) {\r\n                    config.fullscreen.arrows = false;\r\n                }\r\n            }\r\n\r\n            config.options.width = _toNumber(config.options.width);\r\n            config.options.height = _toNumber(config.options.height);\r\n            config.options.thumbwidth = _toNumber(config.options.thumbwidth);\r\n            config.options.thumbheight = _toNumber(config.options.thumbheight);\r\n\r\n            config.options.swipe = true;\r\n            this.config = config;\r\n\r\n            this.settings = {\r\n                $element: $(element),\r\n                $pageWrapper: $('body>.page-wrapper'),\r\n                currentConfig: config,\r\n                defaultConfig: _.clone(config),\r\n                fullscreenConfig: _.clone(config.fullscreen),\r\n                breakpoints: config.breakpoints,\r\n                activeBreakpoint: {},\r\n                fotoramaApi: null,\r\n                isFullscreen: false,\r\n                api: null,\r\n                data: _.clone(config.data)\r\n            };\r\n            config.options.ratio = config.options.width / config.options.height;\r\n            config.options.height = null;\r\n\r\n            $.extend(true, this.startConfig, config);\r\n\r\n            this.initGallery();\r\n            this.initApi();\r\n            this.setupBreakpoints();\r\n            this.initFullscreenSettings();\r\n\r\n            this.settings.$element.on('mouseup', '.fotorama__stage__frame', function () {\r\n                if (\r\n                    !$(this).parents('.fotorama__shadows--left, .fotorama__shadows--right').length &&\r\n                    !$(this).hasClass('fotorama-video-container')\r\n                ) {\r\n                    self.openFullScreen();\r\n                }\r\n            });\r\n\r\n            if (this.isTouchEnabled && this.settings.isFullscreen) {\r\n                this.settings.$element.on('tap', '.fotorama__stage__frame', function () {\r\n                    var translate = getTranslate($(this).parents('.fotorama__stage__shaft'));\r\n\r\n                    if (translate[1] === '0' && !$(this).hasClass('fotorama-video-container')) {\r\n                        self.openFullScreen();\r\n                        self.settings.$pageWrapper.hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open gallery fullscreen\r\n         */\r\n        openFullScreen: function () {\r\n            this.settings.api.fotorama.requestFullScreen();\r\n            this.settings.$fullscreenIcon.css({\r\n                opacity: 1,\r\n                visibility: 'visible',\r\n                display: 'block'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Gallery fullscreen settings.\r\n         */\r\n        initFullscreenSettings: function () {\r\n            var settings = this.settings,\r\n                self = this;\r\n\r\n            settings.$gallery = this.settings.$element.find('[data-gallery-role=\"gallery\"]');\r\n            settings.$fullscreenIcon = this.settings.$element.find('[data-gallery-role=\"fotorama__fullscreen-icon\"]');\r\n            settings.focusableStart = this.settings.$element.find('[data-gallery-role=\"fotorama__focusable-start\"]');\r\n            settings.focusableEnd = this.settings.$element.find('[data-gallery-role=\"fotorama__focusable-end\"]');\r\n            settings.closeIcon = this.settings.$element.find('[data-gallery-role=\"fotorama__fullscreen-icon\"]');\r\n            settings.fullscreenConfig.swipe = true;\r\n\r\n            settings.$gallery.on('fotorama:fullscreenenter', function () {\r\n                settings.closeIcon.show();\r\n                settings.focusableStart.attr('tabindex', '0');\r\n                settings.focusableEnd.attr('tabindex', '0');\r\n                settings.focusableStart.bind('focusin', self._focusSwitcher);\r\n                settings.focusableEnd.bind('focusin', self._focusSwitcher);\r\n                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n\r\n                if (!_.isEqual(settings.activeBreakpoint, {}) && settings.breakpoints) {\r\n                    settings.api.updateOptions(settings.activeBreakpoint.options, true);\r\n                }\r\n                settings.isFullscreen = true;\r\n            });\r\n\r\n            settings.$gallery.on('fotorama:fullscreenexit', function () {\r\n                settings.closeIcon.hide();\r\n                settings.focusableStart.attr('tabindex', '-1');\r\n                settings.focusableEnd.attr('tabindex', '-1');\r\n                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n                settings.focusableStart.unbind('focusin', this._focusSwitcher);\r\n                settings.focusableEnd.unbind('focusin', this._focusSwitcher);\r\n                settings.closeIcon.hide();\r\n\r\n                if (!_.isEqual(settings.activeBreakpoint, {}) && settings.breakpoints) {\r\n                    settings.api.updateOptions(settings.activeBreakpoint.options, true);\r\n                }\r\n                settings.isFullscreen = false;\r\n                settings.$element.data('gallery').updateOptions({\r\n                    swipe: true\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Switcher focus.\r\n         */\r\n        _focusSwitcher: function (e) {\r\n            var target = $(e.target),\r\n                settings = this.settings;\r\n\r\n            if (target.is(settings.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(settings.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         */\r\n        _setFocus: function (position) {\r\n            var settings = this.settings,\r\n                focusableElements,\r\n                infelicity;\r\n\r\n            if (position === 'end') {\r\n                settings.$gallery.find(settings.closeIcon).focus();\r\n            } else if (position === 'start') {\r\n                infelicity = 3; //Constant for find last focusable element\r\n                focusableElements = settings.$gallery.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes gallery with configuration options.\r\n         */\r\n        initGallery: function () {\r\n            var breakpoints = {},\r\n                settings = this.settings,\r\n                config = this.config,\r\n                tpl = template(galleryTpl, {\r\n                    next: $t('Next'),\r\n                    previous: $t('Previous')\r\n                }),\r\n                mainImageIndex;\r\n\r\n            if (settings.breakpoints) {\r\n                _.each(_.values(settings.breakpoints), function (breakpoint) {\r\n                    var conditions;\r\n\r\n                    _.each(_.pairs(breakpoint.conditions), function (pair) {\r\n                        conditions = conditions ? conditions + ' and (' + pair[0] + ': ' + pair[1] + ')' :\r\n                        '(' + pair[0] + ': ' + pair[1] + ')';\r\n                    });\r\n                    breakpoints[conditions] = breakpoint.options;\r\n                });\r\n                settings.breakpoints = breakpoints;\r\n            }\r\n\r\n            _.extend(config, config.options);\r\n            config.options = undefined;\r\n\r\n            config.click = false;\r\n            config.breakpoints = null;\r\n            settings.currentConfig = config;\r\n            settings.$element.html(tpl);\r\n            settings.$element.removeClass('_block-content-loading');\r\n            settings.$elementF = $(settings.$element.children()[0]);\r\n            settings.$elementF.fotorama(config);\r\n            settings.fotoramaApi = settings.$elementF.data('fotorama');\r\n            $.extend(true, config, this.startConfig);\r\n\r\n            mainImageIndex = getMainImageIndex(config.data);\r\n            if (mainImageIndex) {\r\n                this.settings.fotoramaApi.show(mainImageIndex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates breakpoints for gallery.\r\n         */\r\n        setupBreakpoints: function () {\r\n            var pairs,\r\n                settings = this.settings,\r\n                config = this.config,\r\n                startConfig = this.startConfig,\r\n                triggeredBreakpoints = 0,\r\n                isTouchEnabled = this.isTouchEnabled;\r\n\r\n            if (_.isObject(settings.breakpoints)) {\r\n                pairs = _.pairs(settings.breakpoints);\r\n                _.each(pairs, function (pair) {\r\n                    mediaCheck({\r\n                        media: pair[0],\r\n\r\n                        /**\r\n                         * Is triggered when breakpoint enties.\r\n                         */\r\n                        entry: function () {\r\n                            $.extend(true, config, _.clone(startConfig));\r\n\r\n                            settings.api.updateOptions(settings.defaultConfig.options, true);\r\n\r\n                            if (settings.isFullscreen) {\r\n                                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n                            }\r\n\r\n                            if (isTouchEnabled) {\r\n                                settings.breakpoints[pair[0]].options.arrows = false;\r\n                                if (settings.breakpoints[pair[0]].options.fullscreen) {\r\n                                    settings.breakpoints[pair[0]].options.fullscreen.arrows = false;\r\n                                }\r\n                            }\r\n\r\n                            settings.api.updateOptions(settings.breakpoints[pair[0]].options, true);\r\n                            $.extend(true, config, settings.breakpoints[pair[0]]);\r\n                            settings.activeBreakpoint = settings.breakpoints[pair[0]];\r\n                        },\r\n\r\n                        /**\r\n                         * Is triggered when breakpoint exits.\r\n                         */\r\n                        exit: function () {\r\n                            $.extend(true, config, _.clone(startConfig));\r\n                            settings.api.updateOptions(settings.defaultConfig.options, true);\r\n\r\n                            if (settings.isFullscreen) {\r\n                                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n                            }\r\n                            settings.activeBreakpoint = {};\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates gallery's API.\r\n         */\r\n        initApi: function () {\r\n            var settings = this.settings,\r\n                config = this.config,\r\n                api = {\r\n\r\n                    /**\r\n                     * Contains fotorama's API methods.\r\n                     */\r\n                    fotorama: settings.fotoramaApi,\r\n\r\n                    /**\r\n                     * Displays the last image on preview.\r\n                     */\r\n                    last: function () {\r\n                        settings.fotoramaApi.show('>>');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays the first image on preview.\r\n                     */\r\n                    first: function () {\r\n                        settings.fotoramaApi.show('<<');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays previous element on preview.\r\n                     */\r\n                    prev: function () {\r\n                        settings.fotoramaApi.show('<');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays next element on preview.\r\n                     */\r\n                    next: function () {\r\n                        settings.fotoramaApi.show('>');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays image with appropriate count number on preview.\r\n                     * @param {Number} index - Number of image that should be displayed.\r\n                     */\r\n                    seek: function (index) {\r\n                        if (_.isNumber(index) && index !== 0) {\r\n\r\n                            if (index > 0) {\r\n                                index -= 1;\r\n                            }\r\n                            settings.fotoramaApi.show(index);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery with new set of options.\r\n                     * @param {Object} configuration - Standart gallery configuration object.\r\n                     * @param {Boolean} isInternal - Is this function called via breakpoints.\r\n                     */\r\n                    updateOptions: function (configuration, isInternal) {\r\n\r\n                        var $selectable = \r\n                                $('a[href], area[href], input, select, textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\r\n                                .not('[tabindex=-1], [disabled], :hidden'),\r\n                            fotorama = settings.fotoramaApi,\r\n                            $focus = $(':focus'),\r\n                            index;\r\n\r\n                        if (_.isObject(configuration)) {\r\n\r\n                            //Saves index of focus\r\n                            $selectable.each(function (number) {\r\n            \r\n                                if ($(this).is($focus)) {\r\n                                    index = number;\r\n                                }\r\n                            });\r\n\r\n                            if (this.isTouchEnabled) {\r\n                                configuration.arrows = false;\r\n                            }\r\n                            configuration.click = false;\r\n                            configuration.breakpoints = null;\r\n\r\n                            if (!isInternal) {\r\n                                !_.isEqual(settings.activeBreakpoint, {} && settings.brekpoints) ?\r\n                                    $.extend(true, settings.activeBreakpoint.options, configuration) :\r\n\r\n                                    settings.isFullscreen ?\r\n                                        $.extend(true, settings.fullscreenConfig, configuration) :\r\n                                        $.extend(true, settings.defaultConfig.options, configuration);\r\n\r\n                            }\r\n                            $.extend(true, settings.currentConfig.options, configuration);\r\n                            settings.fotoramaApi.setOptions(settings.currentConfig.options);\r\n\r\n                            if (_.isNumber(index)) {\r\n                                $selectable.eq(index).focus();\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery with specific set of items.\r\n                     * @param {Array.<Object>} data - Set of gallery items to update.\r\n                     */\r\n                    updateData: function (data) {\r\n                        if (_.isArray(data)) {\r\n                            settings.fotoramaApi.load(data);\r\n\r\n                            $.extend(false, settings, {\r\n                                data: data,\r\n                                defaultConfig: data\r\n                            });\r\n                            $.extend(false, config, {\r\n                                data: data\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Returns current images list\r\n                     *\r\n                     * @returns {Array}\r\n                     */\r\n                    returnCurrentImages: function () {\r\n                        var images = [];\r\n\r\n                        _.each(this.fotorama.data, function (item) {\r\n                            images.push(_.omit(item, '$navThumbFrame', '$navDotFrame', '$stageFrame', 'labelledby'));\r\n                        });\r\n\r\n                        return images;\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery data partially by index\r\n                     * @param {Number} index - Index of image in data array to be updated.\r\n                     * @param {Object} item - Standart gallery image object.\r\n                     *\r\n                     */\r\n                    updateDataByIndex: function(index, item){\r\n                        settings.fotoramaApi.spliceByIndex(index, item);\r\n                    }\r\n                };\r\n\r\n            settings.$element.data('gallery', api);\r\n            settings.api = settings.$element.data('gallery');\r\n            settings.$element.trigger('gallery:loaded');\r\n        }\r\n    });\r\n});\r\n","mage/utils/arrays.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    './strings'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Defines index of an item in a specified container.\r\n     *\r\n     * @param {*} item - Item whose index should be defined.\r\n     * @param {Array} container - Container upon which to perform search.\r\n     * @returns {Number}\r\n     */\r\n    function getIndex(item, container) {\r\n        var index = container.indexOf(item);\r\n\r\n        if (~index) {\r\n            return index;\r\n        }\r\n\r\n        return _.findIndex(container, function (value) {\r\n            return value && value.name === item;\r\n        });\r\n    }\r\n\r\n    return {\r\n       /**\r\n         * Facade method to remove/add value from/to array\r\n         * without creating a new instance.\r\n         *\r\n         * @param {Array} arr - Array to be modified.\r\n         * @param {*} value - Value to add/remove.\r\n         * @param {Boolean} add - Flag that specfies operation.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        toggle: function (arr, value, add) {\r\n            return add ?\r\n                this.add(arr, value) :\r\n                this.remove(arr, value);\r\n        },\r\n\r\n        /**\r\n         * Removes the incoming value from array in case\r\n         * without creating a new instance of it.\r\n         *\r\n         * @param {Array} arr - Array to be modified.\r\n         * @param {*} value - Value to be removed.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        remove: function (arr, value) {\r\n            var index = arr.indexOf(value);\r\n\r\n            if (~index) {\r\n                arr.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds the incoming value to array if\r\n         * it's not alredy present in there.\r\n         *\r\n         * @param {Array} arr - Array to be modifed.\r\n         * @param {...*} Values to be added.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        add: function (arr) {\r\n            var values = _.toArray(arguments).slice(1);\r\n\r\n            values.forEach(function (value) {\r\n                if (!~arr.indexOf(value)) {\r\n                    arr.push(value);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Inserts specified item into container at a specified position.\r\n         *\r\n         * @param {*} item - Item to be inserted into container.\r\n         * @param {Array} container - Container of items.\r\n         * @param {*} [position=-1] - Position at which item should be inserted.\r\n         *      Position can represent:\r\n         *          - specific index in container\r\n         *          - item which might already be present in container\r\n         *          - structure with one of these properties: after, before\r\n         * @returns {Boolean|*}\r\n         *      - true if element has changed its' position\r\n         *      - false if nothing has changed\r\n         *      - inserted value if it wasn't present in container\r\n         */\r\n        insert: function (item, container, position) {\r\n            var currentIndex = getIndex(item, container),\r\n                newIndex,\r\n                target;\r\n\r\n            if (typeof position === 'undefined' || position == null) {\r\n                position = -1;\r\n            } else if (typeof position === 'string') {\r\n                position = isNaN(+position) ? position : +position;\r\n            }\r\n\r\n            newIndex = position;\r\n\r\n            if (~currentIndex) {\r\n                target = container.splice(currentIndex, 1)[0];\r\n\r\n                if (typeof item === 'string') {\r\n                    item = target;\r\n                }\r\n            }\r\n\r\n            if (typeof position !== 'number') {\r\n                target = position.after || position.before || position;\r\n\r\n                newIndex = getIndex(target, container);\r\n\r\n                if (~newIndex && (position.after || newIndex >= currentIndex)) {\r\n                    newIndex++;\r\n                }\r\n            }\r\n\r\n            if (newIndex < 0) {\r\n                newIndex += container.length + 1;\r\n            }\r\n\r\n            container[newIndex] ?\r\n                container.splice(newIndex, 0, item) :\r\n                container[newIndex] = item;\r\n\r\n            return !~currentIndex ? item : currentIndex !== newIndex;\r\n        },\r\n\r\n        formatOffset: function (elems, offset) {\r\n            if (utils.isEmpty(offset)) {\r\n                offset = -1;\r\n            }\r\n\r\n            offset = +offset;\r\n\r\n            if (offset < 0) {\r\n                offset += elems.length + 1;\r\n            }\r\n\r\n            return offset;\r\n        }\r\n    };\r\n});\r\n","mage/utils/compare.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mage/utils/objects'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    var result = [];\r\n\r\n    /**\r\n     * Checks if all of the provided arrays contains equal values.\r\n     *\r\n     * @param {(Boolean|Array)} [keepOrder=false]\r\n     * @param {Array} target\r\n     * @returns {Boolean}\r\n     */\r\n    function equalArrays(keepOrder, target) {\r\n        var args = _.toArray(arguments),\r\n            arrays;\r\n\r\n        if (!Array.isArray(keepOrder)) {\r\n            arrays      = args.slice(2);\r\n        } else {\r\n            target      = keepOrder;\r\n            keepOrder   = false;\r\n            arrays      = args.slice(1);\r\n        }\r\n\r\n        if (!arrays.length) {\r\n            return true;\r\n        }\r\n\r\n        return arrays.every(function (array) {\r\n            if (array === target) {\r\n                return true;\r\n            } else if (array.length !== target.length) {\r\n                return false;\r\n            } else if (!keepOrder) {\r\n                return !_.difference(target, array).length;\r\n            }\r\n\r\n            return array.every(function (value, index) {\r\n                return target.indexOf(value) === index;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if two values are different.\r\n     *\r\n     * @param {*} a - First value.\r\n     * @param {*} b - Second value.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDifferent(a, b) {\r\n        var oldIsPrimitive = utils.isPrimitive(a);\r\n\r\n        if (Array.isArray(a) && Array.isArray(b)) {\r\n            return !equalArrays(true, a, b);\r\n        }\r\n\r\n        return oldIsPrimitive ? a !== b : true;\r\n    }\r\n\r\n    /**\r\n     * @param {String} prefix\r\n     * @param {String} part\r\n     */\r\n    function getPath(prefix, part) {\r\n        return prefix ? prefix + '.' + part : part;\r\n    }\r\n\r\n    /**\r\n     * Checks if object has own specified property.\r\n     *\r\n     * @param {*} obj - Value to be checked.\r\n     * @param {String} key - Key of the property.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasOwn(obj, key) {\r\n        return Object.prototype.hasOwnProperty.call(obj, key);\r\n    }\r\n\r\n    /**\r\n     * @param {Array} changes\r\n     */\r\n    function getContainers(changes) {\r\n        var containers  = {},\r\n            indexed     = _.indexBy(changes, 'path');\r\n\r\n        _.each(indexed, function (change, name) {\r\n            var path;\r\n\r\n            name.split('.').forEach(function (part) {\r\n                path = getPath(path, part);\r\n\r\n                if (path in indexed) {\r\n                    return;\r\n                }\r\n\r\n                (containers[path] = containers[path] || []).push(change);\r\n            });\r\n        });\r\n\r\n        return containers;\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {String} name\r\n     * @param {String} type\r\n     * @param {String} newValue\r\n     * @param {String} oldValue\r\n     */\r\n    function addChange(path, name, type, newValue, oldValue) {\r\n        var data;\r\n\r\n        data = {\r\n            path: path,\r\n            name: name,\r\n            type: type\r\n        };\r\n\r\n        if (type !== 'remove') {\r\n            data.value = newValue;\r\n            data.oldValue = oldValue;\r\n        } else {\r\n            data.oldValue = newValue;\r\n        }\r\n\r\n        result.push(data);\r\n    }\r\n\r\n    /**\r\n     * @param {String} ns\r\n     * @param {String} name\r\n     * @param {String} type\r\n     * @param {String} iterator\r\n     * @param {String} placeholder\r\n     */\r\n    function setAll(ns, name, type, iterator, placeholder) {\r\n        var key;\r\n\r\n        if (arguments.length > 4) {\r\n            type === 'add' ?\r\n                addChange(ns, name, 'update', iterator, placeholder) :\r\n                addChange(ns, name, 'update', placeholder, iterator);\r\n        } else {\r\n            addChange(ns, name, type, iterator);\r\n        }\r\n\r\n        if (!utils.isObject(iterator)) {\r\n            return;\r\n        }\r\n\r\n        for (key in iterator) {\r\n            if (hasOwn(iterator, key)) {\r\n                setAll(getPath(ns, key), key, type, iterator[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*eslint-disable max-depth*/\r\n    /**\r\n     * @param {Object} old\r\n     * @param {Object} current\r\n     * @param {String} ns\r\n     * @param {String} name\r\n     */\r\n    function compare(old, current, ns, name) {\r\n        var key,\r\n            oldIsObj = utils.isObject(old),\r\n            newIsObj = utils.isObject(current);\r\n\r\n        if (oldIsObj && newIsObj) {\r\n            for (key in old) {\r\n                if (hasOwn(old, key) && !hasOwn(current, key)) {\r\n                    setAll(getPath(ns, key), key, 'remove', old[key]);\r\n                }\r\n            }\r\n\r\n            for (key in current) {\r\n                if (hasOwn(current, key)) {\r\n                    hasOwn(old, key) ?\r\n                        compare(old[key], current[key], getPath(ns, key), key) :\r\n                        setAll(getPath(ns, key), key, 'add', current[key]);\r\n                }\r\n            }\r\n        } else if (oldIsObj) {\r\n            setAll(ns, name, 'remove', old, current);\r\n        } else if (newIsObj) {\r\n            setAll(ns, name, 'add', current, old);\r\n        } else if (isDifferent(old, current)) {\r\n            addChange(ns, name, 'update', current, old);\r\n        }\r\n    }\r\n\r\n    /*eslint-enable max-depth*/\r\n\r\n    return {\r\n\r\n        /**\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        compare: function () {\r\n            var changes;\r\n\r\n            compare.apply(null, arguments);\r\n\r\n            changes = result.splice(0);\r\n\r\n            return {\r\n                containers: getContainers(changes),\r\n                changes: changes,\r\n                equal: !changes.length\r\n            };\r\n        },\r\n\r\n        equalArrays: equalArrays\r\n    };\r\n});\r\n","mage/utils/main.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var utils = {},\r\n        _ = require('underscore');\r\n\r\n    return _.extend(\r\n        utils,\r\n        require('./arrays'),\r\n        require('./compare'),\r\n        require('./misc'),\r\n        require('./objects'),\r\n        require('./strings'),\r\n        require('./template')\r\n    );\r\n});\r\n","mage/utils/misc.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'FormData'\r\n], function (_, $) {\r\n    'use strict';\r\n\r\n    var defaultAttributes,\r\n        ajaxSettings,\r\n        map;\r\n\r\n    defaultAttributes = {\r\n        method: 'post',\r\n        enctype: 'multipart/form-data'\r\n    };\r\n\r\n    ajaxSettings = {\r\n        default: {\r\n            method: 'POST',\r\n            cache: false,\r\n            processData: false,\r\n            contentType: false\r\n        },\r\n        simple: {\r\n            method: 'POST',\r\n            dataType: 'json'\r\n        }\r\n    };\r\n\r\n    map = {\r\n        'D': 'DDD',\r\n        'dd': 'DD',\r\n        'd': 'D',\r\n        'EEEE': 'dddd',\r\n        'EEE': 'ddd',\r\n        'e': 'd',\r\n        'yyyy': 'YYYY',\r\n        'yy': 'YY',\r\n        'y': 'YYYY',\r\n        'a': 'A'\r\n    };\r\n\r\n    return {\r\n\r\n        /**\r\n         * Generates a unique identifier.\r\n         *\r\n         * @param {Number} [size=7] - Length of a resulting identifier.\r\n         * @returns {String}\r\n         */\r\n        uniqueid: function (size) {\r\n            var code = Math.random() * 25 + 65 | 0,\r\n                idstr = String.fromCharCode(code);\r\n\r\n            size = size || 7;\r\n\r\n            while (idstr.length < size) {\r\n                code = Math.floor(Math.random() * 42 + 48);\r\n\r\n                if (code < 58 || code > 64) {\r\n                    idstr += String.fromCharCode(code);\r\n                }\r\n            }\r\n\r\n            return idstr;\r\n        },\r\n\r\n        /**\r\n         * Limits function call.\r\n         *\r\n         * @param {Object} owner\r\n         * @param {String} target\r\n         * @param {Number} limit\r\n         */\r\n        limit: function (owner, target, limit) {\r\n            var fn = owner[target];\r\n\r\n            owner[target] = _.debounce(fn.bind(owner), limit);\r\n        },\r\n\r\n        /**\r\n         * Converts mage date format to a moment.js format.\r\n         *\r\n         * @param {String} mageFormat\r\n         * @returns {String}\r\n         */\r\n        normalizeDate: function (mageFormat) {\r\n            var result = mageFormat;\r\n\r\n            _.each(map, function (moment, mage) {\r\n                result = result.replace(mage, moment);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Puts provided value in range of min and max parameters.\r\n         *\r\n         * @param {Number} value - Value to be located.\r\n         * @param {Number} min - Min value.\r\n         * @param {Number} max - Max value.\r\n         * @returns {Number}\r\n         */\r\n        inRange: function (value, min, max) {\r\n            return Math.min(Math.max(min, value), max);\r\n        },\r\n\r\n        /**\r\n         * Serializes and sends data via POST request.\r\n         *\r\n         * @param {Object} options - Options object that consists of\r\n         *      a 'url' and 'data' properties.\r\n         * @param {Object} attrs - Attributes that will be added to virtual form.\r\n         */\r\n        submit: function (options, attrs) {\r\n            var form        = document.createElement('form'),\r\n                data        = this.serialize(options.data),\r\n                attributes  = _.extend({}, defaultAttributes, attrs || {}),\r\n                field;\r\n\r\n            if (!attributes.action) {\r\n                attributes.action = options.url;\r\n            }\r\n\r\n            data['form_key'] = window.FORM_KEY;\r\n\r\n            _.each(attributes, function (value, name) {\r\n                form.setAttribute(name, value);\r\n            });\r\n\r\n            _.each(data, function (value, name) {\r\n                field = document.createElement('input');\r\n\r\n                field.setAttribute('name', name);\r\n                field.setAttribute('type', 'hidden');\r\n\r\n                field.value = value;\r\n\r\n                form.appendChild(field);\r\n            });\r\n\r\n            document.body.appendChild(form);\r\n\r\n            form.submit();\r\n        },\r\n\r\n        /**\r\n         * Serializes and sends data via AJAX POST request.\r\n         *\r\n         * @param {Object} options - Options object that consists of\r\n         *      a 'url' and 'data' properties.\r\n         * @param {Object} config\r\n         */\r\n        ajaxSubmit: function (options, config) {\r\n            var t = new Date().getTime(),\r\n                settings;\r\n\r\n            options.data['form_key'] = window.FORM_KEY;\r\n            options.data = this.prepareFormData(options.data, config.ajaxSaveType);\r\n            settings = _.extend({}, ajaxSettings[config.ajaxSaveType], options || {});\r\n\r\n            $('body').trigger('processStart');\r\n\r\n            return $.ajax(settings)\r\n                .done(function (data) {\r\n                    data.t = t;\r\n                    config.response.data(data);\r\n                    config.response.status(undefined);\r\n                    config.response.status(!data.error);\r\n                })\r\n                .fail(function (xhr) {\r\n                    config.response.status(undefined);\r\n                    config.response.status(false);\r\n                    config.response.data({\r\n                        error: true,\r\n                        messages: xhr.statusText,\r\n                        t: t\r\n                    });\r\n                })\r\n                .always(function () {\r\n                    $('body').trigger('processStop');\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Creates FormData object and append this data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} type\r\n         * @returns {FormData}\r\n         */\r\n        prepareFormData: function (data, type) {\r\n            var formData;\r\n\r\n            if (type === 'default') {\r\n                formData = new FormData();\r\n                _.each(this.serialize(data), function (val, name) {\r\n                    formData.append(name, val);\r\n                });\r\n            } else if (type === 'simple') {\r\n                formData = this.serialize(data);\r\n            }\r\n\r\n            return formData;\r\n        },\r\n\r\n        /**\r\n         * Filters data object. Finds properties with suffix\r\n         * and sets their values to properties with the same name without suffix.\r\n         *\r\n         * @param {Object} data - The data object that should be filtered\r\n         * @param {String} suffix - The string by which data object should be filtered\r\n         * @param {String} separator - The string that is separator between property and suffix\r\n         *\r\n         * @returns {Object} Filtered data object\r\n         */\r\n        filterFormData: function (data, suffix, separator) {\r\n            data = data || {};\r\n            suffix = suffix || 'prepared-for-send';\r\n            separator = separator || '-';\r\n\r\n            _.each(data, function (value, key) {\r\n                if (_.isObject(value) && !value.length) {\r\n                    this.filterFormData(value, suffix, separator);\r\n                } else if (_.isString(key) && ~key.indexOf(suffix)) {\r\n                    data[key.split(separator)[0]] = value;\r\n                    delete data[key];\r\n                }\r\n            }, this);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Converts PHP IntlFormatter format to moment format.\r\n         *\r\n         * @param {String} format - PHP format\r\n         * @returns {String} - moment compatible formatting\r\n         */\r\n        convertToMomentFormat: function (format) {\r\n            var newFormat;\r\n\r\n            newFormat = format.replace(/yyyy|yy|y/, 'YYYY'); // replace the year\r\n            newFormat = newFormat.replace(/dd|d/g, 'DD'); // replace the day\r\n\r\n            return newFormat;\r\n        }\r\n    };\r\n});\r\n","mage/utils/objects.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore'\r\n], function (ko, $, _) {\r\n    'use strict';\r\n\r\n    var primitives = [\r\n        'undefined',\r\n        'boolean',\r\n        'number',\r\n        'string'\r\n    ];\r\n\r\n    /**\r\n     * Sets nested property of a specified object.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object to look inside for the properties.\r\n     * @param {Array} path - Splitted path the property.\r\n     * @param {*} value - Value of the last property in 'path' array.\r\n     * returns {*} New value for the property.\r\n     */\r\n    function setNested(parent, path, value) {\r\n        var last = path.pop(),\r\n            len = path.length,\r\n            pi = 0,\r\n            part = path[pi];\r\n\r\n        for (; pi < len; part = path[++pi]) {\r\n            if (!_.isObject(parent[part])) {\r\n                parent[part] = {};\r\n            }\r\n\r\n            parent = parent[part];\r\n        }\r\n\r\n        if (typeof parent[last] === 'function') {\r\n            parent[last](value);\r\n        } else {\r\n            parent[last] = value;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Retrieves value of a nested property.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object to look inside for the properties.\r\n     * @param {Array} path - Splitted path the property.\r\n     * @returns {*} Value of the property.\r\n     */\r\n    function getNested(parent, path) {\r\n        var exists = true,\r\n            len = path.length,\r\n            pi = 0;\r\n\r\n        for (; pi < len && exists; pi++) {\r\n            parent = parent[path[pi]];\r\n\r\n            if (typeof parent === 'undefined') {\r\n                exists = false;\r\n            }\r\n        }\r\n\r\n        if (exists) {\r\n            if (ko.isObservable(parent)) {\r\n                parent = parent();\r\n            }\r\n\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes property from a specified object.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object from which to remove property.\r\n     * @param {Array} path - Splitted path to the property.\r\n     */\r\n    function removeNested(parent, path) {\r\n        var field = path.pop();\r\n\r\n        parent = getNested(parent, path);\r\n\r\n        if (_.isObject(parent)) {\r\n            delete parent[field];\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Retrieves or defines objects' property by a composite path.\r\n         *\r\n         * @param {Object} data - Container for the properties specified in path.\r\n         * @param {String} path - Objects' properties divided by dots.\r\n         * @param {*} [value] - New value for the last property.\r\n         * @returns {*} Returns value of the last property in chain.\r\n         *\r\n         * @example\r\n         *      utils.nested({}, 'one.two', 3);\r\n         *      => { one: {two: 3} }\r\n         */\r\n        nested: function (data, path, value) {\r\n            var action = arguments.length > 2 ? setNested : getNested;\r\n\r\n            path = path ? path.split('.') : [];\r\n\r\n            return action(data, path, value);\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from an object.\r\n         *\r\n         * @param {Object} data - Data source.\r\n         * @param {String} path - Path to the property e.g. 'one.two.three'\r\n         */\r\n        nestedRemove: function (data, path) {\r\n            path = path.split('.');\r\n\r\n            removeNested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Flattens objects' nested properties.\r\n         *\r\n         * @param {Object} data - Object to flatten.\r\n         * @param {String} [separator='.'] - Objects' keys separator.\r\n         * @returns {Object} Flattened object.\r\n         *\r\n         * @example Example with a default separator.\r\n         *      utils.flatten({one: { two: { three: 'value'} }});\r\n         *      => { 'one.two.three': 'value' };\r\n         *\r\n         * @example Example with a custom separator.\r\n         *      utils.flatten({one: { two: { three: 'value'} }}, '=>');\r\n         *      => {'one=>two=>three': 'value'};\r\n         */\r\n        flatten: function (data, separator, parent, result) {\r\n            separator = separator || '.';\r\n            result = result || {};\r\n\r\n            _.each(data, function (node, name) {\r\n                if (parent) {\r\n                    name = parent + separator + name;\r\n                }\r\n\r\n                typeof node === 'object' ?\r\n                    this.flatten(node, separator, name, result) :\r\n                    result[name] = node;\r\n\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Opposite operation of the 'flatten' method.\r\n         *\r\n         * @param {Object} data - Previously flattened object.\r\n         * @param {String} [separator='.'] - Keys separator.\r\n         * @returns {Object} Object with nested properties.\r\n         *\r\n         * @example Example using custom separator.\r\n         *      utils.unflatten({'one=>two': 'value'}, '=>');\r\n         *      => {\r\n         *          one: { two: 'value' }\r\n         *      };\r\n         */\r\n        unflatten: function (data, separator) {\r\n            var result = {};\r\n\r\n            separator = separator || '.';\r\n\r\n            _.each(data, function (value, nodes) {\r\n                nodes = nodes.split(separator);\r\n\r\n                setNested(result, nodes, value);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Same operation as 'flatten' method,\r\n         * but returns objects' keys wrapped in '[]'.\r\n         *\r\n         * @param {Object} data - Object that should be serialized.\r\n         * @returns {Object} Serialized data.\r\n         *\r\n         * @example\r\n         *      utils.serialize({one: { two: { three: 'value'} }});\r\n         *      => { 'one[two][three]': 'value' }\r\n         */\r\n        serialize: function (data) {\r\n            var result = {};\r\n\r\n            data = this.flatten(data);\r\n\r\n            _.each(data, function (value, keys) {\r\n                keys = this.serializeName(keys);\r\n                value = _.isUndefined(value) ? '' : value;\r\n\r\n                result[keys] = value;\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Performs deep extend of specified objects.\r\n         *\r\n         * @returns {Object|Array} Extended object.\r\n         */\r\n        extend: function () {\r\n            var args = _.toArray(arguments);\r\n\r\n            args.unshift(true);\r\n\r\n            return $.extend.apply($, args);\r\n        },\r\n\r\n        /**\r\n         * Performs a deep clone of a specified object.\r\n         *\r\n         * @param {(Object|Array)} data - Data that should be copied.\r\n         * @returns {Object|Array} Cloned object.\r\n         */\r\n        copy: function (data) {\r\n            var result = data,\r\n                isArray = Array.isArray(data),\r\n                placeholder;\r\n\r\n            if (this.isObject(data) || isArray) {\r\n                placeholder = isArray ? [] : {};\r\n                result = this.extend(placeholder, data);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Performs a deep clone of a specified object.\r\n         * Doesn't save links to original object.\r\n         *\r\n         * @param {*} original - Object to clone\r\n         * @returns {*}\r\n         */\r\n        hardCopy: function (original) {\r\n            if (original === null || typeof original !== 'object') {\r\n                return original;\r\n            }\r\n\r\n            return JSON.parse(JSON.stringify(original));\r\n        },\r\n\r\n        /**\r\n         * Removes specified nested properties from the target object.\r\n         *\r\n         * @param {Object} target - Object whose properties should be removed.\r\n         * @param {(...String|Array|Object)} list - List that specifies properties to be removed.\r\n         * @returns {Object} Modified object.\r\n         *\r\n         * @example Basic usage\r\n         *      var obj = {a: {b: 2}, c: 'a'};\r\n         *\r\n         *      omit(obj, 'a.b');\r\n         *      => {'a.b': 2};\r\n         *      obj => {a: {}, c: 'a'};\r\n         *\r\n         * @example Various syntaxes that would return same result\r\n         *      omit(obj, ['a.b', 'c']);\r\n         *      omit(obj, 'a.b', 'c');\r\n         *      omit(obj, {'a.b': true, 'c': true});\r\n         */\r\n        omit: function (target, list) {\r\n            var removed = {},\r\n                ignored = list;\r\n\r\n            if (this.isObject(list)) {\r\n                ignored = [];\r\n\r\n                _.each(list, function (value, key) {\r\n                    if (value) {\r\n                        ignored.push(key);\r\n                    }\r\n                });\r\n            } else if (_.isString(list)) {\r\n                ignored = _.toArray(arguments).slice(1);\r\n            }\r\n\r\n            _.each(ignored, function (path) {\r\n                var value = this.nested(target, path);\r\n\r\n                if (!_.isUndefined(value)) {\r\n                    removed[path] = value;\r\n\r\n                    this.nestedRemove(target, path);\r\n                }\r\n            }, this);\r\n\r\n            return removed;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided value is a plain object.\r\n         *\r\n         * @param {*} value - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isObject: function (value) {\r\n            var objProto = Object.prototype;\r\n\r\n            return typeof value == 'object' ?\r\n            objProto.toString.call(value) === '[object Object]' :\r\n                false;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {*} value\r\n         * @returns {Boolean}\r\n         */\r\n        isPrimitive: function (value) {\r\n            return value === null || ~primitives.indexOf(typeof value);\r\n        },\r\n\r\n        /**\r\n         * Iterates over obj props/array elems recursively, applying action to each one\r\n         *\r\n         * @param {Object|Array} data - Data to be iterated.\r\n         * @param {Function} action - Callback to be called with each item as an argument.\r\n         * @param {Number} [maxDepth=7] - Max recursion depth.\r\n         */\r\n        forEachRecursive: function (data, action, maxDepth) {\r\n            maxDepth = typeof maxDepth === 'number' && !isNaN(maxDepth) ? maxDepth - 1 : 7;\r\n\r\n            if (!_.isFunction(action) || _.isFunction(data) || maxDepth < 0) {\r\n                return;\r\n            }\r\n\r\n            if (!_.isObject(data)) {\r\n                action(data);\r\n\r\n                return;\r\n            }\r\n\r\n            _.each(data, function (value) {\r\n                this.forEachRecursive(value, action, maxDepth);\r\n            }, this);\r\n\r\n            action(data);\r\n        },\r\n\r\n        /**\r\n         * Maps obj props/array elems recursively\r\n         *\r\n         * @param {Object|Array} data - Data to be iterated.\r\n         * @param {Function} action - Callback to transform each item.\r\n         * @param {Number} [maxDepth=7] - Max recursion depth.\r\n         *\r\n         * @returns {Object|Array}\r\n         */\r\n        mapRecursive: function (data, action, maxDepth) {\r\n            var newData;\r\n\r\n            maxDepth = typeof maxDepth === 'number' && !isNaN(maxDepth) ? maxDepth - 1 : 7;\r\n\r\n            if (!_.isFunction(action) || _.isFunction(data) || maxDepth < 0) {\r\n                return data;\r\n            }\r\n\r\n            if (!_.isObject(data)) {\r\n                return action(data);\r\n            }\r\n\r\n            if (_.isArray(data)) {\r\n                newData = _.map(data, function (item) {\r\n                    return this.mapRecursive(item, action, maxDepth);\r\n                }, this);\r\n\r\n                return action(newData);\r\n            }\r\n\r\n            newData = _.mapObject(data, function (val, key) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    return this.mapRecursive(val, action, maxDepth);\r\n                }\r\n\r\n                return val;\r\n            }, this);\r\n\r\n            return action(newData);\r\n        },\r\n\r\n        /**\r\n         * Removes empty(in common sence) obj props/array elems\r\n         *\r\n         * @param {*} data - Data to be cleaned.\r\n         * @returns {*}\r\n         */\r\n        removeEmptyValues: function (data) {\r\n            if (!_.isObject(data)) {\r\n                return data;\r\n            }\r\n\r\n            if (_.isArray(data)) {\r\n                return data.filter(function (item) {\r\n                    return !this.isEmptyObj(item);\r\n                }, this);\r\n            }\r\n\r\n            return _.omit(data, this.isEmptyObj.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Checks that argument of any type is empty in common sence:\r\n         * empty string, string with spaces only, object without own props, empty array, null or undefined\r\n         *\r\n         * @param {*} val - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isEmptyObj: function (val) {\r\n\r\n            return _.isObject(val) && _.isEmpty(val) ||\r\n            this.isEmpty(val) ||\r\n            val && val.trim && this.isEmpty(val.trim());\r\n        }\r\n    };\r\n});\r\n","mage/utils/strings.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var jsonRe = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to convert string to one of the primitive values,\r\n         * or to parse it as a valid json object.\r\n         *\r\n         * @param {String} str - String to be processed.\r\n         * @returns {*}\r\n         */\r\n        castString: function (str) {\r\n            try {\r\n                str = str === 'true' ? true :\r\n                    str === 'false' ? false :\r\n                        str === 'null' ? null :\r\n                            +str + '' === str ? +str :\r\n                                jsonRe.test(str) ? JSON.parse(str) :\r\n                                    str;\r\n            } catch (e) {\r\n            }\r\n\r\n            return str;\r\n        },\r\n\r\n        /**\r\n         * Splits string by separator if it's possible,\r\n         * otherwise returns the incoming value.\r\n         *\r\n         * @param {(String|Array|*)} str - String to split.\r\n         * @param {String} [separator=' '] - Seperator based on which to split the string.\r\n         * @returns {Array|*} Splitted string or the incoming value.\r\n         */\r\n        stringToArray: function (str, separator) {\r\n            separator = separator || ' ';\r\n\r\n            return typeof str === 'string' ?\r\n                str.split(separator) :\r\n                str;\r\n        },\r\n\r\n        /**\r\n         * Converts the incoming string which consists\r\n         * of a specified delimiters into a format commonly used in form elements.\r\n         *\r\n         * @param {String} name - The incoming string.\r\n         * @param {String} [separator='.']\r\n         * @returns {String} Serialized string.\r\n         *\r\n         * @example\r\n         *      utils.serializeName('one.two.three');\r\n         *      => 'one[two][three]';\r\n         */\r\n        serializeName: function (name, separator) {\r\n            var result;\r\n\r\n            separator = separator || '.';\r\n            name = name.split(separator);\r\n\r\n            result = name.shift();\r\n\r\n            name.forEach(function (part) {\r\n                result += '[' + part + ']';\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Checks wether the incoming value is not empty,\r\n         * e.g. not 'null' or 'undefined'\r\n         *\r\n         * @param {*} value - Value to check.\r\n         * @returns {Boolean}\r\n         */\r\n        isEmpty: function (value) {\r\n            return value === '' || _.isUndefined(value) || _.isNull(value);\r\n        },\r\n\r\n        /**\r\n         * Adds 'prefix' to the 'part' value if it was provided.\r\n         *\r\n         * @param {String} prefix\r\n         * @param {String} part\r\n         * @returns {String}\r\n         */\r\n        fullPath: function (prefix, part) {\r\n            return prefix ? prefix + '.' + part : part;\r\n        },\r\n\r\n        /**\r\n         * Splits incoming string and returns its' part specified by offset.\r\n         *\r\n         * @param {String} parts\r\n         * @param {Number} [offset]\r\n         * @param {String} [delimiter=.]\r\n         * @returns {String}\r\n         */\r\n        getPart: function (parts, offset, delimiter) {\r\n            delimiter = delimiter || '.';\r\n            parts = parts.split(delimiter);\r\n            offset = this.formatOffset(parts, offset);\r\n\r\n            parts.splice(offset, 1);\r\n\r\n            return parts.join(delimiter) || '';\r\n        },\r\n\r\n        /**\r\n         * Converts nameThroughCamelCase to name-through-minus\r\n         *\r\n         * @param {String} string\r\n         * @returns {String}\r\n         */\r\n        camelCaseToMinus: function camelCaseToMinus(string) {\r\n            return ('' + string)\r\n                .split('')\r\n                .map(function (symbol, index) {\r\n                    return index ?\r\n                        symbol.toUpperCase() === symbol ?\r\n                        '-' + symbol.toLowerCase() :\r\n                            symbol :\r\n                        symbol.toLowerCase();\r\n                })\r\n                .join('');\r\n        },\r\n\r\n        /**\r\n         * Converts name-through-minus to nameThroughCamelCase\r\n         *\r\n         * @param {String} string\r\n         * @returns {String}\r\n         */\r\n        minusToCamelCase: function minusToCamelCase(string) {\r\n            return ('' + string)\r\n                .split('-')\r\n                .map(function (part, index) {\r\n                    return index ? part.charAt(0).toUpperCase() + part.slice(1) : part;\r\n                })\r\n                .join('');\r\n        }\r\n    };\r\n});\r\n","mage/utils/template.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable no-shadow */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/utils/objects',\r\n    'mage/utils/strings'\r\n], function ($, _, utils, stringUtils) {\r\n    'use strict';\r\n\r\n    var tmplSettings = _.templateSettings,\r\n        interpolate = /\\$\\{([\\s\\S]+?)\\}/g,\r\n        opener = '${',\r\n        template,\r\n        hasStringTmpls;\r\n\r\n    /**\r\n     * Identifies whether ES6 templates are supported.\r\n     */\r\n    hasStringTmpls = (function () {\r\n        var testString = 'var foo = \"bar\"; return `${ foo }` === foo';\r\n\r\n        try {\r\n            return Function(testString)();\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    if (hasStringTmpls) {\r\n\r\n        /*eslint-disable no-unused-vars, no-eval*/\r\n        /**\r\n         * Evaluates template string using ES6 templates.\r\n         *\r\n         * @param {String} tmpl - Template string.\r\n         * @param {Object} $ - Data object used in a template.\r\n         * @returns {String} Compiled template.\r\n         */\r\n        template = function (tmpl, $) {\r\n            return eval('`' + tmpl + '`');\r\n        };\r\n\r\n        /*eslint-enable no-unused-vars, no-eval*/\r\n    } else {\r\n\r\n        /**\r\n         * Fallback function used when ES6 templates are not supported.\r\n         * Uses underscore templates renderer.\r\n         *\r\n         * @param {String} tmpl - Template string.\r\n         * @param {Object} data - Data object used in a template.\r\n         * @returns {String} Compiled template.\r\n         */\r\n        template = function (tmpl, data) {\r\n            var cached = tmplSettings.interpolate;\r\n\r\n            tmplSettings.interpolate = interpolate;\r\n\r\n            tmpl = _.template(tmpl, {\r\n                variable: '$'\r\n            })(data);\r\n\r\n            tmplSettings.interpolate = cached;\r\n\r\n            return tmpl;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks if provided value contains template syntax.\r\n     *\r\n     * @param {*} value - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isTemplate(value) {\r\n        return typeof value === 'string' && ~value.indexOf(opener);\r\n    }\r\n\r\n    /**\r\n     * Iteratively processes provided string\r\n     * until no templates syntax will be found.\r\n     *\r\n     * @param {String} tmpl - Template string.\r\n     * @param {Object} data - Data object used in a template.\r\n     * @param {Boolean} [castString=false] - Flag that indicates whether template\r\n     *      should be casted after evaluation to a value of another type or\r\n     *      that it should be leaved as a string.\r\n     * @returns {*} Compiled template.\r\n     */\r\n    function render(tmpl, data, castString) {\r\n        var last = tmpl;\r\n\r\n        while (~tmpl.indexOf(opener)) {\r\n            tmpl = template(tmpl, data);\r\n\r\n            if (tmpl === last) {\r\n                break;\r\n            }\r\n\r\n            last = tmpl;\r\n        }\r\n\r\n        return castString ?\r\n            stringUtils.castString(tmpl) :\r\n            tmpl;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Applies provided data to the template.\r\n         *\r\n         * @param {Object|String} tmpl\r\n         * @param {Object} [data] - Data object to match with template.\r\n         * @param {Boolean} [castString=false] - Flag that indicates whether template\r\n         *      should be casted after evaluation to a value of another type or\r\n         *      that it should be leaved as a string.\r\n         * @returns {*}\r\n         *\r\n         * @example Template defined as a string.\r\n         *      var source = { foo: 'Random Stuff', bar: 'Some' };\r\n         *\r\n         *      utils.template('${ $.bar } ${ $.foo }', source);\r\n         *      => 'Some Random Stuff';\r\n         *\r\n         * @example Template defined as an object.\r\n         *      var tmpl = {\r\n         *              key: {'${ $.$data.bar }': '${ $.$data.foo }'},\r\n         *              foo: 'bar',\r\n         *              x1: 2, x2: 5,\r\n         *              delta: '${ $.x2 - $.x1 }',\r\n         *              baz: 'Upper ${ $.foo.toUpperCase() }'\r\n         *      };\r\n         *\r\n         *      utils.template(tmpl, source);\r\n         *      => {\r\n         *          key: {'Some': 'Random Stuff'},\r\n         *          foo: 'bar',\r\n         *          x1: 2, x2: 5,\r\n         *          delta: 3,\r\n         *          baz: 'Upper BAR'\r\n         *      };\r\n         */\r\n        template: function (tmpl, data, castString, dontClone) {\r\n            if (typeof tmpl === 'string') {\r\n                return render(tmpl, data, castString);\r\n            }\r\n\r\n            if (!dontClone) {\r\n                tmpl = utils.copy(tmpl);\r\n            }\r\n\r\n            tmpl.$data = data || {};\r\n\r\n            /**\r\n             * Template iterator function.\r\n             */\r\n            _.each(tmpl, function iterate(value, key, list) {\r\n                if (key === '$data') {\r\n                    return;\r\n                }\r\n\r\n                if (isTemplate(key)) {\r\n                    delete list[key];\r\n\r\n                    key = render(key, tmpl);\r\n                    list[key] = value;\r\n                }\r\n\r\n                if (isTemplate(value)) {\r\n                    list[key] = render(value, tmpl, castString);\r\n                } else if ($.isPlainObject(value) || Array.isArray(value)) {\r\n                    _.each(value, iterate);\r\n                }\r\n            });\r\n\r\n            delete tmpl.$data;\r\n\r\n            return tmpl;\r\n        }\r\n    };\r\n});\r\n","mage/utils/wrapper.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Utility methods used to wrap and extend functions.\r\n *\r\n * @example Usage of a 'wrap' method with arguments delegation.\r\n *      var multiply = function (a, b) {\r\n *          return a * b;\r\n *      };\r\n *\r\n *      multiply = module.wrap(multiply, function (orig) {\r\n *          return 'Result is: ' + orig();\r\n *      });\r\n *\r\n *      multiply(2, 2);\r\n *      => 'Result is: 4'\r\n *\r\n * @example Usage of 'wrapSuper' method.\r\n *      var multiply = function (a, b) {\r\n *         return a * b;\r\n *      };\r\n *\r\n *      var obj = {\r\n *          multiply: module.wrapSuper(multiply, function () {\r\n *              return 'Result is: ' + this._super();\r\n *          });\r\n *      };\r\n *\r\n *      obj.multiply(2, 2);\r\n *      => 'Result is: 4'\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if string has a '_super' substring.\r\n     */\r\n    var superReg = /\\b_super\\b/;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Wraps target function with a specified wrapper, which will recieve\r\n         * reference to the original function as a first argument.\r\n         *\r\n         * @param {Function} target - Function to be wrapped.\r\n         * @param {Function} wrapper - Wrapper function.\r\n         * @returns {Function} Wrapper function.\r\n         */\r\n        wrap: function (target, wrapper) {\r\n            if (!_.isFunction(target) || !_.isFunction(wrapper)) {\r\n                return wrapper;\r\n            }\r\n\r\n            return function () {\r\n                var args    = _.toArray(arguments),\r\n                    ctx     = this,\r\n                    _super;\r\n\r\n                /**\r\n                 * Function that will be passed to the wrapper.\r\n                 * If no arguments will be passed to it, then the original\r\n                 * function will be called with an arguments of a wrapper function.\r\n                 */\r\n                _super = function () {\r\n                    var superArgs = arguments.length ? arguments : args.slice(1);\r\n\r\n                    return target.apply(ctx, superArgs);\r\n                };\r\n\r\n                args.unshift(_super);\r\n\r\n                return wrapper.apply(ctx, args);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Wraps the incoming function to implement support of the '_super' method.\r\n         *\r\n         * @param {Function} target - Function to be wrapped.\r\n         * @param {Function} wrapper - Wrapper function.\r\n         * @returns {Function} Wrapped function.\r\n         */\r\n        wrapSuper: function (target, wrapper) {\r\n            if (!this.hasSuper(wrapper) || !_.isFunction(target)) {\r\n                return wrapper;\r\n            }\r\n\r\n            return function () {\r\n                var _super  = this._super,\r\n                    args    = arguments,\r\n                    result;\r\n\r\n                /**\r\n                 * Temporary define '_super' method which\r\n                 * contains call to the original function.\r\n                 */\r\n                this._super = function () {\r\n                    var superArgs = arguments.length ? arguments : args;\r\n\r\n                    return target.apply(this, superArgs);\r\n                };\r\n\r\n                result = wrapper.apply(this, args);\r\n\r\n                this._super = _super;\r\n\r\n                return result;\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Checks wether the incoming method contains calls of the '_super' method.\r\n         *\r\n         * @param {Function} fn - Function to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        hasSuper: function (fn) {\r\n            return _.isFunction(fn) && superReg.test(fn);\r\n        },\r\n\r\n        /**\r\n         * Extends target object with provided extenders.\r\n         * If property in target and extender objects is a function,\r\n         * then it will be wrapped using 'wrap' method.\r\n         *\r\n         * @param {Object} target - Object to be extended.\r\n         * @param {...Object} extenders - Multiple extenders objects.\r\n         * @returns {Object} Modified target object.\r\n         */\r\n        extend: function (target) {\r\n            var extenders = _.toArray(arguments).slice(1),\r\n                iterator = this._extend.bind(this, target);\r\n\r\n            extenders.forEach(iterator);\r\n\r\n            return target;\r\n        },\r\n\r\n        /**\r\n         * Same as the 'extend' method, but operates only on one extender object.\r\n         *\r\n         * @private\r\n         * @param {Object} target\r\n         * @param {Object} extender\r\n         */\r\n        _extend: function (target, extender) {\r\n            _.each(extender, function (value, key) {\r\n                target[key] = this.wrap(target[key], extender[key]);\r\n            }, this);\r\n        }\r\n    };\r\n});\r\n","mage/validation/url.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Redirects to the url if it is considered safe\r\n         *\r\n         * @param {String} path - url to be redirected to\r\n         */\r\n        redirect: function (path) {\r\n            path = this.sanitize(path);\r\n\r\n            if (this.validate(path)) {\r\n                window.location.href = path;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validates url\r\n         *\r\n         * @param {Object} path - url to be validated\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function (path) {\r\n            var hostname = window.location.hostname;\r\n\r\n            if (path.indexOf(hostname) === -1 ||\r\n                path.indexOf('javascript:') !== -1 ||\r\n                path.indexOf('vbscript:') !== -1) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Sanitize url, replacing disallowed chars\r\n         *\r\n         * @param {String} path - url to be normalized\r\n         * @returns {String}\r\n         */\r\n        sanitize: function (path) {\r\n            return path.replace('[^-A-Za-z0-9+&@#/%?=~_|!:,.;\\(\\)]', '');\r\n        }\r\n    };\r\n});\r\n","mage/validation/validation.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            \"jquery\",\r\n            \"mage/validation\",\r\n            \"mage/translate\"\r\n        ], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    \"use strict\";\r\n\r\n    $.each({\r\n        'validate-grouped-qty': [\r\n            function (value, element, params) {\r\n                var result = false;\r\n                var total = 0;\r\n                $(params).find('input[data-validate*=\"validate-grouped-qty\"]').each(function (i, e) {\r\n                    var val = $(e).val();\r\n                    if (val && val.length > 0) {\r\n                        result = true;\r\n                        var valInt = parseFloat(val) || 0;\r\n                        if (valInt >= 0) {\r\n                            total += valInt;\r\n                        } else {\r\n                            result = false;\r\n                            return result;\r\n                        }\r\n                    }\r\n                });\r\n                return result && total > 0;\r\n            },\r\n            $.mage.__('Please specify the quantity of product(s).')\r\n        ],\r\n        'validate-one-checkbox-required-by-name': [\r\n            function (value, element, params) {\r\n                var checkedCount = 0;\r\n                if (element.type === 'checkbox') {\r\n                    $('[name=\"' + element.name + '\"]').each(function () {\r\n                        if ($(this).is(':checked')) {\r\n                            checkedCount += 1;\r\n                            return false;\r\n                        }\r\n                    });\r\n                }\r\n                var container = '#' + params;\r\n                if (checkedCount > 0) {\r\n                    $(container).removeClass('validation-failed');\r\n                    $(container).addClass('validation-passed');\r\n                    return true;\r\n                } else {\r\n                    $(container).addClass('validation-failed');\r\n                    $(container).removeClass('validation-passed');\r\n                    return false;\r\n                }\r\n            },\r\n            $.mage.__('Please select one of the options.')\r\n        ],\r\n        'validate-date-between': [\r\n            function (value, element, params) {\r\n                var minDate = new Date(params[0]),\r\n                    maxDate = new Date(params[1]),\r\n                    inputDate = new Date(element.value);\r\n                minDate.setHours(0);\r\n                maxDate.setHours(0);\r\n                if (inputDate >= minDate && inputDate <= maxDate) {\r\n                    return true;\r\n                }\r\n                var message = $.mage.__('Please enter a date between %min and %max.');\r\n                this.dateBetweenErrorMessage = message.replace('%min', minDate).replace('%max', maxDate);\r\n                return false;\r\n            },\r\n            function () {\r\n                return this.dateBetweenErrorMessage;\r\n            }\r\n        ],\r\n        'validate-dob': [\r\n            function (val, element, params) {\r\n                var dob = $(element).parents('.customer-dob');\r\n                $(dob).find('.' + this.settings.errorClass).removeClass(this.settings.errorClass);\r\n                var dayVal = $(dob).find(params[0]).find('input:text').val(),\r\n                    monthVal = $(dob).find(params[1]).find('input:text').val(),\r\n                    yearVal = $(dob).find(params[2]).find('input:text').val(),\r\n                    dobLength = dayVal.length + monthVal.length + yearVal.length;\r\n                if (params[3] && dobLength === 0) {\r\n                    this.dobErrorMessage = $.mage.__('This is a required field.');\r\n                    return false;\r\n                }\r\n                if (!params[3] && dobLength === 0) {\r\n                    return true;\r\n                }\r\n                var day = parseInt(dayVal, 10) || 0,\r\n                    month = parseInt(monthVal, 10) || 0,\r\n                    year = parseInt(yearVal, 10) || 0,\r\n                    curYear = (new Date()).getFullYear();\r\n                if (!day || !month || !year) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a valid full date.');\r\n                    return false;\r\n                }\r\n                if (month < 1 || month > 12) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a valid month (1-12).');\r\n                    return false;\r\n                }\r\n                if (year < 1900 || year > curYear) {\r\n                    var validYearMessage = $.mage.__('Please enter a valid year (1900-%1).');\r\n                    this.dobErrorMessage = validYearMessage.replace('%1', curYear.toString());\r\n                    return false;\r\n                }\r\n                var validateDayInMonth = new Date(year, month, 0).getDate();\r\n                if (day < 1 || day > validateDayInMonth) {\r\n                    var validDateMessage = $.mage.__('Please enter a valid day (1-%1).');\r\n                    this.dobErrorMessage = validDateMessage.replace('%1', validateDayInMonth.toString());\r\n                    return false;\r\n                }\r\n                var today = new Date(),\r\n                    dateEntered = new Date();\r\n                dateEntered.setFullYear(year, month - 1, day);\r\n                if (dateEntered > today) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a date from the past.');\r\n                    return false;\r\n                }\r\n\r\n                day = day % 10 === day ? '0' + day : day;\r\n                month = month % 10 === month ? '0' + month : month;\r\n                $(element).val(month + '/' + day + '/' + year);\r\n                return true;\r\n            },\r\n            function () {\r\n                return this.dobErrorMessage;\r\n            }\r\n        ]\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n}));\r\n","mage/view/composite.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(['jquery'], function($) {\r\n    return function (wrapperTag) {\r\n        wrapperTag = wrapperTag || 'div';\r\n        var renderedChildren = {};\r\n        var children = {};\r\n        return {\r\n            addChild: function (child, key) {\r\n                children[key] = child;\r\n            },\r\n\r\n            render: function (root) {\r\n                $.each(children, function (key, child) {\r\n                    var childRoot = $('<div>');\r\n                    renderedChildren[key] = child.render(childRoot);\r\n                    root.append(childRoot);\r\n                });\r\n            }\r\n        }\r\n    }\r\n});\r\n","magnifier/magnifier.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n;(function ($) {\r\n    $.fn.magnify = function (options) {\r\n        'use strict';\r\n\r\n        var magnify = new Magnify($(this), options);\r\n        /*events must be tracked here*/\r\n\r\n        /**\r\n         * Return that from _init function\r\n         *\r\n         */\r\n        return magnify;\r\n\r\n    };\r\n\r\n    function Magnify(element, options) {\r\n        var gOptions = options || {},\r\n            $box = $(element),\r\n            $thumb,\r\n            that = this,\r\n            largeWrapper = options.largeWrapper ||  \".magnifier-preview\",\r\n            $largeWrapper = $(largeWrapper);\r\n        curThumb = null,\r\n            currentOpts = {\r\n                x: 0,\r\n                y: 0,\r\n                w: 0,\r\n                h: 0,\r\n                lensW: 0,\r\n                lensH: 0,\r\n                lensBgX: 0,\r\n                lensBgY: 0,\r\n                largeW: 0,\r\n                largeH: 0,\r\n                largeL: 0,\r\n                largeT: 0,\r\n                zoom: 2,\r\n                zoomMin: 1.1,\r\n                zoomMax: 5,\r\n                mode: 'outside',\r\n                eventType: 'click',\r\n                status: 0,\r\n                zoomAttached: false,\r\n                zoomable: (gOptions.zoomable !== undefined)\r\n                    ? gOptions.zoomable\r\n                    : false,\r\n                onthumbenter: (gOptions.onthumbenter !== undefined)\r\n                    ? gOptions.onthumbenter\r\n                    : null,\r\n                onthumbmove: (gOptions.onthumbmove !== undefined)\r\n                    ? gOptions.onthumbmove\r\n                    : null,\r\n                onthumbleave: (gOptions.onthumbleave !== undefined)\r\n                    ? gOptions.onthumbleave\r\n                    : null,\r\n                onzoom: (gOptions.onzoom !== undefined)\r\n                    ? gOptions.onzoom\r\n                    : null\r\n            },\r\n            pos = {\r\n                t: 0,\r\n                l: 0,\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            gId = 0,\r\n            status = 0,\r\n            curIdx = '',\r\n            curLens = null,\r\n            curLarge = null,\r\n            lensbg = (gOptions.bg !== undefined) ? gOptions.lensbg : true,\r\n            gZoom = (gOptions.zoom !== undefined)\r\n                ? gOptions.zoom\r\n                : currentOpts.zoom,\r\n            gZoomMin = (gOptions.zoomMin !== undefined)\r\n                ? gOptions.zoomMin\r\n                : currentOpts.zoomMin,\r\n            gZoomMax = (gOptions.zoomMax !== undefined)\r\n                ? gOptions.zoomMax\r\n                : currentOpts.zoomMax,\r\n            gMode = gOptions.mode || currentOpts.mode,\r\n            gEventType = gOptions.eventType || currentOpts.eventType,\r\n            data = {},\r\n            inBounds = false,\r\n            isOverThumb = false,\r\n            rate = 1,\r\n            paddingX = 0,\r\n            paddingY = 0,\r\n            enabled = true,\r\n            showWrapper = true;\r\n\r\n        var MagnifyCls = {\r\n            magnifyHidden: \"magnify-hidden\",\r\n            magnifyOpaque: \"magnify-opaque\",\r\n            magnifyFull: \"magnify-fullimage\"\r\n\r\n        };\r\n\r\n\r\n        /**\r\n         * Update Lens positon on.\r\n         *\r\n         */\r\n        that.update = function () {\r\n            updateLensOnLoad();\r\n        };\r\n\r\n        /**\r\n         * Init new Magnifier\r\n         *\r\n         */\r\n        that.init = function () {\r\n            _init($box, options);\r\n        };\r\n\r\n        function _toBoolean (str) {\r\n            if (typeof  str === 'string') {\r\n                if (str === 'true') {\r\n                    return true;\r\n                } else if (str === 'false' || '') {\r\n                    return false;\r\n                } else {\r\n                    console.warn(\"Wrong type: can't be transformed to Boolean\");\r\n                }\r\n            } else if (typeof str === 'boolean') {\r\n                return str;\r\n            }\r\n        }\r\n\r\n        function createLens(thumb) {\r\n            if ($(thumb).siblings('.magnify-lens').length) {\r\n                return false;\r\n            }\r\n            var lens = $('<div class=\"magnify-lens magnify-hidden\" data-gallery-role=\"magnifier-zoom\"></div>');\r\n            $(thumb).parent().append(lens);\r\n        }\r\n\r\n        function updateLensOnLoad(idx, thumb, large, largeWrapper) {\r\n            var lens = $box.find('.magnify-lens'),\r\n                textWrapper;\r\n\r\n            if (data[idx].status === 1) {\r\n                textWrapper = $('<div class=\"magnifier-loader-text\"></div>');\r\n                lens.className = 'magnifier-loader magnify-hidden';\r\n                textWrapper.html(\"Loading...\");\r\n                lens.html(\"\").append(textWrapper);\r\n            } else if (data[idx].status === 2) {\r\n                lens.addClass(MagnifyCls.magnifyHidden);\r\n                lens.html(\"\");\r\n                large.id = idx + '-large';\r\n                large.style.width = data[idx].largeW * rate + 'px';\r\n                large.style.height = data[idx].largeH + 'px';\r\n                large.className = 'magnifier-large magnify-hidden';\r\n\r\n                if (data[idx].mode === 'inside') {\r\n                    lens.append(large);\r\n                } else {\r\n                    largeWrapper.html(\"\").append(large);\r\n                }\r\n            }\r\n\r\n            data[idx].lensH = data[idx].lensH > $thumb.height() ? $thumb.height() : data[idx].lensH;\r\n\r\n            if (Math.round(data[idx].lensW) === 0) {\r\n                lens.css('display', 'none');\r\n            } else {\r\n                lens.css({\r\n                    width: data[idx].lensW + 1 + 'px',\r\n                    height: data[idx].lensH - 1 + 'px',\r\n                    display: ''\r\n                });\r\n            }\r\n        }\r\n\r\n        function getMousePos() {\r\n            var xPos = pos.x - currentOpts.x,\r\n                yPos = pos.y - currentOpts.y,\r\n                t,\r\n                l;\r\n\r\n            inBounds = ( xPos < 0 || yPos < 0 || xPos > currentOpts.w || yPos > currentOpts.h ) ? false : true;\r\n\r\n            l = xPos - currentOpts.lensW / 2;\r\n            t = yPos - currentOpts.lensH / 2;\r\n\r\n            if (currentOpts.mode !== 'inside') {\r\n                if (xPos < currentOpts.lensW / 2) {\r\n                    l = 0;\r\n                }\r\n\r\n                if (yPos < currentOpts.lensH / 2) {\r\n                    t = 0;\r\n                }\r\n\r\n                if (xPos - currentOpts.w + Math.ceil(currentOpts.lensW / 2) > 0) {\r\n                    l = currentOpts.w - Math.ceil(currentOpts.lensW + 2);\r\n                }\r\n\r\n                if (yPos - currentOpts.h + Math.ceil(currentOpts.lensH / 2) > 0) {\r\n                    t = currentOpts.h - Math.ceil(currentOpts.lensH);\r\n                }\r\n\r\n                pos.l = l;\r\n                pos.t = t;\r\n\r\n                currentOpts.lensBgX = pos.l;\r\n                currentOpts.lensBgY = pos.t;\r\n\r\n                if (currentOpts.mode === 'inside') {\r\n                    currentOpts.largeL = xPos * (currentOpts.zoom - (currentOpts.lensW / currentOpts.w));\r\n                    currentOpts.largeT = yPos * (currentOpts.zoom - (currentOpts.lensH / currentOpts.h));\r\n                } else {\r\n                    currentOpts.largeL = currentOpts.lensBgX * currentOpts.zoom * (currentOpts.largeWrapperW / currentOpts.w) * rate;\r\n                    currentOpts.largeT = currentOpts.lensBgY * currentOpts.zoom * (currentOpts.largeWrapperH / currentOpts.h);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function onThumbEnter() {\r\n            if (_toBoolean(enabled)) {\r\n                currentOpts = data[curIdx];\r\n                curLens = $box.find('.magnify-lens');\r\n\r\n                if (currentOpts.status === 2) {\r\n                    curLens.removeClass(MagnifyCls.magnifyOpaque);\r\n                    curLarge = $('#' + curIdx + '-large');\r\n                    curLarge.removeClass(MagnifyCls.magnifyHidden);\r\n                } else if (currentOpts.status === 1) {\r\n                    curLens.className = 'magnifier-loader';\r\n                }\r\n            }\r\n        }\r\n\r\n        function onThumbLeave() {\r\n            if (currentOpts.status > 0) {\r\n                var handler = currentOpts.onthumbleave;\r\n\r\n                if (handler !== null) {\r\n                    handler({\r\n                        thumb: curThumb,\r\n                        lens: curLens,\r\n                        large: curLarge,\r\n                        x: pos.x,\r\n                        y: pos.y\r\n                    });\r\n                }\r\n                if (!curLens.hasClass(MagnifyCls.magnifyHidden)) {\r\n                    curLens.addClass(MagnifyCls.magnifyHidden);\r\n\r\n                    //$curThumb.removeClass(MagnifyCls.magnifyOpaque);\r\n                    if (curLarge !== null) {\r\n                        curLarge.addClass(MagnifyCls.magnifyHidden);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function move() {\r\n            if (_toBoolean(enabled)) {\r\n                if (status !== currentOpts.status) {\r\n                    onThumbEnter();\r\n                }\r\n\r\n                if (currentOpts.status > 0) {\r\n                    curThumb.className = currentOpts.thumbCssClass + ' magnify-opaque';\r\n\r\n                    if (currentOpts.status === 1) {\r\n                        curLens.className = 'magnifier-loader';\r\n                    } else if (currentOpts.status === 2) {\r\n                        curLens.removeClass(MagnifyCls.magnifyHidden);\r\n                        curLarge.removeClass(MagnifyCls.magnifyHidden);\r\n                        curLarge.css({\r\n                            left: '-' + currentOpts.largeL + 'px',\r\n                            top: '-' + currentOpts.largeT + 'px'\r\n                        });\r\n                    }\r\n\r\n                    pos.t = pos.t <= 0 ? 0 : pos.t;\r\n                    curLens.css({\r\n                        left: pos.l + paddingX +'px',\r\n                        top: pos.t + 1 + paddingY + 'px'\r\n                    });\r\n\r\n                    if (lensbg) {\r\n                        curLens.css({\r\n                            \"background-color\": \"rgba(f,f,f,.5)\"\r\n                        });\r\n                    } else {\r\n                        curLens.get(0).style.backgroundPosition = '-' +\r\n                        currentOpts.lensBgX + 'px -' +\r\n                        currentOpts.lensBgY + 'px';\r\n                    }\r\n                    var handler = currentOpts.onthumbmove;\r\n\r\n                    if (handler !== null) {\r\n                        handler({\r\n                            thumb: curThumb,\r\n                            lens: curLens,\r\n                            large: curLarge,\r\n                            x: pos.x,\r\n                            y: pos.y\r\n                        });\r\n                    }\r\n                }\r\n\r\n                status = currentOpts.status;\r\n            }\r\n        }\r\n\r\n        function setThumbData(thumb, thumbData) {\r\n            var thumbBounds = thumb.getBoundingClientRect(),\r\n                w = 0,\r\n                h = 0;\r\n\r\n            thumbData.x = thumbBounds.left;\r\n            thumbData.y = thumbBounds.top;\r\n            thumbData.w = thumbBounds.right - thumbData.x;\r\n            thumbData.h = thumbBounds.bottom - thumbData.y;\r\n\r\n            if (thumbData.mode === 'inside') {\r\n                w = thumbData.w;\r\n                h = thumbData.h;\r\n            } else {\r\n                w = thumbData.largeWrapperW;\r\n                h = thumbData.largeWrapperH;\r\n            }\r\n\r\n            thumbData.largeW = thumbData.zoom * w;\r\n            thumbData.largeH = thumbData.zoom * h;\r\n\r\n            thumbData.lensW = (thumbData.w / thumbData.zoom) / rate;\r\n            thumbData.lensH = thumbData.h / thumbData.zoom;\r\n        }\r\n\r\n        function _init($box, options) {\r\n            var opts = {};\r\n            if (options.thumb === undefined) {\r\n                return false;\r\n            }\r\n\r\n            $thumb = $box.find(options.thumb);\r\n\r\n            if ($thumb.length) {\r\n                for (var key in options) {\r\n                    opts[key] = options[key];\r\n                }\r\n\r\n                opts.thumb = $thumb;\r\n                enabled = opts.enabled;\r\n\r\n                if(_toBoolean(enabled)) {\r\n\r\n                    $largeWrapper.show().css('display', '');\r\n                    $largeWrapper.addClass(MagnifyCls.magnifyHidden);\r\n                    set(opts);\r\n                } else {\r\n                    $largeWrapper.empty().hide();\r\n                }\r\n            }\r\n\r\n            return that;\r\n        }\r\n\r\n        function hoverEvents(thumb) {\r\n            $(thumb).on('mouseover', function (e) {\r\n\r\n                if (showWrapper) {\r\n\r\n                    if (currentOpts.status !== 0) {\r\n                        onThumbLeave();\r\n                    }\r\n                    handleEvents(e);\r\n                    isOverThumb = inBounds;\r\n                }\r\n            }).trigger('mouseover');\r\n        }\r\n\r\n        function clickEvents(thumb) {\r\n            $(thumb).on('click', function (e) {\r\n\r\n                if (showWrapper) {\r\n                    if (!isOverThumb) {\r\n                        if (currentOpts.status !== 0) {\r\n                            onThumbLeave();\r\n                        }\r\n                        handleEvents(e);\r\n                        isOverThumb = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function bindEvents(eType, thumb) {\r\n            switch (eType) {\r\n                case 'hover':\r\n                    hoverEvents(thumb);\r\n                    break;\r\n                case 'click':\r\n                    clickEvents(thumb);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function handleEvents(e) {\r\n            var src = e.target;\r\n            curIdx = src.id;\r\n            curThumb = src;\r\n\r\n            onThumbEnter(src);\r\n\r\n            setThumbData(curThumb, currentOpts);\r\n\r\n            pos.x = e.clientX;\r\n            pos.y = e.clientY;\r\n\r\n            getMousePos();\r\n            move();\r\n\r\n            var handler = currentOpts.onthumbenter;\r\n\r\n            if (handler !== null) {\r\n                handler({\r\n                    thumb: curThumb,\r\n                    lens: curLens,\r\n                    large: curLarge,\r\n                    x: pos.x,\r\n                    y: pos.y\r\n                });\r\n            }\r\n        }\r\n\r\n        function set(options) {\r\n            if (data[options.thumb.id] !== undefined) {\r\n                curThumb = options.thumb;\r\n                return false;\r\n            }\r\n\r\n            var thumbObj = new Image(),\r\n                largeObj = new Image(),\r\n                $thumb = options.thumb,\r\n                thumb = $thumb.get(0),\r\n                idx = thumb.id,\r\n                largeUrl,\r\n                largeWrapper = $(options.largeWrapper),\r\n                zoom = options.zoom || thumb.getAttribute('data-zoom') || gZoom,\r\n                zoomMin = options.zoomMin || gZoomMin,\r\n                zoomMax = options.zoomMax || gZoomMax,\r\n                mode = options.mode || thumb.getAttribute('data-mode') || gMode,\r\n                eventType = options.eventType || thumb.getAttribute('data-eventType') || gEventType,\r\n                onthumbenter = (options.onthumbenter !== undefined)\r\n                    ? options.onthumbenter\r\n                    : currentOpts.onthumbenter,\r\n                onthumbleave = (options.onthumbleave !== undefined)\r\n                    ? options.onthumbleave\r\n                    : currentOpts.onthumbleave,\r\n                onthumbmove = (options.onthumbmove !== undefined)\r\n                    ? options.onthumbmove\r\n                    : currentOpts.onthumbmove;\r\n\r\n            largeUrl = $thumb.data(\"original\") || gOptions.full || $thumb.attr('src');\r\n\r\n            if (thumb.id === '') {\r\n                idx = thumb.id = 'magnifier-item-' + gId;\r\n                gId += 1;\r\n            }\r\n\r\n            createLens(thumb, idx);\r\n\r\n            if (options.width) {\r\n                largeWrapper.width(options.width);\r\n            }\r\n            if (options.height) {\r\n                largeWrapper.height(options.height);\r\n            }\r\n            if (options.top) {\r\n                if (typeof options.top == 'function') {\r\n                    var top = options.top() + 'px';\r\n                } else {\r\n                    var top = options.top + 'px';\r\n                }\r\n\r\n                if (largeWrapper.length) {\r\n                    largeWrapper[0].style.top = top.replace(\"%px\", \"%\");\r\n                }\r\n            }\r\n            if (options.left) {\r\n                if (typeof options.left == 'function') {\r\n                    var left = options.left() + 'px';\r\n                } else {\r\n                    var left = options.left + 'px';\r\n                }\r\n\r\n                if (largeWrapper.length) {\r\n                    largeWrapper[0].style.left = left.replace(\"%px\", \"%\");\r\n                }\r\n            }\r\n\r\n            data[idx] = {\r\n                zoom: zoom,\r\n                zoomMin: zoomMin,\r\n                zoomMax: zoomMax,\r\n                mode: mode,\r\n                eventType: eventType,\r\n                thumbCssClass: thumb.className,\r\n                zoomAttached: false,\r\n                status: 0,\r\n                largeUrl: largeUrl,\r\n                largeWrapperId: mode === 'outside' ? largeWrapper.attr('id') : null,\r\n                largeWrapperW: mode === 'outside' ? largeWrapper.width() : null,\r\n                largeWrapperH: mode === 'outside' ? largeWrapper.height() : null,\r\n                onthumbenter: onthumbenter,\r\n                onthumbleave: onthumbleave,\r\n                onthumbmove: onthumbmove\r\n            };\r\n\r\n            rate = ($thumb.width() / $thumb.height()) / (data[idx].largeWrapperW / data[idx].largeWrapperH);\r\n            paddingX = ($thumb.parent().width() - $thumb.width()) / 2;\r\n            paddingY = ($thumb.parent().height() - $thumb.height()) / 2;\r\n\r\n            showWrapper = false;\r\n            $(thumbObj).on('load', function () {\r\n                data[idx].status = 1;\r\n\r\n                $(largeObj).on('load', function () {\r\n\r\n                    if ((largeObj.width > largeWrapper.width()) || (largeObj.height > largeWrapper.height())) {\r\n                        showWrapper = true;\r\n                        bindEvents(eventType, thumb);\r\n                        data[idx].status = 2;\r\n                        data[idx].zoom = largeObj.height / largeWrapper.height();\r\n                        setThumbData(thumb, data[idx]);\r\n                        updateLensOnLoad(idx, thumb, largeObj, largeWrapper);\r\n                    }\r\n                });\r\n\r\n                largeObj.src = data[idx].largeUrl;\r\n            });\r\n\r\n            thumbObj.src = thumb.src;\r\n        }\r\n\r\n        function onMousemove(e) {\r\n\r\n            pos.x = e.clientX;\r\n            pos.y = e.clientY;\r\n\r\n            getMousePos();\r\n\r\n            if (gEventType === 'hover') {\r\n                isOverThumb = inBounds;\r\n            }\r\n\r\n            if (inBounds && isOverThumb) {\r\n                $largeWrapper.removeClass(MagnifyCls.magnifyHidden);\r\n                move();\r\n            } else {\r\n                onThumbLeave();\r\n                isOverThumb = false;\r\n                $largeWrapper.addClass(MagnifyCls.magnifyHidden);\r\n            }\r\n        }\r\n\r\n        function onScroll() {\r\n\r\n            if (curThumb !== null) {\r\n                setThumbData(curThumb, currentOpts);\r\n            }\r\n        }\r\n\r\n\r\n        $(window).on('scroll', onScroll);\r\n        $(window).resize(function() {\r\n            _init($box, gOptions);\r\n        });\r\n\r\n        $(document).on('mousemove', onMousemove);\r\n        _init($box, gOptions);\r\n\r\n    }\r\n}(jQuery));\r\n","requirejs/domReady.js":"/**\r\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/domReady for details\r\n */\r\n/*jslint */\r\n/*global require: false, define: false, requirejs: false,\r\n  window: false, clearInterval: false, document: false,\r\n  self: false, setInterval: false */\r\n\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var isTop, testDiv, scrollIntervalId,\r\n        isBrowser = typeof window !== \"undefined\" && window.document,\r\n        isPageLoaded = !isBrowser,\r\n        doc = isBrowser ? document : null,\r\n        readyCalls = [];\r\n\r\n    function runCallbacks(callbacks) {\r\n        var i;\r\n        for (i = 0; i < callbacks.length; i += 1) {\r\n            callbacks[i](doc);\r\n        }\r\n    }\r\n\r\n    function callReady() {\r\n        var callbacks = readyCalls;\r\n\r\n        if (isPageLoaded) {\r\n            //Call the DOM ready callbacks\r\n            if (callbacks.length) {\r\n                readyCalls = [];\r\n                runCallbacks(callbacks);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the page as loaded.\r\n     */\r\n    function pageLoaded() {\r\n        if (!isPageLoaded) {\r\n            isPageLoaded = true;\r\n            if (scrollIntervalId) {\r\n                clearInterval(scrollIntervalId);\r\n            }\r\n\r\n            callReady();\r\n        }\r\n    }\r\n\r\n    if (isBrowser) {\r\n        if (document.addEventListener) {\r\n            //Standards. Hooray! Assumption here that if standards based,\r\n            //it knows about DOMContentLoaded.\r\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\r\n            window.addEventListener(\"load\", pageLoaded, false);\r\n        } else if (window.attachEvent) {\r\n            window.attachEvent(\"onload\", pageLoaded);\r\n\r\n            testDiv = document.createElement('div');\r\n            try {\r\n                isTop = window.frameElement === null;\r\n            } catch (e) {}\r\n\r\n            //DOMContentLoaded approximation that uses a doScroll, as found by\r\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\r\n            //but modified by other contributors, including jdalton\r\n            if (testDiv.doScroll && isTop && window.external) {\r\n                scrollIntervalId = setInterval(function () {\r\n                    try {\r\n                        testDiv.doScroll();\r\n                        pageLoaded();\r\n                    } catch (e) {}\r\n                }, 30);\r\n            }\r\n        }\r\n\r\n        //Check if document already complete, and if so, just trigger page load\r\n        //listeners. Latest webkit browsers also use \"interactive\", and\r\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\r\n        //entering \"interactive\" or \"complete\". More details:\r\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\r\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\r\n        //Hmm, this is more complicated on further use, see \"firing too early\"\r\n        //bug: https://github.com/requirejs/domReady/issues/1\r\n        //so removing the || document.readyState === \"interactive\" test.\r\n        //There is still a window.onload binding that should get fired if\r\n        //DOMContentLoaded is missed.\r\n        if (document.readyState === \"complete\") {\r\n            pageLoaded();\r\n        }\r\n    }\r\n\r\n    /** START OF PUBLIC API **/\r\n\r\n    /**\r\n     * Registers a callback for DOM ready. If DOM is already ready, the\r\n     * callback is called immediately.\r\n     * @param {Function} callback\r\n     */\r\n    function domReady(callback) {\r\n        if (isPageLoaded) {\r\n            callback(doc);\r\n        } else {\r\n            readyCalls.push(callback);\r\n        }\r\n        return domReady;\r\n    }\r\n\r\n    domReady.version = '2.0.1';\r\n\r\n    /**\r\n     * Loader Plugin API method\r\n     */\r\n    domReady.load = function (name, req, onLoad, config) {\r\n        if (config.isBuild) {\r\n            onLoad(null);\r\n        } else {\r\n            domReady(onLoad);\r\n        }\r\n    };\r\n\r\n    /** END OF PUBLIC API **/\r\n\r\n    return domReady;\r\n});","requirejs/text.js":"/**\r\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine(['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.12',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) {}\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config && config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config && config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                if (errback) {\r\n                    errback(e);\r\n                }\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status || 0;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        if (errback) {\r\n                            errback(err);\r\n                        }\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes;\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});"}
    }
});

require.config({
    config: {
        'jsbuild':{"Magento_Theme/menu.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @classDescription simple Navigation with replacing old handlers\r\n * @param {String} id id of ul element with navigation lists\r\n * @param {Object} settings object with settings\r\n */\r\ndefine([\"prototype\"], function(){\r\n\r\n\r\nwindow.mainNav = function() {\r\n\r\n    var main = {\r\n        obj_nav :   $(arguments[0]) || $(\"nav\"),\r\n\r\n        settings :  {\r\n            show_delay      :   0,\r\n            hide_delay      :   0,\r\n            _ie6            :   /MSIE 6.+Win/.test(navigator.userAgent),\r\n            _ie7            :   /MSIE 7.+Win/.test(navigator.userAgent)\r\n        },\r\n\r\n        init :  function(obj, level) {\r\n            obj.lists = obj.childElements();\r\n            obj.lists.each(function(el,ind){\r\n                main.handlNavElement(el);\r\n                if((main.settings._ie6 || main.settings._ie7) && level){\r\n                    main.ieFixZIndex(el, ind, obj.lists.size());\r\n                }\r\n            });\r\n            if(main.settings._ie6 && !level){\r\n                document.execCommand(\"BackgroundImageCache\", false, true);\r\n            }\r\n        },\r\n\r\n        handlNavElement :   function(list) {\r\n            if(list !== undefined){\r\n                list.onmouseover = function(){\r\n                    main.fireNavEvent(this,true);\r\n                };\r\n                list.onmouseout = function(){\r\n                    main.fireNavEvent(this,false);\r\n                };\r\n                if(list.down(\"ul\")){\r\n                    main.init(list.down(\"ul\"), true);\r\n                }\r\n            }\r\n        },\r\n\r\n        ieFixZIndex : function(el, i, l) {\r\n            if(el.tagName.toString().toLowerCase().indexOf(\"iframe\") == -1){\r\n                el.style.zIndex = l - i;\r\n            } else {\r\n                el.onmouseover = \"null\";\r\n                el.onmouseout = \"null\";\r\n            }\r\n        },\r\n\r\n        fireNavEvent :  function(elm,ev) {\r\n            if(ev){\r\n                elm.addClassName(\"over\");\r\n                elm.down(\"a\").addClassName(\"over\");\r\n                if (elm.childElements()[1]) {\r\n                    main.show(elm.childElements()[1]);\r\n                }\r\n            } else {\r\n                elm.removeClassName(\"over\");\r\n                elm.down(\"a\").removeClassName(\"over\");\r\n                if (elm.childElements()[1]) {\r\n                    main.hide(elm.childElements()[1]);\r\n                }\r\n            }\r\n        },\r\n\r\n        show : function (sub_elm) {\r\n            if (sub_elm.hide_time_id) {\r\n                clearTimeout(sub_elm.hide_time_id);\r\n            }\r\n            sub_elm.show_time_id = setTimeout(function() {\r\n                if (!sub_elm.hasClassName(\"shown-sub\")) {\r\n                    sub_elm.addClassName(\"shown-sub\");\r\n                }\r\n            }, main.settings.show_delay);\r\n        },\r\n\r\n        hide : function (sub_elm) {\r\n            if (sub_elm.show_time_id) {\r\n                clearTimeout(sub_elm.show_time_id);\r\n            }\r\n            sub_elm.hide_time_id = setTimeout(function(){\r\n                if (sub_elm.hasClassName(\"shown-sub\")) {\r\n                    sub_elm.removeClassName(\"shown-sub\");\r\n                }\r\n            }, main.settings.hide_delay);\r\n        }\r\n\r\n    };\r\n    if (arguments[1]) {\r\n        main.settings = Object.extend(main.settings, arguments[1]);\r\n    }\r\n    if (main.obj_nav) {\r\n        main.init(main.obj_nav, false);\r\n    }\r\n};\r\n\r\ndocument.observe(\"dom:loaded\", function() {\r\n    //run navigation without delays and with default id=\"#nav\"\r\n    //mainNav();\r\n\r\n    //run navigation with delays\r\n    mainNav(\"nav\", {\"show_delay\":\"100\",\"hide_delay\":\"100\"});\r\n});\r\n\r\n});\r\n","Magento_Theme/js/row-builder.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.rowBuilder', {\r\n\r\n        /**\r\n         * options with default values for setting up the template\r\n         */\r\n        options: {\r\n            //Default template options\r\n            rowTemplate: '#template-registrant',\r\n            rowContainer: '#registrant-container',\r\n            //Row index used by the template rows.\r\n            rowIndex: 0,\r\n            //Row count: Should not be set externally\r\n            rowCount: 0,\r\n            rowParentElem: '<li></li>',\r\n            rowContainerClass: 'fields',\r\n            addRowBtn: '#add-registrant-button',\r\n            btnRemoveIdPrefix: 'btn-remove',\r\n            btnRemoveSelector: '.btn-remove',\r\n            rowIdPrefix: 'row',\r\n            //This class is added to rows added after the first one. Adds the dotted separator\r\n            additionalRowClass: 'add-row',\r\n            /*\r\n             This is provided during widget instantiation. eg :\r\n             formDataPost : {\"formData\":formData,\"templateFields\":['field1-name','field2-name'] }\r\n             -\"formData\" is the multi-dimensional array of form field values : [['a','b'],['c','b']]\r\n             received from the server and encoded\r\n             -\"templateFields\" are the input fields in the template with index suffixed after the field name\r\n             eg field1-name{index}\r\n             */\r\n            formDataPost: null,\r\n            //Default selectors for add element of a template\r\n            addEventSelector: 'button',\r\n            //Default selectors for remove markup elements of a template\r\n            remEventSelector: 'a',\r\n            //This option allows adding first row delete option and a row separator\r\n            hideFirstRowAddSeparator: true,\r\n            //Max rows - This option should be set when instantiating the widget\r\n            maxRows: 1000,\r\n            maxRowsMsg: '#max-registrant-message'\r\n        },\r\n\r\n        /**\r\n         * Initialize create\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.rowTemplate = mageTemplate(this.options.rowTemplate);\r\n\r\n            this.options.rowCount = this.options.rowIndex = 0;\r\n\r\n            //On document ready related tasks\r\n            $($.proxy(this.ready, this));\r\n\r\n            //Binding template-wide events handlers for adding and removing rows\r\n            this.element.on('click', this.options.addEventSelector + this.options.addRowBtn, $.proxy(this.handleAdd, this));\r\n            this.element.on('click', this.options.remEventSelector + this.options.btnRemoveSelector, $.proxy(this.handleRemove, this));\r\n        },\r\n\r\n        /**\r\n         * Initialize template\r\n         * @public\r\n         */\r\n        ready: function () {\r\n            if (this.options.formDataPost && this.options.formDataPost.formData && this.options.formDataPost.formData.length) {\r\n                this.processFormDataArr(this.options.formDataPost);\r\n            } else if (this.options.rowIndex === 0 && this.options.maxRows !== 0) {\r\n                //If no form data , then add default row\r\n                this.addRow(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process and loop through all row data to create preselected values. This is used for any error on submit.\r\n         * For complex implementations the inheriting widget can override this behavior\r\n         * @public\r\n         * @param {Object} formDataArr\r\n         */\r\n        processFormDataArr: function (formDataArr) {\r\n            var formData = formDataArr.formData,\r\n                templateFields = formDataArr.templateFields,\r\n                formRow,\r\n                i, j;\r\n\r\n            for (i = this.options.rowIndex = 0; i < formData.length; this.options.rowIndex = i++) {\r\n                this.addRow(i);\r\n\r\n                formRow = formData[i];\r\n\r\n                for (j = 0; j < formRow.length; j++) {\r\n                    this.setFieldById(templateFields[j] + i, formRow[j]);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Initialize and create markup for template row. Add it to the parent container.\r\n         * The template processing will substitute row index at all places marked with _index_ in the template\r\n         * using the template\r\n         * @public\r\n         * @param {Number} index - current index/count of the created template. This will be used as the id\r\n         * @return {*}\r\n         */\r\n        addRow: function (index) {\r\n            var row = $(this.options.rowParentElem),\r\n                tmpl;\r\n\r\n            row.addClass(this.options.rowContainerClass).attr('id', this.options.rowIdPrefix + index);\r\n\r\n            tmpl = this.rowTemplate({\r\n                data: {\r\n                    _index_: index\r\n                }\r\n            });\r\n\r\n            $(tmpl).appendTo(row);\r\n\r\n            $(this.options.rowContainer).append(row);\r\n\r\n            row.addClass(this.options.additionalRowClass);\r\n\r\n            //Remove 'delete' link and additionalRowClass for first row\r\n            if (this.options.rowIndex === 0 && this.options.hideFirstRowAddSeparator) {\r\n                $('#' + this._esc(this.options.btnRemoveIdPrefix) + '0').remove();\r\n                $('#' + this._esc(this.options.rowIdPrefix) + '0').removeClass(this.options.additionalRowClass);\r\n            }\r\n\r\n            this.maxRowCheck(++this.options.rowCount);\r\n\r\n            return row;\r\n        },\r\n\r\n        /**\r\n         * Remove return item information row\r\n         * @public\r\n         * @param {*} rowIndex - return item information row index\r\n         * @return {Boolean}\r\n         */\r\n        removeRow: function (rowIndex) {\r\n            $('#' + this._esc(this.options.rowIdPrefix) + rowIndex).remove();\r\n            this.maxRowCheck(--this.options.rowCount);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Function to check if maximum rows are exceeded and render/hide maxMsg and Add btn\r\n         * @public\r\n         * @param {Number} rowIndex\r\n         */\r\n        maxRowCheck: function (rowIndex) {\r\n            var addRowBtn = $(this.options.addRowBtn),\r\n                maxRowMsg = $(this.options.maxRowsMsg);\r\n            //liIndex starts from 0\r\n            if (rowIndex >= this.options.maxRows) {\r\n                addRowBtn.hide();\r\n                maxRowMsg.show();\r\n            } else if (addRowBtn.is(':hidden')) {\r\n                addRowBtn.show();\r\n                maxRowMsg.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the value on given element\r\n         * @public\r\n         * @param {String} domId\r\n         * @param {String} value\r\n         */\r\n        setFieldById: function (domId, value) {\r\n            var x = $('#' + this._esc(domId));\r\n\r\n            if (x.length) {\r\n\r\n                if (x.is(':checkbox')) {\r\n                    x.attr('checked', true);\r\n                } else if (x.is('option')) {\r\n                    x.attr('selected', 'selected');\r\n                } else {\r\n                    x.val(value);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delegated handler for adding a row\r\n         * @public\r\n         * @return {Boolean}\r\n         */\r\n        handleAdd: function () {\r\n            this.addRow(++this.options.rowIndex);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Delegated handler for removing a selected row\r\n         * @public\r\n         * @param {Object} e - Native event object\r\n         * @return {Boolean}\r\n         */\r\n        handleRemove: function (e) {\r\n            this.removeRow($(e.currentTarget).closest(\"[id^='\" + this.options.btnRemoveIdPrefix + \"']\")\r\n                .attr('id').replace(this.options.btnRemoveIdPrefix, ''));\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Utility function to add escape chars for jquery selector strings\r\n         * @private\r\n         * @param {String} str - String to be processed\r\n         * @return {String}\r\n         */\r\n        _esc: function (str) {\r\n            return str ? str.replace(/([ ;&,.+*~\\':\"!\\^$\\[\\]()=>|\\/@])/g, '\\\\$1') : str;\r\n        }\r\n    });\r\n\r\n    return $.mage.rowBuilder;\r\n});\r\n","Magento_Theme/js/truncate.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.truncateOptions', {\r\n        options: {\r\n            detailsLink: 'a.details',\r\n            mouseEvents: 'mouseover mouseout',\r\n            truncatedFullValue: 'div.truncated.full.value'\r\n        },\r\n\r\n        /**\r\n         * Establish the event handler for mouse events on the appropriate elements.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.element.on(this.options.mouseEvents, $.proxy(this._toggleShow, this))\r\n                .find(this.options.detailsLink).on(this.options.mouseEvents, $.proxy(this._toggleShow, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the \"show\" class on the associated element.\r\n         * @private\r\n         * @param event {Object} - Mouse over/out event.\r\n         */\r\n        _toggleShow: function(event) {\r\n            $(event.currentTarget).find(this.options.truncatedFullValue).toggleClass('show');\r\n        }\r\n    });\r\n\r\n});\r\n","Magento_Theme/js/view/messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'underscore',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery/jquery-storageapi'\r\n], function ($, Component, _, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            cookieMessages: [],\r\n            messages: []\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.cookieMessages = _.unique($.cookieStorage.get('mage-messages'), 'text');\r\n            this.messages = customerData.get('messages').extend({\r\n                disposableCustomerData: 'messages'\r\n            });\r\n\r\n            if (!_.isEmpty(this.messages().messages)) {\r\n                customerData.set('messages', {});\r\n            }\r\n\r\n            $.cookieStorage.set('mage-messages', '');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/block-loader.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'Magento_Ui/js/lib/knockout/template/loader',\r\n    'mage/template'\r\n], function (ko, $, templateLoader, template) {\r\n    'use strict';\r\n\r\n    var blockLoaderTemplatePath = 'ui/block-loader',\r\n        blockContentLoadingClass = '_block-content-loading',\r\n        blockLoader,\r\n        blockLoaderClass,\r\n        loaderImageHref;\r\n\r\n    templateLoader.loadTemplate(blockLoaderTemplatePath).done(function (blockLoaderTemplate) {\r\n        blockLoader = template($.trim(blockLoaderTemplate), {\r\n            loaderImageHref: loaderImageHref\r\n        });\r\n        blockLoader = $(blockLoader);\r\n        blockLoaderClass = '.' + blockLoader.attr('class');\r\n    });\r\n\r\n    /**\r\n     * Helper function to check if blockContentLoading class should be applied.\r\n     * @param {Object} element\r\n     * @returns {Boolean}\r\n     */\r\n    function isLoadingClassRequired(element) {\r\n        var position = element.css('position');\r\n\r\n        if (position === 'absolute' || position === 'fixed') {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Add loader to block.\r\n     * @param {Object} element\r\n     */\r\n    function addBlockLoader(element) {\r\n        element.find(':focus').blur();\r\n        element.find('input:disabled, select:disabled').addClass('_disabled');\r\n        element.find('input, select').prop('disabled', true);\r\n\r\n        if (isLoadingClassRequired(element)) {\r\n            element.addClass(blockContentLoadingClass);\r\n        }\r\n        element.append(blockLoader.clone());\r\n    }\r\n\r\n    /**\r\n     * Remove loader from block.\r\n     * @param {Object} element\r\n     */\r\n    function removeBlockLoader(element) {\r\n        if (!element.has(blockLoaderClass).length) {\r\n            return;\r\n        }\r\n        element.find(blockLoaderClass).remove();\r\n        element.find('input:not(\"._disabled\"), select:not(\"._disabled\")').prop('disabled', false);\r\n        element.find('input:disabled, select:disabled').removeClass('_disabled');\r\n        element.removeClass(blockContentLoadingClass);\r\n    }\r\n\r\n    return function (loaderHref) {\r\n        loaderImageHref = loaderHref;\r\n        ko.bindingHandlers.blockLoader = {\r\n            /**\r\n             * Process loader for block\r\n             * @param {String} element\r\n             * @param {Boolean} displayBlockLoader\r\n             */\r\n            update: function (element, displayBlockLoader) {\r\n                element = $(element);\r\n\r\n                if (ko.unwrap(displayBlockLoader())) {\r\n                    addBlockLoader(element);\r\n                } else {\r\n                    removeBlockLoader(element);\r\n                }\r\n            }\r\n        };\r\n    };\r\n});\r\n","Magento_Ui/js/core/app.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    './renderer/types',\r\n    './renderer/layout',\r\n    '../lib/knockout/bootstrap'\r\n], function (types, layout) {\r\n    'use strict';\r\n\r\n    return function (data, merge) {\r\n        types.set(data.types);\r\n        layout(data.components, undefined, true, merge);\r\n    };\r\n});\r\n","Magento_Ui/js/core/renderer/layout.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    './types'\r\n], function (_, $, utils, registry, types) {\r\n    'use strict';\r\n\r\n    var templates = registry.create(),\r\n        layout = {},\r\n        cachedConfig = {};\r\n\r\n    function getNodeName(parent, node, name) {\r\n        var parentName = parent && parent.name;\r\n\r\n        if (typeof name !== 'string') {\r\n            name = node.name || name;\r\n        }\r\n\r\n        return utils.fullPath(parentName, name);\r\n    }\r\n\r\n    function getNodeType(parent, node) {\r\n        return node.type || parent && parent.childType;\r\n    }\r\n\r\n    function getDataScope(parent, node) {\r\n        var dataScope = node.dataScope,\r\n            parentScope = parent && parent.dataScope;\r\n\r\n        return !utils.isEmpty(parentScope) ?\r\n            !utils.isEmpty(dataScope) ?\r\n                parentScope + '.' + dataScope :\r\n                parentScope :\r\n            dataScope || '';\r\n    }\r\n\r\n    function loadDeps(node) {\r\n        var loaded = $.Deferred();\r\n\r\n        registry.get(node.deps, function (deps) {\r\n            node.provider = node.extendProvider ? deps && deps.name : node.provider;\r\n            loaded.resolve(node);\r\n        });\r\n\r\n        return loaded.promise();\r\n    }\r\n\r\n    function loadSource(node) {\r\n        var loaded = $.Deferred(),\r\n            source = node.component;\r\n\r\n        require([source], function (constr) {\r\n            loaded.resolve(node, constr);\r\n        });\r\n\r\n        return loaded.promise();\r\n    }\r\n\r\n    function initComponent(node, Constr) {\r\n        var component = new Constr(_.omit(node, 'children'));\r\n\r\n        registry.set(node.name, component);\r\n    }\r\n\r\n    function run(nodes, parent, cached, merge) {\r\n        if (_.isBoolean(merge) && merge) {\r\n            layout.merge(nodes);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (cached) {\r\n            cachedConfig[_.keys(nodes)[0]] = JSON.parse(JSON.stringify(nodes));\r\n        }\r\n\r\n        _.each(nodes || [], layout.iterator.bind(layout, parent));\r\n    }\r\n\r\n    _.extend(layout, {\r\n        iterator: function (parent, node) {\r\n            var action = _.isString(node) ?\r\n                this.addChild :\r\n                this.process;\r\n\r\n            action.apply(this, arguments);\r\n        },\r\n\r\n        process: function (parent, node, name) {\r\n            if (!parent && node.parent) {\r\n                return this.waitParent(node, name);\r\n            }\r\n\r\n            if (node.nodeTemplate) {\r\n                return this.waitTemplate.apply(this, arguments);\r\n            }\r\n\r\n            node = this.build.apply(this, arguments);\r\n\r\n            if (!registry.has(node.name)) {\r\n                this.addChild(parent, node)\r\n                    .manipulate(node)\r\n                    .initComponent(node);\r\n            }\r\n\r\n            if (node) {\r\n                run(node.children, node);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        build: function (parent, node, name) {\r\n            var defaults    = parent && parent.childDefaults || {},\r\n                children    = node.children,\r\n                type        = getNodeType(parent, node),\r\n                dataScope   = getDataScope(parent, node),\r\n                component,\r\n                extendDeps  = true,\r\n                nodeName;\r\n\r\n            node.children = false;\r\n            node.extendProvider = true;\r\n\r\n            if (node.config && node.config.provider || node.provider) {\r\n                node.extendProvider = false;\r\n            }\r\n\r\n            if (node.config && node.config.deps || node.deps) {\r\n                extendDeps= false;\r\n            }\r\n\r\n            node = utils.extend({\r\n            }, types.get(type), defaults, node);\r\n\r\n            nodeName = getNodeName(parent, node, name);\r\n\r\n            if (registry.has(nodeName)) {\r\n                component = registry.get(nodeName);\r\n                component.children = children;\r\n\r\n                return component;\r\n            }\r\n\r\n            if (extendDeps && parent && parent.deps && type) {\r\n                node.deps = parent.deps;\r\n            }\r\n\r\n            _.extend(node, node.config || {}, {\r\n                index: node.name || name,\r\n                name: nodeName,\r\n                dataScope: dataScope,\r\n                parentName: utils.getPart(nodeName, -2),\r\n                parentScope: utils.getPart(dataScope, -2)\r\n            });\r\n\r\n            node.children = children;\r\n            node.componentType = node.type;\r\n\r\n            delete node.type;\r\n            delete node.config;\r\n\r\n            if (children) {\r\n                node.initChildCount = _.size(children);\r\n            }\r\n\r\n            if (node.isTemplate) {\r\n                node.isTemplate = false;\r\n\r\n                templates.set(node.name, node);\r\n                registry.get(node.parentName, function (parent) {\r\n                    parent.childTemplate = node;\r\n                });\r\n\r\n                return false;\r\n            }\r\n\r\n            if (node.componentDisabled === true) {\r\n                return false;\r\n            }\r\n\r\n            return node;\r\n        },\r\n\r\n        initComponent: function (node) {\r\n            if (!node.component) {\r\n                return this;\r\n            }\r\n\r\n            loadDeps(node)\r\n                .then(loadSource)\r\n                .done(initComponent);\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    _.extend(layout, {\r\n        waitTemplate: function (parent, node) {\r\n            var args = _.toArray(arguments);\r\n\r\n            templates.get(node.nodeTemplate, function () {\r\n                this.applyTemplate.apply(this, args);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        waitParent: function (node, name) {\r\n            var process = this.process.bind(this);\r\n\r\n            registry.get(node.parent, function (parent) {\r\n                process(parent, node, name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        applyTemplate: function (parent, node, name) {\r\n            var template = templates.get(node.nodeTemplate);\r\n\r\n            node = utils.extend({}, template, node);\r\n\r\n            delete node.nodeTemplate;\r\n\r\n            this.process(parent, node, name);\r\n        }\r\n    });\r\n\r\n    _.extend(layout, {\r\n        manipulate: function (node) {\r\n            var name = node.name;\r\n\r\n            if (node.appendTo) {\r\n                this.insert(name, node.appendTo, -1);\r\n            }\r\n\r\n            if (node.prependTo) {\r\n                this.insert(name, node.prependTo, 0);\r\n            }\r\n\r\n            if (node.insertTo) {\r\n                this.insertTo(name, node.insertTo);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        insert: function (item, target, position) {\r\n            registry.get(target, function (container) {\r\n                container.insertChild(item, position);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        insertTo: function (item, targets) {\r\n            _.each(targets, function (info, target) {\r\n                this.insert(item, target, info.position);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        addChild: function (parent, child) {\r\n            var name;\r\n\r\n            if (parent && parent.component) {\r\n                name = child.name || child;\r\n\r\n                this.insert(name, parent.name, child.sortOrder);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        merge: function (components) {\r\n            var cachedKey = _.keys(components)[0],\r\n                compared = utils.compare(cachedConfig[cachedKey], components),\r\n                remove = this.filterComponents(this.getByProperty(compared.changes, 'type', 'remove'), true),\r\n                update = this.getByProperty(compared.changes, 'type', 'update'),\r\n                dataSources = this.getDataSources(components),\r\n                names, index, name, component;\r\n\r\n            _.each(dataSources, function (val, key) {\r\n                name = key.replace(/\\.children|\\.config/g, '');\r\n                component = registry.get(name);\r\n\r\n                component.cacheData();\r\n                component.updateConfig(\r\n                    true,\r\n                    this.getFullConfig(key, components),\r\n                    this.getFullConfig(key, cachedConfig[cachedKey])\r\n                );\r\n            }, this);\r\n\r\n            _.each(remove, function (val) {\r\n                component = registry.get(val.path);\r\n\r\n                if (component) {\r\n                    component.cleanData().destroy();\r\n                }\r\n            });\r\n\r\n            update = _.compact(_.filter(update, function (val) {\r\n                return !_.isEqual(val.oldValue, val.value);\r\n            }));\r\n\r\n            _.each(update, function (val) {\r\n                names = val.path.split('.');\r\n                index = Math.max(_.lastIndexOf(names, 'config'), _.lastIndexOf(names, 'children') + 2);\r\n                name = _.without(names.splice(0, index), 'children', 'config').join('.');\r\n                component = registry.get(name);\r\n\r\n                if (val.name === 'sortOrder' && component) {\r\n                    registry.get(component.parentName).insertChild(component, val.value);\r\n                } else if (component) {\r\n                    component.updateConfig(\r\n                        val.oldValue,\r\n                        val.value,\r\n                        val.path\r\n                    );\r\n                }\r\n            }, this);\r\n\r\n            run(components, undefined, true);\r\n        },\r\n\r\n        getDataSources: function (config, parentPath) {\r\n            var dataSources = {},\r\n                key, obj;\r\n\r\n            for (key in config) {\r\n                if (config.hasOwnProperty(key)) {\r\n                    if (\r\n                        key === 'type' &&\r\n                        config[key] === 'dataSource' &&\r\n                        config.hasOwnProperty('config')\r\n                    ) {\r\n                        dataSources[parentPath + '.config'] = config.config;\r\n                    } else if (_.isObject(config[key])) {\r\n                        obj = this.getDataSources(config[key], utils.fullPath(parentPath, key));\r\n\r\n                        _.each(obj, function (value, path) {\r\n                            dataSources[path] = value;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return dataSources;\r\n        },\r\n\r\n        getFullConfig: function (path, config) {\r\n            var index;\r\n\r\n            path = path.split('.');\r\n            index = _.lastIndexOf(path, 'config');\r\n\r\n            if (!~index) {\r\n                return false;\r\n            }\r\n            path = path.splice(0, index);\r\n\r\n            _.each(path, function (val) {\r\n                config = config[val];\r\n            });\r\n\r\n            return config.config;\r\n        },\r\n\r\n        getByProperty: function (data, prop, propValue) {\r\n            return _.filter(data, function (value) {\r\n                return value[prop] === propValue;\r\n            });\r\n        },\r\n\r\n        filterComponents: function (data, splitPath, index, separator, keyName) {\r\n            var result = [],\r\n                names, length;\r\n\r\n            index = -2;\r\n            separator = '.' || separator;\r\n            keyName = 'children' || keyName;\r\n\r\n            _.each(data, function (val) {\r\n                names = val.path.split(separator);\r\n                length  = names.length;\r\n\r\n                if (names[length + index] === keyName) {\r\n                    val.path = splitPath ? _.without(names, keyName).join(separator) : val.path;\r\n                    result.push(val);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n    });\r\n\r\n    return run;\r\n});\r\n","Magento_Ui/js/core/renderer/types.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    var store = {};\r\n\r\n    function flatten(data) {\r\n        var extender = data.extends || [],\r\n            result = {};\r\n\r\n        extender = utils.stringToArray(extender);\r\n\r\n        extender.push(data);\r\n\r\n        extender.forEach(function (item) {\r\n            if (_.isString(item)) {\r\n                item = store[item] || {};\r\n            }\r\n\r\n            utils.extend(result, item);\r\n        });\r\n\r\n        delete result.extends;\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        set: function (types) {\r\n            types = types || {};\r\n\r\n            utils.extend(store, types);\r\n\r\n            _.each(types, function (data, type) {\r\n                store[type] = flatten(data);\r\n            });\r\n        },\r\n\r\n        get: function (type) {\r\n            return store[type] || {};\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/form/adapter.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Ui/js/form/adapter/buttons'\r\n], function ($, _, buttons) {\r\n    'use strict';\r\n\r\n    var selectorPrefix = '',\r\n        eventPrefix;\r\n\r\n    /**\r\n     * Initialize listener.\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} action\r\n     */\r\n    function initListener(callback, action) {\r\n        var selector    = selectorPrefix ? selectorPrefix + ' ' + buttons[action] : buttons[action],\r\n            elem        = $(selector)[0];\r\n\r\n        if (!elem) {\r\n            return;\r\n        }\r\n\r\n        if (elem.onclick) {\r\n            elem.onclick = null;\r\n        }\r\n\r\n        $(elem).on('click' + eventPrefix, callback);\r\n    }\r\n\r\n    /**\r\n     * Destroy listener.\r\n     *\r\n     * @param {String} action\r\n     */\r\n    function destroyListener(action) {\r\n        var selector    = selectorPrefix ? selectorPrefix + ' ' + buttons[action] : buttons[action],\r\n            elem        = $(selector)[0];\r\n\r\n        if (!elem) {\r\n            return;\r\n        }\r\n\r\n        if (elem.onclick) {\r\n            elem.onclick = null;\r\n        }\r\n\r\n        $(elem).off('click' + eventPrefix);\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attaches events handlers.\r\n         *\r\n         * @param {Object} handlers\r\n         * @param {String} selectorPref\r\n         * @param {String} eventPref\r\n         */\r\n        on: function (handlers, selectorPref, eventPref) {\r\n            selectorPrefix = selectorPrefix || selectorPref;\r\n            eventPrefix = eventPref;\r\n            _.each(handlers, initListener);\r\n            selectorPrefix = '';\r\n        },\r\n\r\n        /**\r\n         * Removes events handlers.\r\n         *\r\n         * @param {Object} handlers\r\n         * @param {String} eventPref\r\n         */\r\n        off: function (handlers, eventPref) {\r\n            eventPrefix = eventPref;\r\n            _.each(handlers, destroyListener);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/form/button-adapter.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiClass',\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry'\r\n], function (Class, $, _, registry) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Initialize actions and adapter.\r\n         *\r\n         * @param {Object} config\r\n         * @param {Element} elem\r\n         * @returns {Object}\r\n         */\r\n        initialize: function (config, elem) {\r\n            return this._super()\r\n                .initActions()\r\n                .initAdapter(elem);\r\n        },\r\n\r\n        /**\r\n         * Creates callback from declared actions.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initActions: function () {\r\n            var callbacks = [];\r\n\r\n            _.each(this.actions, function (action) {\r\n                callbacks.push({\r\n                    action: registry.async(action.targetName),\r\n                    args: _.union([action.actionName], action.params)\r\n                });\r\n            });\r\n\r\n            /**\r\n             * Callback function.\r\n             */\r\n            this.callback = function () {\r\n                _.each(callbacks, function (callback) {\r\n                    callback.action.apply(callback.action, callback.args);\r\n                });\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Attach callback handler on button.\r\n         *\r\n         * @param {Element} elem\r\n         */\r\n        initAdapter: function (elem) {\r\n            $(elem).on('click', this.callback);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/client.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiClass'\r\n], function ($, _, utils, Class) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Before save validate request.\r\n     *\r\n     * @param {Object} data\r\n     * @param {String} url\r\n     * @param {String} selectorPrefix\r\n     * @param {String} messagesClass\r\n     * @returns {*}\r\n     */\r\n    function beforeSave(data, url, selectorPrefix, messagesClass) {\r\n        var save = $.Deferred();\r\n\r\n        data = utils.serialize(utils.filterFormData(data));\r\n\r\n        data['form_key'] = window.FORM_KEY;\r\n\r\n        if (!url || url === 'undefined') {\r\n            return save.resolve();\r\n        }\r\n\r\n        $('body').trigger('processStart');\r\n\r\n        $.ajax({\r\n            url: url,\r\n            data: data,\r\n\r\n            /**\r\n             * Success callback.\r\n             * @param {Object} resp\r\n             * @returns {Boolean}\r\n             */\r\n            success: function (resp) {\r\n                if (!resp.error) {\r\n                    save.resolve();\r\n\r\n                    return true;\r\n                }\r\n\r\n                $('body').notification('clear');\r\n                $.each(resp.messages || [resp.message] || [], function (key, message) {\r\n                    $('body').notification('add', {\r\n                        error: resp.error,\r\n                        message: message,\r\n\r\n                        /**\r\n                         * Insert method.\r\n                         *\r\n                         * @param {String} msg\r\n                         */\r\n                        insertMethod: function (msg) {\r\n                            var $wrapper = $('<div/>').addClass(messagesClass).html(msg);\r\n\r\n                            $('.page-main-actions', selectorPrefix).after($wrapper);\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Complete callback.\r\n             */\r\n            complete: function () {\r\n                $('body').trigger('processStop');\r\n            }\r\n        });\r\n\r\n        return save.promise();\r\n    }\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Assembles data and submits it using 'utils.submit' method\r\n         */\r\n        save: function (data, options) {\r\n            var url = this.urls.beforeSave,\r\n                save = this._save.bind(this, data, options);\r\n\r\n            beforeSave(data, url, this.selectorPrefix, this.messagesClass).then(save);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Save data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {Object} options\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _save: function (data, options) {\r\n            var url = this.urls.save;\r\n\r\n            $('body').trigger('processStart');\r\n            options = options || {};\r\n\r\n            if (!options.redirect) {\r\n                url += 'back/edit';\r\n            }\r\n\r\n            if (options.ajaxSave) {\r\n                utils.ajaxSubmit({\r\n                    url: url,\r\n                    data: data\r\n                }, options);\r\n\r\n                $('body').trigger('processStop');\r\n\r\n                return this;\r\n            }\r\n\r\n            utils.submit({\r\n                url: url,\r\n                data: data\r\n            }, options.attributes);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/form.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'rjsResolver',\r\n    './adapter',\r\n    'uiCollection',\r\n    'mageUtils',\r\n    'jquery',\r\n    'Magento_Ui/js/core/app',\r\n    'mage/validation'\r\n], function (_, loader, resolver, adapter, Collection, utils, $, app) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Format params\r\n     *\r\n     * @param {Object} params\r\n     * @returns {Array}\r\n     */\r\n    function prepareParams(params) {\r\n        var result = '?';\r\n\r\n        _.each(params, function (value, key) {\r\n            result += key + '=' + value + '&';\r\n        });\r\n\r\n        return result.slice(0, -1);\r\n    }\r\n\r\n    /**\r\n     * Collect form data.\r\n     *\r\n     * @param {Array} items\r\n     * @returns {Object}\r\n     */\r\n    function collectData(items) {\r\n        var result = {},\r\n            name;\r\n\r\n        items = Array.prototype.slice.call(items);\r\n\r\n        items.forEach(function (item) {\r\n            switch (item.type) {\r\n                case 'checkbox':\r\n                    result[item.name] = +!!item.checked;\r\n                    break;\r\n\r\n                case 'radio':\r\n                    if (item.checked) {\r\n                        result[item.name] = item.value;\r\n                    }\r\n                    break;\r\n\r\n                case 'select-multiple':\r\n                    name = item.name.substring(0, item.name.length - 2); //remove [] from the name ending\r\n                    result[name] = _.pluck(item.selectedOptions, 'value');\r\n                    break;\r\n\r\n                default:\r\n                    result[item.name] = item.value;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Makes ajax request\r\n     *\r\n     * @param {Object} params\r\n     * @param {Object} data\r\n     * @param {String} url\r\n     * @returns {*}\r\n     */\r\n    function makeRequest(params, data, url) {\r\n        var save = $.Deferred();\r\n\r\n        data = utils.serialize(data);\r\n        data['form_key'] = window.FORM_KEY;\r\n\r\n        if (!url) {\r\n            save.resolve();\r\n        }\r\n\r\n        $('body').trigger('processStart');\r\n\r\n        $.ajax({\r\n            url: url + prepareParams(params),\r\n            data: data,\r\n            dataType: 'json',\r\n\r\n            /**\r\n             * Success callback.\r\n             * @param {Object} resp\r\n             * @returns {Boolean}\r\n             */\r\n            success: function (resp) {\r\n                if (resp.ajaxExpired) {\r\n                    window.location.href = resp.ajaxRedirect;\r\n                }\r\n\r\n                if (!resp.error) {\r\n                    save.resolve(resp);\r\n\r\n                    return true;\r\n                }\r\n\r\n                $('body').notification('clear');\r\n                $.each(resp.messages, function (key, message) {\r\n                    $('body').notification('add', {\r\n                        error: resp.error,\r\n                        message: message,\r\n\r\n                        /**\r\n                         * Inserts message on page\r\n                         * @param {String} msg\r\n                         */\r\n                        insertMethod: function (msg) {\r\n                            $('.page-main-actions').after(msg);\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Complete callback.\r\n             */\r\n            complete: function () {\r\n                $('body').trigger('processStop');\r\n            }\r\n        });\r\n\r\n        return save.promise();\r\n    }\r\n\r\n    /**\r\n     * Check if fields is valid.\r\n     *\r\n     * @param {Array}items\r\n     * @returns {Boolean}\r\n     */\r\n    function isValidFields(items) {\r\n        var result = true;\r\n\r\n        _.each(items, function (item) {\r\n            if (!$.validator.validateSingleElement(item)) {\r\n                result = false;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            additionalFields: [],\r\n            additionalInvalid: false,\r\n            selectorPrefix: '.page-content',\r\n            messagesClass: 'messages',\r\n            eventPrefix: '.${ $.index }',\r\n            ajaxSave: false,\r\n            ajaxSaveType: 'default',\r\n            imports: {\r\n                reloadUrl: '${ $.provider}:reloadUrl'\r\n            },\r\n            listens: {\r\n                selectorPrefix: 'destroyAdapter initAdapter',\r\n                '${ $.name }.${ $.reloadItem }': 'params.set reload'\r\n            },\r\n            exports: {\r\n                selectorPrefix: '${ $.provider }:client.selectorPrefix',\r\n                messagesClass: '${ $.provider }:client.messagesClass'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super()\r\n                .initAdapter();\r\n\r\n            resolver(this.hideLoader, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe([\r\n                    'responseData',\r\n                    'responseStatus'\r\n                ]);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.selector = '[data-form-part=' + this.namespace + ']';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize adapter handlers.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initAdapter: function () {\r\n            adapter.on({\r\n                'reset': this.reset.bind(this),\r\n                'save': this.save.bind(this, true, {}),\r\n                'saveAndContinue': this.save.bind(this, false, {})\r\n            }, this.selectorPrefix, this.eventPrefix);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroy adapter handlers.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        destroyAdapter: function () {\r\n            adapter.off([\r\n                'reset',\r\n                'save',\r\n                'saveAndContinue'\r\n            ], this.eventPrefix);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hide loader.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        hideLoader: function () {\r\n            loader.get(this.name).hide();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate and save form.\r\n         *\r\n         * @param {String} redirect\r\n         * @param {Object} data\r\n         */\r\n        save: function (redirect, data) {\r\n            this.validate();\r\n\r\n            if (!this.additionalInvalid && !this.source.get('params.invalid')) {\r\n                this.setAdditionalData(data)\r\n                    .submit(redirect);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set additional data to source before form submit and after validation.\r\n         *\r\n         * @param {Object} data\r\n         * @returns {Object}\r\n         */\r\n        setAdditionalData: function (data) {\r\n            _.each(data, function (value, name) {\r\n                this.source.set('data.' + name, value);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Submits form\r\n         *\r\n         * @param {String} redirect\r\n         */\r\n        submit: function (redirect) {\r\n            var additional = collectData(this.additionalFields),\r\n                source = this.source;\r\n\r\n            _.each(additional, function (value, name) {\r\n                source.set('data.' + name, value);\r\n            });\r\n\r\n            source.save({\r\n                redirect: redirect,\r\n                ajaxSave: this.ajaxSave,\r\n                ajaxSaveType: this.ajaxSaveType,\r\n                response: {\r\n                    data: this.responseData,\r\n                    status: this.responseStatus\r\n                },\r\n                attributes: {\r\n                    id: this.namespace\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validates each element and returns true, if all elements are valid.\r\n         */\r\n        validate: function () {\r\n            this.additionalFields = document.querySelectorAll(this.selector);\r\n            this.source.set('params.invalid', false);\r\n            this.source.trigger('data.validate');\r\n            this.set('additionalInvalid', !isValidFields(this.additionalFields));\r\n        },\r\n\r\n        /**\r\n         * Trigger reset form data.\r\n         */\r\n        reset: function () {\r\n            this.source.trigger('data.reset');\r\n        },\r\n\r\n        /**\r\n         * Trigger overload form data.\r\n         */\r\n        overload: function () {\r\n            this.source.trigger('data.overload');\r\n        },\r\n\r\n        /**\r\n         * Updates data from server.\r\n         */\r\n        reload: function () {\r\n            makeRequest(this.params, this.data, this.reloadUrl).then(function (data) {\r\n                app(data, true);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/provider.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    './client',\r\n    'mageUtils'\r\n], function (_, Element, Client, utils) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            clientConfig: {\r\n                urls: {\r\n                    save: '${ $.submit_url }',\r\n                    beforeSave: '${ $.validate_url }'\r\n                }\r\n            },\r\n            ignoreTmpls: {\r\n                data: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initClient();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes client component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initClient: function () {\r\n            this.client = new Client(this.clientConfig);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Saves currently available data.\r\n         *\r\n         * @param {Object} [options] - Addtitional request options.\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        save: function (options) {\r\n            var data = this.get('data');\r\n\r\n            this.client.save(data, options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update data that stored in provider.\r\n         *\r\n         * @param {Boolean} isProvider\r\n         * @param {Object} newData\r\n         * @param {Object} oldData\r\n         *\r\n         * @returns {Provider}\r\n         */\r\n        updateConfig: function (isProvider, newData, oldData) {\r\n            if (isProvider === true) {\r\n                this.setData(oldData, newData, this);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *  Set data to provder based on current data.\r\n         *\r\n         * @param {Object} oldData\r\n         * @param {Object} newData\r\n         * @param {Provider} current\r\n         * @param {String} parentPath\r\n         */\r\n        setData: function (oldData, newData, current, parentPath) {\r\n\r\n            /* eslint-disable eqeqeq */\r\n            _.each(newData, function (val, key) {\r\n                if (_.isObject(val) || _.isArray(val)) {\r\n                    this.setData(oldData[key], val, current[key], utils.fullPath(parentPath, key));\r\n                } else if (val != oldData[key] && oldData[key] == current[key]) {\r\n                    this.set(utils.fullPath(parentPath, key), val);\r\n                }\r\n            }, this);\r\n\r\n            /* eslint-enable eqeqeq */\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/switcher.js":"define([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'uiClass'\r\n], function (_, registry, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            rules: []\r\n        },\r\n\r\n        /**\r\n         * Initializes instance of a DataSwitcher.\r\n         *\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initRules();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        initRules: function () {\r\n            this.rules.forEach(this.initRule, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rule definition.\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        initRule: function (rule) {\r\n            var handler = this.onValueChange.bind(this, rule);\r\n\r\n            if (!rule.target) {\r\n                rule.target = this.target;\r\n            }\r\n\r\n            if (!rule.property) {\r\n                rule.property = this.property;\r\n            }\r\n\r\n            registry.get(rule.target, function (target) {\r\n                this.applyRule(rule, target.get(rule.property));\r\n                target.on(rule.property, handler);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rule definition.\r\n         * @returns {DataSwitcher} Chainable.\r\n         */\r\n        addRule: function (rule) {\r\n            this.rules.push(rule);\r\n            this.initRule(rule);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rule object.\r\n         * @param {*} value - Current value associated with a rule.\r\n         */\r\n        applyRule: function (rule, value) {\r\n            var actions = rule.actions;\r\n\r\n            //TODO Refactor this logic in scope of MAGETWO-48585\r\n            /* eslint-disable eqeqeq */\r\n            if (rule.value != value) {\r\n                return;\r\n            } else if (rule.strict) {\r\n                return;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n            actions.forEach(this.applyAction, this);\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} action - Action object.\r\n         */\r\n        applyAction: function (action) {\r\n            registry.get(action.target, function (target) {\r\n                var callback = target[action.callback];\r\n\r\n                callback.apply(target, action.params || []);\r\n            });\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Object} rule - Rules object.\r\n         * @param {*} value - Current value associated with a rule.\r\n         */\r\n        onValueChange: function (rule, value) {\r\n            this.applyRule(rule, value);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/adapter/buttons.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return {\r\n        'reset': '#reset',\r\n        'save': '#save',\r\n        'saveAndContinue': '#save_and_continue'\r\n    };\r\n});\r\n","Magento_Ui/js/form/components/area.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    './tab'\r\n], function (_, Tab) {\r\n    'use strict';\r\n\r\n    return Tab.extend({\r\n        defaults: {\r\n            uniqueNs:   'params.activeArea',\r\n            template:   'ui/area',\r\n            changed:    false,\r\n            loading:    false\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onChildrenUpdate', 'onContentLoading');\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('changed loading');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls parent's initElement method.\r\n         * Assignes callbacks on various events of incoming element.\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            this._super();\r\n\r\n            elem.on({\r\n                'update':   this.onChildrenUpdate,\r\n                'loading':  this.onContentLoading\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being invoked on children update.\r\n         * Sets changed property to one incoming.\r\n         * Invokes setActive method if settings\r\n         * contain makeVisible property set to true.\r\n         *\r\n         * @param  {Boolean} hasChanged\r\n         */\r\n        onChildrenUpdate: function (hasChanged) {\r\n            if (!hasChanged) {\r\n                hasChanged = _.some(this.delegate('hasChanged'));\r\n            }\r\n\r\n            this.changed(hasChanged);\r\n        },\r\n\r\n        /**\r\n         * Callback that sets loading property to true.\r\n         */\r\n        onContentLoading: function (isLoading) {\r\n            this.loading(isLoading);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/button.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiElement',\r\n    'uiRegistry',\r\n    'uiLayout',\r\n    'mageUtils'\r\n], function (Element, registry, layout, utils) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            additionalClasses: {},\r\n            displayArea: 'outsideGroup',\r\n            displayAsLink: false,\r\n            elementTmpl: 'ui/form/element/button',\r\n            template: 'ui/form/components/button/simple',\r\n            visible: true,\r\n            disabled: false,\r\n            title: ''\r\n        },\r\n\r\n        /**\r\n         * Initializes component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            return this._super()\r\n                ._setClasses();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe([\r\n                    'visible',\r\n                    'disabled',\r\n                    'title'\r\n                ]);\r\n        },\r\n\r\n        /**\r\n         * Performs configured actions\r\n         */\r\n        action: function () {\r\n            this.actions.forEach(this.applyAction, this);\r\n        },\r\n\r\n        /**\r\n         * Apply action on target component,\r\n         * but previously create this component from template if it is not existed\r\n         *\r\n         * @param {Object} action - action configuration\r\n         */\r\n        applyAction: function (action) {\r\n            var targetName = action.targetName,\r\n                params = utils.copy(action.params) || [],\r\n                actionName = action.actionName,\r\n                target;\r\n\r\n            if (!registry.has(targetName)) {\r\n                this.getFromTemplate(targetName);\r\n            }\r\n            target = registry.async(targetName);\r\n\r\n            if (target && typeof target === 'function' && actionName) {\r\n                params.unshift(actionName);\r\n                target.apply(target, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create target component from template\r\n         *\r\n         * @param {Object} targetName - name of component,\r\n         * that supposed to be a template and need to be initialized\r\n         */\r\n        getFromTemplate: function (targetName) {\r\n            var parentName = targetName.split('.'),\r\n                index = parentName.pop(),\r\n                child;\r\n\r\n            parentName = parentName.join('.');\r\n            child = utils.template({\r\n                parent: parentName,\r\n                name: index,\r\n                nodeTemplate: targetName\r\n            });\r\n            layout([child]);\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            if (typeof this.additionalClasses === 'string') {\r\n                this.additionalClasses = this.additionalClasses\r\n                    .trim()\r\n                    .split(' ')\r\n                    .reduce(function (classes, name) {\r\n                        classes[name] = true;\r\n\r\n                        return classes;\r\n                    }, {}\r\n                );\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/collection.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiComponent',\r\n    'uiLayout',\r\n    'Magento_Ui/js/modal/confirm'\r\n], function (_, utils, registry, Component, layout, confirm) {\r\n    'use strict';\r\n\r\n    var childTemplate = {\r\n        parent: '${ $.$data.name }',\r\n        name: '${ $.$data.childIndex }',\r\n        dataScope: '${ $.name }',\r\n        nodeTemplate: '${ $.$data.name }.${ $.$data.itemTemplate }'\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            lastIndex: 0,\r\n            template: 'ui/form/components/collection'\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls initialize of parent\r\n         * class, calls initChildren method.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initChildren();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Activates the incoming child and triggers the update event.\r\n         *\r\n         * @param {Object} elem - Incoming child.\r\n         */\r\n        initElement: function (elem) {\r\n            this._super();\r\n\r\n            elem.activate();\r\n\r\n            this.bubble('update');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Loops over corresponding data in data storage,\r\n         * creates child for each and pushes it's identifier to initialItems array.\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initChildren: function () {\r\n            var children = this.source.get(this.dataScope),\r\n                initial = this.initialItems = [];\r\n\r\n            _.each(children, function (item, index) {\r\n                initial.push(index);\r\n                this.addChild(index);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates new item of collection, based on incoming 'index'.\r\n         * If not passed creates one with 'new_' prefix.\r\n         *\r\n         * @param {String|Object} [index] - Index of a child.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        addChild: function (index) {\r\n            this.childIndex = !_.isString(index) ?\r\n                'new_' + this.lastIndex++ :\r\n                index;\r\n\r\n            layout([utils.template(childTemplate, this)]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returnes true if current set of items differ from initial one,\r\n         * or if some child has been changed.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasChanged: function () {\r\n            var initial = this.initialItems,\r\n                current = this.elems.pluck('index'),\r\n                changed = !utils.equalArrays(initial, current);\r\n\r\n            return changed || this.elems.some(function (elem) {\r\n                return _.some(elem.delegate('hasChanged'));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Initiates validation of its' children components.\r\n         *\r\n         * @returns {Array} An array of validation results.\r\n         */\r\n        validate: function () {\r\n            var elems;\r\n\r\n            this.allValid = true;\r\n\r\n            elems = this.elems.sortBy(function (elem) {\r\n                return !elem.active();\r\n            });\r\n\r\n            elems = elems.map(this._validate, this);\r\n\r\n            return _.flatten(elems);\r\n        },\r\n\r\n        /**\r\n         * Iterator function for components validation.\r\n         * Activates first invalid child component.\r\n         *\r\n         * @param {Object} elem - Element to run validation on.\r\n         * @returns {Array} An array of validation results.\r\n         */\r\n        _validate: function (elem) {\r\n            var result = elem.delegate('validate'),\r\n                invalid;\r\n\r\n            invalid = _.some(result, function (item) {\r\n                return !item.valid;\r\n            });\r\n\r\n            if (this.allValid && invalid) {\r\n                this.allValid = false;\r\n\r\n                elem.activate();\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Creates function that removes element\r\n         * from collection using '_removeChild' method.\r\n         * @param  {Object} elem - Element that should be removed.\r\n         * @returns {Function}\r\n         *      Since this method is used by 'click' binding,\r\n         *      it requires function to invoke.\r\n         */\r\n        removeAddress: function (elem) {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: this.removeMessage,\r\n                actions: {\r\n                    confirm: function () {\r\n                        self._removeAddress(elem)\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Removes elememt from both collection and data storage,\r\n         * activates first element if removed one was active,\r\n         * triggers 'update' event.\r\n         *\r\n         * @param {Object} elem - Element to remove.\r\n         */\r\n        _removeAddress: function (elem) {\r\n            var isActive = elem.active(),\r\n                first;\r\n\r\n            elem.destroy();\r\n\r\n            first = this.elems.first();\r\n\r\n            if (first && isActive) {\r\n                first.activate();\r\n            }\r\n\r\n            this.bubble('update');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/fieldset.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/collapsible',\r\n    'underscore'\r\n], function (Collapsible, _) {\r\n    'use strict';\r\n\r\n    return Collapsible.extend({\r\n        defaults: {\r\n            template: 'ui/form/fieldset',\r\n            collapsible: false,\r\n            changed: false,\r\n            loading: false,\r\n            error: false,\r\n            opened: false,\r\n            level: 0,\r\n            visible: true,\r\n            disabled: false,\r\n            listens: {\r\n                'opened': 'onVisibilityChange'\r\n            },\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onChildrenUpdate', 'onChildrenError', 'onContentLoading');\r\n\r\n            return this._super()\r\n                ._setClasses();\r\n        },\r\n\r\n        /**\r\n         * Initializes components' configuration.\r\n         *\r\n         * @returns {Fieldset} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n            this._wasOpened = this.opened || !this.collapsible;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         *\r\n         * @returns {Object} Reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('changed loading error visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls parent's initElement method.\r\n         * Assignes callbacks on various events of incoming element.\r\n         *\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            elem.initContainer(this);\r\n\r\n            elem.on({\r\n                'update':   this.onChildrenUpdate,\r\n                'loading':  this.onContentLoading,\r\n                'error':  this.onChildrenError\r\n            });\r\n\r\n            if (this.disabled) {\r\n                try {\r\n                    elem.disabled(true);\r\n                }\r\n                catch (e) {\r\n\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being invoked on children update.\r\n         * Sets changed property to one incoming.\r\n         *\r\n         * @param  {Boolean} hasChanged\r\n         */\r\n        onChildrenUpdate: function (hasChanged) {\r\n            if (!hasChanged) {\r\n                hasChanged = _.some(this.delegate('hasChanged'));\r\n            }\r\n\r\n            this.changed(hasChanged);\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__collapsible-block-wrapper': this.collapsible,\r\n                _show: this.opened,\r\n                _hide: !this.opened,\r\n                _disabled: this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handler of the \"opened\" property changes.\r\n         *\r\n         * @param {Boolean} isOpened\r\n         */\r\n        onVisibilityChange: function (isOpened) {\r\n            if (!this._wasOpened) {\r\n                this._wasOpened = isOpened;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Is being invoked on children validation error.\r\n         * Sets error property to one incoming.\r\n         *\r\n         * @param {String} message - error message.\r\n         */\r\n        onChildrenError: function (message) {\r\n            var hasErrors = this.elems.some('error');\r\n\r\n            this.error(hasErrors || message);\r\n        },\r\n\r\n        /**\r\n         * Callback that sets loading property to true.\r\n         */\r\n        onContentLoading: function (isLoading) {\r\n            this.loading(isLoading);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/group.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiCollection'\r\n], function (_, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            showLabel: true,\r\n            required: false,\r\n            template: 'ui/group/group',\r\n            fieldTemplate: 'ui/form/field',\r\n            breakLine: true,\r\n            validateWholeGroup: false,\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /**\r\n         * Extends this with defaults and config.\r\n         * Then calls initObservable, iniListenes and extractData methods.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                ._setClasses();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('visible')\r\n                .observe({\r\n                    required: !!+this.required\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__control-grouped': !this.breakLine,\r\n                'admin__control-fields': this.breakLine,\r\n                required:   this.required,\r\n                _error:     this.error,\r\n                _disabled:  this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines if group has only one element.\r\n         * @return {Boolean}\r\n         */\r\n        isSingle: function () {\r\n            return this.elems.getLength() === 1;\r\n        },\r\n\r\n        /**\r\n         * Defines if group has multiple elements.\r\n         * @return {Boolean}\r\n         */\r\n        isMultiple: function () {\r\n            return this.elems.getLength() > 1;\r\n        },\r\n\r\n        /**\r\n         * Returns an array of child components previews.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getPreview: function () {\r\n            return this.elems.map('getPreview');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/html.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent'\r\n], function ($, _, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            content:        '',\r\n            showSpinner:    false,\r\n            loading:        false,\r\n            visible:        true,\r\n            template:       'ui/content/content',\r\n            additionalClasses: {},\r\n            ignoreTmpls: {\r\n                content: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls 'initialize' method of\r\n         *     parent, calls 'initAjaxConfig'\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onContainerToggle', 'onDataLoaded');\r\n\r\n            this._super()\r\n                ._setClasses()\r\n                .initAjaxConfig();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' method of parent, initializes observable\r\n         * properties of instance\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('content loading visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__scope-old': !!additional\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        initContainer: function (parent) {\r\n            this._super();\r\n\r\n            parent.on('active', this.onContainerToggle);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes default ajax config on instance\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initAjaxConfig: function () {\r\n            this.ajaxConfig = {\r\n                url: this.url,\r\n                data: {\r\n                    FORM_KEY: window.FORM_KEY\r\n                },\r\n                success:    this.onDataLoaded\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'loadData' if both 'active' variable and 'shouldLoad'\r\n         * property are truthy\r\n         *\r\n         * @param  {Boolean} active\r\n         */\r\n        onContainerToggle: function (active) {\r\n            if (active && this.shouldLoad()) {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Defines if instance has 'content' property defined.\r\n         *\r\n         * @return {Boolean} [description]\r\n         */\r\n        hasData: function () {\r\n            return !!this.content();\r\n        },\r\n\r\n        /**\r\n         * Defines if instance should load external data\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        shouldLoad: function () {\r\n            return this.url && !this.hasData() && !this.loading();\r\n        },\r\n\r\n        /**\r\n         * Sets loading property to true, makes ajax call\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        loadData: function () {\r\n            this.loading(true);\r\n\r\n            $.ajax(this.ajaxConfig);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Ajax's request success handler. Calls 'updateContent' passing 'data'\r\n         * to it, then sets 'loading' property to false.\r\n         *\r\n         * @param  {String} data\r\n         */\r\n        onDataLoaded: function (data) {\r\n            this.updateContent(data)\r\n                .loading(false);\r\n        },\r\n\r\n        /**\r\n         * Sets incoming data 'content' property's value\r\n         *\r\n         * @param  {String} content\r\n         * @return {Object} - reference to instance\r\n         */\r\n        updateContent: function (content) {\r\n            this.content(content);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/insert-form.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './insert',\r\n    'mageUtils',\r\n    'jquery'\r\n], function (Insert, utils, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get page actions element.\r\n     *\r\n     * @param {String} elem\r\n     * @param {String} actionsClass\r\n     * @returns {String}\r\n     */\r\n    function getPageActions(elem, actionsClass) {\r\n        var el = document.createElement('div');\r\n\r\n        el.innerHTML = elem;\r\n\r\n        return el.getElementsByClassName(actionsClass)[0];\r\n    }\r\n\r\n    /**\r\n     * Return element without page actions toolbar\r\n     *\r\n     * @param {String} elem\r\n     * @param {String} actionsClass\r\n     * @returns {String}\r\n     */\r\n    function removePageActions(elem, actionsClass) {\r\n        var el = document.createElement('div'),\r\n            actions;\r\n\r\n        el.innerHTML = elem;\r\n        actions = el.getElementsByClassName(actionsClass)[0];\r\n        el.removeChild(actions);\r\n\r\n        return el.innerHTML;\r\n    }\r\n\r\n    return Insert.extend({\r\n        defaults: {\r\n            externalFormName: '${ $.ns }.${ $.ns }',\r\n            pageActionsClass: 'page-actions',\r\n            actionsContainerClass: 'page-main-actions',\r\n            exports: {\r\n                prefix: '${ $.externalFormName }:selectorPrefix'\r\n            },\r\n            imports: {\r\n                toolbarSection: '${ $.toolbarContainer }:toolbarSection',\r\n                prefix: '${ $.toolbarContainer }:rootSelector',\r\n                messagesClass: '${ $.externalFormName }:messagesClass'\r\n            },\r\n            settings: {\r\n                ajax: {\r\n                    ajaxSave: true,\r\n                    exports: {\r\n                        ajaxSave: '${ $.externalFormName }:ajaxSave'\r\n                    },\r\n                    imports: {\r\n                        responseStatus: '${ $.externalFormName }:responseStatus',\r\n                        responseData: '${ $.externalFormName }:responseData'\r\n                    }\r\n                }\r\n            },\r\n            modules: {\r\n                externalForm: '${ $.externalFormName }'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe('responseStatus');\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var defaults = this.constructor.defaults;\r\n\r\n            utils.extend(defaults, defaults.settings[config.formSubmitType] || {});\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /** @inheritdoc*/\r\n        destroyInserted: function () {\r\n            if (this.isRendered && this.externalForm()) {\r\n                this.externalForm().delegate('destroy');\r\n                this.removeActions();\r\n                this.responseStatus(undefined);\r\n                this.responseData = {};\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onRender: function (data) {\r\n            var actions = getPageActions(data, this.pageActionsClass);\r\n\r\n            if (!data.length) {\r\n                return this;\r\n            }\r\n            data = removePageActions(data, this.pageActionsClass);\r\n            this.renderActions(actions);\r\n            this._super(data);\r\n        },\r\n\r\n        /**\r\n         * Insert actions in toolbar.\r\n         *\r\n         * @param {String} actions\r\n         */\r\n        renderActions: function (actions) {\r\n            var $container = $('<div/>');\r\n\r\n            $container\r\n                .addClass(this.actionsContainerClass)\r\n                .append(actions);\r\n\r\n            this.formHeader = $container;\r\n\r\n            $(this.toolbarSection).append(this.formHeader);\r\n        },\r\n\r\n        /**\r\n         * Remove actions toolbar.\r\n         */\r\n        removeActions: function () {\r\n            $(this.formHeader).siblings('.' + this.messagesClass).remove();\r\n            $(this.formHeader).remove();\r\n            this.formHeader = $();\r\n        },\r\n\r\n        /**\r\n         * Reset external form data.\r\n         */\r\n        resetForm: function () {\r\n            if (this.externalSource()) {\r\n                this.externalSource().trigger('data.reset');\r\n                this.responseStatus(undefined);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/tab.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiCollection'\r\n], function (Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            uniqueProp:     'active',\r\n            active:         false,\r\n            wasActivated:   false\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .setUnique();\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('active wasActivated');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets active property to true, then invokes pushParams method.\r\n         */\r\n        activate: function () {\r\n            this.active(true);\r\n            this.wasActivated(true);\r\n\r\n            this.setUnique();\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/tab_group.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/collapsible'\r\n], function (_, Collapsible) {\r\n    'use strict';\r\n\r\n    return Collapsible.extend({\r\n        defaults: {\r\n            listens: {\r\n                '${ $.provider }:data.validate': 'onValidate'\r\n            },\r\n            collapsible: false,\r\n            opened: true\r\n        },\r\n\r\n        /**\r\n         * Invokes initElement method of parent class, calls 'initActivation' method\r\n         * passing element to it.\r\n         * @param {Object} elem\r\n         * @returns {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            this._super()\r\n                .initActivation(elem);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Activates element if one is first or if one has 'active' propert\r\n         * set to true.\r\n         *\r\n         * @param  {Object} elem\r\n         * @returns {Object} - reference to instance\r\n         */\r\n        initActivation: function (elem) {\r\n            var elems   = this.elems(),\r\n                isFirst = !elems.indexOf(elem);\r\n\r\n            if (isFirst || elem.active()) {\r\n                elem.activate();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates 'validate' method on element, then reads 'invalid' property\r\n         * of params storage, and if defined, activates element, sets\r\n         * 'allValid' property of instance to false and sets invalid's\r\n         * 'focused' property to true.\r\n         *\r\n         * @param {Object} elem\r\n         */\r\n        validate: function (elem) {\r\n            var result  = elem.delegate('validate'),\r\n                invalid;\r\n\r\n            invalid = _.find(result, function (item) {\r\n                return !item.valid;\r\n            });\r\n\r\n            if (invalid) {\r\n                elem.activate();\r\n                invalid.target.focused(true);\r\n            }\r\n\r\n            return invalid;\r\n        },\r\n\r\n        /**\r\n         * Sets 'allValid' property of instance to true, then calls 'validate' method\r\n         * of instance for each element.\r\n         */\r\n        onValidate: function () {\r\n            this.elems.sortBy(function (elem) {\r\n                return !elem.active();\r\n            }).some(this.validate, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/collection/item.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    '../tab'\r\n], function (_, utils, Tab) {\r\n    'use strict';\r\n\r\n    var previewConfig = {\r\n        separator: ' ',\r\n        prefix: ''\r\n    };\r\n\r\n    /**\r\n     * Parses incoming data and returnes result merged with default preview config\r\n     *\r\n     * @param  {Object|String} data\r\n     * @return {Object}\r\n     */\r\n    function parsePreview(data) {\r\n        if (typeof data == 'string') {\r\n            data = {\r\n                items: data\r\n            };\r\n        }\r\n\r\n        data.items = utils.stringToArray(data.items);\r\n\r\n        return _.defaults(data, previewConfig);\r\n    }\r\n\r\n    return Tab.extend({\r\n        defaults: {\r\n            label: '',\r\n            uniqueNs: 'activeCollectionItem',\r\n            previewTpl: 'ui/form/components/collection/preview'\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls initializes of parent class\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'buildPreview', 'hasPreview');\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls initProperties of parent class, initializes properties\r\n         * of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.displayed = [];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class, initializes observable\r\n         * properties of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    noPreview: true,\r\n                    indexed: {}\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being called when child element has been initialized,\r\n         *     calls initElement of parent class, binds to element's update event,\r\n         *     calls insertToArea and insertToIndexed methods passing element to it\r\n         *\r\n         * @param  {Object} elem\r\n         */\r\n        initElement: function (elem) {\r\n            this._super()\r\n                .insertToIndexed(elem);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds element to observable indexed object of instance\r\n         *\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        insertToIndexed: function (elem) {\r\n            var indexed = this.indexed();\r\n\r\n            indexed[elem.index] = elem;\r\n\r\n            this.indexed(indexed);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * Overrides base method to clear data when this method is called.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n            this._clearData();\r\n        },\r\n\r\n        /**\r\n         * Clears all data associated with component.\r\n         * @private\r\n         *\r\n         * @returns {Item} Chainable.\r\n         */\r\n        _clearData: function () {\r\n            this.source.remove(this.dataScope);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Formats incoming previews array via parsePreview function.\r\n         *\r\n         * @param  {Array} previews\r\n         * @return {Array} - formatted previews\r\n         */\r\n        formatPreviews: function (previews) {\r\n            return previews.map(parsePreview);\r\n        },\r\n\r\n        /**\r\n         * Creates string view of previews\r\n         *\r\n         * @param  {Object} data\r\n         * @return {Strict} - formatted preview string\r\n         */\r\n        buildPreview: function (data) {\r\n            var preview = this.getPreview(data.items),\r\n                prefix = data.prefix;\r\n\r\n            return prefix + preview.join(data.separator);\r\n        },\r\n\r\n        /**\r\n         * Defines if instance has preview for incoming data\r\n         *\r\n         * @param  {Object}  data\r\n         * @return {Boolean}\r\n         */\r\n        hasPreview: function (data) {\r\n            return !!this.getPreview(data.items).length;\r\n        },\r\n\r\n        /**\r\n         * Creates an array of previews for elements specified in incoming\r\n         * items array, calls updatePreview afterwards.\r\n         *\r\n         * @param  {Array} items - An array of element's indexes.\r\n         * @returns {Array} An array of previews.\r\n         */\r\n        getPreview: function (items) {\r\n            var elems = this.indexed(),\r\n                displayed = this.displayed,\r\n                preview;\r\n\r\n            items = items.map(function (index) {\r\n                var elem = elems[index];\r\n\r\n                preview = elem && elem.visible() ? elem.getPreview() : '';\r\n\r\n                preview = Array.isArray(preview) ?\r\n                    _.compact(preview).join(', ') :\r\n                    preview;\r\n\r\n                utils.toggle(displayed, index, !!preview);\r\n\r\n                return preview;\r\n            });\r\n\r\n            this.noPreview(!displayed.length);\r\n\r\n            return _.compact(items);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/abstract.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'uiElement',\r\n    'Magento_Ui/js/lib/validation/validator'\r\n], function (_, utils, layout, Element, validator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            visible: true,\r\n            preview: '',\r\n            focused: false,\r\n            required: false,\r\n            disabled: false,\r\n            valueChangedByUser: false,\r\n            elementTmpl: 'ui/form/element/input',\r\n            tooltipTpl: 'ui/form/element/helper/tooltip',\r\n            fallbackResetTpl: 'ui/form/element/helper/fallback-reset',\r\n            'input_type': 'input',\r\n            placeholder: '',\r\n            description: '',\r\n            labelVisible: true,\r\n            label: '',\r\n            error: '',\r\n            warn: '',\r\n            notice: '',\r\n            customScope: '',\r\n            default: '',\r\n            isDifferedFromDefault: false,\r\n            showFallbackReset: false,\r\n            additionalClasses: {},\r\n            isUseDefault: '',\r\n            valueUpdate: false, // ko binding valueUpdate\r\n\r\n            switcherConfig: {\r\n                component: 'Magento_Ui/js/form/switcher',\r\n                name: '${ $.name }_switcher',\r\n                target: '${ $.name }',\r\n                property: 'value'\r\n            },\r\n            listens: {\r\n                visible: 'setPreview',\r\n                value: 'setDifferedFromDefault',\r\n                '${ $.provider }:data.reset': 'reset',\r\n                '${ $.provider }:data.overload': 'overload',\r\n                '${ $.provider }:${ $.customScope ? $.customScope + \".\" : \"\"}data.validate': 'validate',\r\n                'isUseDefault': 'toggleUseDefault'\r\n            },\r\n\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes initialize method of parent class,\r\n         * contains initialization logic\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'reset');\r\n\r\n            this._super()\r\n                .setInitialValue()\r\n                ._setClasses()\r\n                .initSwitcher();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            var rules = this.validation = this.validation || {};\r\n\r\n            this._super();\r\n\r\n            this.observe('error disabled focused preview visible value warn isDifferedFromDefault')\r\n                .observe('isUseDefault')\r\n                .observe({\r\n                    'required': !!rules['required-entry']\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            var uid = utils.uniqueid(),\r\n                name,\r\n                valueUpdate,\r\n                scope;\r\n\r\n            this._super();\r\n\r\n            scope   = this.dataScope;\r\n            name    = scope.split('.').slice(1);\r\n\r\n            valueUpdate = this.showFallbackReset ? 'afterkeydown' : this.valueUpdate;\r\n\r\n            _.extend(this, {\r\n                uid: uid,\r\n                noticeId: 'notice-' + uid,\r\n                inputName: utils.serializeName(name.join('.')),\r\n                valueUpdate: valueUpdate\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes switcher element instance.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initSwitcher: function () {\r\n            if (this.switcherConfig.enabled) {\r\n                layout([this.switcherConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets initial value of the element and subscribes to it's changes.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setInitialValue: function () {\r\n            this.initialValue = this.getInitialValue();\r\n\r\n            if (this.value.peek() !== this.initialValue) {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.on('value', this.onUpdate.bind(this));\r\n            this.isUseDefault(this.disabled());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses;\r\n\r\n            if (_.isString(additional)){\r\n                this.additionalClasses = {};\r\n\r\n                if (additional.trim().length) {\r\n                    additional = additional.trim().split(' ');\r\n\r\n                    additional.forEach(function (name) {\r\n                        if (name.length) {\r\n                            this.additionalClasses[name] = true;\r\n                        }\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                _required: this.required,\r\n                _error: this.error,\r\n                _warn: this.warn,\r\n                _disabled: this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets initial value of element\r\n         *\r\n         * @returns {*} Elements' value.\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.value(), this.default],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                if (v !== null && v !== undefined) {\r\n                    value = v;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            return this.normalizeData(value);\r\n        },\r\n\r\n        /**\r\n         * Sets 'value' as 'hidden' property's value, triggers 'toggle' event,\r\n         * sets instance's hidden identifier in params storage based on\r\n         * 'value'.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setVisible: function (isVisible) {\r\n            this.visible(isVisible);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        show: function () {\r\n            this.visible(true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hide element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        hide: function () {\r\n            this.visible(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disable element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        disable: function () {\r\n            this.disabled(true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        enable: function () {\r\n            this.disabled(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {(String|Object)} rule\r\n         * @param {(Object|Boolean)} [options]\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setValidation: function (rule, options) {\r\n            var rules =  utils.copy(this.validation),\r\n                changed;\r\n\r\n            if (_.isObject(rule)) {\r\n                _.extend(this.validation, rule);\r\n            } else {\r\n                this.validation[rule] = options;\r\n            }\r\n\r\n            changed = utils.compare(rules, this.validation).equal;\r\n\r\n            if (changed) {\r\n                this.required(!!rules['required-entry']);\r\n                this.validate();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns unwrapped preview observable.\r\n         *\r\n         * @returns {String} Value of the preview observable.\r\n         */\r\n        getPreview: function () {\r\n            return this.value();\r\n        },\r\n\r\n        /**\r\n         * Checks if element has addons\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasAddons: function () {\r\n            return this.addbefore || this.addafter;\r\n        },\r\n\r\n        /**\r\n         * Checks if element has service setting\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasService: function() {\r\n            return this.service && this.service.template;\r\n        },\r\n\r\n        /**\r\n         * Defines if value has changed.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasChanged: function () {\r\n            var notEqual = this.value() !== this.initialValue;\r\n\r\n            return !this.visible() ? false : notEqual;\r\n        },\r\n\r\n        /**\r\n         * Checks if 'value' is not empty.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return !utils.isEmpty(this.value());\r\n        },\r\n\r\n        /**\r\n         * Sets value observable to initialValue property.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        reset: function () {\r\n            this.value(this.initialValue);\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets current state as initial.\r\n         */\r\n        overload: function () {\r\n            this.setInitialValue();\r\n            this.bubble('update', this.hasChanged());\r\n        },\r\n\r\n        /**\r\n         * Clears 'value' property.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        clear: function () {\r\n            this.value('');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Converts values like 'null' or 'undefined' to an empty string.\r\n         *\r\n         * @param {*} value - Value to be processed.\r\n         * @returns {*}\r\n         */\r\n        normalizeData: function (value) {\r\n            return utils.isEmpty(value) ? '' : value;\r\n        },\r\n\r\n        /**\r\n         * Validates itself by it's validation rules using validator object.\r\n         * If validation of a rule did not pass, writes it's message to\r\n         * 'error' observable property.\r\n         *\r\n         * @returns {Object} Validate information.\r\n         */\r\n        validate: function () {\r\n            var value   = this.value(),\r\n                result  = validator(this.validation, value, this.validationParams),\r\n                message = !this.disabled() && this.visible() ? result.message : '',\r\n                isValid = this.disabled() || !this.visible() || result.passed;\r\n\r\n            this.error(message);\r\n            this.bubble('error', message);\r\n\r\n            //TODO: Implement proper result propagation for form\r\n            if (!isValid) {\r\n                this.source.set('params.invalid', true);\r\n            }\r\n\r\n            return {\r\n                valid: isValid,\r\n                target: this\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Callback that fires when 'value' property is updated.\r\n         */\r\n        onUpdate: function () {\r\n            this.bubble('update', this.hasChanged());\r\n\r\n            this.validate();\r\n        },\r\n\r\n        /**\r\n         * Restore value to default\r\n         */\r\n        restoreToDefault: function () {\r\n            this.value(this.default);\r\n        },\r\n\r\n        /**\r\n         * Update whether value differs from default value\r\n         */\r\n        setDifferedFromDefault: function () {\r\n            var value = typeof this.value() != 'undefined' && this.value() !== null ? this.value() : '',\r\n                defaultValue = typeof this.default != 'undefined' && this.default !== null ? this.default : '';\r\n            this.isDifferedFromDefault(value !== defaultValue);\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} state\r\n         */\r\n        toggleUseDefault: function (state) {\r\n            this.disabled(state);\r\n        },\r\n\r\n        /**\r\n         *  Callback when value is changed by user\r\n         */\r\n        userChanges: function() {\r\n            this.valueChangedByUser = true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/boolean.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            checked: false,\r\n            links: {\r\n                checked: 'value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {*|void|Element}\r\n         */\r\n        initObservable: function () {\r\n            return this._super()\r\n                    .observe('checked');\r\n        },\r\n\r\n        /**\r\n         * Converts provided value to boolean.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        normalizeData: function () {\r\n            return !!+this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls 'onUpdate' method of parent, if value is defined and instance's\r\n         *     'unique' property set to true, calls 'setUnique' method\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        onUpdate: function () {\r\n            if (this.hasUnique) {\r\n                this.setUnique();\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/checkbox-set.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './abstract'\r\n], function (_, utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            template: 'ui/form/element/checkbox-set',\r\n            multiple: false,\r\n            multipleScopeValue: null\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.value = this.normalizeData(this.value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initLinks: function () {\r\n            var scope = this.source.get(this.dataScope);\r\n\r\n            this.multipleScopeValue = this.multiple && _.isArray(scope) ? utils.copy(scope) : undefined;\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            this.value(utils.copy(this.initialValue));\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            var value = this.multiple ? [] : '';\r\n\r\n            this.value(value);\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        normalizeData: function (value) {\r\n            if (!this.multiple) {\r\n                return this._super();\r\n            }\r\n\r\n            return _.isArray(value) ? utils.copy(value) : [];\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.initialValue = utils.copy(this.initialValue);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.multipleScopeValue, this.default, this.value.peek(), []],\r\n                value;\r\n\r\n            if (!this.multiple) {\r\n                return this._super();\r\n            }\r\n\r\n            values.some(function (v) {\r\n                return _.isArray(v) && (value = utils.copy(v));\r\n            });\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * Returns labels which matches current value.\r\n         *\r\n         * @returns {String|Array}\r\n         */\r\n        getPreview: function () {\r\n            var option;\r\n\r\n            if (!this.multiple) {\r\n                option = this.getOption(this.value());\r\n\r\n                return option ? option.label : '';\r\n            }\r\n\r\n            return this.value.map(function (value) {\r\n                return this.getOption(value).label;\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Returns option object assoctiated with provided value.\r\n         *\r\n         * @param {String} value\r\n         * @returns {Object}\r\n         */\r\n        getOption: function (value) {\r\n            return _.findWhere(this.options, {\r\n                value: value\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var value = this.value(),\r\n                initial = this.initialValue;\r\n\r\n            return this.multiple ?\r\n                !utils.equalArrays(value, initial) :\r\n                this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/country.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            imports: {\r\n                update: '${ $.parentName }.website_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var result;\r\n\r\n            if (!field) { //validate field, if we are on update\r\n                field = this.filterBy.field;\r\n            }\r\n\r\n            this._super(value, field);\r\n            result = _.filter(this.initialOptions, function (item) {\r\n\r\n                if (item[field]) {\r\n                    return ~item[field].indexOf(value);\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            this.setOptions(result);\r\n        }\r\n    });\r\n});\r\n\r\n","Magento_Ui/js/form/element/date.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'moment',\r\n    'mageUtils',\r\n    './abstract',\r\n    'moment-timezone-with-data'\r\n], function (moment, utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            options: {},\r\n\r\n            storeTimeZone: 'UTC',\r\n\r\n            validationParams: {\r\n                dateFormat: '${ $.outputDateFormat }'\r\n            },\r\n\r\n            /**\r\n             * Format of date that comes from the\r\n             * server (ICU Date Format).\r\n             *\r\n             * Used only in date picker mode\r\n             * (this.options.showsTime == false).\r\n             *\r\n             * @type {String}\r\n             */\r\n            inputDateFormat: 'y-MM-dd',\r\n\r\n            /**\r\n             * Format of date that should be sent to the\r\n             * server (ICU Date Format).\r\n             *\r\n             * Used only in date picker mode\r\n             * (this.options.showsTime == false).\r\n             *\r\n             * @type {String}\r\n             */\r\n            outputDateFormat: 'MM/dd/y',\r\n\r\n            /**\r\n             * Date/time format that is used to display date in\r\n             * the input field.\r\n             *\r\n             * @type {String}\r\n             */\r\n            pickerDateTimeFormat: '',\r\n\r\n            pickerDefaultDateFormat: 'MM/dd/y', // ICU Date Format\r\n            pickerDefaultTimeFormat: 'h:mm a', // ICU Time Format\r\n\r\n            /**\r\n             * Format needed by moment timezone for conversion.\r\n             */\r\n            timezoneFormat: 'YYYY-MM-DD HH:mm',\r\n\r\n            elementTmpl: 'ui/form/element/date',\r\n\r\n            listens: {\r\n                'value': 'onValueChange',\r\n                'shiftedValue': 'onShiftedValueChange'\r\n            },\r\n\r\n            /**\r\n             * Date/time value shifted to corresponding timezone\r\n             * according to this.storeTimeZone property. This value\r\n             * will be sent to the server.\r\n             *\r\n             * @type {String}\r\n             */\r\n            shiftedValue: ''\r\n        },\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            if (!this.options.dateFormat) {\r\n                this.options.dateFormat = this.pickerDefaultDateFormat;\r\n            }\r\n\r\n            if (!this.options.timeFormat) {\r\n                this.options.timeFormat = this.pickerDefaultTimeFormat;\r\n            }\r\n\r\n            this.prepareDateTimeFormats();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this._super().observe(['shiftedValue']);\r\n        },\r\n\r\n        /**\r\n         * Prepares and sets date/time value that will be displayed\r\n         * in the input field.\r\n         *\r\n         * @param {String} value\r\n         */\r\n        onValueChange: function (value) {\r\n            var dateFormat,\r\n                shiftedValue;\r\n\r\n            if (value) {\r\n                if (this.options.showsTime) {\r\n                    shiftedValue = moment.tz(value, 'UTC').tz(this.storeTimeZone);\r\n                } else {\r\n                    dateFormat = this.shiftedValue() ? this.outputDateFormat : this.inputDateFormat;\r\n\r\n                    shiftedValue = moment(value, dateFormat);\r\n                }\r\n\r\n                shiftedValue = shiftedValue.format(this.pickerDateTimeFormat);\r\n            } else {\r\n                shiftedValue = '';\r\n            }\r\n\r\n            if (shiftedValue !== this.shiftedValue()) {\r\n                this.shiftedValue(shiftedValue);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prepares and sets date/time value that will be sent\r\n         * to the server.\r\n         *\r\n         * @param {String} shiftedValue\r\n         */\r\n        onShiftedValueChange: function (shiftedValue) {\r\n            var value,\r\n                formattedValue,\r\n                momentValue;\r\n\r\n            if (shiftedValue) {\r\n                momentValue = moment(shiftedValue, this.pickerDateTimeFormat);\r\n\r\n                if (this.options.showsTime) {\r\n                    formattedValue = moment(momentValue).format(this.timezoneFormat);\r\n                    value = moment.tz(formattedValue, this.storeTimeZone).tz('UTC').toISOString();\r\n                } else {\r\n                    value = momentValue.format(this.outputDateFormat);\r\n                }\r\n            } else {\r\n                value = '';\r\n            }\r\n\r\n            if (value !== this.value()) {\r\n                this.value(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prepares and converts all date/time formats to be compatible\r\n         * with moment.js library.\r\n         */\r\n        prepareDateTimeFormats: function () {\r\n            this.pickerDateTimeFormat = this.options.dateFormat;\r\n\r\n            if (this.options.showsTime) {\r\n                this.pickerDateTimeFormat += ' ' + this.options.timeFormat;\r\n            }\r\n\r\n            this.pickerDateTimeFormat = utils.convertToMomentFormat(this.pickerDateTimeFormat);\r\n\r\n            if (this.options.dateFormat) {\r\n                this.outputDateFormat = this.options.dateFormat;\r\n            }\r\n\r\n            this.inputDateFormat = utils.convertToMomentFormat(this.inputDateFormat);\r\n            this.outputDateFormat = utils.convertToMomentFormat(this.outputDateFormat);\r\n\r\n            this.validationParams.dateFormat = this.outputDateFormat;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/media.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'mageUtils',\r\n    './abstract'\r\n], function (utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            links: {\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes file component.\r\n         *\r\n         * @returns {Media} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initFormId();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines form ID with which file input will be associated.\r\n         *\r\n         * @returns {Media} Chainable.\r\n         */\r\n        initFormId: function () {\r\n            var namespace;\r\n\r\n            if (this.formId) {\r\n                return this;\r\n            }\r\n\r\n            namespace   = this.name.split('.');\r\n            this.formId = namespace[0];\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/multiselect.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './select'\r\n], function (_, utils, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            size: 5,\r\n            elementTmpl: 'ui/form/element/multiselect',\r\n            listens: {\r\n                value: 'setDifferedFromDefault setPrepareToSendData'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.initialValue = utils.copy(this.initialValue);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        normalizeData: function (value) {\r\n            if (utils.isEmpty(value)) {\r\n                value = [];\r\n            }\r\n\r\n            return _.isString(value) ? value.split(',') : value;\r\n        },\r\n\r\n        /**\r\n         * Sets the prepared data to dataSource\r\n         * by path, where key is component link to dataSource with\r\n         * suffix \"-prepared-for-send\".\r\n         *\r\n         * @param {Array} data - current component value\r\n         */\r\n        setPrepareToSendData: function (data) {\r\n            if (_.isUndefined(data) || !data.length) {\r\n                data = '';\r\n            }\r\n\r\n            this.source.set(this.dataScope + '-prepared-for-send', data);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [\r\n                    this.normalizeData(this.source.get(this.dataScope)),\r\n                    this.normalizeData(this.default)\r\n                ],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                return _.isArray(v) && (value = utils.copy(v)) && !_.isEmpty(v);\r\n            });\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var value = this.value(),\r\n                initial = this.initialValue;\r\n\r\n            return !utils.equalArrays(value, initial);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            this.value(utils.copy(this.initialValue));\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            this.value([]);\r\n            this.error(false);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/post-code.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './abstract'\r\n], function (_, registry, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            imports: {\r\n                update: '${ $.parentName }.country_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} value\r\n         */\r\n        update: function (value) {\r\n            var country = registry.get(this.parentName + '.' + 'country_id'),\r\n                options = country.indexedOptions,\r\n                option;\r\n\r\n            if (!value) {\r\n                return;\r\n            }\r\n\r\n            option = options[value];\r\n\r\n            if (option['is_zipcode_optional']) {\r\n                this.error(false);\r\n                this.validation = _.omit(this.validation, 'required-entry');\r\n            } else {\r\n                this.validation['required-entry'] = true;\r\n            }\r\n\r\n            this.required(!option['is_zipcode_optional']);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/region.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            skipValidation: false,\r\n            imports: {\r\n                update: '${ $.parentName }.country_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} value\r\n         */\r\n        update: function (value) {\r\n            var country = registry.get(this.parentName + '.' + 'country_id'),\r\n                options = country.indexedOptions,\r\n                option;\r\n\r\n            if (!value) {\r\n                return;\r\n            }\r\n\r\n            option = options[value];\r\n\r\n            if (this.skipValidation) {\r\n                this.validation['required-entry'] = false;\r\n                this.required(false);\r\n            } else {\r\n                if (!option['is_region_required']) {\r\n                    this.error(false);\r\n                    this.validation = _.omit(this.validation, 'required-entry');\r\n                } else {\r\n                    this.validation['required-entry'] = true;\r\n                }\r\n\r\n                this.required(!!option['is_region_required']);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var country = registry.get(this.parentName + '.' + 'country_id'),\r\n                option = country.indexedOptions[value];\r\n\r\n            if (country) {\r\n                this._super(value, field);\r\n\r\n                if (option && option['is_region_visible'] === false) {\r\n                    // hide select and corresponding text input field if region must not be shown for selected country\r\n                    this.setVisible(false);\r\n\r\n                    if (this.customEntry) {\r\n                        this.toggleInput(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n","Magento_Ui/js/form/element/select.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    './abstract',\r\n    'uiLayout'\r\n], function (_, utils, registry, Abstract, layout) {\r\n    'use strict';\r\n\r\n    var inputNode = {\r\n        parent: '${ $.$data.parentName }',\r\n        component: 'Magento_Ui/js/form/element/abstract',\r\n        template: '${ $.$data.template }',\r\n        provider: '${ $.$data.provider }',\r\n        name: '${ $.$data.index }_input',\r\n        dataScope: '${ $.$data.customEntry }',\r\n        customScope: '${ $.$data.customScope }',\r\n        sortOrder: {\r\n            after: '${ $.$data.name }'\r\n        },\r\n        displayArea: 'body',\r\n        label: '${ $.$data.label }'\r\n    };\r\n\r\n    /**\r\n     * Parses incoming options, considers options with undefined value property\r\n     *     as caption\r\n     *\r\n     * @param  {Array} nodes\r\n     * @return {Object}\r\n     */\r\n    function parseOptions(nodes, captionValue) {\r\n        var caption,\r\n            value;\r\n\r\n        nodes = _.map(nodes, function (node) {\r\n            value = node.value;\r\n\r\n            if (value === null || value === captionValue) {\r\n                if (_.isUndefined(caption)) {\r\n                    caption = node.label;\r\n                }\r\n            }\r\n\r\n            return node;\r\n        });\r\n\r\n        return {\r\n            options: _.compact(nodes),\r\n            caption: _.isString(caption) ? caption : false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Recursively loops over data to find non-undefined, non-array value\r\n     *\r\n     * @param  {Array} data\r\n     * @return {*} - first non-undefined value in array\r\n     */\r\n    function findFirst(data) {\r\n        var value;\r\n\r\n        data.some(function (node) {\r\n            value = node.value;\r\n\r\n            if (Array.isArray(value)) {\r\n                value = findFirst(value);\r\n            }\r\n\r\n            return !_.isUndefined(value);\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Recursively set to object item like value and item.value like key.\r\n     *\r\n     * @param {Array} data\r\n     * @param {Object} result\r\n     * @returns {Object}\r\n     */\r\n    function indexOptions(data, result) {\r\n        var value;\r\n\r\n        result = result || {};\r\n\r\n        data.forEach(function (item) {\r\n            value = item.value;\r\n\r\n            if (Array.isArray(value)) {\r\n                indexOptions(value, result);\r\n            } else {\r\n                result[value] = item;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            customName: '${ $.parentName }.${ $.index }_input',\r\n            elementTmpl: 'ui/form/element/select',\r\n            caption: '',\r\n            options: []\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults, extends config with formatted values\r\n         *     and options, and invokes initialize method of AbstractElement class.\r\n         *     If instance's 'customEntry' property is set to true, calls 'initInput'\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.customEntry) {\r\n                registry.get(this.name, this.initInput.bind(this));\r\n            }\r\n\r\n            if (this.filterBy) {\r\n                this.initFilter();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent, initializes 'options' and 'initialOptions'\r\n         *     properties, calls 'setOptions' passing options to it\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            this.initialOptions = this.options;\r\n\r\n            this.observe('options caption')\r\n                .setOptions(this.options());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set link for filter.\r\n         *\r\n         * @returns {Object} Chainable\r\n         */\r\n        initFilter: function () {\r\n            var filter = this.filterBy;\r\n\r\n            this.filter(this.default, filter.field);\r\n            this.setLinks({\r\n                filter: filter.target\r\n            }, 'imports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates input from template, renders it via renderer.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initInput: function () {\r\n            layout([utils.template(inputNode, this)]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Matches specfied value with existing options\r\n         * or, if value is not specified, returns value of the first option.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        normalizeData: function () {\r\n            var value = this._super(),\r\n                option;\r\n\r\n            if (value !== '') {\r\n                option = this.getOption(value);\r\n\r\n                return option && option.value;\r\n            }\r\n\r\n            if (!this.caption()) {\r\n                return findFirst(this.options);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var source = this.initialOptions,\r\n                result;\r\n\r\n            field = field || this.filterBy.field;\r\n\r\n            result = _.filter(source, function (item) {\r\n                return item[field] === value || item.value === '';\r\n            });\r\n\r\n            this.setOptions(result);\r\n        },\r\n\r\n        /**\r\n         * Change visibility for input.\r\n         *\r\n         * @param {Boolean} isVisible\r\n         */\r\n        toggleInput: function (isVisible) {\r\n            registry.get(this.customName, function (input) {\r\n                input.setVisible(isVisible);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sets 'data' to 'options' observable array, if instance has\r\n         * 'customEntry' property set to true, calls 'setHidden' method\r\n         *  passing !options.length as a parameter\r\n         *\r\n         * @param {Array} data\r\n         * @returns {Object} Chainable\r\n         */\r\n        setOptions: function (data) {\r\n            var captionValue = this.captionValue || '',\r\n                result = parseOptions(data, captionValue),\r\n                isVisible;\r\n\r\n            this.indexedOptions = indexOptions(result.options);\r\n\r\n            this.options(result.options);\r\n\r\n            if (!this.caption()) {\r\n                this.caption(result.caption);\r\n            }\r\n\r\n            if (this.customEntry) {\r\n                isVisible = !!result.options.length;\r\n\r\n                this.setVisible(isVisible);\r\n                this.toggleInput(!isVisible);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Processes preview for option by it's value, and sets the result\r\n         * to 'preview' observable\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        getPreview: function () {\r\n            var value = this.value(),\r\n                option = this.indexedOptions[value],\r\n                preview = option ? option.label : '';\r\n\r\n            this.preview(preview);\r\n\r\n            return preview;\r\n        },\r\n\r\n        getOption: function (value) {\r\n            return this.indexedOptions[value];\r\n        },\r\n\r\n        /**\r\n         * Select first available option\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var value = this.caption() ? '' : findFirst(this.options);\r\n\r\n            this.value(value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        setInitialValue: function () {\r\n            if (_.isUndefined(this.value()) && !this.default) {\r\n                this.clear();\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox-toggle-notice.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (SingleCheckbox) {\r\n    'use strict';\r\n\r\n    return SingleCheckbox.extend({\r\n        defaults: {\r\n            notices: [],\r\n            tracks: {\r\n                notice: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Choose notice on initialization\r\n         *\r\n         * @returns {*|void|Element}\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .chooseNotice();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Choose notice function\r\n         *\r\n         * @returns void\r\n         */\r\n        chooseNotice: function () {\r\n            var checkedNoticeNumber = Number(this.checked());\r\n\r\n            this.notice = this.notices[checkedNoticeNumber];\r\n        },\r\n\r\n        /**\r\n         * Choose notice on update\r\n         *\r\n         * @returns void\r\n         */\r\n        onUpdate: function () {\r\n            this._super();\r\n            this.chooseNotice();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox-use-config.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            isUseDefault: false,\r\n            isUseConfig: false,\r\n            listens: {\r\n                'isUseConfig': 'toggleElement',\r\n                'isUseDefault': 'toggleElement'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n\r\n            return this\r\n                ._super()\r\n                .observe('isUseConfig');\r\n        },\r\n\r\n        /**\r\n         * Toggle element\r\n         */\r\n        toggleElement: function () {\r\n            this.disabled(this.isUseDefault() || this.isUseConfig());\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'underscore',\r\n    'mage/translate'\r\n], function (AbstractField, _, $t) {\r\n    'use strict';\r\n\r\n    return AbstractField.extend({\r\n        defaults: {\r\n            template: 'ui/form/components/single/field',\r\n            checked: false,\r\n            initialChecked: false,\r\n            multiple: false,\r\n            prefer: 'checkbox', // 'radio' | 'checkbox' | 'toggle'\r\n            valueMap: {},\r\n\r\n            templates: {\r\n                radio: 'ui/form/components/single/radio',\r\n                checkbox: 'ui/form/components/single/checkbox',\r\n                toggle: 'ui/form/components/single/switcher'\r\n            },\r\n\r\n            listens: {\r\n                'checked': 'onCheckedChanged',\r\n                'value': 'onExtendedValueChanged'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function (config) {\r\n            this._super();\r\n\r\n            if (!config.elementTmpl) {\r\n                if (!this.prefer && !this.multiple) {\r\n                    this.elementTmpl = this.templates.radio;\r\n                } else if (this.prefer === 'radio') {\r\n                    this.elementTmpl = this.templates.radio;\r\n                } else if (this.prefer === 'checkbox') {\r\n                    this.elementTmpl = this.templates.checkbox;\r\n                } else if (this.prefer === 'toggle') {\r\n                    this.elementTmpl = this.templates.toggle;\r\n                } else {\r\n                    this.elementTmpl = this.templates.checkbox;\r\n                }\r\n            }\r\n\r\n            if (this.prefer === 'toggle' && _.isEmpty(this.toggleLabels)) {\r\n                this.toggleLabels = {\r\n                    'on': $t('Yes'),\r\n                    'off': $t('No')\r\n                };\r\n            }\r\n\r\n            if (typeof this.default === 'undefined' || this.default === null) {\r\n                this.default = '';\r\n            }\r\n\r\n            if (typeof this.value === 'undefined' || this.value === null) {\r\n                this.value = _.isEmpty(this.valueMap) || this.default !== '' ? this.default : this.valueMap.false;\r\n                this.initialValue = this.value;\r\n            } else {\r\n                this.initialValue = this.value;\r\n            }\r\n\r\n            if (this.multiple && !_.isArray(this.value)) {\r\n                this.value = []; // needed for correct observable assignment\r\n            }\r\n\r\n            this.initialChecked = this.checked;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe('checked');\r\n        },\r\n\r\n        /**\r\n         * Get true/false key from valueMap by value.\r\n         *\r\n         * @param {*} value\r\n         * @returns {Boolean|undefined}\r\n         */\r\n        getReverseValueMap: function getReverseValueMap(value) {\r\n            var bool = false;\r\n\r\n            _.some(this.valueMap, function (iValue, iBool) {\r\n                if (iValue === value) {\r\n                    bool = iBool === 'true';\r\n\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            return bool;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            if (_.isEmpty(this.valueMap)) {\r\n                this.on('value', this.onUpdate.bind(this));\r\n            } else {\r\n                this._super();\r\n                this.checked(this.getReverseValueMap(this.value()));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle dataScope changes for checkbox / radio button.\r\n         *\r\n         * @param {*} newExportedValue\r\n         */\r\n        onExtendedValueChanged: function (newExportedValue) {\r\n            var isMappedUsed = !_.isEmpty(this.valueMap),\r\n                oldChecked = this.checked.peek(),\r\n                oldValue = this.initialValue,\r\n                newChecked;\r\n\r\n            if (this.multiple) {\r\n                newChecked = newExportedValue.indexOf(oldValue) !== -1;\r\n            } else if (isMappedUsed) {\r\n                newChecked = this.getReverseValueMap(newExportedValue);\r\n            } else if (typeof newExportedValue === 'boolean') {\r\n                newChecked = newExportedValue;\r\n            } else {\r\n                newChecked = newExportedValue === oldValue;\r\n            }\r\n\r\n            if (newChecked !== oldChecked) {\r\n                this.checked(newChecked);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle checked state changes for checkbox / radio button.\r\n         *\r\n         * @param {Boolean} newChecked\r\n         */\r\n        onCheckedChanged: function (newChecked) {\r\n            var isMappedUsed = !_.isEmpty(this.valueMap),\r\n                oldValue = this.initialValue,\r\n                newValue;\r\n\r\n            if (isMappedUsed) {\r\n                newValue = this.valueMap[newChecked];\r\n            } else {\r\n                newValue = oldValue;\r\n            }\r\n\r\n            if (!this.multiple && newChecked) {\r\n                this.value(newValue);\r\n            } else if (!this.multiple && !newChecked) {\r\n                if (typeof newValue === 'boolean') {\r\n                    this.value(newChecked);\r\n                } else if (newValue === this.value.peek()) {\r\n                    this.value('');\r\n                }\r\n\r\n                if (isMappedUsed) {\r\n                    this.value(newValue);\r\n                }\r\n            } else if (this.multiple && newChecked && this.value.indexOf(newValue) === -1) {\r\n                this.value.push(newValue);\r\n            } else if (this.multiple && !newChecked && this.value.indexOf(newValue) !== -1) {\r\n                this.value.splice(this.value.indexOf(newValue), 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onUpdate: function () {\r\n            if (this.hasUnique) {\r\n                this.setUnique();\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            if (this.multiple && this.initialChecked) {\r\n                this.value.push(this.initialValue);\r\n            } else if (this.multiple && !this.initialChecked) {\r\n                this.value.splice(this.value.indexOf(this.initialValue), 1);\r\n            } else {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            if (this.multiple) {\r\n                this.value([]);\r\n            } else {\r\n                this.value('');\r\n            }\r\n\r\n            this.error(false);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/text.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiElement',\r\n    'mageUtils'\r\n], function (Element, utils) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            error: '',\r\n            uid: utils.uniqueid(),\r\n            disabled: false,\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Has service\r\n         *\r\n         * @returns {Boolean} false.\r\n         */\r\n        hasService: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Has addons\r\n         *\r\n         * @returns {Boolean} false.\r\n         */\r\n        hasAddons: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('disabled visible value');\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/textarea.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            cols: 15,\r\n            rows: 2,\r\n            elementTmpl: 'ui/form/element/textarea'\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/website.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            customerId: null,\r\n            isGlobalScope: 0\r\n        },\r\n\r\n        /**\r\n         * Website component constructor.\r\n         * @returns {exports}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.customerId || this.isGlobalScope) {\r\n                this.disable(true);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/wysiwyg.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'ko',\r\n    './abstract',\r\n    'Magento_Variable/variables'\r\n], function ($, _, ko, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            elementSelector: 'textarea',\r\n            value: '',\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            },\r\n            template: 'ui/form/field',\r\n            elementTmpl: 'ui/form/element/wysiwyg',\r\n            content:        '',\r\n            showSpinner:    false,\r\n            loading:        false\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initNodeListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('value');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {} Chainable.\r\n         */\r\n        initNodeListener: function () {\r\n            $.async({\r\n                component: this,\r\n                selector: this.elementSelector\r\n            }, this.setElementNode.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setElementNode: function (node) {\r\n            $(node).bindings({\r\n                value: this.value\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/collapsible.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            opened: false,\r\n            collapsible: true\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('opened');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        toggleOpened: function () {\r\n            this.opened() ?\r\n                this.close() :\r\n                this.open();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' flag to false.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        close: function () {\r\n            if (this.collapsible) {\r\n                this.opened(false);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' flag to true.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        open: function () {\r\n            if (this.collapsible) {\r\n                this.opened(true);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/key-codes.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        13: 'enterKey',\r\n        27: 'escapeKey',\r\n        40: 'pageDownKey',\r\n        38: 'pageUpKey',\r\n        32: 'spaceKey',\r\n        9:  'tabKey',\r\n        37: 'pageLeftKey',\r\n        39: 'pageRightKey',\r\n        17: 'ctrlKey',\r\n        18: 'altKey',\r\n        16: 'shiftKey'\r\n    };\r\n});\r\n","Magento_Ui/js/lib/spinner.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var selector = '[data-role=\"spinner\"]',\r\n        spinner = $(selector);\r\n\r\n    return {\r\n        show: function () {\r\n            spinner.show();\r\n        },\r\n\r\n        hide: function () {\r\n            spinner.hide();\r\n        },\r\n\r\n        get: function (id) {\r\n            return $(selector + '[data-component=\"' + id + '\"]');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/class.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/utils/wrapper'\r\n], function (_, utils, wrapper) {\r\n    'use strict';\r\n\r\n    var Class;\r\n\r\n    /**\r\n     * Returns property of an object if\r\n     * it's his own property.\r\n     *\r\n     * @param {Object} obj - Object whose property should be retrieved.\r\n     * @param {String} prop - Name of the property.\r\n     * @returns {*} Value of the property or false.\r\n     */\r\n    function getOwn(obj, prop) {\r\n        return _.isObject(obj) && obj.hasOwnProperty(prop) && obj[prop];\r\n    }\r\n\r\n    /**\r\n     * Creates constructor function which allows\r\n     * initialization without usage of a 'new' operator.\r\n     *\r\n     * @param {Object} protoProps - Prototypal properties of a new constructor.\r\n     * @param {Function} constructor\r\n     * @returns {Function} Created constructor.\r\n     */\r\n    function createConstructor(protoProps, constructor) {\r\n        var UiClass = constructor;\r\n\r\n        if (!UiClass) {\r\n\r\n            /**\r\n             * Default constructor function.\r\n             */\r\n            UiClass = function () {\r\n                var obj = this;\r\n\r\n                if (!_.isObject(obj) || Object.getPrototypeOf(obj) !== UiClass.prototype) {\r\n                    obj = Object.create(UiClass.prototype);\r\n                }\r\n\r\n                obj.initialize.apply(obj, arguments);\r\n\r\n                return obj;\r\n            };\r\n        }\r\n\r\n        UiClass.prototype = protoProps;\r\n        UiClass.prototype.constructor = UiClass;\r\n\r\n        return UiClass;\r\n    }\r\n\r\n    Class = createConstructor({\r\n\r\n        /**\r\n         * Entry point to the initialization of constructors' instance.\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initialize: function (options) {\r\n            this.initConfig(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Recursively extends data specified in constructors' 'defaults'\r\n         * property with provided options object. Evaluates resulting\r\n         * object using string templates (see: mage/utils/template.js).\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initConfig: function (options) {\r\n            var defaults    = this.constructor.defaults,\r\n                config      = utils.extend({}, defaults, options || {}),\r\n                ignored     = config.ignoreTmpls || {},\r\n                cached      = utils.omit(config, ignored);\r\n\r\n            config = utils.template(config, this, false, true);\r\n\r\n            _.each(cached, function (value, key) {\r\n                utils.nested(config, key, value);\r\n            });\r\n\r\n            return _.extend(this, config);\r\n        }\r\n    });\r\n\r\n    _.extend(Class, {\r\n        defaults: {\r\n            ignoreTmpls: {\r\n                templates: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates new constructor based on a current prototype properties,\r\n         * extending them with properties specified in 'exender' object.\r\n         *\r\n         * @param {Object} [extender={}]\r\n         * @returns {Function} New constructor.\r\n         */\r\n        extend: function (extender) {\r\n            var parent      = this,\r\n                parentProto = parent.prototype,\r\n                childProto  = Object.create(parentProto),\r\n                child       = createConstructor(childProto, getOwn(extender, 'constructor')),\r\n                defaults;\r\n\r\n            extender = extender || {};\r\n            defaults = extender.defaults;\r\n\r\n            delete extender.defaults;\r\n\r\n            _.each(extender, function (method, name) {\r\n                childProto[name] = wrapper.wrapSuper(parentProto[name], method);\r\n            });\r\n\r\n            child.defaults = utils.extend({}, parent.defaults || {});\r\n\r\n            if (defaults) {\r\n                utils.extend(child.defaults, defaults);\r\n                extender.defaults = defaults;\r\n            }\r\n\r\n            return _.extend(child, {\r\n                __super__:  parentProto,\r\n                extend:     parent.extend\r\n            });\r\n        }\r\n    });\r\n\r\n    return Class;\r\n});\r\n","Magento_Ui/js/lib/core/collection.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiElement'\r\n], function (_, utils, registry, Element) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes non plain object items from the specfied array.\r\n     *\r\n     * @param {Array} container - Array whose value should be filtered.\r\n     * @returns {Array}\r\n     */\r\n    function compact(container) {\r\n        return container.filter(utils.isObject);\r\n    }\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/collection',\r\n            _elems: [],\r\n            ignoreTmpls: {\r\n                childDefaults: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Model} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    elems: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to current component.\r\n         *\r\n         * @param {Object} elem - Instance of an element that was added.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initElement: function (elem) {\r\n            elem.initContainer(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a child found by provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Object}\r\n         */\r\n        getChild: function (index) {\r\n            return _.findWhere(this.elems(), {\r\n                index: index\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Requests specified components to insert\r\n         * them into 'elems' array starting from provided position.\r\n         *\r\n         * @param {(String|Array)} elems - Name of the component to insert.\r\n         * @param {Number} [position=-1] - Position at which to insert elements.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        insertChild: function (elems, position) {\r\n            var container   = this._elems,\r\n                insert      = this._insert.bind(this),\r\n                update;\r\n\r\n            if (!Array.isArray(elems)) {\r\n                elems = [elems];\r\n            }\r\n\r\n            elems.map(function (item) {\r\n                return item.elem ?\r\n                    utils.insert(item.elem, container, item.position) :\r\n                    utils.insert(item, container, position);\r\n            }).forEach(function (item) {\r\n                if (item === true) {\r\n                    update = true;\r\n                } else if (_.isString(item)) {\r\n                    registry.get(item, insert);\r\n                } else if (utils.isObject(item)) {\r\n                    insert(item);\r\n                }\r\n            });\r\n\r\n            if (update) {\r\n                this._updateCollection();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified child from collection.\r\n         *\r\n         * @param {(Object|String)} elem - Child or index of a child to be removed.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        removeChild: function (elem, skipUpdate) {\r\n            if (_.isString(elem)) {\r\n                elem = this.getChild(elem);\r\n            }\r\n\r\n            if (elem) {\r\n                utils.remove(this._elems, elem);\r\n\r\n                if (!skipUpdate) {\r\n                    this._updateCollection();\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection children with its' elements.\r\n         */\r\n        destroyChildren: function () {\r\n            this.elems.each(function (elem) {\r\n                elem.destroy(true);\r\n            });\r\n\r\n            this._updateCollection();\r\n        },\r\n\r\n        /**\r\n         * Clear data. Call method \"clear\"\r\n         * in child components\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var elems = this.elems();\r\n\r\n            _.each(elems, function (elem) {\r\n                if (_.isFunction(elem.clear)) {\r\n                    elem.clear();\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified child exists in collection.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Boolean}\r\n         */\r\n        hasChild: function (index) {\r\n            return !!this.getChild(index);\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified child\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestChild: function (index) {\r\n            var name = this.formChildName(index);\r\n\r\n            return this.requestModule(name);\r\n        },\r\n\r\n        /**\r\n         * Creates complete child name based on a provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {String}\r\n         */\r\n        formChildName: function (index) {\r\n            return this.name + '.' + index;\r\n        },\r\n\r\n        /**\r\n         * Retrieves requested region.\r\n         * Creates region if it was not created yet\r\n         *\r\n         * @returns {ObservableArray}\r\n         */\r\n        getRegion: function (name) {\r\n            var regions = this.regions = this.regions || {};\r\n\r\n            if (!regions[name]) {\r\n                regions[name] = [];\r\n\r\n                this.observe.call(regions, name);\r\n            }\r\n\r\n            return regions[name];\r\n        },\r\n\r\n        /**\r\n         * Replaces specified regions' data with a provided one.\r\n         * Creates region if it was not created yet.\r\n         *\r\n         * @param {Array} items - New regions' data.\r\n         * @param {String} name - Name of the region.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        updateRegion: function (items, name) {\r\n            this.getRegion(name)(items);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection along with its' elements.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n\r\n            this.elems.each('destroy');\r\n        },\r\n\r\n        /**\r\n         * Inserts provided component into 'elems' array at a specified position.\r\n         * @private\r\n         *\r\n         * @param {Object} elem - Element to insert.\r\n         */\r\n        _insert: function (elem) {\r\n            var index = this._elems.indexOf(elem.name);\r\n\r\n            if (~index) {\r\n                this._elems[index] = elem;\r\n            }\r\n\r\n            this._updateCollection()\r\n                .initElement(elem);\r\n        },\r\n\r\n        /**\r\n         * Synchronizes multiple elements arrays with a core '_elems' container.\r\n         * Performs elemets grouping by theirs 'displayArea' property.\r\n         * @private\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        _updateCollection: function () {\r\n            var _elems = compact(this._elems),\r\n                grouped;\r\n\r\n            grouped = _elems.filter(function (elem) {\r\n                return elem.displayArea && _.isString(elem.displayArea);\r\n            });\r\n            grouped = _.groupBy(grouped, 'displayArea');\r\n\r\n            _.each(grouped, this.updateRegion, this);\r\n\r\n            _.each(this.regions, function (items) {\r\n                var hasObsoleteComponents = items().length && !_.intersection(_elems, items()).length;\r\n\r\n                if (hasObsoleteComponents) {\r\n                    items.removeAll();\r\n                }\r\n            });\r\n\r\n            this.elems(_elems);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Tries to call specified method of a current component,\r\n         * otherwise delegates attempt to its' children.\r\n         *\r\n         * @param {String} target - Name of the method.\r\n         * @param {...*} parameters - Arguments that will be passed to method.\r\n         * @returns {*} Result of the method calls.\r\n         */\r\n        delegate: function (target) {\r\n            var args = _.toArray(arguments);\r\n\r\n            target = this[target];\r\n\r\n            if (_.isFunction(target)) {\r\n                return target.apply(this, args.slice(1));\r\n            }\r\n\r\n            return this._delegate(args);\r\n        },\r\n\r\n        /**\r\n         * Calls 'delegate' method of all of it's children components.\r\n         * @private\r\n         *\r\n         * @param {Array} args - An array of arguments to pass to the next delegation call.\r\n         * @returns {Array} An array of delegation resutls.\r\n         */\r\n        _delegate: function (args) {\r\n            var result;\r\n\r\n            result = this.elems.map(function (elem) {\r\n                var target;\r\n\r\n                if (!_.isFunction(elem.delegate)) {\r\n                    target = elem[args[0]];\r\n\r\n                    if (_.isFunction(target)) {\r\n                        return target.apply(elem, args.slice(1));\r\n                    }\r\n                } else {\r\n                    return elem.delegate.apply(elem, args);\r\n                }\r\n            });\r\n\r\n            return _.flatten(result);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/core/events.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'es6-collections'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    var eventsMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns events map or a specific event\r\n     * data associated with a provided object.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} [name] - Name of the event.\r\n     * @returns {Map|Array|Boolean}\r\n     */\r\n    function getEvents(obj, name) {\r\n        var events = eventsMap.get(obj);\r\n\r\n        if (!events) {\r\n            return false;\r\n        }\r\n\r\n        return name ? events.get(name) : events;\r\n    }\r\n\r\n    /**\r\n     * Adds new event handler.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} ns - Callback namespace.\r\n     * @param {Fucntion} callback - Event callback.\r\n     * @param {String} name - Name of the event.\r\n     */\r\n    function addHandler(obj, ns, callback, name) {\r\n        var events      = getEvents(obj),\r\n            observable,\r\n            data;\r\n\r\n        observable = !ko.isObservable(obj[name]) ?\r\n            ko.getObservable(obj, name) :\r\n            obj[name];\r\n\r\n        if (observable) {\r\n            observable.subscribe(callback);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!events) {\r\n            events = new Map();\r\n\r\n            eventsMap.set(obj, events);\r\n        }\r\n\r\n        data = {\r\n            callback: callback,\r\n            ns: ns\r\n        };\r\n\r\n        events.has(name) ?\r\n            events.get(name).push(data) :\r\n            events.set(name, [data]);\r\n    }\r\n\r\n    /**\r\n     * Invokes provided callbacks with a specified arguments.\r\n     *\r\n     * @param {Array} handlers\r\n     * @param {Array} args\r\n     * @returns {Boolean}\r\n     */\r\n    function trigger(handlers, args) {\r\n        var bubble = true,\r\n            callback;\r\n\r\n        handlers.forEach(function (handler) {\r\n            callback = handler.callback;\r\n\r\n            if (callback.apply(null, args) === false) {\r\n                bubble = false;\r\n            }\r\n        });\r\n\r\n        return bubble;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Calls callback when name event is triggered.\r\n         * @param  {String}   events\r\n         * @param  {Function} callback\r\n         * @return {Object} reference to this\r\n         */\r\n        on: function (events, callback, ns) {\r\n            var iterator;\r\n\r\n            if (arguments.length < 2) {\r\n                ns = callback;\r\n            }\r\n\r\n            iterator = addHandler.bind(null, this, ns);\r\n\r\n            _.isObject(events) ?\r\n                _.each(events, iterator) :\r\n                iterator(callback, events);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removed callback from listening to target event\r\n         * @param  {String} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        off: function (ns) {\r\n            var storage = getEvents(this);\r\n\r\n            if (!storage) {\r\n                return this;\r\n            }\r\n\r\n            storage.forEach(function (handlers, name) {\r\n                handlers = handlers.filter(function (handler) {\r\n                    return !ns ? false : handler.ns !== ns;\r\n                });\r\n\r\n                handlers.length ?\r\n                    storage.set(name, handlers) :\r\n                    storage.delete(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggers event and executes all attached callbacks.\r\n         *\r\n         * @param {String} name - Name of the event to be triggered.\r\n         * @returns {Boolean}\r\n         */\r\n        trigger: function (name) {\r\n            var handlers,\r\n                args;\r\n\r\n            handlers = getEvents(this, name),\r\n            args = _.toArray(arguments).slice(1);\r\n\r\n            if (!handlers || !name) {\r\n                return true;\r\n            }\r\n\r\n            return trigger(handlers, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/element/element.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiEvents',\r\n    'uiClass',\r\n    './links',\r\n    '../storage/local'\r\n], function (ko, _, utils, registry, Events, Class, links) {\r\n    'use strict';\r\n\r\n    var Element;\r\n\r\n    /**\r\n     * Creates observable property using knockouts'\r\n     * 'observableArray' or 'observable' methods,\r\n     * depending on a type of 'value' parameter.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function observable(obj, key, value) {\r\n        var method = Array.isArray(value) ? 'observableArray' : 'observable';\r\n\r\n        if (_.isFunction(obj[key]) && !ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        if (ko.isObservable(value)) {\r\n            value = value();\r\n        }\r\n\r\n        ko.isObservable(obj[key]) ?\r\n            obj[key](value) :\r\n            obj[key] = ko[method](value);\r\n    }\r\n\r\n    /**\r\n     * Creates observable property using 'track' method.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function accessor(obj, key, value) {\r\n        if (_.isFunction(obj[key]) || ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        obj[key] = value;\r\n\r\n        if (!ko.es5.isTracked(obj, key)) {\r\n            ko.track(obj, [key]);\r\n        }\r\n    }\r\n\r\n    Element = _.extend({\r\n        defaults: {\r\n            _requested: {},\r\n            containers: [],\r\n            exports: {},\r\n            imports: {},\r\n            links: {},\r\n            listens: {},\r\n            name: '',\r\n            ns: '${ $.name.split(\".\")[0] }',\r\n            provider: '',\r\n            registerNodes: true,\r\n            source: null,\r\n            statefull: {},\r\n            template: '',\r\n            tracks: {},\r\n            storageConfig: {\r\n                provider: 'localStorage',\r\n                namespace: '${ $.name }',\r\n                path: '${ $.storageConfig.provider }:${ $.storageConfig.namespace }'\r\n            },\r\n            maps: {\r\n                imports: {},\r\n                exports: {}\r\n            },\r\n            modules: {\r\n                storage: '${ $.storageConfig.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes model instance.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable()\r\n                .initModules()\r\n                .initStatefull()\r\n                .initLinks()\r\n                .initUnique();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            _.each(this.tracks, function (enabled, key) {\r\n                if (enabled) {\r\n                    this.track(key);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Parses 'modules' object and creates\r\n         * async wrappers for specified components.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initModules: function () {\r\n            _.each(this.modules, function (name, property) {\r\n                if (name) {\r\n                    this[property] = this.requestModule(name);\r\n                }\r\n            }, this);\r\n\r\n            if (!_.isFunction(this.source)) {\r\n                this.source = registry.get(this.provider);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when current element was injected to another component.\r\n         *\r\n         * @param {Object} parent - Instance of a 'parent' component.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initContainer: function (parent) {\r\n            this.containers.push(parent);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes statefull properties\r\n         * based on the keys of 'statefull' object.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initStatefull: function () {\r\n            _.each(this.statefull, function (path, key) {\r\n                if (path) {\r\n                    this.setStatefull(key, path);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes links between properties.\r\n         *\r\n         * @returns {Element} Chainbale.\r\n         */\r\n        initLinks: function () {\r\n            return this.setListeners(this.listens)\r\n                       .setLinks(this.links, 'imports')\r\n                       .setLinks(this.links, 'exports')\r\n                       .setLinks(this.exports, 'exports')\r\n                       .setLinks(this.imports, 'imports');\r\n        },\r\n\r\n        /**\r\n         * Initializes listeners of the unique property.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initUnique: function () {\r\n            var update = this.onUniqueUpdate.bind(this),\r\n                uniqueNs = this.uniqueNs;\r\n\r\n            this.hasUnique = this.uniqueProp && uniqueNs;\r\n\r\n            if (this.hasUnique) {\r\n                this.source.on(uniqueNs, update, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Makes specified property to be stored automatically.\r\n         *\r\n         * @param {String} key - Name of the property\r\n         *      that will be stored.\r\n         * @param {String} [path=key] - Path to the property in storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setStatefull: function (key, path) {\r\n            var link = {};\r\n\r\n            path        = !_.isString(path) || !path ? key : path;\r\n            link[key]   = this.storageConfig.path + '.' + path;\r\n\r\n            this.setLinks(link, 'imports')\r\n                .setLinks(link, 'exports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates property specified in uniqueNs\r\n         * if elements' unique property is set to 'true'.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setUnique: function () {\r\n            var property = this.uniqueProp;\r\n\r\n            if (this[property]()) {\r\n                this.source.set(this.uniqueNs, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified component\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} name - Name of requested component.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestModule: function (name) {\r\n            var requested = this._requested;\r\n\r\n            if (!requested[name]) {\r\n                requested[name] = registry.async(name);\r\n            }\r\n\r\n            return requested[name];\r\n        },\r\n\r\n        /**\r\n         * Returns path to elements' template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTemplate: function () {\r\n            return this.template;\r\n        },\r\n\r\n        /**\r\n         * Checks if template was specified for an element.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasTemplate: function () {\r\n            return !!this.template;\r\n        },\r\n\r\n        /**\r\n         * Returns value of the nested property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {*} Value of the property.\r\n         */\r\n        get: function (path) {\r\n            return utils.nested(this, path);\r\n        },\r\n\r\n        /**\r\n         * Sets provided value as a value of the specified nested property.\r\n         * Triggers changes notifications, if value has mutated.\r\n         *\r\n         * @param {String} path - Path to property.\r\n         * @param {*} value - New value of the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        set: function (path, value) {\r\n            var data = this.get(path),\r\n                diffs;\r\n\r\n            diffs = !_.isFunction(data) && !this.isTracked(path) ?\r\n                utils.compare(data, value, path) :\r\n                false;\r\n\r\n            utils.nested(this, path, value);\r\n\r\n            if (diffs) {\r\n                this._notifyChanges(diffs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from the object.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        remove: function (path) {\r\n            var data = utils.nested(this, path),\r\n                diffs;\r\n\r\n            if (_.isUndefined(data) || _.isFunction(data)) {\r\n                return this;\r\n            }\r\n\r\n            diffs = utils.compare(data, undefined, path);\r\n\r\n            utils.nestedRemove(this, path);\r\n\r\n            this._notifyChanges(diffs);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates observable properties for the current object.\r\n         *\r\n         * If 'useTrack' flag is set to 'true' then each property will be\r\n         * created with a ES5 get/set accessor descriptors, instead of\r\n         * making them an observable functions.\r\n         * See 'knockout-es5' library for more information.\r\n         *\r\n         * @param {Boolean} [useAccessors=false] - Whether to create an\r\n         *      observable function or to use property accesessors.\r\n         * @param {(Object|String|Array)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         *\r\n         * @example Sample declaration and equivalent knockout methods.\r\n         *      this.key = 'value';\r\n         *      this.array = ['value'];\r\n         *\r\n         *      this.observe(['key', 'array']);\r\n         *      =>\r\n         *          this.key = ko.observable('value');\r\n         *          this.array = ko.observableArray(['value']);\r\n         *\r\n         * @example Another syntaxes of the previous example.\r\n         *      this.observe({\r\n         *          key: 'value',\r\n         *          array: ['value']\r\n         *      });\r\n         */\r\n        observe: function (useAccessors, properties) {\r\n            var model = this,\r\n                trackMethod;\r\n\r\n            if (typeof useAccessors !== 'boolean') {\r\n                properties   = useAccessors;\r\n                useAccessors = false;\r\n            }\r\n\r\n            trackMethod = useAccessors ? accessor : observable;\r\n\r\n            if (_.isString(properties)) {\r\n                properties = properties.split(' ');\r\n            }\r\n\r\n            if (Array.isArray(properties)) {\r\n                properties.forEach(function (key) {\r\n                    trackMethod(model, key, model[key]);\r\n                });\r\n            } else if (typeof properties === 'object') {\r\n                _.each(properties, function (value, key) {\r\n                    trackMethod(model, key, value);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates call to 'observe' method but\r\n         * with a predefined 'useAccessors' flag.\r\n         *\r\n         * @param {(String|Array|Object)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        track: function (properties) {\r\n            this.observe(true, properties);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified property is tracked.\r\n         *\r\n         * @param {String} property - Property to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isTracked: function (property) {\r\n            return ko.es5.isTracked(this, property);\r\n        },\r\n\r\n        /**\r\n         * Invokes subscribers for the provided changes.\r\n         *\r\n         * @param {Object} diffs - Object with changes descriptions.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _notifyChanges: function (diffs) {\r\n            diffs.changes.forEach(function (change) {\r\n                this.trigger(change.path, change.value, change);\r\n            }, this);\r\n\r\n            _.each(diffs.containers, function (changes, name) {\r\n                var value = utils.nested(this, name);\r\n\r\n                this.trigger(name, value, changes);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts all stored data and sets it to element.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        restore: function () {\r\n            var ns = this.storageConfig.namespace,\r\n                storage = this.storage();\r\n\r\n            if (storage) {\r\n                utils.extend(this, storage.get(ns));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Stores value of the specified property in components' storage module.\r\n         *\r\n         * @param {String} property\r\n         * @param {*} [data=this[property]]\r\n         * @returns {Element} Chainable.\r\n         */\r\n        store: function (property, data) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            if (arguments.length < 2) {\r\n                data = this.get(property);\r\n            }\r\n\r\n            this.storage('set', path, data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts specified property from storage.\r\n         *\r\n         * @param {String} [property] - Name of the property\r\n         *      to be extracted. If not specified then all of the\r\n         *      stored will be returned.\r\n         * @returns {*}\r\n         */\r\n        getStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property),\r\n                storage = this.storage(),\r\n                data;\r\n\r\n            if (storage) {\r\n                data = storage.get(path);\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Removes stored property.\r\n         *\r\n         * @param {String} property - Property to be removed from storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        removeStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            this.storage('remove', path);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         */\r\n        destroy: function (skipUpdate) {\r\n            this._dropHandlers()\r\n                ._clearRefs(skipUpdate);\r\n        },\r\n\r\n        /**\r\n         * Removes events listeners.\r\n         * @private\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _dropHandlers: function () {\r\n            this.off();\r\n\r\n            if (_.isFunction(this.source)) {\r\n                this.source().off(this.name);\r\n            } else if (this.source) {\r\n                this.source.off(this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes all references to current instance and\r\n         * calls 'destroy' method on all of its' children.\r\n         * @private\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _clearRefs: function (skipUpdate) {\r\n            registry.remove(this.name);\r\n\r\n            this.containers.forEach(function (parent) {\r\n                parent.removeChild(this, skipUpdate);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Overrides 'EventsBus.trigger' method to implement events bubbling.\r\n         *\r\n         * @param {...*} arguments - Any number of arguments that should be passed to the events' handler.\r\n         * @returns {Boolean} False if event bubbling was canceled.\r\n         */\r\n        bubble: function () {\r\n            var args = _.toArray(arguments),\r\n                bubble = this.trigger.apply(this, args),\r\n                result;\r\n\r\n            if (!bubble) {\r\n                return false;\r\n            }\r\n\r\n            this.containers.forEach(function (parent) {\r\n                result = parent.bubble.apply(parent, args);\r\n\r\n                if (result === false) {\r\n                    bubble = false;\r\n                }\r\n            });\r\n\r\n            return !!bubble;\r\n        },\r\n\r\n        /**\r\n         * Callback which fires when property under uniqueNs has changed.\r\n         */\r\n        onUniqueUpdate: function (name) {\r\n            var active = name === this.name,\r\n                property = this.uniqueProp;\r\n\r\n            this[property](active);\r\n        },\r\n\r\n        /**\r\n         * Clean data form data source.\r\n         *\r\n         * @returns {Element}\r\n         */\r\n        cleanData: function () {\r\n            if (this.source && this.source.componentType === 'dataSource') {\r\n                if (this.elems) {\r\n                    _.each(this.elems(), function (val) {\r\n                        val.cleanData();\r\n                    });\r\n                } else {\r\n                    this.source.remove(this.dataScope);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Fallback data.\r\n         */\r\n        cacheData: function () {\r\n            this.cachedComponent = utils.copy(this);\r\n        },\r\n\r\n        /**\r\n         * Update configuration in component.\r\n         *\r\n         * @param {*} oldValue\r\n         * @param {*} newValue\r\n         * @param {String} path - path to value.\r\n         * @returns {Element}\r\n         */\r\n        updateConfig: function (oldValue, newValue, path) {\r\n            var names = path.split('.'),\r\n                index = _.lastIndexOf(names, 'config') + 1;\r\n\r\n            names = names.splice(index, names.length - index).join('.');\r\n            this.set(names, newValue);\r\n\r\n            return this;\r\n        }\r\n    }, Events, links);\r\n\r\n    return Class.extend(Element);\r\n});\r\n","Magento_Ui/js/lib/core/element/links.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry'\r\n], function (ko, _, utils, registry) {\r\n    'use strict';\r\n\r\n    function parseData(placeholder, data, direction) {\r\n        if (typeof data !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        data = data.split(':');\r\n\r\n        if (!data[0]) {\r\n            return false;\r\n        }\r\n\r\n        if (!data[1]) {\r\n            data[1] = data[0];\r\n            data[0] = placeholder;\r\n        }\r\n\r\n        return {\r\n            target: data[0],\r\n            property: data[1],\r\n            direction: direction\r\n        };\r\n    }\r\n\r\n    function notEmpty(value) {\r\n        return typeof value !== 'undefined' && value != null;\r\n    }\r\n\r\n    function updateValue(data, owner, target, value) {\r\n        var component = target.component,\r\n            property = target.property,\r\n            linked = data.linked;\r\n\r\n        if (data.mute) {\r\n            return;\r\n        }\r\n\r\n        if (linked) {\r\n            linked.mute = true;\r\n        }\r\n\r\n        if (owner.component !== target.component) {\r\n            value = data.inversionValue ? !utils.copy(value) : utils.copy(value);\r\n        }\r\n\r\n        component.set(property, value, owner);\r\n\r\n        if (linked) {\r\n            linked.mute = false;\r\n        }\r\n    }\r\n\r\n    function getValue(owner) {\r\n        var component = owner.component,\r\n            property = owner.property;\r\n\r\n        return component.get(property);\r\n    }\r\n\r\n    function form(ownerComponent, targetComponent, ownerProp, targetProp, direction) {\r\n        var result,\r\n            tmp;\r\n\r\n        result = {\r\n            owner: {\r\n                component: ownerComponent,\r\n                property: ownerProp\r\n            },\r\n            target: {\r\n                component: targetComponent,\r\n                property: targetProp\r\n            }\r\n        };\r\n\r\n        if (direction === 'exports') {\r\n            tmp = result.owner;\r\n            result.owner = result.target;\r\n            result.target = tmp;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function setLinked(map, data) {\r\n        var match;\r\n\r\n        if (!map) {\r\n            return;\r\n        }\r\n\r\n        match = _.findWhere(map, {\r\n            linked: false,\r\n            target: data.target,\r\n            property: data.property\r\n        });\r\n\r\n        if (match) {\r\n            match.linked = data;\r\n            data.linked = match;\r\n        }\r\n    }\r\n\r\n    function setData(maps, property, data) {\r\n        var direction   = data.direction,\r\n            map         = maps[direction];\r\n\r\n        data.linked = false;\r\n\r\n        (map[property] = map[property] || []).push(data);\r\n\r\n        direction = direction === 'imports' ? 'exports' : 'imports';\r\n\r\n        setLinked(maps[direction][property], data);\r\n    }\r\n\r\n    function setLink(target, owner, data, property, immediate) {\r\n        var direction = data.direction,\r\n            formated = form(target, owner, data.property, property, direction),\r\n            callback,\r\n            value;\r\n\r\n        owner = formated.owner;\r\n        target = formated.target;\r\n\r\n        callback = updateValue.bind(null, data, owner, target);\r\n\r\n        owner.component.on(owner.property, callback, target.component.name);\r\n\r\n        if (immediate) {\r\n            value = getValue(owner);\r\n\r\n            if (notEmpty(value)) {\r\n                updateValue(data, owner, target, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    function transfer(owner, data) {\r\n        var args = _.toArray(arguments);\r\n\r\n        if (data.target.substr(0,1) === '!') {\r\n            data.target = data.target.substr(1);\r\n            data.inversionValue = true;\r\n        }\r\n\r\n        if (owner.name === data.target) {\r\n            args.unshift(owner);\r\n\r\n            setLink.apply(null, args);\r\n        } else {\r\n            registry.get(data.target, function (target) {\r\n                args.unshift(target);\r\n\r\n                setLink.apply(null, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        setListeners: function (listeners) {\r\n            var owner = this,\r\n                data;\r\n\r\n            _.each(listeners, function (callbacks, sources) {\r\n                sources = sources.split(' ');\r\n                callbacks = callbacks.split(' ');\r\n\r\n                sources.forEach(function (target) {\r\n                    callbacks.forEach(function (callback) {\r\n                        data = parseData(owner.name, target, 'imports');\r\n\r\n                        if (data) {\r\n                            setData(owner.maps, callback, data);\r\n                            transfer(owner, data, callback);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        setLinks: function (links, direction) {\r\n            var owner = this,\r\n                property,\r\n                data;\r\n\r\n            for (property in links) {\r\n                if (links.hasOwnProperty(property)) {\r\n                    data = parseData(owner.name, links[property], direction);\r\n\r\n                    if (data) {\r\n                        setData(owner.maps, property, data);\r\n                        transfer(owner, data, property, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/storage/local.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiEvents'\r\n], function (_, registry, utils, EventsBus) {\r\n    'use strict';\r\n\r\n    var root = 'appData',\r\n        localStorage = window.localStorage,\r\n        hasSupport,\r\n        storage;\r\n\r\n    /**\r\n     * Flag which indicates whether localStorage is supported.\r\n     */\r\n    hasSupport = (function () {\r\n        var key = '_storageSupported';\r\n\r\n        try {\r\n            localStorage.setItem(key, 'true');\r\n\r\n            if (localStorage.getItem(key) === 'true') {\r\n                localStorage.removeItem(key);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    if (!hasSupport) {\r\n        localStorage = {\r\n            _data: {},\r\n\r\n            /**\r\n             * Sets value of the specified item.\r\n             *\r\n             * @param {String} key - Key of the property.\r\n             * @param {*} value - Properties' value.\r\n             */\r\n            setItem: function (key, value) {\r\n                this._data[key] = value + '';\r\n            },\r\n\r\n            /**\r\n             * Retrieves specfied item.\r\n             *\r\n             * @param {String} key - Key of the property to be retrieved.\r\n             */\r\n            getItem: function (key) {\r\n                return this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes specfied item.\r\n             *\r\n             * @param {String} key - Key of the property to be removed.\r\n             */\r\n            removeItem: function (key) {\r\n                delete this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes all items.\r\n             */\r\n            clear: function () {\r\n                this._data = {};\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Extracts and parses data stored in localStorage by the\r\n     * key specified in 'root' varaible.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    function getRoot() {\r\n        var data = localStorage.getItem(root);\r\n\r\n        return !_.isNull(data) ? JSON.parse(data) : {};\r\n    }\r\n\r\n    /**\r\n     * Writes provided data to the localStorage.\r\n     *\r\n     * @param {*} data - Data to be stored.\r\n     */\r\n    function setRoot(data) {\r\n        localStorage.setItem(root, JSON.stringify(data));\r\n    }\r\n\r\n    /**\r\n     * Provides methods to work with a localStorage\r\n     * as a single nested structure.\r\n     */\r\n    storage = _.extend({\r\n\r\n        /**\r\n         * Retrieves value of the specified property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         *\r\n         * @example Retrieveing data.\r\n         *      localStoarge =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"three\"}\r\n         *          '\r\n         *      storage.get('one.two')\r\n         *      => \"three\"\r\n         *\r\n         *      storage.get('one')\r\n         *      => {\"two\": \"three\"}\r\n         */\r\n        get: function (path) {\r\n            var data = getRoot();\r\n\r\n            return utils.nested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Sets specified data to the localStorage.\r\n         *\r\n         * @param {String} path - Path of the property.\r\n         * @param {*} value - Value of the property.\r\n         *\r\n         * @example Setting data.\r\n         *      storage.set('one.two', 'four');\r\n         *      => localStoarge =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"four\"}\r\n         *          '\r\n         */\r\n        set: function (path, value) {\r\n            var data = getRoot();\r\n\r\n            utils.nested(data, path, value);\r\n\r\n            setRoot(data);\r\n        },\r\n\r\n        /**\r\n         * Removes specified data from the localStorage.\r\n         *\r\n         * @param {String} path - Path to the property that should be removed.\r\n         *\r\n         * @example Removing data.\r\n         *      storage.remove('one.two', 'four');\r\n         *      => localStoarge =>\r\n         *          'appData' => '\r\n         *              \"one\": {}\r\n         *          '\r\n         */\r\n        remove: function (path) {\r\n            var data = getRoot();\r\n\r\n            utils.nestedRemove(data, path);\r\n\r\n            setRoot(data);\r\n        }\r\n    }, EventsBus);\r\n\r\n    registry.set('localStorage', storage);\r\n\r\n    return storage;\r\n});\r\n","Magento_Ui/js/lib/knockout/bootstrap.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Loads all available knockout bindings, sets custom template engine, initializes knockout on page */\r\n\r\ndefine([\r\n    'ko',\r\n    './template/engine',\r\n    'knockoutjs/knockout-es5',\r\n    './bindings/bootstrap',\r\n    './extender/observable_array',\r\n    './extender/bound-nodes',\r\n    'domReady!'\r\n], function (ko, templateEngine) {\r\n    'use strict';\r\n\r\n    ko.uid = 0;\r\n\r\n    ko.setTemplateEngine(templateEngine);\r\n    ko.applyBindings();\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/after-render.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.afterRender = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var callback = valueAccessor();\r\n\r\n            if (typeof callback === 'function') {\r\n                callback.call(viewModel, element, viewModel);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('afterRender');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/autoselect.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer'\r\n], function (ko, $, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * 'Focus' event handler.\r\n     *\r\n     * @param {EventObject} e\r\n     */\r\n    function onFocus(e) {\r\n        e.target.select();\r\n    }\r\n\r\n    ko.bindingHandlers.autoselect = {\r\n\r\n        /**\r\n         * Adds event handler which automatically\r\n         * selects inputs' element text when field gets focused.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var enabled = ko.unwrap(valueAccessor());\r\n\r\n            if (enabled !== false) {\r\n                $(element).on('focus', onFocus);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('autoselect');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bind-html.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main',\r\n    '../template/renderer'\r\n], function (ko, _, mage, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set html to node element.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {Function} html - Observable html content.\r\n     */\r\n    function setHtml(el, html) {\r\n        ko.utils.emptyDomNode(el);\r\n        html = ko.utils.unwrapObservable(html);\r\n\r\n        if (!_.isNull(html) && !_.isUndefined(html)) {\r\n            if (!_.isString(html)) {\r\n                html = html.toString();\r\n            }\r\n\r\n            el.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply bindings and call magento attributes parser.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {ko.bindingContext} ctx - Instance of ko.bindingContext, passed to binding initially.\r\n     */\r\n    function applyComponents(el, ctx) {\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n        ko.applyBindingsToDescendants(ctx, el);\r\n        mage.apply();\r\n    }\r\n\r\n    ko.bindingHandlers.bindHtml = {\r\n        /**\r\n         * Scope binding's init method.\r\n         *\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding.\r\n         * Set html to node element, apply bindings and call magento attributes parser.\r\n         *\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            setHtml(el, valueAccessor());\r\n            applyComponents(el, bindingContext);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('bindHtml');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bootstrap.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var renderer = require('../template/renderer');\r\n\r\n    renderer.addAttribute('repeat', renderer.handlers.wrapAttribute);\r\n\r\n    renderer.addAttribute('outerfasteach', {\r\n        binding: 'fastForEach',\r\n        handler: renderer.handlers.wrapAttribute\r\n    });\r\n\r\n    renderer\r\n        .addNode('repeat')\r\n        .addNode('fastForEach');\r\n\r\n    return {\r\n        resizable:      require('./resizable'),\r\n        i18n:           require('./i18n'),\r\n        scope:          require('./scope'),\r\n        range:          require('./range'),\r\n        mageInit:       require('./mage-init'),\r\n        keyboard:       require('./keyboard'),\r\n        optgroup:       require('./optgroup'),\r\n        aferRender:     require('./after-render'),\r\n        autoselect:     require('./autoselect'),\r\n        datepicker:     require('./datepicker'),\r\n        outerClick:     require('./outer_click'),\r\n        fadeVisible:    require('./fadeVisible'),\r\n        collapsible:    require('./collapsible'),\r\n        staticChecked:  require('./staticChecked'),\r\n        simpleChecked:  require('./simple-checked'),\r\n        bindHtml:       require('./bind-html'),\r\n        tooltip:        require('./tooltip'),\r\n        repeat:         require('knockoutjs/knockout-repeat'),\r\n        fastForEach:    require('knockoutjs/knockout-fast-foreach')\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/collapsible.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var collapsible,\r\n        defaults;\r\n\r\n    defaults = {\r\n        closeOnOuter: true,\r\n        onTarget: false,\r\n        openClass: '_active',\r\n        as: '$collapsible'\r\n    };\r\n\r\n    collapsible = {\r\n\r\n        /**\r\n         * Sets 'opened' property to true.\r\n         */\r\n        open: function () {\r\n            this.opened(true);\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' property to false.\r\n         */\r\n        close: function () {\r\n            this.opened(false);\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         */\r\n        toggle: function () {\r\n            this.opened(!this.opened());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element, closes collapsible model.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} model\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, model, e) {\r\n        var target = e.target;\r\n\r\n        if (target !== container && !container.contains(target)) {\r\n            model.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates 'css' binding which toggles\r\n     * class specified in 'name' parameter.\r\n     *\r\n     * @param {Object} model\r\n     * @param {String} name\r\n     * @returns {Object}\r\n     */\r\n    function getClassBinding(model, name) {\r\n        var binding = {};\r\n\r\n        binding[name] = model.opened;\r\n\r\n        return {\r\n            css: binding\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {Object} [options={}]\r\n     * @returns {Object} Complete instance configuration.\r\n     */\r\n    function buildConfig(options) {\r\n        if (typeof options !== 'object') {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend({}, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.collapsible = {\r\n\r\n        /**\r\n         * Initializes 'collapsible' binding.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var $collapsible = Object.create(collapsible),\r\n                config = buildConfig(valueAccessor()),\r\n                outerClick,\r\n                bindings;\r\n\r\n            _.bindAll($collapsible, 'open', 'close', 'toggle');\r\n\r\n            $collapsible.opened = ko.observable(!!config.opened);\r\n\r\n            bindingCtx[config.as] = $collapsible;\r\n\r\n            if (config.closeOnOuter) {\r\n                outerClick = onOuterClick.bind(null, element, $collapsible);\r\n\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n\r\n            if (config.openClass) {\r\n                bindings = getClassBinding($collapsible, config.openClass);\r\n\r\n                ko.applyBindingsToNode(element, bindings, bindingCtx);\r\n            }\r\n\r\n            if (config.onTarget) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n\r\n            if (viewModel && _.isFunction(viewModel.on)) {\r\n                viewModel.on({\r\n                    close:          $collapsible.close,\r\n                    open:           $collapsible.open,\r\n                    toggleOpened:   $collapsible.toggle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.closeCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which closes associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.close);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.openCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which opens associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.open);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.toggleCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which toggles associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addAttribute('collapsible')\r\n        .addAttribute('openCollapsible')\r\n        .addAttribute('closeCollapsible')\r\n        .addAttribute('toggleCollapsible');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/datepicker.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates datepicker binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'jquery',\r\n    'mage/translate',\r\n    'mage/calendar'\r\n], function (ko, _, $, $t) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        dateFormat: 'mm\\/dd\\/yyyy',\r\n        showsTime: false,\r\n        timeFormat: null,\r\n        buttonImage: null,\r\n        buttonImageOnly: null,\r\n        buttonText: $t('Select Date')\r\n    };\r\n\r\n    ko.bindingHandlers.datepicker = {\r\n        /**\r\n         * Initializes calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * For more info about options take a look at \"mage/calendar\" and jquery.ui.datepicker widget.\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         */\r\n        init: function (el, valueAccessor) {\r\n            var config = valueAccessor(),\r\n                observable,\r\n                options = {};\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            $(el).calendar(options);\r\n            observable() && $(el).datepicker('setDate', observable());\r\n            $(el).blur();\r\n\r\n            ko.utils.registerEventHandler(el, 'change', function () {\r\n                observable(this.value);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/fadeVisible.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n], function($, ko) {\r\n    ko.bindingHandlers.fadeVisible = {\r\n        init: function (element, valueAccessor) {\r\n            // Initially set the element to be instantly visible/hidden depending on the value\r\n            var value = valueAccessor();\r\n            $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\r\n        },\r\n        update: function (element, valueAccessor) {\r\n            // Whenever the value subsequently changes, slowly fade the element in or out\r\n            var value = valueAccessor();\r\n            ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/i18n.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'module',\r\n    '../template/renderer',\r\n    'mage/translate'\r\n], function ($, ko, module, renderer) {\r\n    'use strict';\r\n\r\n    var locations = {\r\n            'legend': 'Caption for the fieldset element',\r\n            'label': 'Label for an input element.',\r\n            'button': 'Push button',\r\n            'a': 'Link label',\r\n            'b': 'Bold text',\r\n            'strong': 'Strong emphasized text',\r\n            'i': 'Italic text',\r\n            'em': 'Emphasized text',\r\n            'u': 'Underlined text',\r\n            'sup': 'Superscript text',\r\n            'sub': 'Subscript text',\r\n            'span': 'Span element',\r\n            'small': 'Smaller text',\r\n            'big': 'Bigger text',\r\n            'address': 'Contact information',\r\n            'blockquote': 'Long quotation',\r\n            'q': 'Short quotation',\r\n            'cite': 'Citation',\r\n            'caption': 'Table caption',\r\n            'abbr': 'Abbreviated phrase',\r\n            'acronym': 'An acronym',\r\n            'var': 'Variable part of a text',\r\n            'dfn': 'Term',\r\n            'strike': 'Strikethrough text',\r\n            'del': 'Deleted text',\r\n            'ins': 'Inserted text',\r\n            'h1': 'Heading level 1',\r\n            'h2': 'Heading level 2',\r\n            'h3': 'Heading level 3',\r\n            'h4': 'Heading level 4',\r\n            'h5': 'Heading level 5',\r\n            'h6': 'Heading level 6',\r\n            'center': 'Centered text',\r\n            'select': 'List options',\r\n            'img': 'Image',\r\n            'input': 'Form element'\r\n        },\r\n\r\n        /**\r\n         * Generates [data-translate] attribute's value\r\n         * @param {Object} translationData\r\n         * @param {String} location\r\n         */\r\n        composeTranslateAttr = function (translationData, location) {\r\n            var obj = [{\r\n                'shown': translationData.shown,\r\n                'translated': translationData.translated,\r\n                'original': translationData.original,\r\n                'location': locations[location] || 'Text'\r\n            }];\r\n\r\n            return JSON.stringify(obj);\r\n        },\r\n\r\n        /**\r\n         * Sets text for the element\r\n         * @param {Object} el\r\n         * @param {String} text\r\n         */\r\n        setText = function (el, text) {\r\n            $(el).text(text);\r\n        },\r\n\r\n        /**\r\n         * Sets [data-translate] attribute for the element\r\n         * @param {Object} el - The element which is binded\r\n         * @param {String} original - The original value of the element\r\n         */\r\n        setTranslateProp = function (el, original) {\r\n            var location = $(el).prop('tagName').toLowerCase(),\r\n                translated = $.mage.__(original),\r\n                translationData = {\r\n                    shown: translated,\r\n                    translated: translated,\r\n                    original: original\r\n                },\r\n                translateAttr = composeTranslateAttr(translationData, location);\r\n\r\n            $(el).attr('data-translate', translateAttr);\r\n\r\n            setText(el, translationData.shown);\r\n        },\r\n\r\n        /**\r\n         * Checks if node represents ko virtual node (nodeType === 8, nodeName === '#comment').\r\n         *\r\n         * @param {HTMLElement} node\r\n         * @returns {Boolean}\r\n         */\r\n        isVirtualElement = function (node) {\r\n            return node.nodeType === 8;\r\n        },\r\n\r\n        /**\r\n        * Checks if it's real DOM element\r\n        * in case of virtual element, returns span wrapper\r\n        * @param {Object} el\r\n        * @param {bool} isUpdate\r\n        * @return {Object} el\r\n        */\r\n        getRealElement = function (el, isUpdate) {\r\n            if (isVirtualElement(el)) {\r\n                if (isUpdate) {\r\n                    return $(el).next('span');\r\n                }\r\n\r\n                return $('<span/>').insertAfter(el);\r\n            }\r\n\r\n            return el;\r\n        },\r\n\r\n        /**\r\n         * execute i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         * @param {bool} isUpdate\r\n         */\r\n        execute = function (element, valueAccessor, isUpdate) {\r\n            var original = ko.unwrap(valueAccessor() || ''),\r\n                el = getRealElement(element, isUpdate),\r\n                inlineTranslation = (module.config() || {}).inlineTranslation;\r\n\r\n            if (inlineTranslation) {\r\n                setTranslateProp(el, original);\r\n            } else {\r\n                setText(el, $.mage.__(original));\r\n            }\r\n        };\r\n\r\n    /**\r\n     * i18n binding\r\n     * @property {Function}  init\r\n     * @property {Function}  update\r\n     */\r\n    ko.bindingHandlers.i18n = {\r\n\r\n        /**\r\n         * init i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            execute(element, valueAccessor);\r\n        },\r\n\r\n        /**\r\n         * update i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            execute(element, valueAccessor, true);\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.i18n = true;\r\n\r\n    renderer\r\n        .addNode('translate', {\r\n            binding: 'i18n'\r\n        })\r\n        .addAttribute('translate', {\r\n            binding: 'i18n'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/keyboard.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.keyboard = {\r\n\r\n        /**\r\n         * Attaches keypress handlers to element\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         * @param  {Object} allBindings - all bindings object\r\n         * @param  {Object} viewModel - reference to viewmodel\r\n         */\r\n        init: function (el, valueAccessor, allBindings, viewModel) {\r\n            var map = valueAccessor();\r\n\r\n            ko.utils.registerEventHandler(el, 'keyup', function (e) {\r\n                var callback = map[e.keyCode];\r\n\r\n                if (callback) {\r\n                    return callback.call(viewModel, e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('keyboard');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/mage-init.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main'\r\n], function (ko, _, mage) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.mageInit = {\r\n        init: function (el, valueAccessor) {\r\n            var data = valueAccessor();\r\n\r\n            _.each(data, function (config, component) {\r\n                mage.applyFor(el, config, component);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/optgroup.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'mageUtils'\r\n    ], function (ko, utils) {\r\n    'use strict';\r\n\r\n    var captionPlaceholder = {},\r\n        optgroupTmpl = '<optgroup label=\"${ $.label }\"></optgroup>',\r\n        nbspRe = /&nbsp;/g,\r\n        optionsText,\r\n        optionsValue,\r\n        optionTitle;\r\n\r\n    ko.bindingHandlers.optgroup = {\r\n        /**\r\n         * @param {*} element\r\n         * @returns {Object}\r\n         */\r\n        'init': function (element) {\r\n            if (ko.utils.tagNameLower(element) !== 'select') {\r\n                throw new Error('options binding applies only to SELECT elements');\r\n            }\r\n\r\n            // Remove all existing <option>s.\r\n            while (element.length > 0) {\r\n                element.remove(0);\r\n            }\r\n\r\n            // Ensures that the binding processor doesn't try to bind the options\r\n            return {\r\n                'controlsDescendantBindings': true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param {*} element\r\n         * @param {*} valueAccessor\r\n         * @param {*} allBindings\r\n         */\r\n        'update': function (element, valueAccessor, allBindings) {\r\n            var selectWasPreviouslyEmpty = element.length == 0,\r\n                previousScrollTop = (!selectWasPreviouslyEmpty && element.multiple) ? element.scrollTop : null,\r\n                includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n                arrayToDomNodeChildrenOptions = {},\r\n                captionValue,\r\n                unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n                filteredArray,\r\n                previousSelectedValues,\r\n                itemUpdate = false,\r\n                callback = setSelectionCallback,\r\n                nestedOptionsLevel = -1,\r\n                i, l;\r\n\r\n            optionsText = ko.utils.unwrapObservable(allBindings.get('optionsText')) || 'text';\r\n            optionsValue = ko.utils.unwrapObservable(allBindings.get('optionsValue')) || 'value';\r\n            optionTitle = optionsText + 'title';\r\n\r\n            if (element.multiple) {\r\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\r\n            } else {\r\n                previousSelectedValues = element.selectedIndex >= 0 ? [ko.selectExtensions.readValue(element.options[element.selectedIndex])] : [];\r\n            }\r\n\r\n            if (unwrappedArray) {\r\n                if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\r\n                    unwrappedArray = [unwrappedArray];\r\n                }\r\n\r\n                // Filter out any entries marked as destroyed\r\n                filteredArray = ko.utils.arrayFilter(unwrappedArray, function (item) {\r\n                    if (item && !item.label) {\r\n                        return false;\r\n                    }\r\n\r\n                    return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item._destroy);\r\n                });\r\n                filteredArray.map(recursivePathBuilder, null);\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {*} option\r\n             */\r\n            arrayToDomNodeChildrenOptions.beforeRemove = function (option) {\r\n                element.removeChild(option);\r\n            };\r\n\r\n            if (allBindings.has('optionsAfterRender')) {\r\n\r\n                /**\r\n                 * @param {*} arrayEntry\r\n                 * @param {*} newOptions\r\n                 */\r\n                callback = function (arrayEntry, newOptions) {\r\n                    setSelectionCallback(arrayEntry, newOptions);\r\n                    ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\r\n                }\r\n            }\r\n\r\n            filteredArray = formatOptions(filteredArray);\r\n            ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionNodeFromArray, arrayToDomNodeChildrenOptions, callback);\r\n\r\n            ko.dependencyDetection.ignore(function () {\r\n                var selectionChanged;\r\n\r\n                if (allBindings.get('valueAllowUnset') && allBindings.has('value')) {\r\n                    // The model value is authoritative, so make sure its value is the one selected\r\n                    ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n                } else {\r\n                    // Determine if the selection has changed as a result of updating the options list\r\n                    if (element.multiple) {\r\n                        // For a multiple-select box, compare the new selection count to the previous one\r\n                        // But if nothing was selected before, the selection can't have changed\r\n                        selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\r\n                    } else {\r\n                        // For a single-select box, compare the current value to the previous value\r\n                        // But if nothing was selected before or nothing is selected now, just look for a change in selection\r\n                        selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0) ?\r\n                            (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\r\n                            : (previousSelectedValues.length || element.selectedIndex >= 0);\r\n                    }\r\n\r\n                    // Ensure consistency between model value and selected option.\r\n                    // If the dropdown was changed so that selection is no longer the same,\r\n                    // notify the value or selectedOptions binding.\r\n                    if (selectionChanged) {\r\n                        ko.utils.triggerEvent(element, 'change');\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\r\n                element.scrollTop = previousScrollTop;\r\n            }\r\n            /**\r\n             *\r\n             * @returns {*}\r\n             */\r\n            function selectedOptions() {\r\n                return ko.utils.arrayFilter(element.options, function (node) {\r\n                    return node.selected;\r\n                });\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {*} object\r\n             * @param {*} predicate\r\n             * @param {*} defaultValue\r\n             * @returns {*}\r\n             */\r\n            function applyToObject(object, predicate, defaultValue) {\r\n                var predicateType = typeof predicate;\r\n\r\n                if (predicateType === 'function') {   // Given a function; run it against the data value\r\n                    return predicate(object);\r\n                } else if (predicateType === 'string') { // Given a string; treat it as a property name on the data value\r\n                    return object[predicate];\r\n                } else {                      // Given no optionsText arg; use the data value itself\r\n                    return defaultValue;\r\n                }\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {*} obj\r\n             */\r\n            function recursivePathBuilder(obj) {\r\n\r\n                obj[optionTitle] = (this && this[optionTitle] ? this[optionTitle] + '/' : '') + obj[optionsText].trim();\r\n\r\n                if (Array.isArray(obj[optionsValue])) {\r\n                    obj[optionsValue].map(recursivePathBuilder, obj);\r\n                }\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {Array} arrayEntry\r\n             * @param {*} oldOptions\r\n             * @returns {*[]}\r\n             */\r\n            function optionNodeFromArray(arrayEntry, oldOptions) {\r\n                var option;\r\n\r\n                if (oldOptions.length) {\r\n                    previousSelectedValues = oldOptions[0].selected ? [ko.selectExtensions.readValue(oldOptions[0])] : [];\r\n                    itemUpdate = true;\r\n                }\r\n\r\n                if (arrayEntry === captionPlaceholder) { // empty value, label === caption\r\n                    option = element.ownerDocument.createElement('option');\r\n                    ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                    ko.selectExtensions.writeValue(option, undefined);\r\n                } else if (typeof arrayEntry[optionsValue] === 'undefined') { // empty value === optgroup\r\n                    option = utils.template(optgroupTmpl, {\r\n                        label: arrayEntry[optionsText],\r\n                        title: arrayEntry[optionsText + 'title']\r\n                    });\r\n                    option = ko.utils.parseHtmlFragment(option)[0];\r\n\r\n                } else {\r\n                    option = element.ownerDocument.createElement('option');\r\n                    option.setAttribute('data-title', arrayEntry[optionsText + 'title']);\r\n                    ko.selectExtensions.writeValue(option, arrayEntry[optionsValue]);\r\n                    ko.utils.setTextContent(option, arrayEntry[optionsText]);\r\n                }\r\n\r\n                return [option];\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {*} newOptions\r\n             */\r\n            function setSelectionCallback(newOptions) {\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                if (previousSelectedValues.length) {\r\n                    var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions.value)) >= 0;\r\n                    ko.utils.setOptionNodeSelectionState(newOptions.value, isSelected);\r\n\r\n                    // If this option was changed from being selected during a single-item update, notify the change\r\n                    if (itemUpdate && !isSelected) {\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, 'change']);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {*} string, times\r\n             * @returns {Array}\r\n             */\r\n            function strPad(string, times) {\r\n                return  (new Array(times + 1)).join(string);\r\n            }\r\n\r\n            /**\r\n             *\r\n             * @param {*} options\r\n             * @returns {Array}\r\n             */\r\n            function formatOptions(options) {\r\n                var res = [];\r\n                nestedOptionsLevel++;\r\n\r\n                if (!nestedOptionsLevel) { // zero level\r\n                    // If caption is included, add it to the array\r\n                    if (allBindings.has('optionsCaption')) {\r\n                        captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                        // If caption value is null or undefined, don't show a caption\r\n                        if (captionValue !== null && captionValue !== undefined && captionValue !== false) {\r\n                            res.push(captionPlaceholder);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                ko.utils.arrayForEach(options, function (option) {\r\n                    var value = applyToObject(option, optionsValue, option),\r\n                        label = applyToObject(option, optionsText, value) || '',\r\n                        title = applyToObject(option, optionsText, value) || '',\r\n                        obj = {},\r\n                        space = '\\u2007\\u2007\\u2007';\r\n\r\n                    obj[optionTitle] = applyToObject(option, optionsText + 'title', value);\r\n\r\n                    label = label.replace(nbspRe, '').trim();\r\n\r\n                    if (Array.isArray(value)) {\r\n                        obj[optionsText] = strPad('&nbsp;', nestedOptionsLevel * 4) + label;\r\n                        res.push(obj);\r\n                        res = res.concat(formatOptions(value));\r\n                    } else {\r\n                        obj[optionsText] = strPad(space, nestedOptionsLevel * 2) + label;\r\n                        obj[optionsValue] = value;\r\n                        res.push(obj);\r\n                    }\r\n                });\r\n                nestedOptionsLevel--;\r\n\r\n                return res;\r\n            }\r\n        }\r\n    };\r\n    ko.bindingHandlers.selectedOptions.after.push('optgroup');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/outer_click.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates outerClick binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        onlyIfVisible: true\r\n    };\r\n\r\n    /**\r\n     * Checks if element sis visible.\r\n     *\r\n     * @param {Element} el\r\n     * @returns {Boolean}\r\n     */\r\n    function isVisible(el) {\r\n        var style = window.getComputedStyle(el),\r\n            visibility = {\r\n                display: 'none',\r\n                visibility: 'hidden',\r\n                opacity: '0'\r\n            },\r\n            visible = true;\r\n\r\n        _.each(visibility, function (val, key) {\r\n            if (style[key] === val) {\r\n                visible = false;\r\n            }\r\n        });\r\n\r\n        return visible;\r\n    }\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element,\r\n     * invokes specfied in configuration callback.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} config\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, config, e) {\r\n        var target = e.target,\r\n            callback = config.callback;\r\n\r\n        if (container === target || container.contains(target)) {\r\n            return;\r\n        }\r\n\r\n        if (config.onlyIfVisible) {\r\n            if (!_.isNull(container.offsetParent) && isVisible(container)) {\r\n                callback();\r\n            }\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {(Object|Function)} [options={}]\r\n     * @returns {Object}\r\n     */\r\n    function buildConfig(options) {\r\n        var config = {};\r\n\r\n        if (_.isFunction(options)) {\r\n            options = {\r\n                callback: options\r\n            };\r\n        } else if (!_.isObject(options)) {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend(config, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.outerClick = {\r\n\r\n        /**\r\n         * Initializes outer click binding.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config = buildConfig(valueAccessor()),\r\n                outerClick = onOuterClick.bind(null, element, config),\r\n                isTouchDevice = typeof document.ontouchstart !== 'undefined';\r\n\r\n            if (isTouchDevice) {\r\n                $(document).on('touchstart', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('touchstart', outerClick);\r\n                });\r\n            } else {\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('outerClick');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/range.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer',\r\n    'jquery/ui'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var isTouchDevice = !_.isUndefined(document.ontouchstart),\r\n        sliderFn = 'slider';\r\n\r\n    ko.bindingHandlers.range = {\r\n\r\n        /**\r\n         * Initializes binding and a slider update.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config  = valueAccessor(),\r\n                value   = config.value;\r\n\r\n            _.extend(config, {\r\n                value: value(),\r\n\r\n                /**\r\n                 * Callback which is being called when sliders' value changes.\r\n                 *\r\n                 * @param {Event} event\r\n                 * @param {Object} ui\r\n                 */\r\n                slide: function (event, ui) {\r\n                    value(ui.value);\r\n                }\r\n            });\r\n\r\n            $(element)[sliderFn](config);\r\n        },\r\n\r\n        /**\r\n         * Updates sliders' plugin configuration.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor();\r\n\r\n            config.value = ko.unwrap(config.value);\r\n\r\n            $(element)[sliderFn]('option', config);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('range');\r\n\r\n    if (!isTouchDevice) {\r\n        return;\r\n    }\r\n\r\n    $.widget('mage.touchSlider', $.ui.slider, {\r\n\r\n        /**\r\n         * Creates instance of widget.\r\n         *\r\n         * @override\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                '_mouseDown',\r\n                '_mouseMove',\r\n                '_onTouchEnd'\r\n            );\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Initializes mouse events on element.\r\n         * @override\r\n         */\r\n        _mouseInit: function () {\r\n            var result = this._superApply(arguments);\r\n\r\n            this.element\r\n                .off('mousedown.' + this.widgetName)\r\n                .on('touchstart.' + this.widgetName, this._mouseDown);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Elements' 'mousedown' event handler polyfill.\r\n         * @override\r\n         */\r\n        _mouseDown: function (event) {\r\n            var prevDelegate = this._mouseMoveDelegate,\r\n                result;\r\n\r\n            event = this._touchToMouse(event);\r\n            result = this._super(event);\r\n\r\n            if (prevDelegate === this._mouseMoveDelegate) {\r\n                return result;\r\n            }\r\n\r\n            $(document)\r\n                .off('mousemove.' + this.widgetName)\r\n                .off('mouseup.' + this.widgetName);\r\n\r\n            $(document)\r\n                .on('touchmove.' + this.widgetName, this._mouseMove)\r\n                .on('touchend.' + this.widgetName, this._onTouchEnd)\r\n                .on('tochleave.' + this.widgetName, this._onTouchEnd);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Documents' 'mousemove' event handler polyfill.\r\n         *\r\n         * @override\r\n         * @param {Event} event - Touch event object.\r\n         */\r\n        _mouseMove: function (event) {\r\n            event = this._touchToMouse(event);\r\n\r\n            return this._super(event);\r\n        },\r\n\r\n        /**\r\n         * Documents' 'touchend' event handler.\r\n         */\r\n        _onTouchEnd: function (event) {\r\n            $(document).trigger('mouseup');\r\n\r\n            return this._mouseUp(event);\r\n        },\r\n\r\n        /**\r\n         * Removes previously assigned touch handlers.\r\n         *\r\n         * @override\r\n         */\r\n        _mouseUp: function () {\r\n            this._removeTouchHandlers();\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Removes previously assigned touch handlers.\r\n         *\r\n         * @override\r\n         */\r\n        _mouseDestroy: function () {\r\n            this._removeTouchHandlers();\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Removes touch events from document object.\r\n         */\r\n        _removeTouchHandlers: function () {\r\n            $(document)\r\n                .off('touchmove.' + this.widgetName)\r\n                .off('touchend.' + this.widgetName)\r\n                .off('touchleave.' + this.widgetName);\r\n        },\r\n\r\n        /**\r\n         * Adds properties to the touch event to mimic mouse event.\r\n         *\r\n         * @param {Event} event - Touch event object.\r\n         * @returns {Event}\r\n         */\r\n        _touchToMouse: function (event) {\r\n            var orig = event.originalEvent,\r\n                touch = orig.touches[0];\r\n\r\n            return _.extend(event, {\r\n                which:      1,\r\n                pageX:      touch.pageX,\r\n                pageY:      touch.pageY,\r\n                clientX:    touch.clientX,\r\n                clientY:    touch.clientY,\r\n                screenX:    touch.screenX,\r\n                screenY:    touch.screenY\r\n            });\r\n        }\r\n    });\r\n\r\n    sliderFn = 'touchSlider';\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/resizable.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiRegistry',\r\n    'underscore',\r\n    '../template/renderer',\r\n    'jquery/ui'\r\n], function (ko, $, async, registry, _, renderer) {\r\n    'use strict';\r\n\r\n    var sizeOptions = [\r\n            'minHeight',\r\n            'maxHeight',\r\n            'minWidth',\r\n            'maxWidth'\r\n        ],\r\n\r\n        handles = {\r\n            height: '.ui-resizable-s, .ui-resizable-n',\r\n            width: '.ui-resizable-w, .ui-resizable-e'\r\n        };\r\n\r\n    /**\r\n     * Recalcs visibility of handles, width and height of resizable based on content\r\n     * @param {HTMLElement} element\r\n     */\r\n    function adjustSize(element) {\r\n        var maxHeight,\r\n            maxWidth;\r\n\r\n        element = $(element);\r\n        maxHeight = element.resizable('option').maxHeight;\r\n        maxWidth = element.resizable('option').maxWidth;\r\n\r\n        if (maxHeight && element.height() > maxHeight) {\r\n            element.height(maxHeight + 1);\r\n            $(handles.height).hide();\r\n        } else {\r\n            $(handles.height).show();\r\n        }\r\n\r\n        if (maxWidth && element.width() > maxWidth) {\r\n            element.width(maxWidth + 1);\r\n            $(handles.width).hide();\r\n        } else {\r\n            $(handles.width).show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recalcs allowed min, max width and height based on configured selectors\r\n     * @param {Object} sizeConstraints\r\n     * @param {String} componentName\r\n     * @param {HTMLElement} element\r\n     * @param {Boolean} hasWidthUpdate\r\n     */\r\n    function recalcAllowedSize(sizeConstraints, componentName, element, hasWidthUpdate) {\r\n        var size;\r\n\r\n        element = $(element);\r\n\r\n        if (!element.data('resizable')) {\r\n            return;\r\n        }\r\n\r\n        if (!hasWidthUpdate) {\r\n            element.css('width', 'auto');\r\n        }\r\n\r\n        _.each(sizeConstraints, function (selector, key) {\r\n            async.async({\r\n                component: componentName,\r\n                selector: selector\r\n            }, function (elem) {\r\n                size = key.indexOf('Height') !== -1 ? $(elem).outerHeight(true) : $(elem).outerWidth(true);\r\n\r\n                if (element.data('resizable')) {\r\n                    element.resizable('option', key, size + 1);\r\n                }\r\n            });\r\n        }, this);\r\n\r\n        adjustSize(element);\r\n    }\r\n\r\n    /**\r\n     * Preprocess config to separate options,\r\n     * which must be processed further before applying\r\n     *\r\n     * @param {Object} config\r\n     * @param {Object} viewModel\r\n     * @param {*} element\r\n     * @return {Object} config\r\n     */\r\n    function processConfig(config, viewModel, element) {\r\n        var sizeConstraint,\r\n            sizeConstraints = {},\r\n            recalc,\r\n            hasWidthUpdate;\r\n\r\n        if (_.isEmpty(config)) {\r\n            return {};\r\n        }\r\n        _.each(sizeOptions, function (key) {\r\n            sizeConstraint = config[key];\r\n\r\n            if (sizeConstraint && !_.isNumber(sizeConstraint)) {\r\n                sizeConstraints[key] = sizeConstraint;\r\n                delete config[key];\r\n            }\r\n        });\r\n        hasWidthUpdate =  _.some(sizeConstraints, function (value, key) {\r\n            return key.indexOf('Width') !== -1;\r\n        });\r\n\r\n        recalc = recalcAllowedSize.bind(null, sizeConstraints, viewModel.name, element, hasWidthUpdate);\r\n        config.start = recalc;\r\n        $(window).on('resize.resizable', recalc);\r\n        registry.get(viewModel.provider).on('reloaded', recalc);\r\n\r\n        return config;\r\n    }\r\n\r\n    ko.bindingHandlers.resizable = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = processConfig(valueAccessor(), viewModel, element);\r\n\r\n            $(element).resizable(config);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('resizable');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/scope.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates scope binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'uiRegistry',\r\n    'mage/translate',\r\n    '../template/renderer'\r\n], function (ko, registry, $t, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates child context with passed component param as $data. Extends context with $t helper.\r\n     * Applies bindings to descendant nodes.\r\n     * @param {HTMLElement} el - element to apply bindings to.\r\n     * @param {ko.bindingContext} bindingContext - instance of ko.bindingContext, passed to binding initially.\r\n     * @param {Object} component - component instance to attach to new context\r\n     */\r\n    function applyComponents(el, bindingContext, component) {\r\n        component = bindingContext.createChildContext(component);\r\n\r\n        ko.utils.extend(component, {\r\n            $t: $t\r\n        });\r\n\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n\r\n        ko.applyBindingsToDescendants(component, el);\r\n    }\r\n\r\n    ko.bindingHandlers.scope = {\r\n\r\n        /**\r\n         * Scope binding's init method.\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var component = valueAccessor(),\r\n                apply = applyComponents.bind(this, el, bindingContext);\r\n\r\n            if (typeof component === 'string') {\r\n                registry.get(component, apply);\r\n            } else if (typeof component === 'function') {\r\n                component(apply);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.scope = true;\r\n\r\n    renderer\r\n        .addNode('scope')\r\n        .addAttribute('scope', {\r\n            name: 'ko-scope'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/simple-checked.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.simpleChecked = {\r\n        'after': ['attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'simpleChecked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                updateView,\r\n                updateModel;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            /**\r\n             * Updates checked observable\r\n             */\r\n            updateModel = function () {\r\n                var  modelValue = ko.dependencyDetection.ignore(valueAccessor),\r\n                    isChecked = element.checked;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (modelValue.peek() === isChecked) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue(isChecked);\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                element.checked = !!modelValue;\r\n            };\r\n\r\n            ko.utils.registerEventHandler(element, 'change', updateModel);\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting.twoWayBindings.simpleChecked = true;\r\n\r\n    renderer.addAttribute('simpleChecked');\r\n    renderer.addAttribute('simple-checked', {\r\n        binding: 'simpleChecked'\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/staticChecked.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.staticChecked = {\r\n        'after': ['value', 'attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'checked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor, allBindings) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                isValueArray,\r\n                oldElemValue,\r\n                useCheckedValue,\r\n                checkedValue,\r\n                updateModel,\r\n                updateView;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            checkedValue = ko.pureComputed(function () {\r\n                if (allBindings.has('checkedValue')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n                } else if (allBindings.has('value')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('value'));\r\n                }\r\n\r\n                return element.value;\r\n            });\r\n\r\n            isValueArray = isCheckbox && ko.utils.unwrapObservable(valueAccessor()) instanceof Array;\r\n            oldElemValue = isValueArray ? checkedValue() : undefined;\r\n            useCheckedValue = isRadio || isValueArray;\r\n\r\n            /**\r\n             * Updates values array if it's necessary.\r\n             */\r\n            updateModel = function () {\r\n                var isChecked = element.checked,\r\n                    elemValue = useCheckedValue ? checkedValue() : isChecked,\r\n                    modelValue;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n\r\n                if (isValueArray) {\r\n                    if (oldElemValue !== elemValue) {\r\n                        oldElemValue = elemValue;\r\n                    } else {\r\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\r\n                    }\r\n                } else {\r\n                    ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state.\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                if (isValueArray) {\r\n                    element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\r\n                } else if (isCheckbox) {\r\n                    element.checked = modelValue;\r\n                } else {\r\n                    element.checked = checkedValue() === modelValue;\r\n                }\r\n            };\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n\r\n            ko.utils.registerEventHandler(element, 'click', updateModel);\r\n\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting.twoWayBindings.staticChecked = true;\r\n\r\n    renderer.addAttribute('staticChecked');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/tooltip.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/tooltip/tooltip.html',\r\n    '../template/renderer'\r\n], function ($, ko, _, template, tooltipTmpl, renderer) {\r\n    'use strict';\r\n\r\n    var tooltip,\r\n        defaults,\r\n        positions,\r\n        transformProp,\r\n        checkedPositions = {},\r\n        iterator = 0,\r\n        previousTooltip,\r\n        tooltipData,\r\n        positionData = {},\r\n        tooltipsCollection = {},\r\n        isTouchDevice = (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n        CLICK_EVENT = (function () {\r\n            return isTouchDevice ? 'touchstart' : 'click';\r\n        })();\r\n\r\n    defaults = {\r\n        tooltipWrapper: '[data-tooltip=tooltip-wrapper]',\r\n        tooltipContentBlock: 'data-tooltip-content',\r\n        closeButtonClass: 'action-close',\r\n        tailClass: 'data-tooltip-tail',\r\n        action: 'hover',\r\n        delay: 300,\r\n        track: false,\r\n        step: 20,\r\n        position: 'top',\r\n        closeButton: false,\r\n        showed: false,\r\n        strict: true,\r\n        center: false\r\n    };\r\n\r\n    tooltipData = {\r\n        trigger: false,\r\n        timeout: 0,\r\n        element: false,\r\n        event: false,\r\n        targetElement: {},\r\n        showed: false,\r\n        currentID: 0\r\n    };\r\n\r\n    /**\r\n     * Polyfill for css transform\r\n     */\r\n    transformProp = (function () {\r\n        var style = document.createElement('div').style,\r\n            base = 'Transform',\r\n            vendors = ['webkit', 'moz', 'ms', 'o'],\r\n            vi = vendors.length,\r\n            property;\r\n\r\n        if (typeof style.transform !== 'undefined') {\r\n            return 'transform';\r\n        }\r\n\r\n        while (vi--) {\r\n            property = vendors[vi] + base;\r\n\r\n            if (typeof style[property] !== 'undefined') {\r\n                return property;\r\n            }\r\n        }\r\n    })();\r\n\r\n    positions = {\r\n\r\n        /*eslint max-depth: [0, 0]*/\r\n\r\n        map: {\r\n            horizontal: {\r\n                s: 'w',\r\n                p: 'left'\r\n            },\r\n            vertical: {\r\n                s: 'h',\r\n                p: 'top'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        top: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'vertical', '_bottom', 'top', 'right');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        left: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'horizontal', '_right', 'left', 'top');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        bottom: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'vertical', '_top', 'bottom', 'left');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        right: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'horizontal', '_left', 'right', 'bottom');\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _topLeftChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : s.elementPosition,\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] - s.tooltipSize[map[direction].s] - config.step >\r\n                s.scrollPosition[map[direction].p]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] -\r\n                    config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _bottomRightChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : {\r\n                    top: s.elementPosition.top + s.elementSize.h,\r\n                    left: s.elementPosition.left + s.elementSize.w\r\n                },\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] + s.tooltipSize[map[direction].s] + config.step <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] + config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip if tooltip does not fit in window\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        positionCenter: function (s, data) {\r\n            data = positions._positionCenter(s, data, 'horizontal', positions.map);\r\n            data = positions._positionCenter(s, data, 'vertical', positions.map);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip side\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _positionCenter: function (s, data, direction, map) {\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n                data.position[map[direction].p] = (s.windowSize[map[direction].s] -\r\n                    s.tooltipSize[map[direction].s]) / 2 + s.scrollPosition[map[direction].p];\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Normalize horizontal or vertical position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalize: function (s, data, config, delegate, map, direction) {\r\n            var startPosition = !config.center ? s.eventPosition : {\r\n                    left: s.elementPosition.left + s.elementSize.w / 2,\r\n                    top: s.elementPosition.top + s.elementSize.h / 2\r\n                },\r\n                depResult;\r\n\r\n            if (startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2 >\r\n                s.scrollPosition[map[direction].p] && startPosition[map[direction].p] +\r\n                s.tooltipSize[map[direction].s] / 2 <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                data.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2;\r\n            } else {\r\n\r\n                /*eslint-disable no-lonely-if*/\r\n                if (!checkedPositions[delegate]) {\r\n                    depResult = positions[delegate].apply(null, arguments);\r\n\r\n                    if (depResult.hasOwnProperty('className')) {\r\n                        data = depResult;\r\n                    } else {\r\n                        data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                    }\r\n                } else {\r\n                    data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                }\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Calc tail position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} startPosition - start position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalizeTail: function (s, data, config, delegate, map, direction, startPosition) {\r\n            data.tail = {};\r\n\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n\r\n                if (\r\n                    startPosition[map[direction].p] >\r\n                    s.windowSize[map[direction].s] / 2 + s.scrollPosition[map[direction].p]\r\n                ) {\r\n                    data.position[map[direction].p] = s.windowSize[map[direction].s] +\r\n                        s.scrollPosition[map[direction].p] - s.tooltipSize[map[direction].s];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                } else {\r\n                    data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                }\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tail[map[direction].p] = s.eventPosition[map[direction].p] - s.windowSize[map[direction].s] / 2;\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        }\r\n    };\r\n\r\n    tooltip = {\r\n\r\n        /**\r\n         * Set new tooltip to tooltipCollection, save config, and add unic id\r\n         *\r\n         * @param {Object} config - tooltip config\r\n         * @returns {String} tooltip id\r\n         */\r\n        setTooltip: function (config) {\r\n            var property = 'id-' + iterator;\r\n\r\n            tooltipsCollection[property] = config;\r\n            iterator++;\r\n\r\n            return property;\r\n        },\r\n\r\n        /**\r\n         * Get tooltip config by id\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip config\r\n         */\r\n        getTooltip: function (id) {\r\n            return tooltipsCollection[id];\r\n        },\r\n\r\n        /**\r\n         * Set content to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} bindingCtx - tooltip context\r\n         * @param {Object} event - action event\r\n         */\r\n        setContent: function (tooltipElement, viewModel, id, bindingCtx, event) {\r\n            var html = $(tooltipElement).html(),\r\n                config = tooltip.getTooltip(id),\r\n                body = $('body');\r\n\r\n            tooltipData.currentID = id;\r\n            tooltipData.trigger = $(event.currentTarget);\r\n            tooltip.setTargetData(event);\r\n            body.on('mousemove.setTargetData', tooltip.setTargetData);\r\n            tooltip.clearTimeout(id);\r\n\r\n            tooltipData.timeout = _.delay(function () {\r\n                body.off('mousemove.setTargetData', tooltip.setTargetData);\r\n\r\n                if (tooltipData.trigger[0] === tooltipData.targetElement) {\r\n                    tooltip.destroy(id);\r\n                    event.stopPropagation();\r\n                    tooltipElement = tooltip.createTooltip(id);\r\n                    tooltipElement.find('.' + defaults.tooltipContentBlock).append(html);\r\n                    tooltipElement.applyBindings(bindingCtx);\r\n                    tooltip.setHandlers(id);\r\n                    tooltip.setPosition(tooltipElement, id);\r\n                    previousTooltip = id;\r\n                }\r\n\r\n            }, config.delay);\r\n        },\r\n\r\n        /**\r\n         * Set position to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setPosition: function (tooltipElement, id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            tooltip.sizeData = {\r\n                windowSize: {\r\n                    h: $(window).outerHeight(),\r\n                    w: $(window).outerWidth()\r\n                },\r\n                scrollPosition: {\r\n                    top: $(window).scrollTop(),\r\n                    left: $(window).scrollLeft()\r\n                },\r\n                tooltipSize: {\r\n                    h: tooltipElement.outerHeight(),\r\n                    w: tooltipElement.outerWidth()\r\n                },\r\n                elementSize: {\r\n                    h: tooltipData.trigger.outerHeight(),\r\n                    w: tooltipData.trigger.outerWidth()\r\n                },\r\n                elementPosition: tooltipData.trigger.offset(),\r\n                eventPosition: this.getEventPosition(tooltipData.event)\r\n            };\r\n\r\n            _.extend(positionData, positions[config.position](tooltip.sizeData));\r\n            tooltipElement.css(positionData.position);\r\n            tooltipElement.addClass(positionData.className);\r\n            tooltip._setTooltipSize(positionData, tooltipElement);\r\n            tooltip._setTailPosition(positionData, tooltipElement);\r\n            checkedPositions = {};\r\n        },\r\n\r\n        /**\r\n         * Check position data and change tooltip size if needs\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTooltipSize: function (data, tooltipElement) {\r\n            if (data.tooltipSize) {\r\n                data.tooltipSize.w ?\r\n                    tooltipElement.css('width', data.tooltipSize.w) :\r\n                    tooltipElement.css('height', data.tooltipSize.h);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check position data and set position to tail\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTailPosition: function (data, tooltipElement) {\r\n            var tail,\r\n                tailMargin;\r\n\r\n            if (data.tail) {\r\n                tail = tooltipElement.find('.' + defaults.tailClass);\r\n\r\n                if (data.tail.left) {\r\n                    tailMargin = parseInt(tail.css('margin-left'), 10);\r\n                    tail.css('margin-left', tailMargin + data.tail.left);\r\n                } else {\r\n                    tailMargin = parseInt(tail.css('margin-top'), 10);\r\n                    tail.css('margin-top', tailMargin + data.tail.top);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolves position for tooltip\r\n         *\r\n         * @param {Object} event\r\n         * @returns {Object}\r\n         */\r\n        getEventPosition: function (event) {\r\n            var position = {\r\n                left: event.originalEvent && event.originalEvent.pageX || 0,\r\n                top: event.originalEvent && event.originalEvent.pageY || 0\r\n            };\r\n\r\n            if (position.left === 0 && position.top === 0) {\r\n                _.extend(position, event.target.getBoundingClientRect());\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        /**\r\n         * Close tooltip if action happened outside handler and tooltip element\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} event - action event\r\n         */\r\n        outerClick: function (id, event) {\r\n            var tooltipElement = $(event.target).parents(defaults.tooltipWrapper)[0],\r\n                isTrigger = event.target === tooltipData.trigger[0] || $.contains(tooltipData.trigger[0], event.target);\r\n\r\n            if (tooltipData.showed && tooltipElement !== tooltipData.element[0] && !isTrigger) {\r\n                tooltip.destroy(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse keydown event and if event trigger is escape key - close tooltip\r\n         *\r\n         * @param {Object} event - action event\r\n         */\r\n        keydownHandler: function (event) {\r\n            if (tooltipData.showed && event.keyCode === 27) {\r\n                tooltip.destroy(tooltipData.currentID);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change tooltip position when track is enabled\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        track: function (event) {\r\n            var inequality = {},\r\n                map = positions.map,\r\n                translate = {\r\n                    left: 'translateX',\r\n                    top: 'translateY'\r\n                },\r\n                eventPosition = {\r\n                    left: event.pageX,\r\n                    top: event.pageY\r\n                },\r\n                tooltipSize = {\r\n                    w: tooltipData.element.outerWidth(),\r\n                    h: tooltipData.element.outerHeight()\r\n                },\r\n                direction = positionData.side === 'bottom' || positionData.side === 'top' ? 'horizontal' : 'vertical';\r\n\r\n            inequality[map[direction].p] = eventPosition[map[direction].p] - (positionData.position[map[direction].p] +\r\n                tooltipSize[map[direction].s] / 2);\r\n\r\n            if (positionData.position[map[direction].p] + inequality[map[direction].p] +\r\n                tooltip.sizeData.tooltipSize[map[direction].s] >\r\n                tooltip.sizeData.windowSize[map[direction].s] + tooltip.sizeData.scrollPosition[map[direction].p] ||\r\n                inequality[map[direction].p] + positionData.position[map[direction].p] <\r\n                tooltip.sizeData.scrollPosition[map[direction].p]) {\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltipData.element[0].style[transformProp] = translate[map[direction].p] +\r\n                '(' + inequality[map[direction].p] + 'px)';\r\n        },\r\n\r\n        /**\r\n         * Set handlers to tooltip\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setHandlers: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.track) {\r\n                tooltipData.trigger.on('mousemove.track', tooltip.track);\r\n            }\r\n\r\n            if (config.action === 'click') {\r\n                $(window).on(CLICK_EVENT + '.outerClick', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            if (config.closeButton) {\r\n                $('.' + config.closeButtonClass).on('click.closeButton', tooltip.destroy.bind(null, id));\r\n            }\r\n\r\n            document.addEventListener('scroll', tooltip.destroy, true);\r\n            $(window).on('keydown.tooltip', tooltip.keydownHandler);\r\n            $(window).on('scroll.tooltip', tooltip.outerClick.bind(null, id));\r\n            $(window).on('resize.outerClick', tooltip.outerClick.bind(null, id));\r\n        },\r\n\r\n        /**\r\n         * Toggle tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         */\r\n        toggleTooltip: function (tooltipElement, viewModel, id) {\r\n            if (previousTooltip === id && tooltipData.showed) {\r\n                tooltip.destroy(id);\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltip.setContent.apply(null, arguments);\r\n        },\r\n\r\n        /**\r\n         * Create tooltip and append to DOM\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip element\r\n         */\r\n        createTooltip: function (id) {\r\n            var body = $('body'),\r\n                config = tooltip.getTooltip(id);\r\n\r\n            $(template(tooltipTmpl, {\r\n                data: config\r\n            })).appendTo(body);\r\n\r\n            tooltipData.showed = true;\r\n            tooltipData.element = $(config.tooltipWrapper);\r\n\r\n            return tooltipData.element;\r\n        },\r\n\r\n        /**\r\n         * Check action and clean timeout\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        clearTimeout: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.action === 'hover') {\r\n                clearTimeout(tooltipData.timeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check previous tooltip\r\n         */\r\n        checkPreviousTooltip: function () {\r\n            if (!tooltipData.timeout) {\r\n                tooltip.destroy();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy tooltip instance\r\n         */\r\n        destroy: function () {\r\n            if (tooltipData.element) {\r\n                tooltipData.element.remove();\r\n                tooltipData.showed = false;\r\n            }\r\n\r\n            positionData = {};\r\n            tooltipData.timeout = false;\r\n            tooltip.removeHandlers();\r\n        },\r\n\r\n        /**\r\n         * Remove tooltip handlers\r\n         */\r\n        removeHandlers: function () {\r\n            $('.' + defaults.closeButtonClass).off('click.closeButton');\r\n            tooltipData.trigger.off('mousemove.track');\r\n            document.removeEventListener('scroll', tooltip.destroy, true);\r\n            $(window).off(CLICK_EVENT + '.outerClick');\r\n            $(window).off('keydown.tooltip');\r\n            $(window).off('resize.outerClick');\r\n        },\r\n\r\n        /**\r\n         * Set target element\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        setTargetData: function (event) {\r\n            tooltipData.event = event;\r\n\r\n            //TODO: bug chrome v.49; Link to issue https://bugs.chromium.org/p/chromium/issues/detail?id=161464\r\n            if (event.timeStamp - (tooltipData.timestamp || 0) < 1) {\r\n                return;\r\n            }\r\n\r\n            if (event.type === 'mousemove') {\r\n                tooltipData.targetElement = event.target;\r\n            } else {\r\n                tooltipData.targetElement = event.currentTarget;\r\n                tooltipData.timestamp = event.timeStamp;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Merged user config with defaults configuration\r\n         *\r\n         * @param {Object} config - user config\r\n         * @returns {Object} merged config\r\n         */\r\n        processingConfig: function (config) {\r\n            return _.extend({}, defaults, config);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.tooltip = {\r\n\r\n        /**\r\n         * Initialize tooltip\r\n         *\r\n         * @param {Object} elem - tooltip DOM element\r\n         * @param {Function} valueAccessor - ko observable property, tooltip data\r\n         * @param {Object} allBindings - all bindings on current element\r\n         * @param {Object} viewModel - current element viewModel\r\n         * @param {Object} bindingCtx - current element binding context\r\n         */\r\n        init: function (elem, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var config = tooltip.processingConfig(valueAccessor()),\r\n                $parentScope = config.parentScope ? $(config.parentScope) : $(elem).parent(),\r\n                tooltipId;\r\n\r\n            $(elem).addClass('hidden');\r\n\r\n            if (isTouchDevice) {\r\n                config.action = 'click';\r\n            }\r\n            tooltipId = tooltip.setTooltip(config);\r\n\r\n            if (config.action === 'hover') {\r\n                $parentScope.on(\r\n                    'mouseenter',\r\n                    config.trigger,\r\n                    tooltip.setContent.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n                $parentScope.on(\r\n                    'mouseleave',\r\n                    config.trigger,\r\n                    tooltip.checkPreviousTooltip.bind(null, tooltipId)\r\n                );\r\n            } else if (config.action === 'click') {\r\n                $parentScope.on(\r\n                    'click',\r\n                    config.trigger,\r\n                    tooltip.toggleTooltip.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n            }\r\n\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('tooltip');\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/bound-nodes.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/utils/wrapper',\r\n    'uiEvents',\r\n    'es6-collections'\r\n], function (ko, _, wrapper, Events) {\r\n    'use strict';\r\n\r\n    var nodesMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns a array of nodes associated with a specified model.\r\n     *\r\n     * @param {Object} model\r\n     * @returns {Undefined|Array}\r\n     */\r\n    function getBounded(model) {\r\n        return nodesMap.get(model);\r\n    }\r\n\r\n    /**\r\n     * Removes specified node to models' associations list, if it's\r\n     * a root node (node is not a descendant of any previously added nodes).\r\n     * Triggers 'addNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function addBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            isRoot;\r\n\r\n        if (!nodes) {\r\n            nodesMap.set(model, [node]);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n\r\n            return;\r\n        }\r\n\r\n        isRoot = nodes.every(function (bounded) {\r\n            return !bounded.contains(node);\r\n        });\r\n\r\n        if (isRoot) {\r\n            nodes.push(node);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes specified node from models' associations list.\r\n     * Triggers 'removeNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            index;\r\n\r\n        if (!nodes) {\r\n            return;\r\n        }\r\n\r\n        index = nodes.indexOf(node);\r\n\r\n        if (~index) {\r\n            nodes.splice(index, 0);\r\n\r\n            Events.trigger.call(model, 'removeNode', node);\r\n        }\r\n\r\n        if (!nodes.length) {\r\n            nodesMap.delete(model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns node's first sibling of 'element' type within the common component scope\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {HTMLElement}\r\n     */\r\n    function getElement(node, data) {\r\n        var elem;\r\n\r\n        while (node.nextElementSibling) {\r\n            node = node.nextElementSibling;\r\n\r\n            if (node.nodeType === 1 && ko.dataFor(node) === data) {\r\n                elem = node;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    wrapper.extend(ko, {\r\n\r\n        /**\r\n         * Extends kncokouts' 'applyBindings'\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'applyBindings' method.\r\n         */\r\n        applyBindings: function (orig, ctx, node) {\r\n            var result = orig(),\r\n                data = ctx && (ctx.$data || ctx);\r\n\r\n            if (node && node.nodeType === 8) {\r\n                node = getElement(node, data);\r\n            }\r\n\r\n            if (!node || node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            if (data && data.registerNodes) {\r\n                addBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Extends kncokouts' cleanNode\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'cleanNode' method.\r\n         */\r\n        cleanNode: function (orig, node) {\r\n            var result = orig(),\r\n                data;\r\n\r\n            if (node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            data = ko.dataFor(node);\r\n\r\n            if (data && data.registerNodes) {\r\n                removeBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n\r\n    return {\r\n\r\n        /**\r\n         * Returns root nodes associated with a model. If callback is provided,\r\n         * will iterate through all of the present nodes triggering callback\r\n         * for each of it. Also it will subscribe to the 'addNode' event.\r\n         *\r\n         * @param {Object} model\r\n         * @param {Function} [callback]\r\n         * @returns {Array|Undefined}\r\n         */\r\n        get: function (model, callback) {\r\n            var nodes = getBounded(model) || [];\r\n\r\n            if (!_.isFunction(callback)) {\r\n                return nodes;\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                callback(node);\r\n            });\r\n\r\n            this.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to adding of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        add: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('addNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to removal of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        remove: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('removeNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Removes subscriptions from the model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        off: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            Events.off.apply(model, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/observable_array.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    function iterator(callback, args, elem) {\r\n        callback = elem[callback];\r\n\r\n        if (_.isFunction(callback)) {\r\n            return callback.apply(elem, args);\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    function wrapper(method) {\r\n        return function (iteratee) {\r\n            var callback = iteratee,\r\n                elems = this(),\r\n                args = _.toArray(arguments);\r\n\r\n            if (_.isString(iteratee)) {\r\n                callback = iterator.bind(null, iteratee, args.slice(1));\r\n\r\n                args.unshift(callback);\r\n            }\r\n\r\n            args.unshift(elems);\r\n\r\n            return _[method].apply(_, args);\r\n        };\r\n    }\r\n\r\n    _.extend(ko.observableArray.fn, {\r\n        each: wrapper('each'),\r\n\r\n        map: wrapper('map'),\r\n\r\n        filter: wrapper('filter'),\r\n\r\n        some: wrapper('some'),\r\n\r\n        every: wrapper('every'),\r\n\r\n        groupBy: wrapper('groupBy'),\r\n\r\n        sortBy: wrapper('sortBy'),\r\n\r\n        findWhere: function (properties) {\r\n            return _.findWhere(this(), properties);\r\n        },\r\n\r\n        contains: function (value) {\r\n            return _.contains(this(), value);\r\n        },\r\n\r\n        hasNo: function () {\r\n            return !this.contains.apply(this, arguments);\r\n        },\r\n\r\n        getLength: function () {\r\n            return this().length;\r\n        },\r\n\r\n        indexBy: function (key) {\r\n            return _.indexBy(this(), key);\r\n        },\r\n\r\n        without: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.without.apply(_, args);\r\n        },\r\n\r\n        first: function () {\r\n            return _.first(this());\r\n        },\r\n\r\n        last: function () {\r\n            return _.last(this());\r\n        },\r\n\r\n        pluck: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.pluck.apply(_, args);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/engine.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    './observable_source',\r\n    './renderer'\r\n], function (ko, _, Source, renderer) {\r\n    'use strict';\r\n\r\n    var RemoteTemplateEngine,\r\n        NativeTemplateEngine = ko.nativeTemplateEngine,\r\n        sources = {};\r\n\r\n    /**\r\n     * Remote template engine class. Is used to be able to load remote templates via knockout template binding.\r\n     */\r\n    RemoteTemplateEngine = function () {};\r\n\r\n    /**\r\n     * Creates unique template identifier based on template name and it's extenders (optional)\r\n     * @param  {String} templateName\r\n     * @return {String} - unique template identifier\r\n     */\r\n    function createTemplateIdentifier(templateName) {\r\n        return templateName;\r\n    }\r\n\r\n    RemoteTemplateEngine.prototype = new NativeTemplateEngine;\r\n    RemoteTemplateEngine.prototype.constructor = RemoteTemplateEngine;\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Caches template after it's unique name and renders in once.\r\n     * If template name is not typeof string, delegates work to knockout.templateSources.anonymousTemplate.\r\n     * @param  {*} template\r\n     * @returns {TemplateSource} Object with methods 'nodes' and 'data'.\r\n     */\r\n    RemoteTemplateEngine.prototype.makeTemplateSource = function (template) {\r\n        var source,\r\n            templateId;\r\n\r\n        if (typeof template === 'string') {\r\n            templateId = createTemplateIdentifier(template);\r\n            source = sources[templateId];\r\n\r\n            if (!source) {\r\n                source = new Source(template);\r\n                sources[templateId] = source;\r\n\r\n                renderer.render(template).done(function (rendered) {\r\n                    source.nodes(rendered);\r\n                });\r\n            }\r\n\r\n            return source;\r\n        } else if (template.nodeType === 1 || template.nodeType === 8) {\r\n            source = new ko.templateSources.anonymousTemplate(template);\r\n\r\n            return source;\r\n        }\r\n\r\n        throw new Error('Unknown template type: ' + template);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Should return array of html elements.\r\n     * @param  {TemplateSource} templateSource - object with methods 'nodes' and 'data'.\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplateSource = function (templateSource) {\r\n        var nodes = templateSource.nodes();\r\n\r\n        return ko.utils.cloneNodes(nodes);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Created in order to invoke makeTemplateSource method with custom set of params.\r\n     * @param  {*} template - template identifier\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplate = function (template, bindingContext, options, templateDocument) {\r\n        var templateSource = this.makeTemplateSource(template, templateDocument, options);\r\n\r\n        return this.renderTemplateSource(templateSource, bindingContext, options);\r\n    };\r\n\r\n    return new RemoteTemplateEngine;\r\n});\r\n","Magento_Ui/js/lib/knockout/template/loader.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var licenseRegExp   = /<!--[\\s\\S]*?-->/,\r\n        defaultPlugin   = 'text',\r\n        defaultExt      = 'html';\r\n\r\n    /**\r\n     * Checks of provided string contains a file extension.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasFileExtension(str) {\r\n        return !!~str.indexOf('.') && !!str.split('.').pop();\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string contains a requirejs's plugin reference.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasPlugin(str) {\r\n        return !!~str.indexOf('!');\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string is a full path to the file.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isFullPath(str) {\r\n        return !!~str.indexOf('://');\r\n    }\r\n\r\n    /**\r\n     * Removes license comment from the provided string.\r\n     *\r\n     * @param {String} content - String to be processed.\r\n     * @returns {String}\r\n     */\r\n    function removeLicense(content) {\r\n        return content.replace(licenseRegExp, function (match) {\r\n            return ~match.indexOf('/**') ? '' : match;\r\n        });\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to extract template by provided path from\r\n         * a DOM element and falls back to a file loading if\r\n         * none of the DOM nodes was found.\r\n         *\r\n         * @param {String} path - Path to the template or a DOM selector.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadTemplate: function (path) {\r\n            var content = this.loadFromNode(path),\r\n                defer;\r\n\r\n            if (content) {\r\n                defer = $.Deferred();\r\n\r\n                defer.resolve(content);\r\n\r\n                return defer.promise();\r\n            }\r\n\r\n            return this.loadFromFile(path);\r\n        },\r\n\r\n        /**\r\n         * Loads template from external file by provided\r\n         * path, which will be preliminary formatted.\r\n         *\r\n         * @param {String} path - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadFromFile: function (path) {\r\n            var loading = $.Deferred();\r\n\r\n            path = this.formatPath(path);\r\n\r\n            require([path], function (template) {\r\n                template = removeLicense(template);\r\n\r\n                loading.resolve(template);\r\n            });\r\n\r\n            return loading.promise();\r\n        },\r\n\r\n        /**\r\n         * Attempts to extract content of a node found by provided selector.\r\n         *\r\n         * @param {String} selector - Node's selector (not necessary valid).\r\n         * @returns {String|Boolean} If specified node doesn't exists\r\n         *      'false' will be returned, otherwise returns node's content.\r\n         */\r\n        loadFromNode: function (selector) {\r\n            var node;\r\n\r\n            try {\r\n                node =\r\n                    document.getElementById(selector) ||\r\n                    document.querySelector(selector);\r\n\r\n                return node ? node.innerHTML : false;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Adds requirejs's plugin and file extension to\r\n         * to the provided string if it's necessary.\r\n         *\r\n         * @param {String} path - Path to be processed.\r\n         * @returns {String} Formatted path.\r\n         */\r\n        formatPath: function (path) {\r\n            var result = path;\r\n\r\n            if (!hasPlugin(path)) {\r\n                result = defaultPlugin + '!' + result;\r\n            }\r\n\r\n            if (isFullPath(path)) {\r\n                return result;\r\n            }\r\n\r\n            if (!hasFileExtension(path)) {\r\n                result += '.' + defaultExt;\r\n            }\r\n\r\n            return result.replace(/^([^\\/]+)/g, '$1/template');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/template/observable_source.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * Is being used by knockout template engine to store template to.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Initializes templateName, _data, nodes properties.\r\n         *\r\n         * @param  {template} template - identifier of template\r\n         */\r\n        initialize: function (template) {\r\n            this.templateName = template;\r\n            this._data = {};\r\n            this.nodes = ko.observable([]);\r\n        },\r\n\r\n        /**\r\n         * Data setter. If only one arguments passed, returns corresponding value.\r\n         * Else, writes into it.\r\n         * @param  {String} key - key to write to or to read from\r\n         * @param  {*} value\r\n         * @return {*} - if 1 arg provided, returnes _data[key] property\r\n         */\r\n        data: function (key, value) {\r\n            if (arguments.length === 1) {\r\n                return this._data[key];\r\n            }\r\n\r\n            this._data[key] = value;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/renderer.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './loader'\r\n], function ($, _, loader) {\r\n    'use strict';\r\n\r\n    var colonReg    = /\\\\:/g,\r\n        attributes  = {},\r\n        elements    = {},\r\n        globals     = [],\r\n        renderer,\r\n        preset;\r\n\r\n    renderer = {\r\n\r\n        /**\r\n         * Loads template by provided path and\r\n         * than converts it's content to html.\r\n         *\r\n         * @param {String} tmplPath - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        render: function (tmplPath) {\r\n            var loadPromise = loader.loadTemplate(tmplPath);\r\n\r\n            return loadPromise.then(renderer.parseTemplate);\r\n        },\r\n\r\n        /**\r\n         * Parses provided string as html content\r\n         * and returns an array of DOM elements.\r\n         *\r\n         * @param {String} html - String to be processed.\r\n         * @returns {Array}\r\n         */\r\n        parseTemplate: function (html) {\r\n            var fragment = document.createDocumentFragment();\r\n\r\n            $(fragment).append(html);\r\n\r\n            return renderer.normalize(fragment);\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes and nodes of provided DOM element.\r\n         *\r\n         * @param {HTMLElement} content - Element to be processed.\r\n         * @returns {Array} An array of content's child nodes.\r\n         */\r\n        normalize: function (content) {\r\n            globals.forEach(function (handler) {\r\n                handler(content);\r\n            });\r\n\r\n            return _.toArray(content.childNodes);\r\n        },\r\n\r\n        /**\r\n         * Adds new global content handler.\r\n         *\r\n         * @param {Function} handler - Function which will be invoked for\r\n         *      an every content passed to 'normalize' method.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addGlobal: function (handler) {\r\n            if (!_.contains(globals, handler)) {\r\n                globals.push(handler);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified global content handler.\r\n         *\r\n         * @param {Function} handler - Handler to be removed.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeGlobal: function (handler) {\r\n            var index = globals.indexOf(handler);\r\n\r\n            if (~index) {\r\n                globals.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addAttribute: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.attribute\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            attributes[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeAttribute: function (id) {\r\n            delete attributes[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addNode: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.node\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            elements[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeNode: function (id) {\r\n            delete elements[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided DOM element is a custom node.\r\n         *\r\n         * @param {HTMLElement} node - Node to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isCustomNode: function (node) {\r\n            return _.some(elements, function (elem) {\r\n                return elem.name.toUpperCase() === node.tagName;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes of a content's child nodes.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processAttributes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(attributes, function (attr) {\r\n                var attrName = attr.name,\r\n                    nodes    = content.querySelectorAll('[' + attrName + ']'),\r\n                    handler  = attr.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute(attrName);\r\n\r\n                    return handler(node, data, attr) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processAttributes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Processes custom nodes of a provided content.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processNodes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(elements, function (element) {\r\n                var nodes   = content.querySelectorAll(element.name),\r\n                    handler = element.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute('args');\r\n\r\n                    return handler(node, data, element) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processNodes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wraps provided string in curly braces if it's necessary.\r\n         *\r\n         * @param {String} args - String to be wrapped.\r\n         * @returns {String} Wrapped string.\r\n         */\r\n        wrapArgs: function (args) {\r\n            if (~args.indexOf('\\\\:')) {\r\n                args = args.replace(colonReg, ':');\r\n            } else if (~args.indexOf(':') && !~args.indexOf('}')) {\r\n                args = '{' + args + '}';\r\n            }\r\n\r\n            return args;\r\n        },\r\n\r\n        /**\r\n         * Wraps child nodes of provided DOM element\r\n         * with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node whose children should be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"><span/></div>\r\n         *      wrapChildren(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <div id=\"example\">\r\n         *      <!-- ko foreach: data -->\r\n         *          <span></span>\r\n         *      <!-- /ko -->\r\n         *      </div>\r\n         */\r\n        wrapChildren: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.prepend(tag.open);\r\n            $node.append(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Wraps specified node with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"></div>\r\n         *      wrapNode(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div id=\"example\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapNode: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.before(tag.open);\r\n            $node.after(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Creates knockouts' comment tag for the provided binding.\r\n         *\r\n         * @param {String} binding - Name of the binding.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @returns {Object} Object with an open and close comment elements.\r\n         */\r\n        createComment: function (binding, data) {\r\n            return {\r\n                open: document.createComment(' ko ' + binding + ': ' + data + ' '),\r\n                close: document.createComment(' /ko ')\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.handlers = {\r\n\r\n        /**\r\n         * Basic node handler. Replaces custom nodes\r\n         * with a corresponding knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data\r\n         * @param {Object} element\r\n         * @returns {Boolean} True\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <with args=\"model\">\r\n         *          <span/>\r\n         *      </with>\r\n         *      =>\r\n         *      <!-- ko with: model-->\r\n         *          <span/>\r\n         *      <!-- /ko -->\r\n         */\r\n        node: function (node, data, element) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, element.binding, data);\r\n            $(node).replaceWith(node.childNodes);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Base attribute handler. Replaces custom attributes with\r\n         * a corresponding knockouts' data binding.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <div text=\"label\"></div>\r\n         *      =>\r\n         *      <div data-bind=\"text: label\"></div>\r\n         */\r\n        attribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.bindings.add(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        },\r\n\r\n        /**\r\n         * Wraps provided node with a knockouts' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node that will be wrapped.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example\r\n         *      <div outereach=\"data\" class=\"test\"></div>\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div class=\"test\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapAttribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        }\r\n    };\r\n\r\n    renderer.bindings = {\r\n\r\n        /**\r\n         * Appends binding string to the current\r\n         * 'data-bind' attribute of provided node.\r\n         *\r\n         * @param {HTMLElement} node - DOM element whose 'data-bind' attribute will be extended.\r\n         * @param {String} name - Name of a binding.\r\n         * @param {String} data - Data associated with the binding.\r\n         */\r\n        add: function (node, name, data) {\r\n            var bindings = this.get(node);\r\n\r\n            if (bindings) {\r\n                bindings += ', ';\r\n            }\r\n\r\n            bindings += name;\r\n\r\n            if (data) {\r\n                bindings += ': ' + data;\r\n            }\r\n\r\n            this.set(node, bindings);\r\n        },\r\n\r\n        /**\r\n         * Extracts value of a 'data-bind' attribute from provided node.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute to be extracted.\r\n         * @returns {String}\r\n         */\r\n        get: function (node) {\r\n            return node.getAttribute('data-bind') || '';\r\n        },\r\n\r\n        /**\r\n         * Sets 'data-bind' attribute of the specified node\r\n         * to the provided value.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute will be altered.\r\n         * @param {String} bindings - New value of 'data-bind' attribute.\r\n         */\r\n        set: function (node, bindings) {\r\n            node.setAttribute('data-bind', bindings);\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addGlobal(renderer.processAttributes)\r\n        .addGlobal(renderer.processNodes);\r\n\r\n    /**\r\n     * Collection of default binding conversions.\r\n     */\r\n    preset = {\r\n        nodes: _.object([\r\n            'if',\r\n            'text',\r\n            'with',\r\n            'scope',\r\n            'ifnot',\r\n            'foreach',\r\n            'component'\r\n        ], Array.prototype),\r\n        attributes: _.object([\r\n            'css',\r\n            'attr',\r\n            'html',\r\n            'with',\r\n            'text',\r\n            'click',\r\n            'event',\r\n            'submit',\r\n            'enable',\r\n            'disable',\r\n            'options',\r\n            'visible',\r\n            'template',\r\n            'hasFocus',\r\n            'textInput',\r\n            'component',\r\n            'uniqueName',\r\n            'optionsText',\r\n            'optionsValue',\r\n            'checkedValue',\r\n            'selectedOptions'\r\n        ], Array.prototype)\r\n    };\r\n\r\n    _.extend(preset.attributes, {\r\n        if: renderer.handlers.wrapAttribute,\r\n        ifnot: renderer.handlers.wrapAttribute,\r\n        innerif: {\r\n            binding: 'if'\r\n        },\r\n        innerifnot: {\r\n            binding: 'ifnot'\r\n        },\r\n        outereach: {\r\n            binding: 'foreach',\r\n            handler: renderer.handlers.wrapAttribute\r\n        },\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n        value: {\r\n            name: 'ko-value'\r\n        },\r\n        style: {\r\n            name: 'ko-style'\r\n        },\r\n        checked: {\r\n            name: 'ko-checked'\r\n        },\r\n        disabled: {\r\n            name: 'ko-disabled',\r\n            binding: 'disable'\r\n        },\r\n        focused: {\r\n            name: 'ko-focused',\r\n            binding: 'hasFocus'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' attrobute handler function. Wraps child elements\r\n         * of a node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'render' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapChildren(node, 'template', data);\r\n            node.removeAttribute('render');\r\n        }\r\n    });\r\n\r\n    _.extend(preset.nodes, {\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' node handler function.\r\n         * Replaces node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'args' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, 'template', data);\r\n            $(node).replaceWith(node.childNodes);\r\n        }\r\n    });\r\n\r\n    _.each(preset.attributes, function (data, id) {\r\n        renderer.addAttribute(id, data);\r\n    });\r\n\r\n    _.each(preset.nodes, function (data, id) {\r\n        renderer.addNode(id, data);\r\n    });\r\n\r\n    return renderer;\r\n});\r\n","Magento_Ui/js/lib/registry/registry.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'es6-collections'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var privateData = new WeakMap();\r\n\r\n    /**\r\n     * Extarcts private items storage associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Object}\r\n     */\r\n    function getItems(container) {\r\n        return privateData.get(container).items;\r\n    }\r\n\r\n    /**\r\n     * Extracts private requests array associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Array}\r\n     */\r\n    function getRequests(container) {\r\n        return privateData.get(container).requests;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function used for convinient access to the elements.\r\n     * See 'async' method for examples of usage and comparison\r\n     * with a regular 'get' method.\r\n     *\r\n     * @param {(String|Object|Function)} name - Key of the requested element.\r\n     * @param {Registry} registry - Instance of a registry\r\n     *      where to search for the element.\r\n     * @param {(Function|String)} [method] - Optional callback function\r\n     *      or a name of the elements' method which\r\n     *      will be invoked when element is available in registry.\r\n     * @returns {*}\r\n     */\r\n    function async(name, registry, method) {\r\n        var args = _.toArray(arguments).slice(3);\r\n\r\n        if (_.isString(method)) {\r\n            registry.get(name, function (component) {\r\n                component[method].apply(component, args);\r\n            });\r\n        } else if (_.isFunction(method)) {\r\n            registry.get(name, method);\r\n        } else if (!args.length) {\r\n            return registry.get(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks that every property of the query object\r\n     * is present and equal to the corresponding\r\n     * property in target object.\r\n     * Note that non-strict comparison is used.\r\n     *\r\n     * @param {Object} query - Query object.\r\n     * @param {Object} target - Target object.\r\n     * @returns {Boolean}\r\n     */\r\n    function compare(query, target) {\r\n        var matches = true,\r\n            index,\r\n            keys,\r\n            key;\r\n\r\n        if (!_.isObject(query) || !_.isObject(target)) {\r\n            return false;\r\n        }\r\n\r\n        keys = Object.getOwnPropertyNames(query);\r\n        index = keys.length;\r\n\r\n        while (matches && index--) {\r\n            key = keys[index];\r\n\r\n            /* eslint-disable eqeqeq */\r\n            if (target[key] != query[key]) {\r\n                matches = false;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     * Explodes incoming string into object if\r\n     * string is defined as a set of key = value pairs.\r\n     *\r\n     * @param {(String|*)} query - String to be processed.\r\n     * @returns {Object|*} Either created object or an unmodified incoming\r\n     *      value if conversion was not possible.\r\n     * @example Sample conversions.\r\n     *      'key = value, key2 = value2'\r\n     *      => {key: 'value', key2: 'value2'}\r\n     */\r\n    function explode(query) {\r\n        var result = {},\r\n            index,\r\n            data;\r\n\r\n        if (typeof query !== 'string' || !~query.indexOf('=')) {\r\n            return query;\r\n        }\r\n\r\n        query = query.split(',');\r\n        index = query.length;\r\n\r\n        while (index--) {\r\n            data = query[index].split('=');\r\n\r\n            result[data[0].trim()] = data[1].trim();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extracts items from the provided data object\r\n     * which matches specified search criteria.\r\n     *\r\n     * @param {Object} data - Data object where to perform a lookup.\r\n     * @param {(String|Object|Function)} query - Seach criteria.\r\n     * @param {Boolean} findAll - Flag that defines whether to\r\n     *      search for all applicable items or to stop on a first found entry.\r\n     * @returns {Array|Object|*}\r\n     */\r\n    function find(data, query, findAll) {\r\n        var iterator,\r\n            item;\r\n\r\n        query = explode(query);\r\n\r\n        if (typeof query === 'string') {\r\n            item = data[query];\r\n\r\n            if (findAll) {\r\n                return item ? [item] : [];\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        iterator = !_.isFunction(query) ?\r\n            compare.bind(null, query) :\r\n            query;\r\n\r\n        return findAll ?\r\n            _.filter(data, iterator) :\r\n            _.find(data, iterator);\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Registry() {\r\n        var data = {\r\n            items: {},\r\n            requests: []\r\n        };\r\n\r\n        this._updateRequests = _.debounce(this._updateRequests.bind(this), 10);\r\n        privateData.set(this, data);\r\n    }\r\n\r\n    Registry.prototype = {\r\n        constructor: Registry,\r\n\r\n        /**\r\n         * Retrieves item from registry which matches specified search criteria.\r\n         *\r\n         * @param {(Object|String|Function|Array)} query - Search condition (see examples).\r\n         * @param {Function} [callback] - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {*}\r\n         *\r\n         * @example Requesting item by it's name.\r\n         *      var obj = {index: 'test', sample: true};\r\n         *\r\n         *      registry.set('first', obj);\r\n         *      registry.get('first') === obj;\r\n         *      => true\r\n         *\r\n         * @example Requesting item with a specific properties.\r\n         *      registry.get('sample = 1, index = test') === obj;\r\n         *      => true\r\n         *      registry.get('sample = 0, index = foo') === obj;\r\n         *      => false\r\n         *\r\n         * @example Declaring search criteria as an object.\r\n         *      registry.get({sample: true}) === obj;\r\n         *      => true;\r\n         *\r\n         * @example Providing custom search handler.\r\n         *      registry.get(function (item) { return item.sample === true; }) === obj;\r\n         *      => true\r\n         *\r\n         * @example Sample asynchronous request declaration.\r\n         *      registry.get('index = test', function (item) {});\r\n         *\r\n         * @example Requesting multiple elements.\r\n         *      registry.set('second', {index: 'test2'});\r\n         *      registry.get(['first', 'second'], function (first, second) {});\r\n         */\r\n        get: function (query, callback) {\r\n            if (typeof callback !== 'function') {\r\n                return find(getItems(this), query);\r\n            }\r\n\r\n            this._addRequest(query, callback);\r\n        },\r\n\r\n        /**\r\n         * Sets provided item to the registry.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @param {*} item - Item's data.\r\n         * returns {Registry} Chainable.\r\n         */\r\n        set: function (id, item) {\r\n            getItems(this)[id] = item;\r\n\r\n            this._updateRequests();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified item from registry.\r\n         * Note that search query is not applicable.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        remove: function (id) {\r\n            delete getItems(this)[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieves a collection of elements that match\r\n         * provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Array} Found elements.\r\n         */\r\n        filter: function (query) {\r\n            return find(getItems(this), query, true);\r\n        },\r\n\r\n        /**\r\n         * Checks that at least one element in collection\r\n         * matches provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Boolean}\r\n         */\r\n        has: function (query) {\r\n            return !!this.get(query);\r\n        },\r\n\r\n        /**\r\n         * Checks that registry contains a provided item.\r\n         *\r\n         * @param {*} item - Item to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        contains: function (item) {\r\n            return _.contains(getItems(this), item);\r\n        },\r\n\r\n        /**\r\n         * Extracts identifier of an item if it's present in registry.\r\n         *\r\n         * @param {*} item - Item whose identifier will be extracted.\r\n         * @returns {String|Undefined}\r\n         */\r\n        indexOf: function (item) {\r\n            return _.findKey(getItems(this), function (elem) {\r\n                return item === elem;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Same as a 'get' method except that it returns\r\n         * a promise object instead of invoking provided callback.\r\n         *\r\n         * @param {(String|Function|Object|Array)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        promise: function (query) {\r\n            var defer    = $.Deferred(),\r\n                callback = defer.resolve.bind(defer);\r\n\r\n            this.get(query, callback);\r\n\r\n            return defer.promise();\r\n        },\r\n\r\n        /**\r\n         * Creates a wrapper function over the provided search query\r\n         * in order to provide somehow more convinient access to the\r\n         * registrie's items.\r\n         *\r\n         * @param {(String|Object|Function)} query - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Function}\r\n         *\r\n         * @example Comparison with a 'get' method on retrieving items.\r\n         *      var module = registry.async('name');\r\n         *\r\n         *      module();\r\n         *      => registry.get('name');\r\n         *\r\n         * @example Asynchronous request.\r\n         *      module(function (component) {});\r\n         *      => registry.get('name', function (component) {});\r\n         *\r\n         * @example Requesting item and invoking it's method with specified parameters.\r\n         *      module('trigger', true);\r\n         *      => registry.get('name', function (component) {\r\n         *          component.trigger(true);\r\n         *      });\r\n         */\r\n        async: function (query) {\r\n            return async.bind(null, query, this);\r\n        },\r\n\r\n        /**\r\n         * Creates new instance of a Registry.\r\n         *\r\n         * @returns {Registry} New instance.\r\n         */\r\n        create: function () {\r\n            return new Registry;\r\n        },\r\n\r\n        /**\r\n         * Adds new request to the queue or resolves it immediately\r\n         * if all of the required items are available.\r\n         *\r\n         * @private\r\n         * @param {(Object|String|Function|Array)} queries - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @param {Function} callback - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {Registry}\r\n         */\r\n        _addRequest: function (queries, callback) {\r\n            var request;\r\n\r\n            if (!Array.isArray(queries)) {\r\n                queries = queries ? [queries] : [];\r\n            }\r\n\r\n            request = {\r\n                queries: queries.map(explode),\r\n                callback: callback\r\n            };\r\n\r\n            this._canResolve(request) ?\r\n                this._resolveRequest(request) :\r\n                getRequests(this).push(request);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates requests list resolving applicable items.\r\n         *\r\n         * @private\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _updateRequests: function () {\r\n            getRequests(this)\r\n                .filter(this._canResolve, this)\r\n                .forEach(this._resolveRequest, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resolves provided request invoking it's callback\r\n         * with items specified in query parameters.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _resolveRequest: function (request) {\r\n            var requests = getRequests(this),\r\n                items    = request.queries.map(this.get, this),\r\n                index    = requests.indexOf(request);\r\n\r\n            request.callback.apply(null, items);\r\n\r\n            if (~index) {\r\n                requests.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided request can be resolved.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Boolean}\r\n         */\r\n        _canResolve: function (request) {\r\n            var queries = request.queries;\r\n\r\n            return queries.every(this.has, this);\r\n        }\r\n    };\r\n\r\n    return new Registry;\r\n});\r\n","Magento_Ui/js/lib/validation/rules.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './utils',\r\n    'moment',\r\n    'jquery/validate',\r\n    'jquery/ui',\r\n    'mage/translate'\r\n], function ($, _, utils, moment) {\r\n    'use strict';\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = \"0123456789\",\r\n            w = \"\", i, j, k, m, c, a, x;\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n            if (v.indexOf(x, 0) != -1)\r\n                w += x;\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n        return (c % 10 === 0);\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    return _.mapObject({\r\n        \"min_text_length\": [\r\n            function (value, params) {\r\n                return _.isUndefined(value) || value.length === 0 || value.length >= +params;\r\n            },\r\n            $.mage.__('Please enter more or equal than {0} symbols.')\r\n        ],\r\n        \"max_text_length\": [\r\n            function (value, params) {\r\n                return !_.isUndefined(value) && value.length <= +params;\r\n            },\r\n            $.mage.__('Please enter less or equal than {0} symbols.')\r\n        ],\r\n        \"max-words\": [\r\n            function(value, params) {\r\n                return utils.stripHtml(value).match(/\\b\\w+\\b/g).length < params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        \"min-words\": [\r\n            function(value, params) {\r\n                return utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        \"range-words\": [\r\n            function(value, params) {\r\n                return utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params[0] &&\r\n                    value.match(/bw+b/g).length < params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        \"letters-with-basic-punc\": [\r\n            function(value) {\r\n                return /^[a-z\\-.,()\\u0027\\u0022\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        \"alphanumeric\": [\r\n            function(value) {\r\n                return /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        \"letters-only\": [\r\n            function(value) {\r\n                return /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        \"no-whitespace\": [\r\n            function(value) {\r\n                return /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        \"zip-range\": [\r\n            function(value) {\r\n                return /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        \"integer\": [\r\n            function(value) {\r\n                return /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        \"vinUS\": [\r\n            function(value) {\r\n                if (value.length !== 17) {\r\n                    return false;\r\n                }\r\n                var i, n, d, f, cd, cdv;\r\n                var LL = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n                var VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9];\r\n                var FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];\r\n                var rs = 0;\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = value.slice(i, i + 1);\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {\r\n                            if (d.toUpperCase() === LL[n]) {\r\n                                d = VL[n];\r\n                                d *= f;\r\n                                if (isNaN(cdv) && n === 8) {\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n                cd = rs % 11;\r\n                if (cd === 10) {\r\n                    cd = \"X\";\r\n                }\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        \"dateITA\": [\r\n            function(value) {\r\n                var check = false;\r\n                var re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\r\n                if (re.test(value)) {\r\n                    var adata = value.split('/');\r\n                    var gg = parseInt(adata[0], 10);\r\n                    var mm = parseInt(adata[1], 10);\r\n                    var aaaa = parseInt(adata[2], 10);\r\n                    var xdata = new Date(aaaa, mm - 1, gg);\r\n                    if ((xdata.getFullYear() === aaaa) &&\r\n                        (xdata.getMonth() === mm - 1) && (xdata.getDate() === gg )) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n                return check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        \"dateNL\": [\r\n            function(value) {\r\n                return /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            $.mage.__('Vul hier een geldige datum in.')\r\n        ],\r\n        \"time\": [\r\n            function(value) {\r\n                return /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        \"time12h\": [\r\n            function(value) {\r\n                return /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\ [AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        \"phoneUS\": [\r\n            function(value) {\r\n                value = value.replace(/\\s+/g, \"\");\r\n                return value.length > 9 && value.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        \"phoneUK\": [\r\n            function(value) {\r\n                return value.length > 9 && value.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        \"mobileUK\": [\r\n            function(value) {\r\n                return value.length > 9 && value.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        \"stripped-min-length\": [\r\n            function(value, param) {\r\n                return $(value).text().length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n        \"email2\": [\r\n            function(value) {\r\n                return /^((([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\u0022)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\u0022)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        \"url2\": [\r\n            function(value) {\r\n                return /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n        \"credit-card-types\": [\r\n            function(value, param) {\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, \"\");\r\n\r\n                var validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        \"ipv4\": [\r\n            function(value) {\r\n                return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        \"ipv6\": [\r\n            function(value) {\r\n                return /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n        \"pattern\": [\r\n            function(value, param) {\r\n                return new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        \"validate-no-html-tags\": [\r\n            function(value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        \"validate-select\": [\r\n            function(value) {\r\n                return ((value !== \"none\") && (value != null) && (value.length !== 0));\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        \"validate-no-empty\": [\r\n            function(value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        \"validate-alphanum-with-spaces\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9 ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        \"validate-data\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')\r\n        ],\r\n        \"validate-street\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        \"validate-phoneStrict\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        \"validate-phoneLax\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        \"validate-fax\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        \"validate-email\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        \"validate-emailSender\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[\\S ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        \"validate-password\": [\r\n            function(value) {\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n                /*strip leading and trailing spaces*/\r\n                var pass = $.trim(value);\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        \"validate-admin-password\": [\r\n            function(value) {\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n                var pass = $.trim(value);\r\n                /*strip leading and trailing spaces*/\r\n                if (0 === pass.length) {\r\n                    return true;\r\n                }\r\n                if (!(/[a-z]/i.test(value)) || !(/[0-9]/.test(value))) {\r\n                    return false;\r\n                }\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        \"validate-customer-password\": [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    length = 0,\r\n                    counter = 0;\r\n                var passwordMinLength = $(elm).data('password-min-length');\r\n                var passwordMinCharacterSets = $(elm).data('password-min-character-sets');\r\n                var pass = $.trim(v);\r\n                var result = pass.length >= passwordMinLength;\r\n                if (result == false) {\r\n                    /*eslint-disable max-len*/\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength);\r\n\r\n                    /*eslint-enable max-len*/\r\n                    return result;\r\n                }\r\n                if (pass.match(/\\d+/)) {\r\n                    counter ++;\r\n                }\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter ++;\r\n                }\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter ++;\r\n                }\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter ++;\r\n                }\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n\r\n                    /*eslint-disable max-len*/\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets);\r\n\r\n                    /*eslint-enable max-len*/\r\n                }\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        \"validate-url\": [\r\n            function(value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = (value || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        \"validate-clean-url\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        \"validate-xml-identifier\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        \"validate-ssn\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        \"validate-zip-us\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        \"validate-date-au\": [\r\n            function(value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                var regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\r\n                if (utils.isEmpty(value) || !regex.test(value)) {\r\n                    return false;\r\n                }\r\n                var d = new Date(value.replace(regex, '$2/$1/$3'));\r\n                return parseInt(RegExp.$2, 10) === (1 + d.getMonth()) &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        \"validate-currency-dollar\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        \"validate-not-negative-number\": [\r\n            function(value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n                return !isNaN(value) && value >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        \"validate-zero-or-greater\": [\r\n            function(value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n                return !isNaN(value) && value >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        \"validate-greater-than-zero\": [\r\n            function(value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = utils.parseNumber(value);\r\n                return !isNaN(value) && value > 0;\r\n            },\r\n            $.mage.__('Please enter a number greater than 0 in this field.')\r\n        ],\r\n        \"validate-css-length\": [\r\n            function(value) {\r\n                if (value !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(value);\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        /** @description Additional methods */\r\n        \"validate-number\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || (!isNaN(utils.parseNumber(value)) && /^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(value));\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        \"validate-integer\": [\r\n            function(value) {\r\n                return (\r\n                     utils.isEmptyNoTrim(value)\r\n                      || (!isNaN(utils.parseNumber(value)) && /^\\s*-?\\d*\\s*$/.test(value))\r\n               );\r\n             },\r\n            $.mage.__('Please enter a valid integer in this field.')\r\n         ],\r\n        \"validate-number-range\": [\r\n            function(value, param) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                var numValue = utils.parseNumber(value);\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                var dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/,\r\n                    result = true,\r\n                    range, m;\r\n\r\n                range = param;\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        \"validate-digits\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || !/[^\\d]/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        \"validate-digits-range\": [\r\n            function(value, param) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                var numValue = utils.parseNumber(value);\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                var dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/,\r\n                    result = true,\r\n                    range, m;\r\n                range = param;\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-range': [\r\n            function(value) {\r\n                var minValue, maxValue;\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](value)) {\r\n                    minValue = maxValue = utils.parseNumber(value);\r\n                } else {\r\n                    var ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(value);\r\n\r\n                    if (ranges) {\r\n                        minValue = utils.parseNumber(ranges[1]);\r\n                        maxValue = utils.parseNumber(ranges[2]);\r\n                        if (minValue > maxValue) {\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        \"validate-alpha\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        \"validate-code\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z]+[a-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')\r\n        ],\r\n        \"validate-alphanum\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.')\r\n        ],\r\n        \"validate-date\": [\r\n            function(value) {\r\n                var test = new Date(value);\r\n                return utils.isEmptyNoTrim(value) || !isNaN(test);\r\n            },$.mage.__('Please enter a valid date.')\r\n\r\n        ],\r\n        \"validate-identifier\": [\r\n            function(value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").')\r\n        ],\r\n        \"validate-zip-international\": [\r\n            /*function(v) {\r\n             // @TODO: Cleanup\r\n             return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n             }*/\r\n            function() {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        \"validate-state\": [\r\n            function(value) {\r\n                return (value !== 0 || value === '');\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        \"less-than-equals-to\": [\r\n            function(value, params) {\r\n                if ($.isNumeric(params) && $.isNumeric(value)) {\r\n                    return parseFloat(value) <= parseFloat(params);\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a value less than or equal to {0}.')\r\n        ],\r\n        \"greater-than-equals-to\": [\r\n            function(value, params) {\r\n                if ($.isNumeric(params) && $.isNumeric(value)) {\r\n                    return parseFloat(value) >= parseFloat(params);\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a value greater than or equal to {0}.')\r\n        ],\r\n        \"validate-emails\": [\r\n            function(value) {\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                var valid_regexp = /^[a-z0-9\\._-]{1,30}@([a-z0-9_-]{1,30}\\.){1,5}[a-z]{2,4}$/i,\r\n                    emails = value.split(/[\\s\\n\\,]+/g);\r\n                for (var i = 0; i < emails.length; i++) {\r\n                    if (!valid_regexp.test(emails[i].strip())) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.')\r\n        ],\r\n        \"validate-cc-number\": [\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             * @param value - credit card number\r\n             * @return {boolean}\r\n             */\r\n                function(value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n                return false;\r\n            }, $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        \"validate-cc-ukss\": [\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled\r\n             * @param value - input field value\r\n             * @return {*}\r\n             */\r\n                function(value) {\r\n                return value;\r\n            }, $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n        'required-entry': [\r\n            function(value) {\r\n                return !utils.isEmpty(value);\r\n            }, $.mage.__('This is a required field.')\r\n        ],\r\n        'checked': [\r\n            function(value) {\r\n                return value;\r\n            }, $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function(value) {\r\n                if (value.length)\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n                else\r\n                    return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function(value) {\r\n                var isValid = !utils.isEmpty(value);\r\n                var values = value.split(',');\r\n                for (var i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-new-password': [\r\n            function(value) {\r\n\r\n                if ($.validator.methods['validate-password'] &&\r\n                    !$.validator.methods['validate-password'](value)) {\r\n                    return false;\r\n                }\r\n                if (utils.isEmpty(value) && value !== '') {\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, params) {\r\n                // obtain values for validation\r\n                var qty = utils.parseNumber(value);\r\n\r\n                // validate quantity\r\n                var isMinAllowedValid = typeof params.minAllowed === 'undefined' || (qty >= utils.parseNumber(params.minAllowed));\r\n                var isMaxAllowedValid = typeof params.maxAllowed === 'undefined'  || (qty <= utils.parseNumber(params.maxAllowed));\r\n                var isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined'  || (qty % utils.parseNumber(params.qtyIncrements) === 0);\r\n\r\n                return isMaxAllowedValid && isMinAllowedValid && isQtyIncrementsValid && qty > 0;\r\n            },\r\n            ''\r\n        ],\r\n        'equalTo': [\r\n            function (value, param) {\r\n                return value === $(param).val();\r\n            },\r\n            $.validator.messages.equalTo\r\n        ],\r\n        'validate-file-type': [\r\n            function (name, types) {\r\n                var extension = name.split('.').pop().toLowerCase();\r\n\r\n                if (types && typeof types === 'string') {\r\n                    types = types.split(' ');\r\n                }\r\n\r\n                return !types || !types.length || ~types.indexOf(extension);\r\n            },\r\n            $.mage.__('We don\\'t recognize or support this file extension type.')\r\n        ],\r\n        'validate-max-size': [\r\n            function (size, maxSize) {\r\n                return maxSize === false || size < maxSize;\r\n            },\r\n            $.mage.__('File you are trying to upload exceeds maximum file size limit.')\r\n        ],\r\n        'validate-if-tag-script-exist': [\r\n            function (value) {\r\n                return !value || (/<script\\b[^>]*>([\\s\\S]*?)<\\/script>$/ig).test(value);\r\n            },\r\n            $.mage.__('Please use tag SCRIPT with SRC attribute or with proper content to include JavaScript to the document.')\r\n        ],\r\n        'date_range_min': [\r\n            function (value, minValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() >= minValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'date_range_max': [\r\n            function (value, maxValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() <= maxValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ]\r\n    }, function (data) {\r\n        return {\r\n            handler: data[0],\r\n            message: data[1]\r\n        };\r\n    });\r\n});\r\n","Magento_Ui/js/lib/validation/utils.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var utils = {\r\n        /**\r\n         * Check if string is empty with trim\r\n         * @param {string}\r\n            */\r\n        isEmpty: function(value) {\r\n            return (value === '' || (value == null) || (value.length === 0) || /^\\s+$/.test(value));\r\n        },\r\n\r\n        /**\r\n         * Check if string is empty no trim\r\n         * @param {string}\r\n            */\r\n        isEmptyNoTrim: function(value) {\r\n            return (value === '' || (value == null) || (value.length === 0));\r\n        },\r\n\r\n\r\n        /**\r\n         * Checks if {value} is between numbers {from} and {to}\r\n         * @param {string} value\r\n         * @param {string} from\r\n         * @param {string} to\r\n         * @returns {boolean}\r\n         */\r\n        isBetween: function(value, from, to){\r\n            return (from === null || from === '' || value >= utils.parseNumber(from)) &&\r\n                   (to === null || to === '' || value <= utils.parseNumber(to));\r\n        },\r\n\r\n        /**\r\n         * Parse price string\r\n         * @param {string}\r\n            */\r\n        parseNumber: function(value) {\r\n            if (typeof value !== 'string') {\r\n                return parseFloat(value);\r\n            }\r\n            var isDot = value.indexOf('.');\r\n            var isComa = value.indexOf(',');\r\n            if (isDot !== -1 && isComa !== -1) {\r\n                if (isComa > isDot) {\r\n                    value = value.replace('.', '').replace(',', '.');\r\n                } else {\r\n                    value = value.replace(',', '');\r\n                }\r\n            } else if (isComa !== -1) {\r\n                value = value.replace(',', '.');\r\n            }\r\n            return parseFloat(value);\r\n        },\r\n\r\n        /**\r\n         * Removes HTML tags and space characters, numbers and punctuation.\r\n         * @param value Value being stripped.\r\n         * @return {*}\r\n         */\r\n        stripHtml: function(value) {\r\n            return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n        }\r\n    }\r\n\r\n    return utils;\r\n});\r\n","Magento_Ui/js/lib/validation/validator.js":"/*\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    './rules'\r\n], function (_, rulesList) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Validates provided value be the specified rule.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @param {*} value - Value to be checked.\r\n     * @param {*} [params]\r\n     * @param {*} additionalParams - additional validation params set by method caller\r\n     * @returns {Object}\r\n     */\r\n    function validate(id, value, params, additionalParams) {\r\n        var rule,\r\n            message,\r\n            valid,\r\n            result = {\r\n                rule: id,\r\n                passed: true,\r\n                message: ''\r\n            };\r\n\r\n        if (!rulesList[id]) {\r\n            return result;\r\n        }\r\n\r\n        rule    = rulesList[id];\r\n        message = rule.message;\r\n        valid   = rule.handler(value, params, additionalParams);\r\n\r\n        if (!valid) {\r\n            params = Array.isArray(params) ?\r\n                params :\r\n                [params];\r\n\r\n            message = params.reduce(function (msg, param, idx) {\r\n                return msg.replace(new RegExp('\\\\{' + idx + '\\\\}', 'g'), param);\r\n            }, message);\r\n\r\n            result.passed = false;\r\n            result.message = message;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Validates provied value by a specfied set of rules.\r\n     *\r\n     * @param {(String|Object)} rules - One or many validation rules.\r\n     * @param {*} value - Value to be checked.\r\n     * @param {*} additionalParams - additional validation params set by method caller\r\n     * @returns {Object}\r\n     */\r\n    function validator(rules, value, additionalParams) {\r\n        var result;\r\n\r\n        if (typeof rules === 'object') {\r\n            result = {\r\n                passed: true\r\n            };\r\n\r\n            _.every(rules, function (ruleParams, id) {\r\n                if (ruleParams !== false || additionalParams) {\r\n                    result = validate(id, value, ruleParams, additionalParams);\r\n\r\n                    return result.passed;\r\n                }\r\n\r\n                return true;\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        return validate.apply(null, arguments);\r\n    }\r\n\r\n    /**\r\n     * Adds new validation rule.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @param {Function} handler - Validation function.\r\n     * @param {String} message - Error message.\r\n     */\r\n    validator.addRule = function (id, handler, message) {\r\n        rulesList[id] = {\r\n            handler: handler,\r\n            message: message\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Returns rule object found by provided identifier.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @returns {Object}\r\n     */\r\n    validator.getRule = function (id) {\r\n        return rulesList[id];\r\n    };\r\n\r\n    return validator;\r\n});\r\n","Magento_Ui/js/lib/view/utils/async.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry',\r\n    './dom-observer',\r\n    'Magento_Ui/js/lib/knockout/extender/bound-nodes',\r\n    './bindings'\r\n], function (ko, $, _, registry, domObserver, boundedNodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Parses provided string and extracts\r\n     * component, context and selector data from it.\r\n     *\r\n     * @param {String} str - String to be processed.\r\n     * @returns {Object} Data retrieved from string.\r\n     *\r\n     * @example Sample format.\r\n     *      '{{component}}:{{ctx}} -> {{selector}}'\r\n     *\r\n     *      component - Name of component.\r\n     *      ctx - Selector of the root node upon which component is binded.\r\n     *      selector - Selector of DOM elements located\r\n     *          inside of a previously specified context.\r\n     */\r\n    function parseSelector(str) {\r\n        var data    = str.trim().split('->'),\r\n            result  = {},\r\n            componentData;\r\n\r\n        if (data.length === 1) {\r\n            if (!~data[0].indexOf(':')) {\r\n                result.selector = data[0];\r\n            } else {\r\n                componentData = data[0];\r\n            }\r\n        } else {\r\n            componentData   = data[0];\r\n            result.selector = data[1];\r\n        }\r\n\r\n        if (componentData) {\r\n            componentData = componentData.split(':');\r\n\r\n            result.component = componentData[0];\r\n            result.ctx = componentData[1];\r\n        }\r\n\r\n        _.each(result, function (value, key) {\r\n            result[key] = value.trim();\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Internal method used to normalize argumnets passed\r\n     * to 'async' module methods.\r\n     *\r\n     * @param {(String|Objetc)} selector\r\n     * @param {(HTMLElement|Object|String)} [ctx]\r\n     * @returns {Object}\r\n     */\r\n    function parseData(selector, ctx) {\r\n        var data = {};\r\n\r\n        if (arguments.length === 2) {\r\n            data.selector = selector;\r\n\r\n            if (isDomElement(ctx)) {\r\n                data.ctx = ctx;\r\n            } else {\r\n                data.component = ctx;\r\n                data.ctx = '*';\r\n            }\r\n        } else {\r\n            data = _.isString(selector) ?\r\n                parseSelector(selector) :\r\n                selector;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Creates promise that will be resolved\r\n     * when requested component is registred.\r\n     *\r\n     * @param {String} name - Name of component.\r\n     * @returns {jQueryPromise}\r\n     */\r\n    function waitComponent(name) {\r\n        var deffer = $.Deferred();\r\n\r\n        if (_.isString(name)) {\r\n            registry.get(name, function (component) {\r\n                deffer.resolve(component);\r\n            });\r\n        } else {\r\n            deffer.resolve(name);\r\n        }\r\n\r\n        return deffer.promise();\r\n    }\r\n\r\n    /**\r\n     * Creates listener for the nodes binded to provided component.\r\n     *\r\n     * @param {Object} data - Listener data.\r\n     * @param {Object} component - Associated with nodes component.\r\n     */\r\n    function setRootListener(data, component) {\r\n        boundedNodes.get(component, function (root) {\r\n            if (!$(root).is(data.ctx || '*')) {\r\n                return;\r\n            }\r\n\r\n            data.selector ?\r\n                domObserver.get(data.selector, data.fn, root) :\r\n                data.fn(root);\r\n        });\r\n    }\r\n\r\n    /*eslint-disable no-unused-vars*/\r\n    /**\r\n     * Sets listener for the appearance of elements which\r\n     * matches specified selector data.\r\n     *\r\n     * @param {(String|Object)} selector - Valid css selector or a string\r\n     *      in format acceptable by 'parseSelector' method or an object with\r\n     *      'component', 'selector' and 'ctx' properties.\r\n     * @param {(HTMLElement|Object|String)} [ctx] - Optional context parameter\r\n     *      which might be a DOM element, component instance or components' name.\r\n     * @param {Function} fn - Callback that will be invoked\r\n     *      when required DOM element appears.\r\n     *\r\n     * @example\r\n     *      Creating listener of the 'span' nodes appearance,\r\n     *      located inside of 'div' nodes, which are binded to 'cms_page_listing' component:\r\n     *\r\n     *      $.async('cms_page_listing:div -> span', function (node) {});\r\n     *\r\n     * @example Another syntaxes of the previous example.\r\n     *      $.async({\r\n     *          component: 'cms_page_listing',\r\n     *          ctx: 'div',\r\n     *          selector: 'span'\r\n     *       }, function (node) {});\r\n     *\r\n     * @example Listens for appearance of any child node inside of specified component.\r\n     *      $.async('> *', 'cms_page_lsiting', function (node) {});\r\n     *\r\n     * @example Listens for appearance of 'span' nodes inside of specific context.\r\n     *      $.async('span', document.getElementById('test'), function (node) {});\r\n     */\r\n    $.async = function (selector, ctx, fn) {\r\n        var args = _.toArray(arguments),\r\n            data = parseData.apply(null, _.initial(args));\r\n\r\n        data.fn = _.last(args);\r\n\r\n        if (data.component) {\r\n            waitComponent(data.component)\r\n                .then(setRootListener.bind(null, data));\r\n        } else {\r\n            domObserver.get(data.selector, data.fn, data.ctx);\r\n        }\r\n    };\r\n\r\n    /*eslint-enable no-unused-vars*/\r\n\r\n    _.extend($.async, {\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Returns collection of elements found by provided selector data.\r\n         *\r\n         * @param {(String|Object)} selector - See 'async' definition.\r\n         * @param {(HTMLElement|Object|String)} [ctx] - See 'async' definition.\r\n         * @returns {Array} An array of DOM elements.\r\n         */\r\n        get: function (selector, ctx) {\r\n            var data        = parseData.apply(null, arguments),\r\n                component   = data.component,\r\n                nodes;\r\n\r\n            if (!component) {\r\n                return $(data.selector, data.ctx).toArray();\r\n            } else if (_.isString(component)) {\r\n                component = registry.get(component);\r\n            }\r\n\r\n            if (!component) {\r\n                return [];\r\n            }\r\n\r\n            nodes = boundedNodes.get(component);\r\n            nodes = $(nodes).filter(data.ctx).toArray();\r\n\r\n            return data.selector ?\r\n                $(data.selector, nodes).toArray() :\r\n                nodes;\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n\r\n        /**\r\n         * Sets removal listener of the specified nodes.\r\n         *\r\n         * @param {(HTMLElement|Array|ArrayLike)} nodes - Nodes whose removal to track.\r\n         * @param {Function} fn - Callback that will be invoked when node is removed.\r\n         */\r\n        remove: function (nodes, fn) {\r\n            domObserver.remove(nodes, fn);\r\n        },\r\n\r\n        parseSelector: parseSelector\r\n    });\r\n\r\n    return $;\r\n});\r\n","Magento_Ui/js/lib/view/utils/bindings.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore'\r\n], function (ko, $, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided  value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Removes from the provided array all non-root nodes located inside\r\n     * of the comment element as long as the closing comment tags.\r\n     *\r\n     * @param {(Array|ArrayLike)} nodes - An array of nodes to be processed.\r\n     * @returns {Array}\r\n     */\r\n    function normalize(nodes) {\r\n        var result;\r\n\r\n        nodes   = _.toArray(nodes);\r\n        result  = nodes.slice();\r\n\r\n        nodes.forEach(function (node) {\r\n            if (node.nodeType === 8) {\r\n                result = !ko.virtualElements.hasBindingValue(node) ?\r\n                    _.without(result, node) :\r\n                    _.difference(result, ko.virtualElements.childNodes(node));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extends binding context of each item in the collection.\r\n     *\r\n     * @param {...Object} extenders - Multiple extender objects to be applied to the context.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.extendCtx = function () {\r\n        var nodes       = normalize(this),\r\n            extenders   = _.toArray(arguments);\r\n\r\n        nodes.forEach(function (node) {\r\n            var ctx  = ko.contextFor(node),\r\n                data = [ctx].concat(extenders);\r\n\r\n            _.extend.apply(_, data);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Evaluates bindings specified in each DOM element of collection.\r\n     *\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.applyBindings = function (ctx) {\r\n        var nodes = normalize(this),\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            ko.applyBindings(nodeCtx, node);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Adds specfied bindings to each DOM elemenet in\r\n     * collection and evalutes them with provided context.\r\n     *\r\n     * @param {(Object|Function)} data - Either bindings object or a function\r\n     *      which returns bindings data for each element in collection.\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.bindings = function (data, ctx) {\r\n        var nodes    = normalize(this),\r\n            bindings = data,\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            if (_.isFunction(data)) {\r\n                bindings = data(nodeCtx, node);\r\n            }\r\n\r\n            ko.applyBindingsToNode(node, bindings, nodeCtx);\r\n        });\r\n\r\n        return this;\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/dom-observer.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'MutationObserver',\r\n    'domReady!'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var counter = 1,\r\n        watchers,\r\n        globalObserver;\r\n\r\n    watchers = {\r\n        selectors: {},\r\n        nodes: {}\r\n    };\r\n\r\n    /**\r\n     * Checks if node represents an element node (nodeType === 1).\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Boolean}\r\n     */\r\n    function isElementNode(node) {\r\n        return node.nodeType === 1;\r\n    }\r\n\r\n    /**\r\n     * Extracts all child descendant\r\n     * elements of a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Array}\r\n     */\r\n    function extractChildren(node) {\r\n        var children = node.querySelectorAll('*');\r\n\r\n        return _.toArray(children);\r\n    }\r\n\r\n    /**\r\n     * Extracts node identifier. If ID is not specified,\r\n     * then it will be created for the provided node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Number}\r\n     */\r\n    function getNodeId(node) {\r\n        var id = node._observeId;\r\n\r\n        if (!id) {\r\n            id = node._observeId = counter++;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Invokes callback passing node to it.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function trigger(node, data) {\r\n        var id = getNodeId(node),\r\n            ids = data.invoked;\r\n\r\n        if (_.contains(ids, id)) {\r\n            return;\r\n        }\r\n\r\n        data.callback(node);\r\n        data.invoked.push(id);\r\n    }\r\n\r\n    /**\r\n     * Adds node to the observer list.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object}\r\n     */\r\n    function createNodeData(node) {\r\n        var nodes   = watchers.nodes,\r\n            id      = getNodeId(node);\r\n\r\n        nodes[id] = nodes[id] || {};\r\n\r\n        return nodes[id];\r\n    }\r\n\r\n    /**\r\n     * Returns data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object|Undefined}\r\n     */\r\n    function getNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        return watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Removes data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        delete watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Adds removal listener for a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function addRemovalListener(node, data) {\r\n        var nodeData = createNodeData(node);\r\n\r\n        (nodeData.remove = nodeData.remove || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Adds listener for the nodes which matches specified selector.\r\n     *\r\n     * @param {String} selector - CSS selector.\r\n     * @param {Object} data\r\n     */\r\n    function addSelectorListener(selector, data) {\r\n        var storage = watchers.selectors;\r\n\r\n        (storage[selector] = storage[selector] || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Calls handlers assocoiated with an added node.\r\n     * Adds listeners for the node removal.\r\n     *\r\n     * @param {HTMLElement} node - Added node.\r\n     */\r\n    function processAdded(node) {\r\n        _.each(watchers.selectors, function (listeners, selector) {\r\n            listeners.forEach(function (data) {\r\n                if (!data.ctx.contains(node) || !$(node, data.ctx).is(selector)) {\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'add') {\r\n                    trigger(node, data);\r\n                } else if (data.type === 'remove') {\r\n                    addRemovalListener(node, data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls handlers assocoiated with a removed node.\r\n     *\r\n     * @param {HTMLElement} node - Removed node.\r\n     */\r\n    function processRemoved(node) {\r\n        var nodeData    = getNodeData(node),\r\n            listeners   = nodeData && nodeData.remove;\r\n\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n\r\n        listeners.forEach(function (data) {\r\n            trigger(node, data);\r\n        });\r\n\r\n        removeNodeData(node);\r\n    }\r\n\r\n    /**\r\n     * Removes all non-element nodes from provided array\r\n     * and appends to it descendant elements.\r\n     *\r\n     * @param {Array} nodes\r\n     * @returns {Array}\r\n     */\r\n    function formNodesList(nodes) {\r\n        var result = [],\r\n            children;\r\n\r\n        nodes = _.toArray(nodes).filter(isElementNode);\r\n\r\n        nodes.forEach(function (node) {\r\n            result.push(node);\r\n\r\n            children = extractChildren(node);\r\n            result   = result.concat(children);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Collects all removed and added nodes from\r\n     * mutation records into separate arrays\r\n     * while removing duplicates between both types of changes.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Object} Object with 'removed' and 'added' nodes arrays.\r\n     */\r\n    function formChangesLists(mutations) {\r\n        var removed = [],\r\n            added = [];\r\n\r\n        mutations.forEach(function (record) {\r\n            removed = removed.concat(_.toArray(record.removedNodes));\r\n            added   = added.concat(_.toArray(record.addedNodes));\r\n        });\r\n\r\n        removed = removed.filter(function (node) {\r\n            var addIndex = added.indexOf(node),\r\n                wasAdded = !!~addIndex;\r\n\r\n            if (wasAdded) {\r\n                added.splice(addIndex, 1);\r\n            }\r\n\r\n            return !wasAdded;\r\n        });\r\n\r\n        return {\r\n            removed: formNodesList(removed),\r\n            added: formNodesList(added)\r\n        };\r\n    }\r\n\r\n    globalObserver = new MutationObserver(function (mutations) {\r\n        var changes = formChangesLists(mutations);\r\n\r\n        changes.removed.forEach(processRemoved);\r\n        changes.added.forEach(processAdded);\r\n    });\r\n\r\n    globalObserver.observe(document.body, {\r\n        subtree: true,\r\n        childList: true\r\n    });\r\n\r\n    return {\r\n\r\n        /**\r\n         * Adds listener for the appearance of nodes that matches provided\r\n         * selector and which are inside of the provided context. Callback will be\r\n         * also invoked on elements which a currently present.\r\n         *\r\n         * @param {String} selector - CSS selector.\r\n         * @param {Function} callback - Function that will invoked when node appears.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        get: function (selector, callback, ctx) {\r\n            var data,\r\n                nodes;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'add',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            nodes = $(selector, data.ctx).toArray();\r\n\r\n            nodes.forEach(function (node) {\r\n                trigger(node, data);\r\n            });\r\n\r\n            addSelectorListener(selector, data);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the nodes removal.\r\n         *\r\n         * @param {(jQueryObject|HTMLElement|Array|String)} selector\r\n         * @param {Function} callback - Function that will invoked when node is removed.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        remove: function (selector, callback, ctx) {\r\n            var nodes = [],\r\n                data;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'remove',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            if (typeof selector === 'object') {\r\n                nodes = !_.isUndefined(selector.length) ?\r\n                    _.toArray(selector) :\r\n                    [selector];\r\n            } else if (_.isString(selector)) {\r\n                nodes = $(selector, ctx).toArray();\r\n\r\n                addSelectorListener(selector, data);\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                addRemovalListener(node, data);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Removes listeners.\r\n         *\r\n         * @param {String} selector\r\n         * @param {Function} [fn]\r\n         */\r\n        off: function (selector, fn) {\r\n            var selectors = watchers.selectors,\r\n                listeners = selectors[selector];\r\n\r\n            if (selector && !fn) {\r\n                delete selectors[selector];\r\n            } else if (listeners && fn) {\r\n                selectors[selector] = listeners.filter(function (data) {\r\n                    return data.callback !== fn;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/raf.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'es6-collections'\r\n], function () {\r\n    'use strict';\r\n\r\n    var processMap = new WeakMap(),\r\n        origRaf,\r\n        raf;\r\n\r\n    origRaf = window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.onRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function (callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n\r\n    /**\r\n     * Creates new process object or extracts the\r\n     * the existing one.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Object}\r\n     */\r\n    function getProcess(id, fps) {\r\n        var process = processMap.get(id);\r\n\r\n        if (!process) {\r\n            process = {};\r\n            processMap.set(id, process);\r\n        }\r\n\r\n        if (process.fps !== fps) {\r\n            process.fps        = fps;\r\n            process.interval   = 1000 / fps;\r\n            process.update     = Date.now();\r\n        }\r\n\r\n        return process;\r\n    }\r\n\r\n    /**\r\n     * Proxy method which delegates call to the 'requestAnimationFrame'\r\n     * function and optionally can keep track of the FPS with which\r\n     * provided function is called.\r\n     *\r\n     * @param {Function} callback - Callback function to be passed to 'requestAnimationFrame'.\r\n     * @param {Number} [fps] - If specified, will update FPS counter for the provided function.\r\n     * @returns {Number|Boolean} ID of request or a flag which indicates\r\n     *      whether callback fits specified FPS.\r\n     */\r\n    raf = function (callback, fps) {\r\n        var rafId = origRaf(callback);\r\n\r\n        return fps ? raf.tick(callback, fps) : rafId;\r\n    };\r\n\r\n    /**\r\n     * Updates FPS counter for the specified process\r\n     * and returns a flag which indicates whether\r\n     * counter value is equal or greater than the required FPS.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Boolean}\r\n     */\r\n    raf.tick = function (id, fps) {\r\n        var process  = getProcess(id, fps),\r\n            now      = Date.now(),\r\n            delta    = now - process.update,\r\n            interval = process.interval;\r\n\r\n        if (fps >= 60 || delta >= interval) {\r\n            process.update = now - delta % interval;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    return raf;\r\n});\r\n","Magento_Ui/js/modal/alert.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery/ui',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/translate'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.alert', $.mage.confirm, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: $.mage.__('Attention'),\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function () {\r\n            this.options.actions.always();\r\n            this.element.bind('alertclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).alert(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/confirm.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery/ui',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.confirm', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: '',\r\n            focus: '.action-accept',\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }, {\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event, true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this._super();\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click', _.bind(this.closeModal, this));\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Remove modal window.\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Open modal window.\r\n         */\r\n        openModal: function () {\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function (event, result) {\r\n            result = result || false;\r\n\r\n            if (result) {\r\n                this.options.actions.confirm(event);\r\n            } else {\r\n                this.options.actions.cancel(event);\r\n            }\r\n            this.options.actions.always(event);\r\n            this.element.bind('confirmclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).confirm(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/modal-component.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiCollection',\r\n    'uiRegistry',\r\n    'underscore',\r\n    './modal'\r\n], function ($, Collection, registry, _) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/modal/modal-component',\r\n            title: '',\r\n            subTitle: '',\r\n            options: {\r\n                title: '',\r\n                subTitle: '',\r\n                buttons: [],\r\n                keyEventHandlers: {}\r\n            },\r\n            valid: true,\r\n            links: {\r\n                title: 'options.title',\r\n                subTitle: 'options.subTitle'\r\n            },\r\n            listens: {\r\n                state: 'onState',\r\n                title: 'setTitle',\r\n                'options.subTitle': 'setSubTitle'\r\n            },\r\n            modalClass: 'modal-component',\r\n            onCancel: 'closeModal'\r\n        },\r\n\r\n        /**\r\n         * Initializes component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            _.bindAll(this,\r\n                'initModal',\r\n                'openModal',\r\n                'closeModal',\r\n                'toggleModal',\r\n                'setPrevValues',\r\n                'validate');\r\n            this.initializeContent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes modal configuration\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            return this._super()\r\n                .initSelector()\r\n                .initModalEvents();\r\n        },\r\n\r\n        /**\r\n         * Configure modal selector\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initSelector: function () {\r\n            var modalClass = this.name.replace(/\\./g, '_');\r\n\r\n            this.contentSelector = '.' + this.modalClass;\r\n            this.options.modalClass = this.options.modalClass + ' ' + modalClass;\r\n            this.rootSelector = '.' + modalClass;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure modal keyboard handlers\r\n         * and outer click\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModalEvents: function () {\r\n            this.options.keyEventHandlers.escapeKey = this.options.outerClickHandler = this[this.onCancel].bind(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize modal's content components\r\n         */\r\n        initializeContent: function () {\r\n            $.async({\r\n                component: this.name\r\n            }, this.initModal);\r\n        },\r\n\r\n        /**\r\n         * Init toolbar section so other components will be able to place something in it\r\n         */\r\n        initToolbarSection: function () {\r\n            this.set('toolbarSection', this.modal.data('mage-modal').modal.find('header').get(0));\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.observe(['state', 'focused']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModal: function (element) {\r\n            if (!this.modal) {\r\n                this.overrideModalButtonCallback();\r\n                this.options.modalCloseBtnHandler = this[this.onCancel].bind(this);\r\n                this.modal = $(element).modal(this.options);\r\n                this.initToolbarSection();\r\n\r\n                if (this.waitCbk) {\r\n                    this.waitCbk();\r\n                    this.waitCbk = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Open modal\r\n         */\r\n        openModal: function () {\r\n            if (this.modal) {\r\n                this.state(true);\r\n            } else {\r\n                this.waitCbk = this.openModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal\r\n         */\r\n        closeModal: function () {\r\n            if (this.modal) {\r\n                this.state(false);\r\n            } else {\r\n                this.waitCbk = this.closeModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle modal\r\n         */\r\n        toggleModal: function () {\r\n            if (this.modal) {\r\n                this.state(!this.state());\r\n            } else {\r\n                this.waitCbk = this.toggleModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets title for modal\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            if (this.title !== title) {\r\n                this.title = title;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setTitle', title);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets subTitle for modal\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            if (this.subTitle !== subTitle) {\r\n                this.subTitle = subTitle;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setSubTitle', subTitle);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {Boolean} state\r\n         */\r\n        onState: function (state) {\r\n            if (state) {\r\n                this.modal.modal('openModal');\r\n                this.applyData();\r\n            } else {\r\n                this.modal.modal('closeModal');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate everything validatable in modal\r\n         */\r\n        validate: function (elem) {\r\n            if (typeof elem.validate === 'function') {\r\n                this.valid = this.valid & elem.validate().valid;\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.validate, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset data from provider\r\n         */\r\n        resetData: function () {\r\n            this.elems().forEach(this.resetValue, this);\r\n        },\r\n\r\n        /**\r\n         * Update 'applied' property with data from modal content\r\n         */\r\n        applyData: function () {\r\n            var applied = {};\r\n\r\n            this.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            this.applied = applied;\r\n        },\r\n\r\n        /**\r\n         * Gather values from modal content\r\n         *\r\n         * @param {Array} applied\r\n         * @param {HTMLElement} elem\r\n         */\r\n        gatherValues: function (applied, elem) {\r\n            if (typeof elem.value === 'function') {\r\n                applied[elem.name] = elem.value();\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set to previous values from modal content\r\n         *\r\n         * @param {HTMLElement} elem\r\n         */\r\n        setPrevValues: function (elem) {\r\n            if (typeof elem.value === 'function') {\r\n                this.modal.focus();\r\n                elem.value(this.applied[elem.name]);\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.setPrevValues, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Triggers some method in every modal child elem, if this method is defined\r\n         *\r\n         * @param {Object} action - action configuration,\r\n         * must contain actionName and targetName and\r\n         * can contain params\r\n         */\r\n        triggerAction: function (action) {\r\n            var targetName = action.targetName,\r\n                params = action.params || [],\r\n                actionName = action.actionName,\r\n                target;\r\n\r\n            target = registry.async(targetName);\r\n\r\n            if (target && typeof target === 'function' && actionName) {\r\n                params.unshift(actionName);\r\n                target.apply(target, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Override modal buttons callback placeholders with real callbacks\r\n         */\r\n        overrideModalButtonCallback: function () {\r\n            var buttons = this.options.buttons;\r\n\r\n            if (buttons && buttons.length) {\r\n                buttons.forEach(function (button) {\r\n                    button.click = this.getButtonClickHandler(button.actions);\r\n                }, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate button click handler based on button's 'actions' configuration\r\n         */\r\n        getButtonClickHandler: function (actionsConfig) {\r\n            var actions = actionsConfig.map(\r\n                function (actionConfig) {\r\n                    if (_.isObject(actionConfig)) {\r\n                        return this.triggerAction.bind(this, actionConfig);\r\n                    }\r\n\r\n                    return this[actionConfig] ? this[actionConfig].bind(this) : function () {};\r\n                }, this);\r\n\r\n            return function () {\r\n                actions.forEach(\r\n                    function (action) {\r\n                        action();\r\n                    }\r\n                );\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Cancels changes in modal:\r\n         * returning elems values to the previous state,\r\n         * and close modal\r\n         */\r\n        actionCancel: function () {\r\n            this.elems().forEach(this.setPrevValues, this);\r\n            this.closeModal();\r\n        },\r\n\r\n        /**\r\n         * Accept changes in modal by not preventing them.\r\n         * Can be extended by exporting 'gatherValues' result somewhere\r\n         */\r\n        actionDone: function () {\r\n            this.valid = true;\r\n            this.elems().forEach(this.validate, this);\r\n\r\n            if (this.valid) {\r\n                this.closeModal();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/modal/modal.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-popup.html',\r\n    'text!ui/template/modal/modal-slide.html',\r\n    'text!ui/template/modal/modal-custom.html',\r\n    'Magento_Ui/js/lib/key-codes',\r\n    'jquery/ui',\r\n    'mage/translate'\r\n], function ($, _, template, popupTpl, slideTpl, customTpl, keyCodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Detect browser transition end event.\r\n     * @return {String|undefined} - transition event.\r\n     */\r\n    var transitionEvent =  (function () {\r\n        var transition,\r\n            elementStyle = document.createElement('div').style,\r\n            transitions = {\r\n                'transition': 'transitionend',\r\n                'OTransition': 'oTransitionEnd',\r\n                'MozTransition': 'transitionend',\r\n                'WebkitTransition': 'webkitTransitionEnd'\r\n            };\r\n\r\n        for (transition in transitions) {\r\n            if (elementStyle[transition] !== undefined && transitions.hasOwnProperty(transition)) {\r\n                return transitions[transition];\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Modal Window Widget\r\n     */\r\n    $.widget('mage.modal', {\r\n        options: {\r\n            type: 'popup',\r\n            title: '',\r\n            subTitle: '',\r\n            modalClass: '',\r\n            focus: '[data-role=\"closeBtn\"]',\r\n            autoOpen: false,\r\n            clickableOverlay: true,\r\n            popupTpl: popupTpl,\r\n            slideTpl: slideTpl,\r\n            customTpl: customTpl,\r\n            modalVisibleClass: '_show',\r\n            parentModalClass: '_has-modal',\r\n            innerScrollClass: '_inner-scroll',\r\n            responsive: false,\r\n            innerScroll: false,\r\n            modalTitle: '[data-role=\"title\"]',\r\n            modalSubTitle: '[data-role=\"subTitle\"]',\r\n            modalBlock: '[data-role=\"modal\"]',\r\n            modalCloseBtn: '[data-role=\"closeBtn\"]',\r\n            modalContent: '[data-role=\"content\"]',\r\n            modalAction: '[data-role=\"action\"]',\r\n            focusableScope: '[data-role=\"focusable-scope\"]',\r\n            focusableStart: '[data-role=\"focusable-start\"]',\r\n            focusableEnd: '[data-role=\"focusable-end\"]',\r\n            appendTo: 'body',\r\n            wrapperClass: 'modals-wrapper',\r\n            overlayClass: 'modals-overlay',\r\n            responsiveClass: 'modal-slide',\r\n            trigger: '',\r\n            modalLeftMargin: 45,\r\n            closeText: $.mage.__('Close'),\r\n            buttons: [{\r\n                text: $.mage.__('Ok'),\r\n                class: '',\r\n                attr: {},\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(event);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates modal widget.\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                'keyEventSwitcher',\r\n                '_tabSwitcher',\r\n                'closeModal'\r\n            );\r\n\r\n            this.options.transitionEvent = transitionEvent;\r\n            this._createWrapper();\r\n            this._renderModal();\r\n            this._createButtons();\r\n            $(this.options.trigger).on('click', _.bind(this.toggleModal, this));\r\n            this._on(this.modal.find(this.options.modalCloseBtn), {\r\n                'click': this.options.modalCloseBtnHandler ? this.options.modalCloseBtnHandler : this.closeModal\r\n            });\r\n            this._on(this.element, {\r\n                'openModal': this.openModal,\r\n                'closeModal': this.closeModal\r\n            });\r\n            this.options.autoOpen ? this.openModal() : false;\r\n        },\r\n\r\n        /**\r\n         * Returns element from modal node.\r\n         * @return {Object} - element.\r\n         */\r\n        _getElem: function (elem) {\r\n            return this.modal.find(elem);\r\n        },\r\n\r\n        /**\r\n         * Gets visible modal count.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleCount: function () {\r\n            var modals = this.modalWrapper.find(this.options.modalBlock);\r\n\r\n            return modals.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Gets count of visible modal by slide type.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleSlideCount: function () {\r\n            var elems = this.modalWrapper.find('[data-type=\"slide\"]');\r\n\r\n            return elems.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Listener key events.\r\n         * Call handler function if it exists\r\n         */\r\n        keyEventSwitcher: function (event) {\r\n            var key = keyCodes[event.keyCode];\r\n\r\n            if (this.options.keyEventHandlers.hasOwnProperty(key)) {\r\n                this.options.keyEventHandlers[key].apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set title for modal.\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            var $title = $(this.options.modalTitle),\r\n                $subTitle = this.modal.find(this.options.modalSubTitle);\r\n\r\n            $title.text(title);\r\n            $title.append($subTitle);\r\n        },\r\n\r\n        /**\r\n         * Set sub title for modal.\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            this.options.subTitle = subTitle;\r\n            this.modal.find(this.options.modalSubTitle).text(subTitle);\r\n        },\r\n\r\n        /**\r\n         * Toggle modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        toggleModal: function () {\r\n            if (this.options.isOpen === true) {\r\n                this.closeModal();\r\n            } else {\r\n                this.openModal();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        openModal: function () {\r\n            this.options.isOpen = true;\r\n            this.focussedElement = document.activeElement;\r\n            this._createOverlay();\r\n            this._setActive();\r\n            this._setKeyListener();\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._setFocus, this, 'end', 'opened'));\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._trigger, this, 'opened'));\r\n            this.modal.addClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                this._trigger('opened');\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         *\r\n         *  @param {String} type - can be \"opened\" or false\r\n         *      If type is \"opened\" - looks to \"this.options.focus\"\r\n         *      property and sets focus\r\n         */\r\n        _setFocus: function (position, type) {\r\n            var focusableElements,\r\n                infelicity;\r\n\r\n            if (type === 'opened' && this.options.focus) {\r\n                this.modal.find($(this.options.focus)).focus();\r\n            } else if (type === 'opened' && !this.options.focus) {\r\n                this.modal.find(this.options.focusableScope).focus();\r\n            } else if (position === 'end') {\r\n                this.modal.find(this.options.modalCloseBtn).focus();\r\n            } else if (position === 'start') {\r\n                infelicity = 2; //Constant for find last focusable element\r\n                focusableElements = this.modal.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set events listener when modal is opened.\r\n         */\r\n        _setKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).bind('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).bind('focusin', this._tabSwitcher);\r\n            this.modal.bind('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Remove events listener when modal is closed.\r\n         */\r\n        _removeKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).unbind('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).unbind('focusin', this._tabSwitcher);\r\n            this.modal.unbind('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Switcher for focus event.\r\n         * @param {Object} e - event\r\n         */\r\n        _tabSwitcher: function (e) {\r\n            var target = $(e.target);\r\n\r\n            if (target.is(this.options.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(this.options.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        closeModal: function () {\r\n            var that = this;\r\n\r\n            this._removeKeyListener();\r\n            this.options.isOpen = false;\r\n            this.modal.one(this.options.transitionEvent, function () {\r\n                that._close();\r\n            });\r\n            this.modal.removeClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                that._close();\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Helper for closeModal function.\r\n         */\r\n        _close: function () {\r\n            var trigger = _.bind(this._trigger, this, 'closed', this.modal);\r\n\r\n            $(this.focussedElement).focus();\r\n            this._destroyOverlay();\r\n            this._unsetActive();\r\n            _.defer(trigger, this);\r\n        },\r\n\r\n        /**\r\n         * Set z-index and margin for modal and overlay.\r\n         */\r\n        _setActive: function () {\r\n            var zIndex = this.modal.zIndex();\r\n\r\n            this.prevOverlayIndex = this.overlay.zIndex();\r\n            this.modal.zIndex(zIndex + this._getVisibleCount());\r\n            this.overlay.zIndex(zIndex + (this._getVisibleCount() - 1));\r\n\r\n            if (this._getVisibleSlideCount()) {\r\n                this.modal.css('marginLeft', this.options.modalLeftMargin * this._getVisibleSlideCount());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Unset styles for modal and set z-index for previous modal.\r\n         */\r\n        _unsetActive: function () {\r\n            this.modal.removeAttr('style');\r\n\r\n            if (this.overlay) {\r\n                this.overlay.zIndex(this.prevOverlayIndex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates wrapper to hold all modals.\r\n         */\r\n        _createWrapper: function () {\r\n            this.modalWrapper = $(this.options.appendTo).find('.' + this.options.wrapperClass);\r\n\r\n            if (!this.modalWrapper.length) {\r\n                this.modalWrapper = $('<div></div>')\r\n                    .addClass(this.options.wrapperClass)\r\n                    .appendTo(this.options.appendTo);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Compile template and append to wrapper.\r\n         */\r\n        _renderModal: function () {\r\n            $(template(\r\n                this.options[this.options.type + 'Tpl'],\r\n                {\r\n                    data: this.options\r\n                })).appendTo(this.modalWrapper);\r\n            this.modal = this.modalWrapper.find(this.options.modalBlock).last();\r\n            this.element.appendTo(this._getElem(this.options.modalContent));\r\n\r\n            if (this.element.is(':hidden')) {\r\n                this.element.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates buttons pane.\r\n         */\r\n        _createButtons: function () {\r\n            this.buttons = this._getElem(this.options.modalAction);\r\n            _.each(this.options.buttons, function (btn, key) {\r\n                var button = this.buttons[key];\r\n\r\n                if (btn.attr) {\r\n                    $(button).attr(btn.attr);\r\n                }\r\n\r\n                if (btn.class) {\r\n                    $(button).addClass(btn.class);\r\n                }\r\n\r\n                if (!btn.click) {\r\n                    btn.click = this.closeModal;\r\n                }\r\n                $(button).on('click', _.bind(btn.click, this));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Creates overlay, append it to wrapper, set previous click event on overlay.\r\n         */\r\n        _createOverlay: function () {\r\n            var events,\r\n                outerClickHandler = this.options.outerClickHandler || this.closeModal;\r\n\r\n            this.overlay = $('.' + this.options.overlayClass);\r\n\r\n            if (!this.overlay.length) {\r\n                $(this.options.appendTo).addClass(this.options.parentModalClass);\r\n                this.overlay = $('<div></div>')\r\n                    .addClass(this.options.overlayClass)\r\n                    .appendTo(this.modalWrapper);\r\n            }\r\n            events = $._data(this.overlay.get(0), 'events');\r\n            events ? this.prevOverlayHandler = events.click[0].handler : false;\r\n            this.options.clickableOverlay ? this.overlay.unbind().on('click', outerClickHandler) : false;\r\n        },\r\n\r\n        /**\r\n         * Destroy overlay.\r\n         */\r\n        _destroyOverlay: function () {\r\n            if (this._getVisibleCount()) {\r\n                this.overlay.unbind().on('click', this.prevOverlayHandler);\r\n            } else {\r\n                $(this.options.appendTo).removeClass(this.options.parentModalClass);\r\n                this.overlay.remove();\r\n                this.overlay = null;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.modal;\r\n});\r\n","Magento_Ui/js/modal/modalToggle.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, el) {\r\n        var widget,\r\n            content;\r\n\r\n        if (config.contentSelector) {\r\n            content = $(config.contentSelector);\r\n        } else if (config.content) {\r\n            content = $('<div />').html(config.content);\r\n        } else {\r\n            content = $('<div />');\r\n        }\r\n\r\n        widget = content.modal(config);\r\n\r\n        $(el).on(config.toggleEvent, function () {\r\n            var state = widget.data('mage-modal').options.isOpen;\r\n\r\n            if (state) {\r\n                widget.modal('closeModal');\r\n            } else {\r\n                widget.modal('openModal');\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return widget;\r\n    };\r\n});\r\n","Magento_Ui/js/modal/prompt.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery/ui',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.prompt', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'prompt',\r\n            promptField: '[data-role=\"promptField\"]',\r\n            value: '',\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal();\r\n                }\r\n            }, {\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this.options.focus = this.options.promptField;\r\n            this._super();\r\n            this.modal.find(this.options.modalContent).append(\r\n                '<div class=\"prompt-message\">' +\r\n                    '<input data-role=\"promptField\" id=\"prompt-field\" class=\"admin__control-text\" type=\"text\"/>' +\r\n                '</div>'\r\n            );\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click',  _.bind(this.closeModal, this, false));\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Compile template and append to wrapper.\r\n         */\r\n        _renderModal: function () {\r\n            this._super();\r\n            this.element.wrap('<label for=\"prompt-field\"></label>');\r\n        },\r\n\r\n        /**\r\n         * Remove widget\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Open modal window\r\n         */\r\n        openModal: function () {\r\n            this._super();\r\n            this.modal.find(this.options.promptField).val(this.options.value);\r\n        },\r\n\r\n        /**\r\n         * Close modal window\r\n         */\r\n        closeModal: function (result) {\r\n            var value;\r\n\r\n            if (result) {\r\n                value = this.modal.find(this.options.promptField).val();\r\n                this.options.actions.confirm(value);\r\n            } else {\r\n                this.options.actions.cancel();\r\n            }\r\n            this.options.actions.always();\r\n            this.element.bind('promptclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).prompt(config);\r\n    };\r\n});\r\n","Magento_Ui/js/model/messageList.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        './messages'\r\n    ], function (Messages) {\r\n        'use strict';\r\n        return new Messages();\r\n    }\r\n);\r\n","Magento_Ui/js/model/messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable();\r\n\r\n            return this;\r\n        },\r\n\r\n\r\n        initObservable: function () {\r\n            this.errorMessages = ko.observableArray([]);\r\n            this.successMessages = ko.observableArray([]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add  message to list.\r\n         * @param {Object} messageObj\r\n         * @param {Object} type\r\n         * @returns {Boolean}\r\n         */\r\n        add: function (messageObj, type) {\r\n            var expr = /([%])\\w+/g,\r\n                message;\r\n\r\n            if (!messageObj.hasOwnProperty('parameters')) {\r\n                this.clear();\r\n                type.push(messageObj.message);\r\n\r\n                return true;\r\n            }\r\n            message = messageObj.message.replace(expr, function (varName) {\r\n                varName = varName.substr(1);\r\n\r\n                if (messageObj.parameters.hasOwnProperty(varName)) {\r\n                    return messageObj.parameters[varName];\r\n                }\r\n\r\n                return messageObj.parameters.shift();\r\n            });\r\n            this.clear();\r\n            this.errorMessages.push(message);\r\n\r\n            return true;\r\n        },\r\n\r\n\r\n        addSuccessMessage: function (message) {\r\n            return this.add(message, this.successMessages);\r\n        },\r\n\r\n\r\n        addErrorMessage: function (message) {\r\n            return this.add(message, this.errorMessages);\r\n        },\r\n\r\n\r\n        getErrorMessages: function () {\r\n            return this.errorMessages;\r\n        },\r\n\r\n\r\n        getSuccessMessages: function () {\r\n            return this.successMessages;\r\n        },\r\n\r\n\r\n        hasMessages: function () {\r\n            return this.errorMessages().length > 0 || this.successMessages().length > 0;\r\n        },\r\n\r\n\r\n        clear: function () {\r\n            this.errorMessages.removeAll();\r\n            this.successMessages.removeAll();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/view/messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'uiComponent',\r\n    '../model/messageList'\r\n], function (ko, $, Component, globalMessages) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Ui/messages',\r\n            selector: '[data-role=checkout-messages]',\r\n            isHidden: false,\r\n            listens: {\r\n                isHidden: 'onHiddenChange'\r\n            }\r\n        },\r\n\r\n        initialize: function (config, messageContainer) {\r\n            this._super()\r\n                .initObservable();\r\n\r\n            this.messageContainer = messageContainer || config.messageContainer || globalMessages;\r\n\r\n            return this;\r\n        },\r\n\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('isHidden');\r\n\r\n            return this;\r\n        },\r\n\r\n        isVisible: function () {\r\n            return this.isHidden(this.messageContainer.hasMessages());\r\n        },\r\n\r\n        removeAll: function () {\r\n            this.messageContainer.clear();\r\n        },\r\n\r\n        onHiddenChange: function (isHidden) {\r\n            var self = this;\r\n            // Hide message block if needed\r\n            if (isHidden) {\r\n                setTimeout(function () {\r\n                    $(self.selector).hide('blind', {}, 500)\r\n                }, 5000);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_PageCache/js/page-cache.js":"/**\r\n * Handles additional ajax request for rendering user private content\r\n *\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'domReady',\r\n    'jquery/ui',\r\n    'mage/cookies'\r\n], function ($, domReady) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Nodes tree to flat list converter\r\n     * @returns {Array}\r\n     */\r\n    $.fn.comments = function () {\r\n        var elements = [];\r\n\r\n        /**\r\n         * @param {jQuery} element - Comment holder\r\n         */\r\n        (function lookup(element) {\r\n            var iframeHostName;\r\n\r\n            // prevent cross origin iframe content reading\r\n            if ($(element).prop('tagName') === 'IFRAME') {\r\n                iframeHostName = $('<a>').prop('href', $(element).prop('src'))\r\n                                             .prop('hostname');\r\n\r\n                if (window.location.hostname !== iframeHostName) {\r\n                    return [];\r\n                }\r\n            }\r\n\r\n            $(element).contents().each(function (index, el) {\r\n                switch (el.nodeType) {\r\n                    case 1: // ELEMENT_NODE\r\n                        lookup(el);\r\n                        break;\r\n\r\n                    case 8: // COMMENT_NODE\r\n                        elements.push(el);\r\n                        break;\r\n\r\n                    case 9: // DOCUMENT_NODE\r\n                        lookup($(el).find('body'));\r\n                        break;\r\n                }\r\n            });\r\n        })(this);\r\n\r\n        return elements;\r\n    };\r\n\r\n    /**\r\n     * FormKey Widget - this widget is generating from key, saves it to cookie and\r\n     */\r\n    $.widget('mage.formKey', {\r\n        options: {\r\n            inputSelector: 'input[name=\"form_key\"]',\r\n            allowedCharacters: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            length: 16\r\n        },\r\n\r\n        /**\r\n         * Creates widget 'mage.formKey'\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var formKey = $.mage.cookies.get('form_key');\r\n\r\n            if (!formKey) {\r\n                formKey = generateRandomString(this.options.allowedCharacters, this.options.length);\r\n                $.mage.cookies.set('form_key', formKey);\r\n            }\r\n            $(this.options.inputSelector).val(formKey);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * PageCache Widget\r\n     */\r\n    $.widget('mage.pageCache', {\r\n        options: {\r\n            url: '/',\r\n            patternPlaceholderOpen: /^ BLOCK (.+) $/,\r\n            patternPlaceholderClose: /^ \\/BLOCK (.+) $/,\r\n            versionCookieName: 'private_content_version',\r\n            handles: []\r\n        },\r\n\r\n        /**\r\n         * Creates widget 'mage.pageCache'\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var placeholders,\r\n                version = $.mage.cookies.get(this.options.versionCookieName);\r\n\r\n            if (!version) {\r\n                return;\r\n            }\r\n            placeholders = this._searchPlaceholders(this.element.comments());\r\n\r\n            if (placeholders && placeholders.length) {\r\n                this._ajax(placeholders, version);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse page for placeholders.\r\n         * @param {Array} elements\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _searchPlaceholders: function (elements) {\r\n            var placeholders = [],\r\n                tmp = {},\r\n                ii,\r\n                len,\r\n                el, matches, name;\r\n\r\n            if (!(elements && elements.length)) {\r\n                return placeholders;\r\n            }\r\n\r\n            for (ii = 0, len = elements.length; ii < len; ii++) {\r\n                el = elements[ii];\r\n                matches = this.options.patternPlaceholderOpen.exec(el.nodeValue);\r\n                name = null;\r\n\r\n                if (matches) {\r\n                    name = matches[1];\r\n                    tmp[name] = {\r\n                        name: name,\r\n                        openElement: el\r\n                    };\r\n                } else {\r\n                    matches = this.options.patternPlaceholderClose.exec(el.nodeValue);\r\n\r\n                    if (matches) {\r\n                        name = matches[1];\r\n\r\n                        if (tmp[name]) {\r\n                            tmp[name].closeElement = el;\r\n                            placeholders.push(tmp[name]);\r\n                            delete tmp[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return placeholders;\r\n        },\r\n\r\n        /**\r\n         * Parse for page and replace placeholders\r\n         * @param {Object} placeholder\r\n         * @param {Object} html\r\n         * @protected\r\n         */\r\n        _replacePlaceholder: function (placeholder, html) {\r\n            var startReplacing = false,\r\n                prevSibling = null,\r\n                parent, contents, yy, len, element;\r\n\r\n            if (!placeholder || !html) {\r\n                return;\r\n            }\r\n\r\n            parent = $(placeholder.openElement).parent();\r\n            contents = parent.contents();\r\n\r\n            for (yy = 0, len = contents.length; yy < len; yy++) {\r\n                element = contents[yy];\r\n\r\n                if (element == placeholder.openElement) {\r\n                    startReplacing = true;\r\n                }\r\n\r\n                if (startReplacing) {\r\n                    $(element).remove();\r\n                } else if (element.nodeType != 8) {\r\n                    //due to comment tag doesn't have siblings we try to find it manually\r\n                    prevSibling = element;\r\n                }\r\n\r\n                if (element == placeholder.closeElement) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (prevSibling) {\r\n                $(prevSibling).after(html);\r\n            } else {\r\n                $(parent).prepend(html);\r\n            }\r\n\r\n            // trigger event to use mage-data-init attribute\r\n            $(parent).trigger('contentUpdated');\r\n        },\r\n\r\n        /**\r\n         * AJAX helper\r\n         * @param {Object} placeholders\r\n         * @param {String} version\r\n         * @private\r\n         */\r\n        _ajax: function (placeholders, version) {\r\n            var ii,\r\n                data = {\r\n                    blocks: [],\r\n                    handles: this.options.handles,\r\n                    originalRequest: this.options.originalRequest,\r\n                    version: version\r\n                };\r\n\r\n            for (ii = 0; ii < placeholders.length; ii++) {\r\n                data.blocks.push(placeholders[ii].name);\r\n            }\r\n            data.blocks = JSON.stringify(data.blocks.sort());\r\n            data.handles = JSON.stringify(data.handles);\r\n            data.originalRequest = JSON.stringify(data.originalRequest);\r\n            $.ajax({\r\n                url: this.options.url,\r\n                data: data,\r\n                type: 'GET',\r\n                cache: true,\r\n                dataType: 'json',\r\n                context: this,\r\n\r\n                /**\r\n                 * Response handler\r\n                 * @param {Object} response\r\n                 */\r\n                success: function (response) {\r\n                    var placeholder, i;\r\n\r\n                    for (i = 0; i < placeholders.length; i++) {\r\n                        placeholder = placeholders[i];\r\n\r\n                        if (response.hasOwnProperty(placeholder.name)) {\r\n                            this._replacePlaceholder(placeholder, response[placeholder.name]);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    domReady(function () {\r\n        $('body')\r\n            .formKey();\r\n    });\r\n\r\n    return {\r\n        'pageCache': $.mage.pageCache,\r\n        'formKey': $.mage.formKey\r\n    };\r\n\r\n    /**\r\n     * Helper. Generate random string\r\n     * TODO: Merge with mage/utils\r\n     * @param {String} chars - list of symbols\r\n     * @param {Number} length - length for need string\r\n     * @returns {String}\r\n     */\r\n    function generateRandomString(chars, length) {\r\n        var result = '';\r\n        length = length > 0 ? length : 1;\r\n\r\n        while (length--) {\r\n            result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n        }\r\n\r\n        return result;\r\n    }\r\n});\r\n","Magento_Catalog/js/price-box.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'underscore',\r\n    'mage/template',\r\n    'jquery/ui'\r\n], function ($, utils, _, mageTemplate) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        productId: null,\r\n        priceConfig: null,\r\n        prices: {},\r\n        priceTemplate: '<span class=\"price\"><%- data.formatted %></span>'\r\n    };\r\n\r\n    $.widget('mage.priceBox', {\r\n        options: globalOptions,\r\n        cache: {},\r\n\r\n        /**\r\n         * Widget initialisation.\r\n         * Every time when option changed prices also can be changed. So\r\n         * changed options.prices -> changed cached prices -> recalculation -> redraw price box\r\n         */\r\n        _init: function initPriceBox() {\r\n            var box = this.element;\r\n\r\n            box.trigger('updatePrice');\r\n            this.cache.displayPrices = utils.deepClone(this.options.prices);\r\n        },\r\n\r\n        /**\r\n         * Widget creating.\r\n         */\r\n        _create: function createPriceBox() {\r\n            var box = this.element;\r\n\r\n            this._setDefaultsFromPriceConfig();\r\n            this._setDefaultsFromDataSet();\r\n\r\n            box.on('reloadPrice', this.reloadPrice.bind(this));\r\n            box.on('updatePrice', this.onUpdatePrice.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Call on event updatePrice. Proxy to updatePrice method.\r\n         * @param {Event} event\r\n         * @param {Object} prices\r\n         */\r\n        onUpdatePrice: function onUpdatePrice(event, prices) {\r\n            return this.updatePrice(prices);\r\n        },\r\n\r\n        /**\r\n         * Updates price via new (or additional values).\r\n         * It expects object like this:\r\n         * -----\r\n         *   \"option-hash\":\r\n         *      \"price-code\":\r\n         *         \"amount\": 999.99999,\r\n         *         ...\r\n         * -----\r\n         * Empty option-hash object or empty price-code object treats as zero amount.\r\n         * @param {Object} newPrices\r\n         */\r\n        updatePrice: function updatePrice(newPrices) {\r\n            var prices = this.cache.displayPrices,\r\n                additionalPrice = {},\r\n                pricesCode = [],\r\n                priceValue, origin, finalPrice;\r\n\r\n            this.cache.additionalPriceObject = this.cache.additionalPriceObject || {};\r\n\r\n            if (newPrices) {\r\n                $.extend(this.cache.additionalPriceObject, newPrices);\r\n            }\r\n\r\n            if (!_.isEmpty(additionalPrice)) {\r\n                pricesCode = _.keys(additionalPrice);\r\n            } else if (!_.isEmpty(prices)) {\r\n                pricesCode = _.keys(prices);\r\n            }\r\n\r\n            _.each(this.cache.additionalPriceObject, function (additional) {\r\n                if (additional && !_.isEmpty(additional)) {\r\n                    pricesCode = _.keys(additional);\r\n                }\r\n                _.each(pricesCode, function (priceCode) {\r\n                    priceValue = additional[priceCode] || {};\r\n                    priceValue.amount = +priceValue.amount || 0;\r\n                    priceValue.adjustments = priceValue.adjustments || {};\r\n\r\n                    additionalPrice[priceCode] = additionalPrice[priceCode] || {\r\n                            'amount': 0,\r\n                            'adjustments': {}\r\n                        };\r\n                    additionalPrice[priceCode].amount =  0 + (additionalPrice[priceCode].amount || 0) +\r\n                        priceValue.amount;\r\n                    _.each(priceValue.adjustments, function (adValue, adCode) {\r\n                        additionalPrice[priceCode].adjustments[adCode] = 0 +\r\n                            (additionalPrice[priceCode].adjustments[adCode] || 0) + adValue;\r\n                    });\r\n                });\r\n            });\r\n\r\n            if (_.isEmpty(additionalPrice)) {\r\n                this.cache.displayPrices = utils.deepClone(this.options.prices);\r\n            } else {\r\n                _.each(additionalPrice, function (option, priceCode) {\r\n                    origin = this.options.prices[priceCode] || {};\r\n                    finalPrice = prices[priceCode] || {};\r\n                    option.amount = option.amount || 0;\r\n                    origin.amount = origin.amount || 0;\r\n                    origin.adjustments = origin.adjustments || {};\r\n                    finalPrice.adjustments = finalPrice.adjustments || {};\r\n\r\n                    finalPrice.amount = 0 + origin.amount + option.amount;\r\n                    _.each(option.adjustments, function (pa, paCode) {\r\n                        finalPrice.adjustments[paCode] = 0 + (origin.adjustments[paCode] || 0) + pa;\r\n                    });\r\n                }, this);\r\n            }\r\n\r\n            this.element.trigger('reloadPrice');\r\n        },\r\n\r\n        /*eslint-disable no-extra-parens*/\r\n        /**\r\n         * Render price unit block.\r\n         */\r\n        reloadPrice: function reDrawPrices() {\r\n            var priceFormat = (this.options.priceConfig && this.options.priceConfig.priceFormat) || {},\r\n                priceTemplate = mageTemplate(this.options.priceTemplate);\r\n\r\n            _.each(this.cache.displayPrices, function (price, priceCode) {\r\n                price.final = _.reduce(price.adjustments, function (memo, amount) {\r\n                    return memo + amount;\r\n                }, price.amount);\r\n\r\n                price.formatted = utils.formatPrice(price.final, priceFormat);\r\n\r\n                $('[data-price-type=\"' + priceCode + '\"]', this.element).html(priceTemplate({\r\n                    data: price\r\n                }));\r\n            }, this);\r\n        },\r\n\r\n        /*eslint-enable no-extra-parens*/\r\n        /**\r\n         * Overwrites initial (default) prices object.\r\n         * @param {Object} prices\r\n         */\r\n        setDefault: function setDefaultPrices(prices) {\r\n            this.cache.displayPrices = utils.deepClone(prices);\r\n            this.options.prices = utils.deepClone(prices);\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge of accepted configuration.\r\n         * @param  {Object} options\r\n         * @return {mage.priceBox}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            if ('disabled' in options) {\r\n                this._setOption('disabled', options.disabled);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * setDefaultsFromDataSet\r\n         */\r\n        _setDefaultsFromDataSet: function _setDefaultsFromDataSet() {\r\n            var box = this.element,\r\n                priceHolders = $('[data-price-type]', box),\r\n                prices = this.options.prices;\r\n\r\n            this.options.productId = box.data('productId');\r\n\r\n            if (_.isEmpty(prices)) {\r\n                priceHolders.each(function (index, element) {\r\n                    var type = $(element).data('priceType'),\r\n                        amount = parseFloat($(element).data('priceAmount'));\r\n\r\n                    if (type && !_.isNaN(amount)) {\r\n                        prices[type] = {\r\n                            amount: amount\r\n                        };\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * setDefaultsFromPriceConfig\r\n         */\r\n        _setDefaultsFromPriceConfig: function _setDefaultsFromPriceConfig() {\r\n            var config = this.options.priceConfig;\r\n\r\n            if (config && config.prices) {\r\n                this.options.prices = config.prices;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBox;\r\n});\r\n","Magento_Catalog/js/price-option-date.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'priceUtils',\r\n    'priceOptions',\r\n    'jquery/ui'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n            fromSelector: 'form',\r\n            dropdownsSelector: '[data-role=calendar-dropdown]'\r\n        },\r\n        optionHandler = {};\r\n\r\n    optionHandler.optionHandlers = {};\r\n\r\n    $.widget('mage.priceOptionDate', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * Function-initializer of priceOptionDate widget\r\n         * @private\r\n         */\r\n        _create: function initOptionDate() {\r\n            var field = this.element,\r\n                form = field.closest(this.options.fromSelector),\r\n                dropdowns = $(this.options.dropdownsSelector, field),\r\n                dateOptionId;\r\n\r\n            if (dropdowns.length) {\r\n                dateOptionId = this.options.dropdownsSelector + dropdowns.attr('name');\r\n\r\n                optionHandler.optionHandlers[dateOptionId] = onCalendarDropdownChange(dropdowns);\r\n\r\n                form.priceOptions(optionHandler);\r\n\r\n                dropdowns.data('role', dateOptionId);\r\n                dropdowns.on('change', onDateChange.bind(this, dropdowns));\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptionDate;\r\n\r\n    /**\r\n     * Custom handler for Date-with-Dropdowns option type.\r\n     * @param  {jQuery} siblings\r\n     * @return {Function} function that return object { optionHash : optionAdditionalPrice }\r\n     */\r\n    function onCalendarDropdownChange(siblings) {\r\n        return function (element, optionConfig, form) {\r\n            var changes = {},\r\n                optionId = utils.findOptionId(element),\r\n                overhead = optionConfig[optionId].prices,\r\n                isNeedToUpdate = true,\r\n                optionHash = 'price-option-calendar-' + optionId;\r\n\r\n            siblings.each(function (index, el) {\r\n                isNeedToUpdate = isNeedToUpdate && !!$(el).val();\r\n            });\r\n\r\n            overhead = isNeedToUpdate ? overhead : {};\r\n            changes[optionHash] = overhead;\r\n\r\n            return changes;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adjusts the number of days in the day option element based on which month or year\r\n     * is selected (changed). Adjusts the days to 28, 29, 30, or 31 typically.\r\n     * @param {jQuery} dropdowns\r\n     */\r\n    function onDateChange(dropdowns) {\r\n        var daysNodes,\r\n            curMonth, curYear, expectedDays,\r\n            options, needed,\r\n            month = dropdowns.filter('[data-calendar-role=month]'),\r\n            year = dropdowns.filter('[data-calendar-role=year]');\r\n\r\n        if (month.length && year.length) {\r\n            daysNodes = dropdowns.filter('[data-calendar-role=day]').find('option');\r\n\r\n            curMonth = month.val() || '01';\r\n            curYear = year.val() || '2000';\r\n            expectedDays = getDaysInMonth(curMonth, curYear);\r\n\r\n            if (daysNodes.length - 1 > expectedDays) { // remove unnecessary option nodes\r\n                daysNodes.each(function (i, e) {\r\n                    if (e.value > expectedDays) {\r\n                        $(e).remove();\r\n                    }\r\n                });\r\n            } else if (daysNodes.length - 1 < expectedDays) { // add missing option nodes\r\n                options = [];\r\n                needed = expectedDays - daysNodes.length + 1;\r\n\r\n                while (needed--) {\r\n                    options.push('<option value=\"' + (expectedDays - needed) + '\">' + (expectedDays - needed) + '</option>');\r\n                }\r\n                $(options.join('')).insertAfter(daysNodes.last());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns number of days for special month and year\r\n     * @param  {Number} month\r\n     * @param  {Number} year\r\n     * @return {Number}\r\n     */\r\n    function getDaysInMonth(month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n});\r\n","Magento_Catalog/js/price-option-file.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery/ui'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.priceOptionFile', {\r\n        options: {\r\n            fileName: '',\r\n            fileNamed: '',\r\n            fieldNameAction: '',\r\n            changeFileSelector: '',\r\n            deleteFileSelector: ''\r\n        },\r\n\r\n        /**\r\n         * Creates instance of widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.fileDeleteFlag = this.fileChangeFlag = false;\r\n            this.inputField = this.element.find('input[name=' + this.options.fileName + ']')[0];\r\n            this.inputFieldAction = this.element.find('input[name=' + this.options.fieldNameAction + ']')[0];\r\n            this.fileNameSpan = this.element.parent('dd').find('.' + this.options.fileNamed);\r\n\r\n            $(this.options.changeFileSelector).on('click', $.proxy(function () {\r\n                this._toggleFileChange();\r\n            }, this));\r\n            $(this.options.deleteFileSelector).on('click', $.proxy(function () {\r\n                this._toggleFileDelete();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Toggles whether the current file is being changed or not. If the file is being deleted\r\n         * then the option to change the file is disabled.\r\n         * @private\r\n         */\r\n        _toggleFileChange: function () {\r\n            this.element.toggle();\r\n            this.fileChangeFlag = !this.fileChangeFlag;\r\n\r\n            if (!this.fileDeleteFlag) {\r\n                $(this.inputFieldAction).attr('value', this.fileChangeFlag ? 'save_new' : 'save_old');\r\n                this.inputField.disabled = !this.fileChangeFlag;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles whether the file is to be deleted. When the file is being deleted, the name of\r\n         * the file is decorated with strike-through text and the option to change the file is\r\n         * disabled.\r\n         * @private\r\n         */\r\n        _toggleFileDelete: function () {\r\n            this.fileDeleteFlag = $(this.options.deleteFileSelector + ':checked').val();\r\n            $(this.inputFieldAction).attr('value',\r\n                this.fileDeleteFlag ? '' : this.fileChangeFlag ? 'save_new' : 'save_old');\r\n            this.inputField.disabled = this.fileDeleteFlag || !this.fileChangeFlag;\r\n            this.fileNameSpan.css('text-decoration', this.fileDeleteFlag ? 'line-through' : 'none');\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptionFile;\r\n});\r\n","Magento_Catalog/js/price-options.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox',\r\n    'jquery/ui'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        productId: null,\r\n        priceHolderSelector: '.price-box', //data-role=\"priceBox\"\r\n        optionsSelector: '.product-custom-option',\r\n        optionConfig: {},\r\n        optionHandlers: {},\r\n        optionTemplate: '<%= data.label %>' +\r\n        '<% if (data.finalPrice.value > 0) { %>' +\r\n        ' +<%- data.finalPrice.formatted %>' +\r\n        '<% } else if (data.finalPrice.value < 0) { %>' +\r\n        ' <%- data.finalPrice.formatted %>' +\r\n        '<% } %>',\r\n        controlContainer: 'dd'\r\n    };\r\n\r\n    $.widget('mage.priceOptions', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            $(this.options.optionsSelector, this.element).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Widget creating method.\r\n         * Triggered once.\r\n         * @private\r\n         */\r\n        _create: function createPriceOptions() {\r\n            var form = this.element,\r\n                options = $(this.options.optionsSelector, form),\r\n                priceBox = $(this.options.priceHolderSelector, $(this.options.optionsSelector).element);\r\n\r\n            if (priceBox.data('magePriceBox') && priceBox.priceBox('option') && priceBox.priceBox('option').priceConfig) {\r\n                if (priceBox.priceBox('option').priceConfig.optionTemplate) {\r\n                    this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                }\r\n                this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n            }\r\n\r\n            this._applyOptionNodeFix(options);\r\n\r\n            options.on('change', this._onOptionChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Custom option change-event handler\r\n         * @param {Event} event\r\n         * @private\r\n         */\r\n        _onOptionChanged: function onOptionChanged(event) {\r\n            var changes,\r\n                option = $(event.target),\r\n                handler = this.options.optionHandlers[option.data('role')];\r\n            option.data('optionContainer', option.closest(this.options.controlContainer));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(option, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(option, this.options.optionConfig);\r\n            }\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', changes);\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionName = $element.prop('name'),\r\n                    optionType = $element.prop('type');\r\n                var  optionConfig = config.optionConfig && config.optionConfig[optionId];\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue] ? optionConfig[optionValue].prices : null;\r\n\r\n                    if (prices) {\r\n                        _.each(prices, function (price, type) {\r\n                            var value = +(price.amount);\r\n                            value += _.reduce(price.adjustments, function (sum, x) {\r\n                                return sum + x;\r\n                            }, 0);\r\n                            toTemplate.data[type] = {\r\n                                value: value,\r\n                                formatted: utils.formatPrice(value, format)\r\n                            };\r\n                        });\r\n\r\n                        $option.text(template(toTemplate));\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         * @private\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n            this._super(options);\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptions;\r\n\r\n    /**\r\n     * Custom option preprocessor\r\n     * @param  {jQuery} element\r\n     * @param  {Object} optionsConfig - part of config\r\n     * @return {Object}\r\n     */\r\n    function defaultGetOptionValue(element, optionsConfig) {\r\n        var changes = {},\r\n            optionValue = element.val(),\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = optionsConfig[optionId],\r\n            optionHash = optionName;\r\n\r\n        switch (optionType) {\r\n            case 'text':\r\n\r\n            case 'textarea':\r\n                changes[optionHash] = optionValue ? optionConfig.prices : {};\r\n                break;\r\n\r\n            case 'radio':\r\n                if (element.is(':checked')) {\r\n                    changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\r\n                }\r\n                break;\r\n            case 'select-one':\r\n                changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = optionName + '##' + optionValueCode;\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? row.prices : {};\r\n                });\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = optionName + '##' + optionValue;\r\n                changes[optionHash] = element.is(':checked') ? optionConfig[optionValue].prices : {};\r\n                break;\r\n\r\n            case 'file':\r\n                // Checking for 'disable' property equal to checking DOMNode with id*=\"change-\"\r\n                changes[optionHash] = optionValue || element.prop('disabled') ? optionConfig.prices : {};\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n});\r\n","Magento_Catalog/js/price-utils.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var globalPriceFormat = {\r\n        requiredPrecision: 2,\r\n        integerRequired: 1,\r\n        decimalSymbol: ',',\r\n        groupSymbol: ',',\r\n        groupLength: ','\r\n    };\r\n\r\n    return {\r\n        formatPrice: formatPrice,\r\n        deepClone: objectDeepClone,\r\n        strPad: stringPad,\r\n        findOptionId: findOptionId\r\n    };\r\n\r\n    /**\r\n     * Formatter for price amount\r\n     * @param  {Number}  amount\r\n     * @param  {Object}  format\r\n     * @param  {Boolean} isShowSign\r\n     * @return {String}              Formatted value\r\n     */\r\n    function formatPrice(amount, format, isShowSign) {\r\n        format = _.extend(globalPriceFormat, format);\r\n\r\n        // copied from price-option.js | Could be refactored with varien/js.js\r\n\r\n        var precision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision,\r\n            integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired,\r\n            decimalSymbol = format.decimalSymbol === undefined ? ',' : format.decimalSymbol,\r\n            groupSymbol = format.groupSymbol === undefined ? '.' : format.groupSymbol,\r\n            groupLength = format.groupLength === undefined ? 3 : format.groupLength,\r\n            pattern = format.pattern || '%s',\r\n            s = '',\r\n            i, pad,\r\n            j, re, r, am;\r\n\r\n        if (isShowSign === undefined || isShowSign === true) {\r\n            s = amount < 0 ? '-' : (isShowSign ? '+' : '');\r\n        } else if (isShowSign === false) {\r\n            s = '';\r\n        }\r\n        pattern = pattern.indexOf('{sign}') < 0 ? s + pattern : pattern.replace('{sign}', s);\r\n\r\n        // we're avoiding the usage of to fixed, and using round instead with the e representation to address\r\n        // numbers like 1.005 = 1.01. Using ToFixed to only provide trailig zeroes in case we have a whole number\r\n        i = parseInt(amount = Number(Math.round(Math.abs(+amount || 0) + 'e+' + precision) + ('e-' + precision)) , 10) + '';\r\n        pad = (i.length < integerRequired) ? (integerRequired - i.length) : 0;\r\n\r\n        i = stringPad('0', pad) + i;\r\n\r\n        j = i.length > groupLength ? i.length % groupLength : 0;\r\n        re = new RegExp('(\\\\d{' + groupLength + '})(?=\\\\d)', 'g');\r\n\r\n        // replace(/-/, 0) is only for fixing Safari bug which appears\r\n        // when Math.abs(0).toFixed() executed on '0' number.\r\n        // Result is '0.-0' :(\r\n\r\n\r\n        am = Number(Math.round(Math.abs(amount - i) + 'e+' + precision) + ('e-' + precision));\r\n        r = (j ? i.substr(0, j) + groupSymbol : '') +\r\n            i.substr(j).replace(re, '$1' + groupSymbol) +\r\n            (precision ? decimalSymbol + am.toFixed(precision).replace(/-/, 0).slice(2) : '');\r\n\r\n        return pattern.replace('%s', r).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n    }\r\n\r\n    /**\r\n     * Repeats {string} {times} times\r\n     * @param  {String} string\r\n     * @param  {Number} times\r\n     * @return {String}\r\n     */\r\n    function stringPad(string, times) {\r\n        return (new Array(times + 1)).join(string);\r\n    }\r\n\r\n    /**\r\n     * Deep clone of Object. Doesn't support functions\r\n     * @param {Object} obj\r\n     * @return {Object}\r\n     */\r\n    function objectDeepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Helper to find ID in name attribute\r\n     * @param   {jQuery} element\r\n     * @returns {undefined|String}\r\n     */\r\n    function findOptionId(element) {\r\n        if (!element) {\r\n            return;\r\n        }\r\n        var re, id,\r\n            name = $(element).attr('name');\r\n\r\n        if (name.indexOf('[') !== -1) {\r\n            re = /\\[([^\\]]+)?\\]/;\r\n        } else {\r\n            re = /_([^\\]]+)?_/; // just to support file-type-option\r\n        }\r\n        id = re.exec(name) && re.exec(name)[1];\r\n\r\n        if (id) {\r\n            return id;\r\n        }\r\n    }\r\n});\r\n","Magento_Catalog/js/catalog-add-to-cart.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'jquery/ui'\r\n], function($, $t) {\r\n    \"use strict\";\r\n\r\n    $.widget('mage.catalogAddToCart', {\r\n\r\n        options: {\r\n            processStart: null,\r\n            processStop: null,\r\n            bindSubmit: true,\r\n            minicartSelector: '[data-block=\"minicart\"]',\r\n            messagesSelector: '[data-placeholder=\"messages\"]',\r\n            productStatusSelector: '.stock.available',\r\n            addToCartButtonSelector: '.action.tocart',\r\n            addToCartButtonDisabledClass: 'disabled',\r\n            addToCartButtonTextWhileAdding: '',\r\n            addToCartButtonTextAdded: '',\r\n            addToCartButtonTextDefault: ''\r\n        },\r\n\r\n        _create: function() {\r\n            if (this.options.bindSubmit) {\r\n                this._bindSubmit();\r\n            }\r\n        },\r\n\r\n        _bindSubmit: function() {\r\n            var self = this;\r\n            if (this.element.data('catalog-addtocart-initialized')) {\r\n                return;\r\n            }\r\n            this.element.data('catalog-addtocart-initialized', 1);\r\n            this.element.on('submit', function(e) {\r\n                e.preventDefault();\r\n                self.submitForm($(this));\r\n            });\r\n        },\r\n\r\n        isLoaderEnabled: function() {\r\n            return this.options.processStart && this.options.processStop;\r\n        },\r\n\r\n        /**\r\n         * Handler for the form 'submit' event\r\n         *\r\n         * @param {Object} form\r\n         */\r\n        submitForm: function (form) {\r\n            var addToCartButton, self = this;\r\n\r\n            if (form.has('input[type=\"file\"]').length && form.find('input[type=\"file\"]').val() !== '') {\r\n                self.element.off('submit');\r\n                // disable 'Add to Cart' button\r\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n                addToCartButton.prop('disabled', true);\r\n                addToCartButton.addClass(this.options.addToCartButtonDisabledClass);\r\n                form.submit();\r\n            } else {\r\n                self.ajaxSubmit(form);\r\n            }\r\n        },\r\n\r\n        ajaxSubmit: function(form) {\r\n            var self = this;\r\n            $(self.options.minicartSelector).trigger('contentLoading');\r\n            self.disableAddToCartButton(form);\r\n\r\n            $.ajax({\r\n                url: form.attr('action'),\r\n                data: form.serialize(),\r\n                type: 'post',\r\n                dataType: 'json',\r\n                beforeSend: function() {\r\n                    if (self.isLoaderEnabled()) {\r\n                        $('body').trigger(self.options.processStart);\r\n                    }\r\n                },\r\n                success: function(res) {\r\n                    $(document).trigger('ajax:addToCart', form.data().productSku);\r\n\r\n                    if (self.isLoaderEnabled()) {\r\n                        $('body').trigger(self.options.processStop);\r\n                    }\r\n\r\n                    if (res.backUrl) {\r\n                        var eventData = {\r\n                            'form': form,\r\n                            'redirectParameters': []\r\n                        }\r\n                        // trigger global event, so other modules will be able add parameters to redirect url\r\n                        $('body').trigger('catalogCategoryAddToCartRedirect', eventData);\r\n                        if (eventData.redirectParameters.length > 0) {\r\n                            var parameters = res.backUrl.split('#');\r\n                            parameters.push(eventData.redirectParameters.join('&'));\r\n                            res.backUrl = parameters.join('#');\r\n                        }\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if (res.messages) {\r\n                        $(self.options.messagesSelector).html(res.messages);\r\n                    }\r\n                    if (res.minicart) {\r\n                        $(self.options.minicartSelector).replaceWith(res.minicart);\r\n                        $(self.options.minicartSelector).trigger('contentUpdated');\r\n                    }\r\n                    if (res.product && res.product.statusText) {\r\n                        $(self.options.productStatusSelector)\r\n                            .removeClass('available')\r\n                            .addClass('unavailable')\r\n                            .find('span')\r\n                            .html(res.product.statusText);\r\n                    }\r\n                    self.enableAddToCartButton(form);\r\n                }\r\n            });\r\n        },\r\n\r\n        disableAddToCartButton: function(form) {\r\n            var addToCartButtonTextWhileAdding = this.options.addToCartButtonTextWhileAdding || $t('Adding...');\r\n            var addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n            addToCartButton.addClass(this.options.addToCartButtonDisabledClass);\r\n            addToCartButton.find('span').text(addToCartButtonTextWhileAdding);\r\n            addToCartButton.attr('title', addToCartButtonTextWhileAdding);\r\n        },\r\n\r\n        enableAddToCartButton: function(form) {\r\n            var addToCartButtonTextAdded = this.options.addToCartButtonTextAdded || $t('Added');\r\n            var self = this,\r\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n\r\n            addToCartButton.find('span').text(addToCartButtonTextAdded);\r\n            addToCartButton.attr('title', addToCartButtonTextAdded);\r\n\r\n            setTimeout(function() {\r\n                var addToCartButtonTextDefault = self.options.addToCartButtonTextDefault || $t('Add to Cart');\r\n                addToCartButton.removeClass(self.options.addToCartButtonDisabledClass);\r\n                addToCartButton.find('span').text(addToCartButtonTextDefault);\r\n                addToCartButton.attr('title', addToCartButtonTextDefault);\r\n            }, 1000);\r\n        }\r\n    });\r\n\r\n    return $.mage.catalogAddToCart;\r\n});\r\n","Magento_Catalog/js/compare.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global confirm:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\",\r\n    \"mage/decorate\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.compareItems', {\r\n        _create: function() {\r\n            this.element.decorate('list', true);\r\n            this._confirm(this.options.removeSelector, this.options.removeConfirmMessage);\r\n            this._confirm(this.options.clearAllSelector, this.options.clearAllConfirmMessage);\r\n        },\r\n\r\n        /**\r\n         * Set up a click event on the given selector to display a confirmation request message\r\n         * and ask for that confirmation.\r\n         * @param selector Selector for the confirmation on click event\r\n         * @param message Message to display asking for confirmation to perform action\r\n         * @private\r\n         */\r\n        _confirm: function(selector, message) {\r\n            $(selector).on('click', function() {\r\n                return confirm(message);\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.compareItems;\r\n});\r\n","Magento_Catalog/js/gallery.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true, jquery:true*/\r\n(function (factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define([\r\n            \"jquery\",\r\n            \"jquery/ui\"\r\n        ], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    \"use strict\";\r\n\r\n    $.widget('mage.gallery', {\r\n        options: {\r\n            minWidth: 300, // Minimum width of the gallery image.\r\n            widthOffset: 90, // Offset added to the width of the gallery image.\r\n            heightOffset: 210, // Offset added to the height of the gallery image.\r\n            closeWindow: \"div.buttons-set a[role='close-window']\" // Selector for closing the gallery popup window.\r\n        },\r\n\r\n        /**\r\n         * Bind click handler for closing the popup window and resize the popup based on the image size.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            $(this.options.closeWindow).on('click', function() { window.close(); });\r\n            this._resizeWindow();\r\n        },\r\n\r\n        /**\r\n         * Resize the gallery image popup window based on the image's dimensions.\r\n         * @private\r\n         */\r\n        _resizeWindow: function() {\r\n            var img = this.element,\r\n                width = img.width() < this.options.minWidth ? this.options.minWidth : img.width();\r\n            window.resizeTo(width + this.options.widthOffset, img.height() + this.options.heightOffset);\r\n        }\r\n    });\r\n    \r\n    return $.mage.gallery;\r\n}));\r\n","Magento_Catalog/js/list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.compareList', {\r\n        _create: function() {\r\n\r\n            var elem = this.element,\r\n                products = $('thead td', elem);\r\n\r\n            if (products.length > this.options.productsInRow) {\r\n                var headings = $('<table/>')\r\n                    .addClass('comparison headings data table')\r\n                    .insertBefore(elem.closest('.container'));\r\n                    \r\n                elem.addClass('scroll');\r\n\r\n                $('th', elem).each(function(){\r\n                    var th = $(this),\r\n                        thCopy = th.clone();\r\n\r\n                    th.animate({\r\n                        top: '+=0'\r\n                    }, 50, function(){\r\n                        var height = th.height();\r\n                        \r\n                        thCopy.css('height', height)\r\n                            .appendTo(headings)\r\n                            .wrap('<tr />');\r\n                    });\r\n                });\r\n            }\r\n\r\n            $(this.options.windowPrintSelector).on('click', function(e) {\r\n                e.preventDefault();\r\n                window.print();\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.compareList;\r\n});\r\n","Magento_Catalog/js/related-products.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\",\r\n    \"mage/translate\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.relatedProducts', {\r\n        options: {\r\n            relatedCheckbox: '.related-checkbox', // Class name for a related product's input checkbox.\r\n            relatedProductsCheckFlag: false, // Related products checkboxes are initially unchecked.\r\n            relatedProductsField: '#related-products-field', // Hidden input field that stores related products.\r\n            selectAllMessage: $.mage.__('select all'),\r\n            unselectAllMessage: $.mage.__('unselect all'),\r\n            selectAllLink: \"[role='select-all']\",\r\n            elementsSelector: \".item.product\"\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            $(this.options.selectAllLink).on('click', $.proxy(this._selectAllRelated, this));\r\n            $(this.options.relatedCheckbox).on('click', $.proxy(this._addRelatedToProduct, this));\r\n            this._showRelatedProducts(\r\n                this.element.find(this.options.elementsSelector),\r\n                this.element.data('limit'),\r\n                this.element.data('shuffle')\r\n            );\r\n        },\r\n\r\n        /**\r\n         * This method either checks all checkboxes for a product's set of related products (select all)\r\n         * or unchecks them (unselect all).\r\n         * @private\r\n         * @param e - Click event on either the \"select all\" link or the \"unselect all\" link.\r\n         * @return {Boolean} - Prevent default event action and event propagation.\r\n         */\r\n        _selectAllRelated: function(e) {\r\n            var innerHTML = this.options.relatedProductsCheckFlag ?\r\n                this.options.selectAllMessage : this.options.unselectAllMessage;\r\n            $(e.target).html(innerHTML);\r\n            $(this.options.relatedCheckbox).attr('checked',\r\n                this.options.relatedProductsCheckFlag = !this.options.relatedProductsCheckFlag);\r\n            this._addRelatedToProduct();\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * This method iterates through each checkbox for all related products and collects only those products\r\n         * whose checkbox has been checked. The selected related products are stored in a hidden input field.\r\n         * @private\r\n         */\r\n        _addRelatedToProduct: function() {\r\n            $(this.options.relatedProductsField).val(\r\n                $(this.options.relatedCheckbox + ':checked').map(function() {\r\n                    return this.value;\r\n                }).get().join(',')\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Show related products according to limit. Shuffle if needed.\r\n         * @param elements\r\n         * @param limit\r\n         * @param shuffle\r\n         * @private\r\n         */\r\n        _showRelatedProducts: function(elements, limit, shuffle) {\r\n            if (shuffle) {\r\n                this._shuffle(elements);\r\n            }\r\n            if (limit === 0) {\r\n                limit = elements.length;\r\n            }\r\n            for (var index = 0; index < limit; index++) {\r\n                $(elements[index]).show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Shuffle an array\r\n         * @param o\r\n         * @returns {*}\r\n         */\r\n        _shuffle: function shuffle(o){ //v1.0\r\n            for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\r\n            return o;\r\n        }\r\n    });\r\n\r\n    return $.mage.relatedProducts;\r\n});\r\n","Magento_Catalog/js/upsell-products.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.upsellProducts', {\r\n        options: {\r\n            elementsSelector: \".item.product\"\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this._showUpsellProducts(\r\n                this.element.find(this.options.elementsSelector),\r\n                this.element.data('limit'),\r\n                this.element.data('shuffle')\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Show upsell products according to limit. Shuffle if needed.\r\n         * @param elements\r\n         * @param limit\r\n         * @param shuffle\r\n         * @private\r\n         */\r\n        _showUpsellProducts: function(elements, limit, shuffle) {\r\n            if (shuffle) {\r\n                this._shuffle(elements);\r\n            }\r\n            if (limit === 0) {\r\n                limit = elements.length;\r\n            }\r\n            for (var index = 0; index < limit; index++) {\r\n                $(this.element).find(elements[index]).show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Shuffle an array\r\n         * @param o\r\n         * @returns {*}\r\n         */\r\n        _shuffle: function shuffle(o){ //v1.0\r\n            for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\r\n            return o;\r\n        }\r\n    });\r\n\r\n    return $.mage.upsellProducts;\r\n});\r\n","Magento_Catalog/js/validate-product.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'Magento_Catalog/product/view/validation',\r\n    'catalogAddToCart'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.productValidate', {\r\n        options: {\r\n            bindSubmit: false,\r\n            radioCheckboxClosest: '.nested'\r\n        },\r\n\r\n        /**\r\n         * Uses Magento's validation widget for the form object.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var bindSubmit = this.options.bindSubmit;\r\n\r\n            this.element.validation({\r\n                radioCheckboxClosest: this.options.radioCheckboxClosest,\r\n\r\n                /**\r\n                 * Uses catalogAddToCart widget as submit handler.\r\n                 * @param {Object} form\r\n                 * @returns {Boolean}\r\n                 */\r\n                submitHandler: function (form, event) {\r\n                    var jqForm = $(form).catalogAddToCart({\r\n                        bindSubmit: bindSubmit\r\n                    });\r\n\r\n                    jqForm.catalogAddToCart('submitForm', jqForm, event);\r\n\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.productValidate;\r\n});\r\n","Magento_Catalog/js/product/list/toolbar.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n\r\n], function($) {\r\n    /**\r\n     * ProductListToolbarForm Widget - this widget is setting cookie and submitting form according to toolbar controls\r\n     */\r\n    $.widget('mage.productListToolbarForm', {\r\n\r\n        options: {\r\n            modeControl: '[data-role=\"mode-switcher\"]',\r\n            directionControl: '[data-role=\"direction-switcher\"]',\r\n            orderControl: '[data-role=\"sorter\"]',\r\n            limitControl: '[data-role=\"limiter\"]',\r\n            mode: 'product_list_mode',\r\n            direction: 'product_list_dir',\r\n            order: 'product_list_order',\r\n            limit: 'product_list_limit',\r\n            modeDefault: 'grid',\r\n            directionDefault: 'asc',\r\n            orderDefault: 'position',\r\n            limitDefault: '9',\r\n            url: ''\r\n        },\r\n\r\n        _create: function () {\r\n            this._bind($(this.options.modeControl), this.options.mode, this.options.modeDefault);\r\n            this._bind($(this.options.directionControl), this.options.direction, this.options.directionDefault);\r\n            this._bind($(this.options.orderControl), this.options.order, this.options.orderDefault);\r\n            this._bind($(this.options.limitControl), this.options.limit, this.options.limitDefault);\r\n        },\r\n\r\n        _bind: function (element, paramName, defaultValue) {\r\n            if (element.is(\"select\")) {\r\n                element.on('change', {paramName: paramName, default: defaultValue}, $.proxy(this._processSelect, this));\r\n            } else {\r\n                element.on('click', {paramName: paramName, default: defaultValue}, $.proxy(this._processLink, this));\r\n            }\r\n        },\r\n\r\n        _processLink: function (event) {\r\n            event.preventDefault();\r\n            this.changeUrl(\r\n                event.data.paramName,\r\n                $(event.currentTarget).data('value'),\r\n                event.data.default\r\n            );\r\n        },\r\n\r\n        _processSelect: function (event) {\r\n            this.changeUrl(\r\n                event.data.paramName,\r\n                event.currentTarget.options[event.currentTarget.selectedIndex].value,\r\n                event.data.default\r\n            );\r\n        },\r\n\r\n        changeUrl: function (paramName, paramValue, defaultValue) {\r\n            var decode = window.decodeURIComponent;\r\n            var urlPaths = this.options.url.split('?'),\r\n                baseUrl = urlPaths[0],\r\n                urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                paramData = {},\r\n                parameters;\r\n            for (var i = 0; i < urlParams.length; i++) {\r\n                parameters = urlParams[i].split('=');\r\n                paramData[decode(parameters[0])] = parameters[1] !== undefined\r\n                    ? decode(parameters[1].replace(/\\+/g, '%20'))\r\n                    : '';\r\n            }\r\n            paramData[paramName] = paramValue;\r\n            if (paramValue == defaultValue) {\r\n                delete paramData[paramName];\r\n            }\r\n            paramData = $.param(paramData);\r\n\r\n            location.href = baseUrl + (paramData.length ? '?' + paramData : '');\r\n        }\r\n    });\r\n\r\n    return $.mage.productListToolbarForm;\r\n});\r\n","Magento_Catalog/js/view/compare-products.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/translate'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    var sidebarInitialized = false;\r\n\r\n    function initSidebar() {\r\n        if (sidebarInitialized) {\r\n            return;\r\n        }\r\n        sidebarInitialized = true;\r\n        require([\r\n            'jquery',\r\n            'mage/mage'\r\n        ], function ($) {\r\n            /*eslint-disable max-len*/\r\n            $('[data-role=compare-products-sidebar]').mage('compareItems', {\r\n                'removeConfirmMessage': $.mage.__('Are you sure you want to remove this item from your Compare Products list?'),\r\n                'removeSelector': '#compare-items a.action.delete',\r\n                'clearAllConfirmMessage': $.mage.__('Are you sure you want to remove all items from your Compare Products list?'),\r\n                'clearAllSelector': '#compare-clear-all'\r\n            });\r\n\r\n            /*eslint-enable max-len*/\r\n        });\r\n    }\r\n\r\n    return Component.extend({\r\n        initialize: function () {\r\n            this._super();\r\n            this.compareProducts = customerData.get('compare-products');\r\n\r\n            initSidebar();\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/view/image.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.template = window.checkout.imageTemplate || this.template;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/product/view/validation.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            'jquery',\r\n            'jquery/ui',\r\n            'mage/validation/validation'\r\n        ], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    'use strict';\r\n    \r\n    $.widget('mage.validation', $.mage.validation, {\r\n        options: {\r\n            radioCheckboxClosest: 'ul, ol',\r\n            errorPlacement: function (error, element) {\r\n                var messageBox,\r\n                    dataValidate;\r\n\r\n                if ($(element).hasClass('datetime-picker')) {\r\n                    element = $(element).parent();\r\n\r\n                    if (element.parent().find('[generated=true].mage-error').length) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (element.attr('data-errors-message-box')) {\r\n                    messageBox = $(element.attr('data-errors-message-box'));\r\n                    messageBox.html(error);\r\n\r\n                    return;\r\n                }\r\n\r\n                dataValidate = element.attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-one-checkbox-required-by-name') > 0) {\r\n                    error.appendTo('#links-advice-container');\r\n                } else if (element.is(':radio, :checkbox')) {\r\n                    element.closest(this.radioCheckboxClosest).after(error);\r\n                } else {\r\n                    element.after(error);\r\n                }\r\n            },\r\n            highlight: function (element, errorClass) {\r\n                var dataValidate = $(element).attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\r\n                    $(element).parent().find('.datetime-picker').each(function() {\r\n                        $(this).removeClass(errorClass);\r\n                        if ($(this).val().length === 0) {\r\n                            $(this).addClass(errorClass);\r\n                        }\r\n                    });\r\n                } else if ($(element).is(':radio, :checkbox')) {\r\n                    $(element).closest(this.radioCheckboxClosest).addClass(errorClass);\r\n                } else {\r\n                    $(element).addClass(errorClass);\r\n                }\r\n            },\r\n            unhighlight: function (element, errorClass) {\r\n                var dataValidate = $(element).attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\r\n                    $(element).parent().find('.datetime-picker').removeClass(errorClass);\r\n                } else if ($(element).is(':radio, :checkbox')) {\r\n                    $(element).closest(this.radioCheckboxClosest).removeClass(errorClass);\r\n                } else {\r\n                    $(element).removeClass(errorClass);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.validation;\r\n}));\r\n","Magento_Reports/js/recently-viewed.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.recentlyViewedProducts', {\r\n        options: {\r\n            localStorageKey: \"recently-viewed-products\",\r\n            productBlock: \"#widget_viewed_item\",\r\n            viewedContainer: \"ol\"\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            var productHtml = $(this.options.productBlock).html();\r\n            var productSku = $(this.options.productBlock).data('sku');\r\n            var products = JSON.parse(window.localStorage.getItem(this.options.localStorageKey));\r\n            if (products) {\r\n                var productsLength = products['sku'].length;\r\n                var maximum = $(this.element).data('count');\r\n                var showed = 0;\r\n                for (var index = 0; index <= productsLength; index++) {\r\n                    if (products['sku'][index] == productSku || showed >= maximum) {\r\n                        products['sku'].splice(index, 1);\r\n                        products['html'].splice(index, 1);\r\n                    } else {\r\n                        $(this.element).find(this.options.viewedContainer).append(products['html'][index]);\r\n                        $(this.element).show();\r\n                        showed++;\r\n                    }\r\n                }\r\n                $(this.element).find(this.options.productBlock).show();\r\n            } else {\r\n                products = {};\r\n                products['sku'] = [];\r\n                products['html'] = [];\r\n            }\r\n            products['sku'].unshift(productSku);\r\n            products['html'].unshift(productHtml);\r\n            window.localStorage.setItem(this.options.localStorageKey, JSON.stringify(products));\r\n        }\r\n    });\r\n    \r\n    return $.mage.recentlyViewedProducts;\r\n});\r\n","Magento_Tax/js/view/checkout/cart/totals/grand-total.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Tax/js/view/checkout/summary/grand-total'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            isDisplayed: function () {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/cart/totals/shipping.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Tax/js/view/checkout/summary/shipping',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            isCalculated: function () {\r\n                return !!quote.shippingMethod();\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            getShippingMethodTitle: function () {\r\n                return '(' + this._super() + ')';\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/cart/totals/tax.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Tax/js/view/checkout/summary/tax',\r\n        'Magento_Checkout/js/model/totals'\r\n    ],\r\n    function (Component, totals) {\r\n        'use strict';\r\n\r\n        var isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed,\r\n            isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed;\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            ifShowValue: function () {\r\n                if (this.getPureValue() === 0) {\r\n                    return isZeroTaxDisplayed;\r\n                }\r\n\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            ifShowDetails: function () {\r\n                return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            isCalculated: function () {\r\n                return this.totals() && totals.getSegment('tax') !== null;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (ko, Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        displaySubtotal: ko.observable(true),\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.cart = customerData.get('cart');\r\n        }\r\n    });\r\n});\r\n","Magento_Tax/js/view/checkout/shipping_method/price.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Catalog/js/price-utils'\r\n    ],\r\n    function (Component,quote, priceUtils) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Tax/checkout/shipping_method/price'\r\n            },\r\n\r\n            isDisplayShippingPriceExclTax: window.checkoutConfig.isDisplayShippingPriceExclTax,\r\n            isDisplayShippingBothPrices: window.checkoutConfig.isDisplayShippingBothPrices,\r\n            isPriceEqual: function(item) {\r\n                return item.price_excl_tax != item.price_incl_tax;\r\n            },\r\n            getFormattedPrice: function (price) {\r\n                //todo add format data\r\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/summary/grand-total.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Catalog/js/price-utils',\r\n        'Magento_Checkout/js/model/totals'\r\n    ],\r\n    function (Component, quote, priceUtils, totals) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                isFullTaxSummaryDisplayed: window.checkoutConfig.isFullTaxSummaryDisplayed || false,\r\n                template: 'Magento_Tax/checkout/summary/grand-total'\r\n            },\r\n            totals: quote.getTotals(),\r\n            isTaxDisplayedInGrandTotal: window.checkoutConfig.includeTaxInGrandTotal || false,\r\n            isDisplayed: function() {\r\n                return this.isFullMode();\r\n            },\r\n            getValue: function() {\r\n                var price = 0;\r\n                if (this.totals()) {\r\n                    price = totals.getSegment('grand_total').value;\r\n                }\r\n                return this.getFormattedPrice(price);\r\n            },\r\n            getBaseValue: function() {\r\n                var price = 0;\r\n                if (this.totals()) {\r\n                    price = this.totals().base_grand_total;\r\n                }\r\n                return priceUtils.formatPrice(price, quote.getBasePriceFormat());\r\n            },\r\n            getGrandTotalExclTax: function() {\r\n                var totals = this.totals();\r\n                if (!totals) {\r\n                    return 0;\r\n                }\r\n                return this.getFormattedPrice(totals.grand_total);\r\n            },\r\n            isBaseGrandTotalDisplayNeeded: function() {\r\n                var totals = this.totals();\r\n                if (!totals) {\r\n                    return false;\r\n                }\r\n                return totals.base_currency_code != totals.quote_currency_code;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/summary/shipping.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/summary/shipping',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function ($, Component, quote) {\r\n        var displayMode = window.checkoutConfig.reviewShippingDisplayMode;\r\n        return Component.extend({\r\n            defaults: {\r\n                displayMode: displayMode,\r\n                template: 'Magento_Tax/checkout/summary/shipping'\r\n            },\r\n            isBothPricesDisplayed: function() {\r\n                return 'both' == this.displayMode\r\n            },\r\n            isIncludingDisplayed: function() {\r\n                return 'including' == this.displayMode;\r\n            },\r\n            isExcludingDisplayed: function() {\r\n                return 'excluding' == this.displayMode;\r\n            },\r\n            isCalculated: function() {\r\n                return this.totals() && this.isFullMode() && null != quote.shippingMethod();\r\n            },\r\n            getIncludingValue: function() {\r\n                if (!this.isCalculated()) {\r\n                    return this.notCalculatedMessage;\r\n                }\r\n                var price =  this.totals().shipping_incl_tax;\r\n                return this.getFormattedPrice(price);\r\n            },\r\n            getExcludingValue: function() {\r\n                if (!this.isCalculated()) {\r\n                    return this.notCalculatedMessage;\r\n                }\r\n                var price =  this.totals().shipping_amount;\r\n                return this.getFormattedPrice(price);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/summary/subtotal.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        var displaySubtotalMode = window.checkoutConfig.reviewTotalsDisplayMode;\r\n        return Component.extend({\r\n            defaults: {\r\n                displaySubtotalMode: displaySubtotalMode,\r\n                template: 'Magento_Tax/checkout/summary/subtotal'\r\n            },\r\n            totals: quote.getTotals(),\r\n            getValue: function () {\r\n                var price = 0;\r\n                if (this.totals()) {\r\n                    price = this.totals().subtotal;\r\n                }\r\n                return this.getFormattedPrice(price);\r\n            },\r\n            isBothPricesDisplayed: function() {\r\n                return 'both' == this.displaySubtotalMode;\r\n            },\r\n            isIncludingTaxDisplayed: function() {\r\n                return 'including' == this.displaySubtotalMode;\r\n            },\r\n            getValueInclTax: function() {\r\n                var price = 0;\r\n                if (this.totals()) {\r\n                    price = this.totals().subtotal_incl_tax;\r\n                }\r\n                return this.getFormattedPrice(price);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/summary/tax.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/totals'\r\n    ],\r\n    function (ko, Component, quote, totals) {\r\n        \"use strict\";\r\n        var isTaxDisplayedInGrandTotal = window.checkoutConfig.includeTaxInGrandTotal;\r\n        var isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed;\r\n        var isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed;\r\n        return Component.extend({\r\n            defaults: {\r\n                isTaxDisplayedInGrandTotal: isTaxDisplayedInGrandTotal,\r\n                notCalculatedMessage: 'Not yet calculated',\r\n                template: 'Magento_Tax/checkout/summary/tax'\r\n            },\r\n            totals: quote.getTotals(),\r\n            isFullTaxSummaryDisplayed: isFullTaxSummaryDisplayed,\r\n            ifShowValue: function() {\r\n                if (this.isFullMode() && this.getPureValue() == 0) {\r\n                    return isZeroTaxDisplayed;\r\n                }\r\n                return true;\r\n            },\r\n            ifShowDetails: function() {\r\n                if (!this.isFullMode()) {\r\n                    return false;\r\n                }\r\n                return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\r\n            },\r\n            getPureValue: function() {\r\n                var amount = 0;\r\n                if (this.totals()) {\r\n                    var taxTotal = totals.getSegment('tax');\r\n                    if (taxTotal) {\r\n                        amount = taxTotal.value;\r\n                    }\r\n                }\r\n                return amount;\r\n            },\r\n            isCalculated: function() {\r\n                return this.totals() && this.isFullMode() && null != totals.getSegment('tax');\r\n            },\r\n            getValue: function() {\r\n                if (!this.isCalculated()) {\r\n                    return this.notCalculatedMessage;\r\n                }\r\n                var amount = totals.getSegment('tax').value;\r\n                return this.getFormattedPrice(amount);\r\n            },\r\n            formatPrice: function(amount) {\r\n                return this.getFormattedPrice(amount);\r\n            },\r\n            getDetails: function() {\r\n                var taxSegment = totals.getSegment('tax');\r\n                if (taxSegment && taxSegment.extension_attributes) {\r\n                    return taxSegment.extension_attributes.tax_grandtotal_details;\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Tax/js/view/checkout/summary/item/details/subtotal.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/item/details/subtotal'\r\n    ],\r\n    function (subtotal) {\r\n        'use strict';\r\n\r\n        var displayPriceMode = window.checkoutConfig.reviewItemPriceDisplayMode || 'including';\r\n\r\n        return subtotal.extend({\r\n            defaults: {\r\n                displayPriceMode: displayPriceMode,\r\n                template: 'Magento_Tax/checkout/summary/item/details/subtotal'\r\n            },\r\n            isPriceInclTaxDisplayed: function () {\r\n                return 'both' == displayPriceMode || 'including' == displayPriceMode;\r\n            },\r\n            isPriceExclTaxDisplayed: function () {\r\n                return 'both' == displayPriceMode || 'excluding' == displayPriceMode;\r\n            },\r\n            getValueInclTax: function (quoteItem) {\r\n                return this.getFormattedPrice(quoteItem['row_total_incl_tax']);\r\n            },\r\n            getValueExclTax: function (quoteItem) {\r\n                return this.getFormattedPrice(quoteItem['row_total']);\r\n            }\r\n\r\n        });\r\n    }\r\n);\r\n","Magento_Customer/address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true, jquery:true*/\r\n/*global confirm:true*/\r\ndefine([\r\n    \"jquery\",\r\n    'Magento_Ui/js/modal/confirm',\r\n    \"jquery/ui\",\r\n    \"mage/translate\"\r\n], function($, confirm){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.address', {\r\n        /**\r\n         * Options common to all instances of this widget.\r\n         * @type {Object}\r\n         */\r\n        options: {\r\n            deleteConfirmMessage: $.mage.__('Are you sure you want to delete this address?')\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers for adding and deleting addresses.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            var options         = this.options,\r\n                addAddress      = options.addAddress,\r\n                deleteAddress   = options.deleteAddress;\r\n\r\n            if( addAddress ){\r\n                $(document).on('click', addAddress, this._addAddress.bind(this));\r\n            }\r\n            \r\n            if( deleteAddress ){\r\n                $(document).on('click', deleteAddress, this._deleteAddress.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new address.\r\n         * @private\r\n         */\r\n        _addAddress: function() {\r\n            window.location = this.options.addAddressLocation;\r\n        },\r\n\r\n        /**\r\n         * Delete the address whose id is specified in a data attribute after confirmation from the user.\r\n         * @private\r\n         * @param {Event}\r\n         * @return {Boolean}\r\n         */\r\n        _deleteAddress: function(e) {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: this.options.deleteConfirmMessage,\r\n                actions: {\r\n                    confirm: function() {\r\n                        if (typeof $(e.target).parent().data('address') !== 'undefined') {\r\n                            window.location = self.options.deleteUrlPrefix + $(e.target).parent().data('address')\r\n                                + '/form_key/' + $.mage.cookies.get('form_key');\r\n                        }\r\n                        else {\r\n                            window.location = self.options.deleteUrlPrefix + $(e.target).data('address')\r\n                                + '/form_key/' + $.mage.cookies.get('form_key');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            return false;\r\n        }\r\n    });\r\n    \r\n    return $.mage.address;\r\n});\r\n","Magento_Customer/change-email-password.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true expr:true*/\r\ndefine([\r\n    'jquery',\r\n    'jquery/ui'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.changeEmailPassword', {\r\n        options: {\r\n            changeEmailSelector: '[data-role=change-email]',\r\n            changePasswordSelector: '[data-role=change-password]',\r\n            mainContainerSelector: '[data-container=change-email-password]',\r\n            titleSelector: '[data-title=change-email-password]',\r\n            emailContainerSelector: '[data-container=change-email]',\r\n            newPasswordContainerSelector: '[data-container=new-password]',\r\n            confirmPasswordContainerSelector: '[data-container=confirm-password]',\r\n            currentPasswordSelector: '[data-input=current-password]',\r\n            emailSelector: '[data-input=change-email]',\r\n            newPasswordSelector: '[data-input=new-password]',\r\n            confirmPasswordSelector: '[data-input=confirm-password]'\r\n        },\r\n\r\n        /**\r\n         * Create widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(function () {\r\n                this._checkChoice();\r\n            }, this));\r\n\r\n            this._checkChoice();\r\n        },\r\n\r\n        /**\r\n         * Check choice\r\n         * @private\r\n         */\r\n        _checkChoice: function () {\r\n            if ($(this.options.changeEmailSelector).is(':checked') &&\r\n                $(this.options.changePasswordSelector).is(':checked')) {\r\n                this._showAll();\r\n            } else if ($(this.options.changeEmailSelector).is(':checked')) {\r\n                this._showEmail();\r\n            } else if ($(this.options.changePasswordSelector).is(':checked')) {\r\n                this._showPassword();\r\n            } else {\r\n                this._hideAll();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show email and password input fields\r\n         * @private\r\n         */\r\n        _showAll: function () {\r\n            $(this.options.titleSelector).html(this.options.titleChangeEmailAndPassword);\r\n\r\n            $(this.options.mainContainerSelector).show();\r\n            $(this.options.emailContainerSelector).show();\r\n            $(this.options.newPasswordContainerSelector).show();\r\n            $(this.options.confirmPasswordContainerSelector).show();\r\n\r\n            $(this.options.currentPasswordSelector).attr('data-validate', '{required:true}').prop('disabled', false);\r\n            $(this.options.emailSelector).attr('data-validate', '{required:true}').prop('disabled', false);\r\n            $(this.options.newPasswordSelector).attr(\r\n                'data-validate',\r\n                '{required:true, \\'validate-customer-password\\':true}'\r\n            ).prop('disabled', false);\r\n            $(this.options.confirmPasswordSelector).attr(\r\n                'data-validate',\r\n                '{required:true, equalTo:\"' + this.options.newPasswordSelector + '\"}'\r\n            ).prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * Hide email and password input fields\r\n         * @private\r\n         */\r\n        _hideAll: function () {\r\n            $(this.options.mainContainerSelector).hide();\r\n            $(this.options.emailContainerSelector).hide();\r\n            $(this.options.newPasswordContainerSelector).hide();\r\n            $(this.options.confirmPasswordContainerSelector).hide();\r\n\r\n            $(this.options.currentPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.emailSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.newPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.confirmPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Show email input fields\r\n         * @private\r\n         */\r\n        _showEmail: function () {\r\n            this._showAll();\r\n            $(this.options.titleSelector).html(this.options.titleChangeEmail);\r\n\r\n            $(this.options.newPasswordContainerSelector).hide();\r\n            $(this.options.confirmPasswordContainerSelector).hide();\r\n\r\n            $(this.options.newPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.confirmPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Show password input fields\r\n         * @private\r\n         */\r\n        _showPassword: function () {\r\n            this._showAll();\r\n            $(this.options.titleSelector).html(this.options.titleChangePassword);\r\n\r\n            $(this.options.emailContainerSelector).hide();\r\n\r\n            $(this.options.emailSelector).removeAttr('data-validate').prop('disabled', true);\r\n        }\r\n    });\r\n\r\n    return $.mage.changeEmailPassword;\r\n});\r\n","Magento_Customer/js/checkout-balance.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.checkoutBalance', {\r\n        /**\r\n         * Initialize store credit events\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.eventData = {\r\n                price: this.options.balance,\r\n                totalPrice: 0\r\n            };\r\n            this.element.on('change', $.proxy(function(e) {\r\n                if ($(e.target).is(':checked')) {\r\n                    this.eventData.price = -1 * this.options.balance;\r\n                } else {\r\n                    if (this.options.amountSubstracted) {\r\n                        this.eventData.price = this.options.usedAmount;\r\n                        this.options.amountSubstracted = false;\r\n                    } else {\r\n                        this.eventData.price = this.options.balance;\r\n                    }\r\n                }\r\n                this.element.trigger('updateCheckoutPrice', this.eventData);\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.checkoutBalance;\r\n});\r\n","Magento_Customer/js/customer-data.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'Magento_Customer/js/section-config',\r\n    'mage/storage',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, sectionConfig, mageStorage) {\r\n    'use strict';\r\n\r\n    var options,\r\n        storage,\r\n        storageInvalidation,\r\n        invalidateCacheBySessionTimeOut,\r\n        invalidateCacheByCloseCookieSession,\r\n        dataProvider,\r\n        buffer,\r\n        customerData;\r\n\r\n    //TODO: remove global change, in this case made for initNamespaceStorage\r\n    $.cookieStorage.setConf({\r\n        path: '/'\r\n    });\r\n\r\n    storage = $.initNamespaceStorage('mage-cache-storage').localStorage;\r\n    storageInvalidation = $.initNamespaceStorage('mage-cache-storage-section-invalidation').localStorage;\r\n\r\n    /**\r\n     * @param {Object} invalidateOptions\r\n     */\r\n    invalidateCacheBySessionTimeOut = function (invalidateOptions) {\r\n        var date;\r\n\r\n        if (new Date($.localStorage.get('mage-cache-timeout')) < new Date()) {\r\n            storage.removeAll();\r\n            date = new Date(Date.now() + parseInt(invalidateOptions.cookieLifeTime, 10) * 1000);\r\n            $.localStorage.set('mage-cache-timeout', date);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Invalidate Cache By Close Cookie Session\r\n     */\r\n    invalidateCacheByCloseCookieSession = function () {\r\n        if (!$.cookieStorage.isSet('mage-cache-sessid')) {\r\n            $.cookieStorage.set('mage-cache-sessid', true);\r\n            storage.removeAll();\r\n        }\r\n    };\r\n\r\n    dataProvider = {\r\n\r\n        /**\r\n         * @param {Object} sectionNames\r\n         * @return {Object}\r\n         */\r\n        getFromStorage: function (sectionNames) {\r\n            var result = {};\r\n\r\n            _.each(sectionNames, function (sectionName) {\r\n                result[sectionName] = storage.get(sectionName);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sectionNames\r\n         * @param {Number} updateSectionId\r\n         * @return {*}\r\n         */\r\n        getFromServer: function (sectionNames, updateSectionId) {\r\n            var parameters;\r\n\r\n            sectionNames = sectionConfig.filterClientSideSections(sectionNames);\r\n            parameters = _.isArray(sectionNames) ? {\r\n                sections: sectionNames.join(',')\r\n            } : [];\r\n            parameters['update_section_id'] = updateSectionId;\r\n\r\n            return $.getJSON(options.sectionLoadUrl, parameters).fail(function (jqXHR) {\r\n                throw new Error(jqXHR);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Function} target\r\n     * @param {String} sectionName\r\n     * @return {*}\r\n     */\r\n    ko.extenders.disposableCustomerData = function (target, sectionName) {\r\n        var sectionDataIds, newSectionDataIds = {};\r\n        target.subscribe(function () {\r\n            setTimeout(function () {\r\n                storage.remove(sectionName);\r\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n                _.each(sectionDataIds, function (data, name) {\r\n                    if (name != sectionName) {\r\n                        newSectionDataIds[name] = data;\r\n                    }\r\n                });\r\n                $.cookieStorage.set('section_data_ids', newSectionDataIds);\r\n            }, 3000);\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n    buffer = {\r\n        data: {},\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         */\r\n        bind: function (sectionName) {\r\n            this.data[sectionName] = ko.observable({});\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @return {Object}\r\n         */\r\n        get: function (sectionName) {\r\n            if (!this.data[sectionName]) {\r\n                this.bind(sectionName);\r\n            }\r\n\r\n            return this.data[sectionName];\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        keys: function () {\r\n            return _.keys(this.data);\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @param {Object} sectionData\r\n         */\r\n        notify: function (sectionName, sectionData) {\r\n            if (!this.data[sectionName]) {\r\n                this.bind(sectionName);\r\n            }\r\n            this.data[sectionName](sectionData);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sections\r\n         */\r\n        update: function (sections) {\r\n            var sectionId = 0,\r\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n\r\n            _.each(sections, function (sectionData, sectionName) {\r\n                sectionId = sectionData['data_id'];\r\n                sectionDataIds[sectionName] = sectionId;\r\n                storage.set(sectionName, sectionData);\r\n                storageInvalidation.remove(sectionName);\r\n                buffer.notify(sectionName, sectionData);\r\n            });\r\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sections\r\n         */\r\n        remove: function (sections) {\r\n            _.each(sections, function (sectionName) {\r\n                storage.remove(sectionName);\r\n                if (!sectionConfig.isClientSideSection(sectionName)) {\r\n                    storageInvalidation.set(sectionName, true);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    customerData = {\r\n\r\n        /**\r\n         * Customer data initialization\r\n         */\r\n        init: function() {\r\n            var countryData,\r\n                privateContent = $.cookieStorage.get('private_content_version');\r\n\r\n            if (_.isEmpty(storage.keys())) {\r\n                if (!_.isEmpty(privateContent)) {\r\n                    this.reload([], false);\r\n                }\r\n            } else if (this.needReload()) {\r\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\r\n                    buffer.notify(sectionName, sectionData);\r\n                });\r\n                this.reload(this.getExpiredKeys(), false);\r\n            } else {\r\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\r\n                    buffer.notify(sectionName, sectionData);\r\n                });\r\n\r\n                if (!_.isEmpty(storageInvalidation.keys())) {\r\n                    this.reload(storageInvalidation.keys(), false);\r\n                }\r\n            }\r\n\r\n            if (!_.isEmpty(privateContent)) {\r\n                countryData = this.get('directory-data');\r\n                if (_.isEmpty(countryData())) {\r\n                    customerData.reload(['directory-data'], false);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        needReload: function () {\r\n            var cookieSections = $.cookieStorage.get('section_data_ids'),\r\n                storageVal,\r\n                name;\r\n\r\n            if (typeof cookieSections != 'object') {\r\n                return true;\r\n            }\r\n\r\n            for (name in cookieSections) {\r\n                if (name !== undefined) {\r\n                    storageVal = storage.get(name);\r\n\r\n                    if (typeof storageVal === 'undefined' ||\r\n                        typeof storageVal == 'object' && cookieSections[name] > storageVal['data_id']\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getExpiredKeys: function () {\r\n            var cookieSections = $.cookieStorage.get('section_data_ids'),\r\n                storageVal,\r\n                name,\r\n                expiredKeys = [];\r\n\r\n            if (typeof cookieSections != 'object') {\r\n                return [];\r\n            }\r\n\r\n            for (name in cookieSections) {\r\n                storageVal = storage.get(name);\r\n\r\n                if (typeof storageVal === 'undefined' ||\r\n                    typeof storageVal == 'object' && cookieSections[name] !=  storage.get(name)['data_id']\r\n                ) {\r\n                    expiredKeys.push(name);\r\n                }\r\n            }\r\n\r\n            return expiredKeys;\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @return {*}\r\n         */\r\n        get: function (sectionName) {\r\n            return buffer.get(sectionName);\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @param {Object} sectionData\r\n         */\r\n        set: function (sectionName, sectionData) {\r\n            var data = {};\r\n\r\n            data[sectionName] = sectionData;\r\n            buffer.update(data);\r\n        },\r\n\r\n        /**\r\n         * @param {Array} sectionNames\r\n         * @param {Number} updateSectionId\r\n         * @return {*}\r\n         */\r\n        reload: function (sectionNames, updateSectionId) {\r\n            return dataProvider.getFromServer(sectionNames, updateSectionId).done(function (sections) {\r\n                buffer.update(sections);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Array} sectionNames\r\n         */\r\n        invalidate: function (sectionNames) {\r\n            var sectionDataIds,\r\n                sectionsNamesForInvalidation;\r\n\r\n            sectionsNamesForInvalidation = _.contains(sectionNames, '*') ? buffer.keys() : sectionNames;\r\n            buffer.remove(sectionsNamesForInvalidation);\r\n            sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n\r\n            // Invalidate section in cookie (increase version of section with 1000)\r\n            _.each(sectionsNamesForInvalidation, function (sectionName) {\r\n                if (!sectionConfig.isClientSideSection(sectionName)) {\r\n                    sectionDataIds[sectionName] += 1000;\r\n                }\r\n            });\r\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} settings\r\n         * @constructor\r\n         */\r\n        'Magento_Customer/js/customer-data': function (settings) {\r\n            options = settings;\r\n            invalidateCacheBySessionTimeOut(settings);\r\n            invalidateCacheByCloseCookieSession();\r\n            customerData.init();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Events listener\r\n     */\r\n    $(document).on('ajaxComplete', function (event, xhr, settings) {\r\n        var sections,\r\n            redirects;\r\n\r\n        if (settings.type.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(settings.url);\r\n\r\n            if (sections) {\r\n                customerData.invalidate(sections);\r\n                redirects = ['redirect', 'backUrl'];\r\n\r\n                if (_.isObject(xhr.responseJSON) && !_.isEmpty(_.pick(xhr.responseJSON, redirects))) {\r\n                    return;\r\n                }\r\n                customerData.reload(sections, true);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Events listener\r\n     */\r\n    $(document).on('submit', function (event) {\r\n        var sections;\r\n\r\n        if (event.target.method.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(event.target.action);\r\n\r\n            if (sections) {\r\n                customerData.invalidate(sections);\r\n            }\r\n        }\r\n    });\r\n\r\n    return customerData;\r\n});\r\n","Magento_Customer/js/invalidation-processor.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, Element, customerData) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        /**\r\n         * Initialize object\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.process(customerData);\r\n        },\r\n\r\n        /**\r\n         * Process all rules in loop, each rule can invalidate some sections in customer data\r\n         *\r\n         * @param {Object} customerDataObject\r\n         */\r\n        process: function (customerDataObject) {\r\n            _.each(this.invalidationRules, function (rule, ruleName) {\r\n                _.each(rule, function (ruleArgs, rulePath) {\r\n                    require([rulePath], function (Rule) {\r\n                        var currentRule = new Rule(ruleArgs);\r\n\r\n                        if (!_.isFunction(currentRule.process)) {\r\n                            throw new Error('Rule ' + ruleName + ' should implement invalidationProcessor interface');\r\n                        }\r\n                        currentRule.process(customerDataObject);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/password-strength-indicator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * jshint browser:true\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/zxcvbn',\r\n    'mage/translate',\r\n    'mage/validation'\r\n], function ($, zxcvbn, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.passwordStrengthIndicator', {\r\n        options: {\r\n            cache: {},\r\n            defaultClassName: 'password-strength-meter-',\r\n            passwordSelector: '[type=password]',\r\n            passwordStrengthMeterSelector: '[data-role=password-strength-meter]',\r\n            passwordStrengthMeterLabelSelector: '[data-role=password-strength-meter-label]'\r\n        },\r\n\r\n        /**\r\n         * Widget initialization\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.options.cache.input = $(this.options.passwordSelector, this.element);\r\n            this.options.cache.meter = $(this.options.passwordStrengthMeterSelector, this.element);\r\n            this.options.cache.label = $(this.options.passwordStrengthMeterLabelSelector, this.element);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor scroll and resize events (resize events left for backward compat)\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on(this.options.cache.input, {\r\n                'change': this._calculateStrength,\r\n                'keyup': this._calculateStrength,\r\n                'paste': this._calculateStrength\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Calculate password strength\r\n         * @private\r\n         */\r\n        _calculateStrength: function () {\r\n            var password = this._getPassword(),\r\n                isEmpty = password.length === 0,\r\n                zxcvbnScore = zxcvbn(password).score,\r\n                isValid = $.validator.validateSingleElement(this.options.cache.input),\r\n                displayScore = zxcvbnScore || 1;\r\n\r\n            // Display score is based on combination of whether password is empty, valid, and zxcvbn strength\r\n            if (isEmpty) {\r\n                displayScore = 0;\r\n            } else if (!isValid) {\r\n                displayScore = 1;\r\n            }\r\n\r\n            // Update label\r\n            this._displayStrength(displayScore);\r\n        },\r\n\r\n        /**\r\n         * Display strength\r\n         * @param {Number} displayScore\r\n         * @private\r\n         */\r\n        _displayStrength: function (displayScore) {\r\n            var strengthLabel = '',\r\n                className = this._getClassName(displayScore);\r\n\r\n            switch (displayScore) {\r\n                case 0:\r\n                    strengthLabel = $t('No Password');\r\n                    break;\r\n\r\n                case 1:\r\n                    strengthLabel = $t('Weak');\r\n                    break;\r\n\r\n                case 2:\r\n                    strengthLabel = $t('Medium');\r\n                    break;\r\n\r\n                case 3:\r\n                    strengthLabel = $t('Strong');\r\n                    break;\r\n\r\n                case 4:\r\n                    strengthLabel = $t('Very Strong');\r\n                    break;\r\n            }\r\n\r\n            this.options.cache.meter\r\n                .removeClass()\r\n                .addClass(className);\r\n            this.options.cache.label.text(strengthLabel);\r\n        },\r\n\r\n        /**\r\n         * Get password value\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getPassword: function () {\r\n            return this.options.cache.input.val();\r\n        },\r\n\r\n        /**\r\n         * Get class name for score\r\n         * @param {int} displayScore\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _getClassName: function (displayScore) {\r\n            return this.options.defaultClassName + displayScore;\r\n        }\r\n    });\r\n\r\n    return $.mage.passwordStrengthIndicator;\r\n});\r\n","Magento_Customer/js/section-config.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(['underscore'], function (_) {\r\n    'use strict';\r\n\r\n    var baseUrls, sections, clientSideSections;\r\n\r\n    var canonize = function(url){\r\n        var route = url;\r\n        for (var key in baseUrls) {\r\n            route = url.replace(baseUrls[key], '');\r\n            if (route != url) {\r\n                break;\r\n            }\r\n        }\r\n        return route.replace(/^\\/?index.php\\/?/, '').toLowerCase();\r\n    };\r\n\r\n    return {\r\n        getAffectedSections: function (url) {\r\n            var route = canonize(url);\r\n            var actions = _.find(sections, function(val, section) {\r\n                if (section.indexOf('*') >= 0) {\r\n                    section = section.replace(/\\*/g, '[^/]+') + '$';\r\n                    var matched = route.match(section);\r\n                    return matched && matched[0] == route;\r\n                }\r\n                return (route.indexOf(section) === 0);\r\n            });\r\n\r\n            return _.union(_.toArray(actions), _.toArray(sections['*']));\r\n        },\r\n\r\n        filterClientSideSections: function (sections) {\r\n            if (Array.isArray(sections)) {\r\n                return _.difference(sections, clientSideSections);\r\n            }\r\n            return sections;\r\n        },\r\n\r\n        isClientSideSection: function (sectionName) {\r\n            return _.contains(clientSideSections, sectionName);\r\n        },\r\n\r\n        'Magento_Customer/js/section-config': function(options) {\r\n            baseUrls = options.baseUrls;\r\n            sections = options.sections;\r\n            clientSideSections = options.clientSideSections;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/action/check-email-availability.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/url-builder'\r\n    ],\r\n    function (storage, urlBuilder) {\r\n        'use strict';\r\n\r\n        return function (deferred, email) {\r\n            return storage.post(\r\n                urlBuilder.createUrl('/customers/isEmailAvailable', {}),\r\n                JSON.stringify({\r\n                    customerEmail: email\r\n                }),\r\n                false\r\n            ).done(\r\n                function (isEmailAvailable) {\r\n                    if (isEmailAvailable) {\r\n                        deferred.resolve();\r\n                    } else {\r\n                        deferred.reject();\r\n                    }\r\n                }\r\n            ).fail(\r\n                function () {\r\n                    deferred.reject();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Customer/js/action/login.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'mage/storage',\r\n        'Magento_Ui/js/model/messageList',\r\n        'Magento_Customer/js/customer-data',\r\n        'mage/translate'\r\n    ],\r\n    function($, storage, globalMessageList, customerData, $t) {\r\n        'use strict';\r\n        var callbacks = [],\r\n            action = function(loginData, redirectUrl, isGlobal, messageContainer) {\r\n                messageContainer = messageContainer || globalMessageList;\r\n                return storage.post(\r\n                    'customer/ajax/login',\r\n                    JSON.stringify(loginData),\r\n                    isGlobal\r\n                ).done(function (response) {\r\n                    if (response.errors) {\r\n                        messageContainer.addErrorMessage(response);\r\n                        callbacks.forEach(function(callback) {\r\n                            callback(loginData);\r\n                        });\r\n                    } else {\r\n                        callbacks.forEach(function(callback) {\r\n                            callback(loginData);\r\n                        });\r\n                        customerData.invalidate(['customer']);\r\n                        if (redirectUrl) {\r\n                            window.location.href = redirectUrl;\r\n                        } else if (response.redirectUrl) {\r\n                            window.location.href = response.redirectUrl;\r\n                        } else {\r\n                            location.reload();\r\n                        }\r\n                    }\r\n                }).fail(function () {\r\n                    messageContainer.addErrorMessage({\r\n                        'message': $t('Could not authenticate. Please try again later')\r\n                    });\r\n                    callbacks.forEach(function(callback) {\r\n                        callback(loginData);\r\n                    });\r\n                });\r\n            };\r\n\r\n        action.registerLoginCallback = function(callback) {\r\n            callbacks.push(callback);\r\n        };\r\n\r\n        return action;\r\n    }\r\n);\r\n","Magento_Customer/js/invalidation-rules/website-rule.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiClass'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n\r\n        defaults: {\r\n            scopeConfig: {}\r\n        },\r\n\r\n        /**\r\n         * Takes website id from current customer data and compare it with current website id\r\n         * If customer belongs to another scope, we need to invalidate current section\r\n         *\r\n         * @param {Object} customerData\r\n         */\r\n        process: function (customerData) {\r\n            var customer = customerData.get('customer');\r\n\r\n            if (this.scopeConfig && customer() &&\r\n                ~~customer().websiteId !== ~~this.scopeConfig.websiteId && ~~customer().websiteId !== 0) {\r\n                customerData.reload(['customer']);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/model/address-list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        './customer-addresses'\r\n    ],\r\n    function(ko, defaultProvider) {\r\n        \"use strict\";\r\n        return ko.observableArray(defaultProvider.getAddressItems());\r\n    }\r\n);\r\n","Magento_Customer/js/model/authentication-popup.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Ui/js/modal/modal'\r\n    ],\r\n    function ($, modal) {\r\n        'use strict';\r\n\r\n        return {\r\n            modalWindow: null,\r\n\r\n            /** Create popUp window for provided element */\r\n            createPopUp: function (element) {\r\n                this.modalWindow = element;\r\n                var options = {\r\n                    'type': 'popup',\r\n                    'modalClass': 'popup-authentication',\r\n                    'responsive': true,\r\n                    'innerScroll': true,\r\n                    'trigger': '.proceed-to-checkout',\r\n                    'buttons': []\r\n                };\r\n                modal(options, $(this.modalWindow));\r\n            },\r\n\r\n            /** Show login popup window */\r\n            showModal: function () {\r\n                $(this.modalWindow).modal('openModal').trigger('contentUpdated');\r\n            }\r\n        }\r\n    }\r\n);\r\n","Magento_Customer/js/model/customer-addresses.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        './customer/address'\r\n    ],\r\n    function($, ko, address) {\r\n        \"use strict\";\r\n        var isLoggedIn = ko.observable(window.isCustomerLoggedIn);\r\n        return {\r\n            getAddressItems: function() {\r\n                var items = [];\r\n                if (isLoggedIn()) {\r\n                    var customerData = window.customerData;\r\n                    if (Object.keys(customerData).length) {\r\n                        $.each(customerData.addresses, function (key, item) {\r\n                            items.push(new address(item));\r\n                        });\r\n                    }\r\n                }\r\n                return items;\r\n            }\r\n        }\r\n    }\r\n);\r\n","Magento_Customer/js/model/customer.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'underscore',\r\n        './address-list'\r\n    ],\r\n    function($, ko, _, addressList) {\r\n        \"use strict\";\r\n        var isLoggedIn = ko.observable(window.isCustomerLoggedIn),\r\n            customerData = {};\r\n\r\n        if (isLoggedIn()) {\r\n            customerData = window.customerData;\r\n        } else {\r\n            customerData = {};\r\n        }\r\n\r\n        return {\r\n            customerData: customerData,\r\n            customerDetails: {},\r\n            isLoggedIn: isLoggedIn,\r\n            setIsLoggedIn: function (flag) {\r\n                isLoggedIn(flag);\r\n            },\r\n            getBillingAddressList: function () {\r\n                return addressList();\r\n            },\r\n            getShippingAddressList: function () {\r\n                return addressList();\r\n            },\r\n            setDetails: function (fieldName, value) {\r\n                if (fieldName) {\r\n                    this.customerDetails[fieldName] = value;\r\n                }\r\n            },\r\n            getDetails: function (fieldName) {\r\n                if (fieldName) {\r\n                    if (this.customerDetails.hasOwnProperty(fieldName)) {\r\n                        return this.customerDetails[fieldName];\r\n                    }\r\n                    return undefined;\r\n                } else {\r\n                    return this.customerDetails;\r\n                }\r\n            },\r\n            addCustomerAddress: function (address) {\r\n                var fields = [\r\n                        'customer_id', 'country_id', 'street', 'company', 'telephone', 'fax', 'postcode', 'city',\r\n                        'firstname', 'lastname', 'middlename', 'prefix', 'suffix', 'vat_id', 'default_billing',\r\n                        'default_shipping'\r\n                    ],\r\n                    customerAddress = {},\r\n                    hasAddress = 0,\r\n                    existingAddress;\r\n\r\n                if (!this.customerData.addresses) {\r\n                    this.customerData.addresses = [];\r\n                }\r\n\r\n                customerAddress = _.pick(address, fields);\r\n                if (address.hasOwnProperty('region_id')) {\r\n                    customerAddress.region = {\r\n                        region_id: address.region_id,\r\n                        region: address.region\r\n                    };\r\n                }\r\n                for (existingAddress in this.customerData.addresses) {\r\n                    if (this.customerData.addresses.hasOwnProperty(existingAddress)) {\r\n                        if (_.isEqual(this.customerData.addresses[existingAddress], customerAddress)) {\r\n                            hasAddress = existingAddress;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (hasAddress === 0) {\r\n                    return this.customerData.addresses.push(customerAddress) - 1;\r\n                }\r\n                return hasAddress;\r\n            },\r\n            setAddressAsDefaultBilling: function (addressId) {\r\n                if (this.customerData.addresses[addressId]) {\r\n                    this.customerData.addresses[addressId].default_billing = 1;\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            setAddressAsDefaultShipping: function (addressId) {\r\n                if (this.customerData.addresses[addressId]) {\r\n                    this.customerData.addresses[addressId].default_shipping = 1;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Customer/js/model/customer/address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([], function() {\r\n    /**\r\n     * @param addressData\r\n     * Returns new address object\r\n     */\r\n    return function (addressData) {\r\n        var regionId;\r\n\r\n        if (addressData.region['region_id'] && addressData.region['region_id'] !== '0') {\r\n            regionId = addressData.region['region_id'] + '';\r\n        }\r\n\r\n        return {\r\n            customerAddressId: addressData.id,\r\n            email: addressData.email,\r\n            countryId: addressData.country_id,\r\n            regionId: regionId,\r\n            regionCode: addressData.region.region_code,\r\n            region: addressData.region.region,\r\n            customerId: addressData.customer_id,\r\n            street: addressData.street,\r\n            company: addressData.company,\r\n            telephone: addressData.telephone,\r\n            fax: addressData.fax,\r\n            postcode: addressData.postcode,\r\n            city: addressData.city,\r\n            firstname: addressData.firstname,\r\n            lastname: addressData.lastname,\r\n            middlename: addressData.middlename,\r\n            prefix: addressData.prefix,\r\n            suffix: addressData.suffix,\r\n            vatId: addressData.vat_id,\r\n            sameAsBilling: addressData.same_as_billing,\r\n            saveInAddressBook: addressData.save_in_address_book,\r\n            customAttributes: addressData.custom_attributes,\r\n            isDefaultShipping: function() {\r\n                return addressData.default_shipping;\r\n            },\r\n            isDefaultBilling: function() {\r\n                return addressData.default_billing;\r\n            },\r\n            getAddressInline: function() {\r\n                return addressData.inline;\r\n            },\r\n            getType: function() {\r\n                return 'customer-address'\r\n            },\r\n            getKey: function() {\r\n                return this.getType() + this.customerAddressId;\r\n            },\r\n            getCacheKey: function() {\r\n                return this.getKey();\r\n            },\r\n            isEditable: function() {\r\n                return false;\r\n            },\r\n            canUseForBilling: function() {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n});\r\n","Magento_Customer/js/view/authentication-popup.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'Magento_Ui/js/form/form',\r\n        'Magento_Customer/js/action/login',\r\n        'Magento_Customer/js/customer-data',\r\n        'Magento_Customer/js/model/authentication-popup',\r\n        'mage/translate',\r\n        'mage/url',\r\n        'Magento_Ui/js/modal/alert',\r\n        'mage/validation'\r\n    ],\r\n    function ($, ko, Component, loginAction, customerData, authenticationPopup, $t, url, alert) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            registerUrl: window.authenticationPopup.customerRegisterUrl,\r\n            forgotPasswordUrl: window.authenticationPopup.customerForgotPasswordUrl,\r\n            autocomplete: window.checkout.autocomplete,\r\n            modalWindow: null,\r\n            isLoading: ko.observable(false),\r\n\r\n            defaults: {\r\n                template: 'Magento_Customer/authentication-popup'\r\n            },\r\n\r\n            /**\r\n             * Init\r\n             */\r\n            initialize: function () {\r\n                var self = this;\r\n                this._super();\r\n                url.setBaseUrl(window.authenticationPopup.baseUrl);\r\n                loginAction.registerLoginCallback(function () {\r\n                    self.isLoading(false);\r\n                });\r\n            },\r\n\r\n            /** Init popup login window */\r\n            setModalElement: function (element) {\r\n                if (authenticationPopup.modalWindow == null) {\r\n                    authenticationPopup.createPopUp(element);\r\n                }\r\n            },\r\n\r\n            /** Is login form enabled for current customer */\r\n            isActive: function () {\r\n                var customer = customerData.get('customer');\r\n\r\n                return customer() == false;\r\n            },\r\n\r\n            /** Show login popup window */\r\n            showModal: function () {\r\n                if (this.modalWindow) {\r\n                    $(this.modalWindow).modal('openModal');\r\n                } else {\r\n                    alert({\r\n                        content: $t('Guest checkout is disabled.')\r\n                    });\r\n                }\r\n            },\r\n\r\n            /** Provide login action */\r\n            login: function (loginForm) {\r\n                var loginData = {},\r\n                    formDataArray = $(loginForm).serializeArray();\r\n                formDataArray.forEach(function (entry) {\r\n                    loginData[entry.name] = entry.value;\r\n                });\r\n\r\n                if ($(loginForm).validation() &&\r\n                    $(loginForm).validation('isValid')\r\n                ) {\r\n                    this.isLoading(true);\r\n                    loginAction(loginData, null, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Customer/js/view/customer.js":"/**\r\n* Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.customer = customerData.get('customer');\r\n        }\r\n    });\r\n});\r\n","Magento_SalesRule/js/form/element/coupon-type.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/form/element/select'\r\n], function (_, uiRegistry, select) {\r\n    'use strict';\r\n\r\n    return select.extend({\r\n\r\n        /**\r\n         * Hide fields on coupon tab\r\n         */\r\n        onUpdate: function () {\r\n\r\n            /* eslint-disable eqeqeq */\r\n            if (this.value() != this.displayOnlyForCouponType) {\r\n                uiRegistry.get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation').checked(false);\r\n            }\r\n\r\n            this.enableDisableFields();\r\n        },\r\n\r\n        /**\r\n         * Enable/disable fields on Coupons tab\r\n         */\r\n        enableDisableFields: function () {\r\n            var selector,\r\n                isUseAutoGenerationChecked,\r\n                couponType,\r\n                disableAuto;\r\n\r\n            selector = '[id=sales-rule-form-tab-coupons] input, [id=sales-rule-form-tab-coupons] select, ' +\r\n                    '[id=sales-rule-form-tab-coupons] button';\r\n            isUseAutoGenerationChecked = uiRegistry\r\n                    .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\r\n                    .checked();\r\n            couponType = uiRegistry\r\n                .get('sales_rule_form.sales_rule_form.rule_information.coupon_type')\r\n                .value();\r\n            disableAuto = couponType === 3 || isUseAutoGenerationChecked;\r\n            _.each(\r\n                document.querySelectorAll(selector),\r\n                function (element) {\r\n                    element.disabled = !disableAuto;\r\n                }\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_SalesRule/js/form/element/manage-coupon-codes.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/form/components/fieldset',\r\n    'Magento_Ui/js/lib/view/utils/async'\r\n], function (_, uiRegistry, fieldset, async) {\r\n    'use strict';\r\n\r\n    return fieldset.extend({\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Initialize element\r\n         *\r\n         * @returns {Abstract} Chainable\r\n         */\r\n        initialize: function (elems, position) {\r\n            var obj = this;\r\n\r\n            this._super();\r\n\r\n            async.async('#sales-rule-form-tab-coupons', document.getElementById('container'), function (node) {\r\n                var useAutoGeneration = uiRegistry.get(\r\n                    'sales_rule_form.sales_rule_form.rule_information.use_auto_generation'\r\n                );\r\n\r\n                useAutoGeneration.on('checked', function () {\r\n                    obj.enableDisableFields();\r\n                });\r\n                obj.enableDisableFields();\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n        /*eslint-disable lines-around-comment*/\r\n\r\n        /**\r\n         * Enable/disable fields on Coupons tab\r\n         */\r\n        enableDisableFields: function () {\r\n            var selector,\r\n                isUseAutoGenerationChecked,\r\n                couponType,\r\n                disableAuto;\r\n\r\n            selector = '[id=sales-rule-form-tab-coupons] input, [id=sales-rule-form-tab-coupons] select, ' +\r\n                    '[id=sales-rule-form-tab-coupons] button';\r\n            isUseAutoGenerationChecked = uiRegistry\r\n                    .get('sales_rule_form.sales_rule_form.rule_information.use_auto_generation')\r\n                    .checked();\r\n            couponType = uiRegistry\r\n                .get('sales_rule_form.sales_rule_form.rule_information.coupon_type')\r\n                .value();\r\n            /**\r\n             * \\Magento\\Rule\\Model\\AbstractModel::COUPON_TYPE_AUTO\r\n             */\r\n            disableAuto = couponType === 3 || isUseAutoGenerationChecked;\r\n            _.each(\r\n                document.querySelectorAll(selector),\r\n                function (element) {\r\n                    element.disabled = !disableAuto;\r\n                }\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_SalesRule/js/action/cancel-coupon.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Customer store credit(balance) application\r\n */\r\n/*global define,alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/resource-url-manager',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_SalesRule/js/model/payment/discount-messages',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/action/get-payment-information',\r\n        'Magento_Checkout/js/model/totals',\r\n        'mage/translate',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function ($, quote, urlManager, errorProcessor, messageContainer, storage, getPaymentInformationAction, totals, $t,\r\n              fullScreenLoader) {\r\n        'use strict';\r\n\r\n        return function (isApplied) {\r\n            var quoteId = quote.getQuoteId(),\r\n                url = urlManager.getCancelCouponUrl(quoteId),\r\n                message = $t('Your coupon was successfully removed.');\r\n\r\n            messageContainer.clear();\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.delete(\r\n                url,\r\n                false\r\n            ).done(\r\n                function () {\r\n                    var deferred = $.Deferred();\r\n                    totals.isLoading(true);\r\n                    getPaymentInformationAction(deferred);\r\n                    $.when(deferred).done(function () {\r\n                        isApplied(false);\r\n                        totals.isLoading(false);\r\n                        fullScreenLoader.stopLoader();\r\n                    });\r\n                    messageContainer.addSuccessMessage({\r\n                        'message': message\r\n                    });\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    totals.isLoading(false);\r\n                    fullScreenLoader.stopLoader();\r\n                    errorProcessor.process(response, messageContainer);\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_SalesRule/js/action/set-coupon-code.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Customer store credit(balance) application\r\n */\r\n/*global define,alert*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        'jquery',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/resource-url-manager',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_SalesRule/js/model/payment/discount-messages',\r\n        'mage/storage',\r\n        'mage/translate',\r\n        'Magento_Checkout/js/action/get-payment-information',\r\n        'Magento_Checkout/js/model/totals',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function (\r\n        ko, $, quote, urlManager, errorProcessor, messageContainer, storage, $t, getPaymentInformationAction, totals,\r\n        fullScreenLoader\r\n    ) {\r\n        'use strict';\r\n\r\n        return function (couponCode, isApplied) {\r\n            var quoteId = quote.getQuoteId(),\r\n                url = urlManager.getApplyCouponUrl(couponCode, quoteId),\r\n                message = $t('Your coupon was successfully applied.');\r\n\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.put(\r\n                url,\r\n                {},\r\n                false\r\n            ).done(\r\n                function (response) {\r\n                    if (response) {\r\n                        var deferred = $.Deferred();\r\n\r\n                        isApplied(true);\r\n                        totals.isLoading(true);\r\n                        getPaymentInformationAction(deferred);\r\n                        $.when(deferred).done(function () {\r\n                            fullScreenLoader.stopLoader();\r\n                            totals.isLoading(false);\r\n                        });\r\n                        messageContainer.addSuccessMessage({\r\n                            'message': message\r\n                        });\r\n                    }\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    fullScreenLoader.stopLoader();\r\n                    totals.isLoading(false);\r\n                    errorProcessor.process(response, messageContainer);\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_SalesRule/js/model/payment/discount-messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Ui/js/model/messages'\r\n    ],\r\n    function (Messages) {\r\n        'use strict';\r\n\r\n        return new Messages();\r\n    }\r\n);\r\n","Magento_SalesRule/js/view/cart/totals/discount.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_SalesRule/js/view/summary/discount'\r\n    ],\r\n    function (Component) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_SalesRule/cart/totals/discount'\r\n            },\r\n            /**\r\n             * @override\r\n             *\r\n             * @returns {boolean}\r\n             */\r\n            isDisplayed: function () {\r\n                return this.getPureValue() != 0;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_SalesRule/js/view/payment/discount-messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/view/messages',\r\n    '../../model/payment/discount-messages'\r\n], function (Component, messageContainer) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n\r\n        initialize: function (config) {\r\n            return this._super(config, messageContainer);\r\n        }\r\n    });\r\n});\r\n","Magento_SalesRule/js/view/payment/discount.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_SalesRule/js/action/set-coupon-code',\r\n        'Magento_SalesRule/js/action/cancel-coupon'\r\n    ],\r\n    function ($, ko, Component, quote, setCouponCodeAction, cancelCouponAction) {\r\n        'use strict';\r\n\r\n        var totals = quote.getTotals(),\r\n            couponCode = ko.observable(null),\r\n            isApplied = ko.observable(couponCode() != null);\r\n\r\n        if (totals()) {\r\n            couponCode(totals()['coupon_code']);\r\n        }\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_SalesRule/payment/discount'\r\n            },\r\n            couponCode: couponCode,\r\n\r\n            /**\r\n             * Applied flag\r\n             */\r\n            isApplied: isApplied,\r\n\r\n            /**\r\n             * Coupon code application procedure\r\n             */\r\n            apply: function() {\r\n                if (this.validate()) {\r\n                    setCouponCodeAction(couponCode(), isApplied);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Cancel using coupon\r\n             */\r\n            cancel: function() {\r\n                if (this.validate()) {\r\n                    couponCode('');\r\n                    cancelCouponAction(isApplied);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Coupon form validation\r\n             *\r\n             * @returns {Boolean}\r\n             */\r\n            validate: function () {\r\n                var form = '#discount-form';\r\n\r\n                return $(form).validation() && $(form).validation('isValid');\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_SalesRule/js/view/summary/discount.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_SalesRule/summary/discount'\r\n            },\r\n            totals: quote.getTotals(),\r\n            isDisplayed: function() {\r\n                return this.isFullMode() && this.getPureValue() != 0;\r\n            },\r\n            getCouponCode: function() {\r\n                if (!this.totals()) {\r\n                    return null;\r\n                }\r\n                return this.totals()['coupon_code'];\r\n            },\r\n            getPureValue: function() {\r\n                var price = 0;\r\n                if (this.totals() && this.totals().discount_amount) {\r\n                    price = parseFloat(this.totals().discount_amount);\r\n                }\r\n                return price;\r\n            },\r\n            getValue: function() {\r\n                return this.getFormattedPrice(this.getPureValue());\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Sales/gift-message.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.giftMessage', {\r\n        options: {\r\n            rowPrefix: '#order-item-row-', // Selector prefix for item's row in the table.\r\n            linkPrefix: '#order-item-gift-message-link-', // Selector prefix for the 'Gift Message' link.\r\n            duration: 100, // Toggle duration.\r\n            expandedClass: 'expanded', // Class added/removed to/from the 'Gift Message' link.\r\n            expandedContentClass: 'expanded-content', // Class added/removed to/from the 'Gift Message' content.\r\n            lastClass: 'last' // Class added/removed to/from the last item's row in the products table.\r\n        },\r\n\r\n        /**\r\n         * Bind a click handler on the widget's element to toggle the gift message.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.element.on('click', $.proxy(this._toggleGiftMessage, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the display of the item's corresponding gift message.\r\n         * @private\r\n         * @param event - {Object} - Click event.\r\n         */\r\n        _toggleGiftMessage: function(event) {\r\n            var element = $(event.target), // Click target. The 'Gift Message' link or 'Close' button.\r\n                options = this.options, // Cached widget options.\r\n                itemId = element.data('item-id'), // The individual item's numeric id.\r\n                link = $(options.linkPrefix + itemId), // The 'Gift Message' expandable link.\r\n                row = $(options.rowPrefix + itemId), // The item's row in the products table.\r\n                region = $('#' + element.attr('aria-controls')); // The gift message container region.\r\n            region.toggleClass(options.expandedContentClass, options.duration, function() {\r\n                if (region.attr('aria-expanded') === \"true\") {\r\n                    region.attr('aria-expanded', \"false\");\r\n                    if (region.hasClass(options.lastClass)) {\r\n                        row.addClass(options.lastClass);\r\n                    }\r\n                } else {\r\n                    region.attr('aria-expanded', \"true\");\r\n                    if (region.hasClass(options.lastClass)) {\r\n                        row.removeClass(options.lastClass);\r\n                    }\r\n                }\r\n                link.toggleClass(options.expandedClass);\r\n            });\r\n            event.preventDefault(); // Prevent event propagation and avoid going to the link's href.\r\n        }\r\n    });\r\n    \r\n    return $.mage.giftMessage;\r\n});\r\n","Magento_Sales/orders-returns.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true, jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.ordersReturns', {\r\n        options: {\r\n            zipCode: '#oar-zip', // Search by zip code.\r\n            emailAddress: '#oar-email', // Search by email address.\r\n            searchType: '#quick-search-type-id' // Search element used for choosing between the two.\r\n        },\r\n\r\n        _create: function() {\r\n            $(this.options.searchType).on('change', $.proxy(this._showIdentifyBlock, this)).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Show either the search by zip code option or the search by email address option.\r\n         * @private\r\n         * @param e - Change event. Event target value is either 'zip' or 'email'.\r\n         */\r\n        _showIdentifyBlock: function(e) {\r\n            var value = $(e.target).val();\r\n            $(this.options.zipCode).toggle(value === 'zip');\r\n            $(this.options.emailAddress).toggle(value === 'email');\r\n        }\r\n    });\r\n\r\n    return $.mage.ordersReturns;\r\n});\r\n","Magento_Sales/js/view/last-ordered-items.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        initialize: function () {\r\n            var isShowAddToCart = false;\r\n\r\n            this._super();\r\n            this.lastOrderedItems = customerData.get('last-ordered-items');\r\n\r\n            for (var item in this.lastOrderedItems.items) {\r\n                if (item['is_saleable']) {\r\n                    isShowAddToCart = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.lastOrderedItems.isShowAddToCart = isShowAddToCart;\r\n        }\r\n    });\r\n});\r\n","Magento_Shipping/js/model/config.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([], function () {\r\n        \"use strict\";\r\n        return function () {\r\n            return window.checkoutConfig.shippingPolicy\r\n        }\r\n    }\r\n);\r\n","Magento_Shipping/js/view/checkout/shipping/shipping-policy.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Shipping/js/model/config'\r\n\r\n], function (Component, config) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Shipping/checkout/shipping/shipping-policy'\r\n        },\r\n        config: config()\r\n    });\r\n});\r\n","Magento_Checkout/js/checkout-data.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\n/*global alert*/\r\n/**\r\n * Checkout adapter for customer data storage\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, storage) {\r\n    'use strict';\r\n\r\n    var cacheKey = 'checkout-data';\r\n\r\n    var saveData = function (checkoutData) {\r\n        storage.set(cacheKey, checkoutData);\r\n    },\r\n        \r\n    /**\r\n     * @return {*}\r\n     */\r\n    getData = function () {\r\n        var data = storage.get(cacheKey)();\r\n\r\n        if ($.isEmptyObject(data)) {\r\n            data = {\r\n                'selectedShippingAddress': null,\r\n                'shippingAddressFromData': null,\r\n                'newCustomerShippingAddress': null,\r\n                'selectedShippingRate': null,\r\n                'selectedPaymentMethod': null,\r\n                'selectedBillingAddress': null,\r\n                'billingAddressFormData': null,\r\n                'newCustomerBillingAddress': null\r\n            };\r\n            saveData(data);\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    return {\r\n        setSelectedShippingAddress: function (data) {\r\n            var obj = getData();\r\n            obj.selectedShippingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getSelectedShippingAddress: function () {\r\n            return getData().selectedShippingAddress;\r\n        },\r\n\r\n        setShippingAddressFromData: function (data) {\r\n            var obj = getData();\r\n            obj.shippingAddressFromData = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getShippingAddressFromData: function () {\r\n            return getData().shippingAddressFromData;\r\n        },\r\n\r\n        setNewCustomerShippingAddress: function (data) {\r\n            var obj = getData();\r\n            obj.newCustomerShippingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getNewCustomerShippingAddress: function () {\r\n            return getData().newCustomerShippingAddress;\r\n        },\r\n\r\n        setSelectedShippingRate: function (data) {\r\n            var obj = getData();\r\n            obj.selectedShippingRate = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getSelectedShippingRate: function() {\r\n            return getData().selectedShippingRate;\r\n        },\r\n\r\n        setSelectedPaymentMethod: function (data) {\r\n            var obj = getData();\r\n            obj.selectedPaymentMethod = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getSelectedPaymentMethod: function() {\r\n            return getData().selectedPaymentMethod;\r\n        },\r\n\r\n        setSelectedBillingAddress: function (data) {\r\n            var obj = getData();\r\n            obj.selectedBillingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getSelectedBillingAddress: function () {\r\n            return getData().selectedBillingAddress;\r\n        },\r\n\r\n        setBillingAddressFromData: function (data) {\r\n            var obj = getData();\r\n            obj.billingAddressFromData = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getBillingAddressFromData: function () {\r\n            return getData().billingAddressFromData;\r\n        },\r\n\r\n        setNewCustomerBillingAddress: function (data) {\r\n            var obj = getData();\r\n            obj.newCustomerBillingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        getNewCustomerBillingAddress: function () {\r\n            return getData().newCustomerBillingAddress;\r\n        },\r\n\r\n        getValidatedEmailValue: function () {\r\n            var obj = getData();\r\n            return (obj.validatedEmailValue) ? obj.validatedEmailValue : '';\r\n        },\r\n\r\n        setValidatedEmailValue: function (email) {\r\n            var obj = getData();\r\n            obj.validatedEmailValue = email;\r\n            saveData(obj);\r\n        },\r\n\r\n        getInputFieldEmailValue: function () {\r\n            var obj = getData();\r\n            return (obj.inputFieldEmailValue) ? obj.inputFieldEmailValue : '';\r\n        },\r\n\r\n        setInputFieldEmailValue: function (email) {\r\n            var obj = getData();\r\n            obj.inputFieldEmailValue = email;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the checked email value from persistence storage.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        getCheckedEmailValue: function () {\r\n            var obj = getData();\r\n\r\n            return obj.checkedEmailValue ? obj.checkedEmailValue : '';\r\n        },\r\n\r\n        /**\r\n         * Setting the checked email value pulled from persistence storage.\r\n         *\r\n         * @param {String} email\r\n         */\r\n        setCheckedEmailValue: function (email) {\r\n            var obj = getData();\r\n\r\n            obj.checkedEmailValue = email;\r\n            saveData(obj);\r\n        }\r\n    }\r\n});\r\n","Magento_Checkout/js/checkout-loader.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'rjsResolver'\r\n], function (resolver) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes provided loader element from DOM.\r\n     *\r\n     * @param {HTMLElement} $loader - Loader DOM element.\r\n     */\r\n    function hideLoader($loader) {\r\n        $loader.parentNode.removeChild($loader);\r\n    }\r\n\r\n    /**\r\n     * Initializes assets loading process listener.\r\n     *\r\n     * @param {Object} config - Optional configuration\r\n     * @param {HTMLElement} $loader - Loader DOM element.\r\n     */\r\n    function init(config, $loader) {\r\n        resolver(hideLoader.bind(null, $loader));\r\n    }\r\n\r\n    return init;\r\n});\r\n","Magento_Checkout/js/discount-codes.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.discountCode', {\r\n        options: {\r\n        },\r\n        _create: function () {\r\n            this.couponCode = $(this.options.couponCodeSelector);\r\n            this.removeCoupon = $(this.options.removeCouponSelector);\r\n\r\n            $(this.options.applyButton).on('click', $.proxy(function () {\r\n                this.couponCode.attr('data-validate', '{required:true}');\r\n                this.removeCoupon.attr('value', '0');\r\n                $(this.element).validation().submit();\r\n            }, this));\r\n\r\n            $(this.options.cancelButton).on('click', $.proxy(function () {\r\n                this.couponCode.removeAttr('data-validate');\r\n                this.removeCoupon.attr('value', '1');\r\n                this.element.submit();\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.discountCode;\r\n});\r\n","Magento_Checkout/js/proceed-to-checkout.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n        'jquery',\r\n        'Magento_Customer/js/model/authentication-popup',\r\n        'Magento_Customer/js/customer-data'\r\n    ],\r\n    function ($, authenticationPopup, customerData) {\r\n        'use strict';\r\n\r\n        return function (config, element) {\r\n            $(element).click(function (event) {\r\n                var cart = customerData.get('cart'),\r\n                    customer = customerData.get('customer');\r\n\r\n                event.preventDefault();\r\n\r\n                if (!customer().firstname && cart().isGuestCheckoutAllowed === false) {\r\n                    authenticationPopup.showModal();\r\n\r\n                    return false;\r\n                }\r\n                location.href = config.checkoutUrl;\r\n            });\r\n\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/region-updater.js":"/**\r\n * @category    frontend Checkout region-updater\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true expr:true*/\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui',\r\n    'mage/validation'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.regionUpdater', {\r\n        options: {\r\n            regionTemplate:\r\n                '<option value=\"<%- data.value %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\r\n                    '<%- data.title %>' +\r\n                '</option>',\r\n            isRegionRequired: true,\r\n            isZipRequired: true,\r\n            isCountryRequired: true,\r\n            currentRegion: null,\r\n            isMultipleCountriesAllowed: true\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._initCountryElement();\r\n\r\n            this.currentRegionOption = this.options.currentRegion;\r\n            this.regionTmpl = mageTemplate(this.options.regionTemplate);\r\n\r\n            this._updateRegion(this.element.find('option:selected').val());\r\n\r\n            $(this.options.regionListId).on('change', $.proxy(function (e) {\r\n                this.setOption = false;\r\n                this.currentRegionOption = $(e.target).val();\r\n            }, this));\r\n\r\n            $(this.options.regionInputId).on('focusout', $.proxy(function () {\r\n                this.setOption = true;\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _initCountryElement: function () {\r\n\r\n            if (this.options.isMultipleCountriesAllowed) {\r\n                this.element.parents('div.field').show();\r\n                this.element.on('change', $.proxy(function (e) {\r\n                    this._updateRegion($(e.target).val());\r\n                }, this));\r\n\r\n                if (this.options.isCountryRequired) {\r\n                    this.element.addClass('required-entry');\r\n                    this.element.parents('div.field').addClass('required');\r\n                }\r\n            } else {\r\n                this.element.parents('div.field').hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Remove options from dropdown list\r\n         *\r\n         * @param {Object} selectElement - jQuery object for dropdown list\r\n         * @private\r\n         */\r\n        _removeSelectOptions: function (selectElement) {\r\n            selectElement.find('option').each(function (index) {\r\n                if (index) {\r\n                    $(this).remove();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Render dropdown list\r\n         * @param {Object} selectElement - jQuery object for dropdown list\r\n         * @param {String} key - region code\r\n         * @param {Object} value - region object\r\n         * @private\r\n         */\r\n        _renderSelectOption: function (selectElement, key, value) {\r\n            selectElement.append($.proxy(function () {\r\n                var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\r\n                    tmplData,\r\n                    tmpl;\r\n\r\n                if (value.code && $(name).is('span')) {\r\n                    key = value.code;\r\n                    value.name = $(name).text();\r\n                }\r\n\r\n                tmplData = {\r\n                    value: key,\r\n                    title: value.name,\r\n                    isSelected: false\r\n                };\r\n\r\n                if (this.options.defaultRegion === key) {\r\n                    tmplData.isSelected = true;\r\n                }\r\n\r\n                tmpl = this.regionTmpl({\r\n                    data: tmplData\r\n                });\r\n\r\n                return $(tmpl);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Takes clearError callback function as first option\r\n         * If no form is passed as option, look up the closest form and call clearError method.\r\n         * @private\r\n         */\r\n        _clearError: function () {\r\n            if (this.options.clearError && typeof this.options.clearError === 'function') {\r\n                this.options.clearError.call(this);\r\n            } else {\r\n                if (!this.options.form) {\r\n                    this.options.form = this.element.closest('form').length ? $(this.element.closest('form')[0]) : null;\r\n                }\r\n\r\n                this.options.form = $(this.options.form);\r\n\r\n                this.options.form && this.options.form.data('validator') && this.options.form.validation('clearError',\r\n                    this.options.regionListId, this.options.regionInputId, this.options.postcodeId);\r\n\r\n                // Clean up errors on region & zip fix\r\n                $(this.options.regionInputId).removeClass('mage-error').parent().find('[generated]').remove();\r\n                $(this.options.regionListId).removeClass('mage-error').parent().find('[generated]').remove();\r\n                $(this.options.postcodeId).removeClass('mage-error').parent().find('[generated]').remove();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update dropdown list based on the country selected\r\n         *\r\n         * @param {String} country - 2 uppercase letter for country code\r\n         * @private\r\n         */\r\n        _updateRegion: function (country) {\r\n            // Clear validation error messages\r\n            var regionList = $(this.options.regionListId),\r\n                regionInput = $(this.options.regionInputId),\r\n                postcode = $(this.options.postcodeId),\r\n                label = regionList.parent().siblings('label'),\r\n                requiredLabel = regionList.parents('div.field');\r\n\r\n            this._clearError();\r\n            this._checkRegionRequired(country);\r\n\r\n            // Populate state/province dropdown list if available or use input box\r\n            if (this.options.regionJson[country]) {\r\n                this._removeSelectOptions(regionList);\r\n                $.each(this.options.regionJson[country], $.proxy(function (key, value) {\r\n                    this._renderSelectOption(regionList, key, value);\r\n                }, this));\r\n\r\n                if (this.currentRegionOption) {\r\n                    regionList.val(this.currentRegionOption);\r\n                }\r\n\r\n                if (this.setOption) {\r\n                    regionList.find('option').filter(function () {\r\n                        return this.text === regionInput.val();\r\n                    }).attr('selected', true);\r\n                }\r\n\r\n                if (this.options.isRegionRequired) {\r\n                    regionList.addClass('required-entry').removeAttr('disabled');\r\n                    requiredLabel.addClass('required');\r\n                } else {\r\n                    regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\r\n                    requiredLabel.removeClass('required');\r\n\r\n                    if (!this.options.optionalRegionAllowed) {\r\n                        regionList.attr('disabled', 'disabled');\r\n                    }\r\n                }\r\n\r\n                regionList.show();\r\n                regionInput.hide();\r\n                label.attr('for', regionList.attr('id'));\r\n            } else {\r\n                this._removeSelectOptions(regionList);\r\n\r\n                if (this.options.isRegionRequired) {\r\n                    regionInput.addClass('required-entry').removeAttr('disabled');\r\n                    requiredLabel.addClass('required');\r\n                } else {\r\n                    if (!this.options.optionalRegionAllowed) {\r\n                        regionInput.attr('disabled', 'disabled');\r\n                    }\r\n                    requiredLabel.removeClass('required');\r\n                    regionInput.removeClass('required-entry');\r\n                }\r\n\r\n                regionList.removeClass('required-entry').hide();\r\n                regionInput.show();\r\n                label.attr('for', regionInput.attr('id'));\r\n            }\r\n\r\n            // If country is in optionalzip list, make postcode input not required\r\n            if (this.options.isZipRequired) {\r\n                $.inArray(country, this.options.countriesWithOptionalZip) >= 0 ?\r\n                    postcode.removeClass('required-entry').closest('.field').removeClass('required') :\r\n                    postcode.addClass('required-entry').closest('.field').addClass('required');\r\n            }\r\n\r\n            // Add defaultvalue attribute to state/province select element\r\n            regionList.attr('defaultvalue', this.options.defaultRegion);\r\n        },\r\n\r\n        /**\r\n         * Check if the selected country has a mandatory region selection\r\n         *\r\n         * @param {String} country - Code of the country - 2 uppercase letter for country code\r\n         * @private\r\n         */\r\n        _checkRegionRequired: function (country) {\r\n            var self = this;\r\n\r\n            this.options.isRegionRequired = false;\r\n            $.each(this.options.regionJson.config.regions_required, function (index, elem) {\r\n                if (elem === country) {\r\n                    self.options.isRegionRequired = true;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.regionUpdater;\r\n});\r\n","Magento_Checkout/js/shopping-cart.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.shoppingCart', {\r\n        _create: function() {\r\n            $(this.options.emptyCartButton).on('click', $.proxy(function() {\r\n                $(this.options.emptyCartButton).attr('name', 'update_cart_action_temp');\r\n                $(this.options.updateCartActionContainer)\r\n                    .attr('name', 'update_cart_action').attr('value', 'empty_cart');\r\n            }, this));\r\n            var items = $.find(\"[data-role='cart-item-qty']\");\r\n            for (var i = 0; i < items.length; i++) {\r\n                $(items[i]).on('keypress', $.proxy(function(event) {\r\n                    var keyCode = (event.keyCode ? event.keyCode : event.which);\r\n                    if(keyCode == 13) {\r\n                        $(this.options.emptyCartButton).attr('name', 'update_cart_action_temp');\r\n                        $(this.options.updateCartActionContainer)\r\n                            .attr('name', 'update_cart_action').attr('value', 'update_qty');\r\n\r\n                    }\r\n                }, this));\r\n            }\r\n            $(this.options.continueShoppingButton).on('click', $.proxy(function() {\r\n                location.href = this.options.continueShoppingUrl;\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.shoppingCart;\r\n});\r\n","Magento_Checkout/js/sidebar.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global confirm:true*/\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery/ui',\r\n    'mage/decorate',\r\n    'mage/collapsible',\r\n    'mage/cookies'\r\n], function ($, authenticationPopup, customerData, alert, confirm) {\r\n\r\n    $.widget('mage.sidebar', {\r\n        options: {\r\n            isRecursive: true,\r\n            minicart: {\r\n                maxItemsVisible: 3\r\n            }\r\n        },\r\n        scrollHeight: 0,\r\n\r\n        /**\r\n         * Create sidebar.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._initContent();\r\n        },\r\n\r\n        /**\r\n         * Update sidebar block.\r\n         */\r\n        update: function () {\r\n            $(this.options.targetElement).trigger('contentUpdated');\r\n            this._calcHeight();\r\n            this._isOverflowed();\r\n        },\r\n\r\n        _initContent: function () {\r\n            var self = this,\r\n                events = {};\r\n\r\n            this.element.decorate('list', this.options.isRecursive);\r\n\r\n            events['click ' + this.options.button.close] = function (event) {\r\n                event.stopPropagation();\r\n                $(self.options.targetElement).dropdownDialog('close');\r\n            };\r\n            events['click ' + this.options.button.checkout] = $.proxy(function () {\r\n                var cart = customerData.get('cart'),\r\n                    customer = customerData.get('customer');\r\n\r\n                if (!customer().firstname && cart().isGuestCheckoutAllowed === false) {\r\n                    // set URL for redirect on successful login/registration. It's postprocessed on backend.\r\n                    $.cookie('login_redirect', this.options.url.checkout);\r\n                    if (this.options.url.isRedirectRequired) {\r\n                        location.href = this.options.url.loginUrl;\r\n                    } else {\r\n                        authenticationPopup.showModal();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n                location.href = this.options.url.checkout;\r\n            }, this);\r\n            events['click ' + this.options.button.remove] =  function (event) {\r\n                event.stopPropagation();\r\n                confirm({\r\n                    content: self.options.confirmMessage,\r\n                    actions: {\r\n                        confirm: function () {\r\n                            self._removeItem($(event.currentTarget));\r\n                        },\r\n\r\n                        /** @inheritdoc */\r\n                        always: function (e) {\r\n                            e.stopImmediatePropagation();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            events['keyup ' + this.options.item.qty] = function (event) {\r\n                self._showItemButton($(event.target));\r\n            };\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['change ' + this.options.item.qty] = function (event) {\r\n                self._showItemButton($(event.target));\r\n            };\r\n\r\n            events['click ' + this.options.item.button] = function (event) {\r\n                event.stopPropagation();\r\n                self._updateItemQty($(event.currentTarget));\r\n            };\r\n            events['focusout ' + this.options.item.qty] = function (event) {\r\n                self._validateQty($(event.currentTarget));\r\n            };\r\n\r\n            this._on(this.element, events);\r\n            this._calcHeight();\r\n            this._isOverflowed();\r\n        },\r\n\r\n        /**\r\n         * Add 'overflowed' class to minicart items wrapper element\r\n         *\r\n         * @private\r\n         */\r\n        _isOverflowed: function () {\r\n            var list = $(this.options.minicart.list),\r\n                cssOverflowClass = 'overflowed';\r\n\r\n            if (this.scrollHeight > list.innerHeight()) {\r\n                list.parent().addClass(cssOverflowClass);\r\n            } else {\r\n                list.parent().removeClass(cssOverflowClass);\r\n            }\r\n        },\r\n\r\n        _showItemButton: function (elem) {\r\n            var itemId = elem.data('cart-item'),\r\n                itemQty = elem.data('item-qty');\r\n\r\n            if (this._isValidQty(itemQty, elem.val())) {\r\n                $('#update-cart-item-' + itemId).show('fade', 300);\r\n            } else if (elem.val() == 0) {\r\n                this._hideItemButton(elem);\r\n            } else {\r\n                this._hideItemButton(elem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param origin - origin qty. 'data-item-qty' attribute.\r\n         * @param changed - new qty.\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n        _isValidQty: function (origin, changed) {\r\n            return (origin != changed) &&\r\n                (changed.length > 0) &&\r\n                (changed - 0 == changed) &&\r\n                (changed - 0 > 0);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} elem\r\n         * @private\r\n         */\r\n        _validateQty: function (elem) {\r\n            var itemQty = elem.data('item-qty');\r\n\r\n            if (!this._isValidQty(itemQty, elem.val())) {\r\n                elem.val(itemQty);\r\n            }\r\n        },\r\n\r\n        _hideItemButton: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n            $('#update-cart-item-' + itemId).hide('fade', 300);\r\n        },\r\n\r\n        _updateItemQty: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n            this._ajax(this.options.url.update, {\r\n                item_id: itemId,\r\n                item_qty: $('#cart-item-' + itemId + '-qty').val()\r\n            }, elem, this._updateItemQtyAfter);\r\n        },\r\n\r\n        /**\r\n         * Update content after update qty\r\n         *\r\n         * @param elem\r\n         */\r\n        _updateItemQtyAfter: function (elem) {\r\n            this._hideItemButton(elem);\r\n        },\r\n\r\n        _removeItem: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n\r\n            this._ajax(this.options.url.remove, {\r\n                item_id: itemId\r\n            }, elem, this._removeItemAfter);\r\n        },\r\n\r\n        /**\r\n         * Update content after item remove\r\n         *\r\n         * @param {Object} elem\r\n         * @private\r\n         */\r\n        _removeItemAfter: function (elem) {\r\n            var productData = customerData.get('cart')().items.find(function (item) {\r\n                return Number(elem.data('cart-item')) === Number(item['item_id']);\r\n            });\r\n\r\n            $(document).trigger('ajax:removeFromCart', productData['product_sku']);\r\n        },\r\n\r\n        /**\r\n         * @param {String} url - ajax url\r\n         * @param {Object} data - post data for ajax call\r\n         * @param {Object} elem - element that initiated the event\r\n         * @param {Function} callback - callback method to execute after AJAX success\r\n         */\r\n        _ajax: function (url, data, elem, callback) {\r\n            $.extend(data, {\r\n                'form_key': $.mage.cookies.get('form_key')\r\n            });\r\n\r\n            $.ajax({\r\n                url: url,\r\n                data: data,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                context: this,\r\n                beforeSend: function () {\r\n                    elem.attr('disabled', 'disabled');\r\n                },\r\n                complete: function () {\r\n                    elem.attr('disabled', null);\r\n                }\r\n            })\r\n                .done(function (response) {\r\n                    if (response.success) {\r\n                        callback.call(this, elem, response);\r\n                    } else {\r\n                        var msg = response.error_message;\r\n\r\n                        if (msg) {\r\n                            alert({\r\n                                content: msg\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .fail(function (error) {\r\n                    console.log(JSON.stringify(error));\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Calculate height of minicart list\r\n         *\r\n         * @private\r\n         */\r\n        _calcHeight: function () {\r\n            var self = this,\r\n                height = 0,\r\n                counter = this.options.minicart.maxItemsVisible,\r\n                target = $(this.options.minicart.list),\r\n                outerHeight;\r\n\r\n            self.scrollHeight = 0;\r\n            target.children().each(function () {\r\n\r\n                if ($(this).find('.options').length > 0) {\r\n                    $(this).collapsible();\r\n                }\r\n                outerHeight = $(this).outerHeight();\r\n\r\n                if (counter-- > 0) {\r\n                    height += outerHeight;\r\n                }\r\n                self.scrollHeight += outerHeight;\r\n            });\r\n\r\n            target.parent().height(height);\r\n        }\r\n    });\r\n\r\n    return $.mage.sidebar;\r\n});\r\n","Magento_Checkout/js/action/create-billing-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/address-converter'\r\n    ],\r\n    function (addressConverter) {\r\n        'use strict';\r\n\r\n        return function (addressData) {\r\n            return addressConverter.formAddressDataToQuoteAddress(addressData);\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/create-shipping-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Customer/js/model/address-list',\r\n        'Magento_Checkout/js/model/address-converter'\r\n    ],\r\n    function(addressList, addressConverter) {\r\n        \"use strict\";\r\n        return function(addressData) {\r\n            var address = addressConverter.formAddressDataToQuoteAddress(addressData);\r\n            var isAddressUpdated = addressList().some(function(currentAddress, index, addresses) {\r\n                if (currentAddress.getKey() == address.getKey()) {\r\n                    addresses[index] = address;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!isAddressUpdated) {\r\n                addressList.push(address);\r\n            } else {\r\n                addressList.valueHasMutated();\r\n            }\r\n            return address;\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/get-payment-information.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/payment/method-converter',\r\n        'Magento_Checkout/js/model/payment-service'\r\n    ],\r\n    function ($, quote, urlBuilder, storage, errorProcessor, customer, methodConverter, paymentService) {\r\n        'use strict';\r\n\r\n        return function (deferred, messageContainer) {\r\n            var serviceUrl;\r\n\r\n            deferred = deferred || $.Deferred();\r\n            /**\r\n             * Checkout for guest and registered customer.\r\n             */\r\n            if (!customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/payment-information', {\r\n                    cartId: quote.getQuoteId()\r\n                });\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/payment-information', {});\r\n            }\r\n\r\n            return storage.get(\r\n                serviceUrl, false\r\n            ).done(\r\n                function (response) {\r\n                    quote.setTotals(response.totals);\r\n                    paymentService.setPaymentMethods(methodConverter(response.payment_methods));\r\n                    deferred.resolve();\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                    deferred.reject();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/get-totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global define,alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        '../model/quote',\r\n        'Magento_Checkout/js/model/resource-url-manager',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/totals'\r\n    ],\r\n    function ($, quote, resourceUrlManager, errorProcessor, storage, totals) {\r\n        'use strict';\r\n\r\n        return function (callbacks, deferred) {\r\n            deferred = deferred || $.Deferred();\r\n            totals.isLoading(true);\r\n\r\n            return storage.get(\r\n                resourceUrlManager.getUrlForCartTotals(quote),\r\n                false\r\n            ).done(\r\n                function (response) {\r\n                    var proceed = true;\r\n\r\n                    totals.isLoading(false);\r\n\r\n                    if (callbacks.length > 0) {\r\n                        $.each(callbacks, function (index, callback) {\r\n                            proceed = proceed && callback();\r\n                        });\r\n                    }\r\n\r\n                    if (proceed) {\r\n                        quote.setTotals(response);\r\n                        deferred.resolve();\r\n                    }\r\n                }\r\n            ).error(\r\n                function (response) {\r\n                    totals.isLoading(false);\r\n                    deferred.reject();\r\n                    errorProcessor.process(response);\r\n                }\r\n            ).always(\r\n                function () {\r\n                    totals.isLoading(false);\r\n                }\r\n            );\r\n\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/place-order.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/place-order'\r\n    ],\r\n    function (quote, urlBuilder, customer, placeOrderService) {\r\n        'use strict';\r\n\r\n        return function (paymentData, messageContainer) {\r\n            var serviceUrl, payload;\r\n\r\n            payload = {\r\n                cartId: quote.getQuoteId(),\r\n                billingAddress: quote.billingAddress(),\r\n                paymentMethod: paymentData\r\n            };\r\n\r\n            if (customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/payment-information', {});\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:quoteId/payment-information', {\r\n                    quoteId: quote.getQuoteId()\r\n                });\r\n                payload.email = quote.guestEmail;\r\n            }\r\n\r\n            return placeOrderService(serviceUrl, payload, messageContainer);\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/redirect-on-success.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'mage/url'\r\n    ],\r\n    function (url) {\r\n        'use strict';\r\n\r\n        return {\r\n            redirectUrl: window.checkoutConfig.defaultSuccessPageUrl,\r\n\r\n            /**\r\n             * Provide redirect to page\r\n             */\r\n            execute: function () {\r\n                window.location.replace(url.build(this.redirectUrl));\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/select-billing-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        '../model/quote'\r\n    ],\r\n    function ($, quote) {\r\n        'use strict';\r\n\r\n        return function (billingAddress) {\r\n            var address = null;\r\n\r\n            if (quote.shippingAddress() && billingAddress.getCacheKey() == quote.shippingAddress().getCacheKey()) {\r\n                address = $.extend({}, billingAddress);\r\n                address.saveInAddressBook = null;\r\n            } else {\r\n                address = billingAddress;\r\n            }\r\n            quote.billingAddress(address);\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/select-payment-method.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        '../model/quote'\r\n    ],\r\n    function(quote) {\r\n        'use strict';\r\n        return function (paymentMethod) {\r\n            quote.paymentMethod(paymentMethod);\r\n        }\r\n    }\r\n);\r\n","Magento_Checkout/js/action/select-shipping-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function(quote) {\r\n        'use strict';\r\n        return function(shippingAddress) {\r\n            quote.shippingAddress(shippingAddress);\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/select-shipping-method.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define,alert*/\r\ndefine(\r\n    [\r\n        '../model/quote'\r\n    ],\r\n    function (quote) {\r\n        \"use strict\";\r\n        return function (shippingMethod) {\r\n            quote.shippingMethod(shippingMethod)\r\n        }\r\n    }\r\n);\r\n","Magento_Checkout/js/action/set-billing-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Checkout/js/action/get-payment-information'\r\n    ],\r\n    function ($,\r\n              quote,\r\n              urlBuilder,\r\n              storage,\r\n              errorProcessor,\r\n              customer,\r\n              fullScreenLoader,\r\n              getPaymentInformationAction) {\r\n        'use strict';\r\n\r\n        return function (messageContainer) {\r\n            var serviceUrl,\r\n                payload;\r\n\r\n            /**\r\n             * Checkout for guest and registered customer.\r\n             */\r\n            if (!customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/billing-address', {\r\n                    cartId: quote.getQuoteId()\r\n                });\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    address: quote.billingAddress()\r\n                };\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/billing-address', {});\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    address: quote.billingAddress()\r\n                };\r\n            }\r\n\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.post(\r\n                serviceUrl, JSON.stringify(payload)\r\n            ).done(\r\n                function () {\r\n                    var deferred = $.Deferred();\r\n\r\n                    getPaymentInformationAction(deferred);\r\n                    $.when(deferred).done(function () {\r\n                        fullScreenLoader.stopLoader();\r\n                    });\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/set-payment-information.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/action/get-totals',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function (quote, urlBuilder, storage, errorProcessor, customer, getTotalsAction, fullScreenLoader) {\r\n        'use strict';\r\n\r\n        return function (messageContainer, paymentData) {\r\n            var serviceUrl,\r\n                payload;\r\n\r\n            /**\r\n             * Checkout for guest and registered customer.\r\n             */\r\n            if (!customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/set-payment-information', {\r\n                    cartId: quote.getQuoteId()\r\n                });\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    email: quote.guestEmail,\r\n                    paymentMethod: paymentData,\r\n                    billingAddress: quote.billingAddress()\r\n                };\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/set-payment-information', {});\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    paymentMethod: paymentData,\r\n                    billingAddress: quote.billingAddress()\r\n                };\r\n            }\r\n\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.post(\r\n                serviceUrl, JSON.stringify(payload)\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                }\r\n            ).always(\r\n                function () {\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/set-shipping-information.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define,alert*/\r\ndefine(\r\n    [\r\n        '../model/quote',\r\n        'Magento_Checkout/js/model/shipping-save-processor'\r\n    ],\r\n    function (quote, shippingSaveProcessor) {\r\n        'use strict';\r\n        return function () {\r\n            return shippingSaveProcessor.saveShippingInformation(quote.shippingAddress().getType());\r\n        }\r\n    }\r\n);\r\n","Magento_Checkout/js/model/address-converter.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/new-customer-address',\r\n        'Magento_Customer/js/customer-data',\r\n        'mage/utils/objects'\r\n    ],\r\n    function($, address, customerData, mageUtils) {\r\n        'use strict';\r\n        var countryData = customerData.get('directory-data');\r\n\r\n        return {\r\n            /**\r\n             * Convert address form data to Address object\r\n             * @param {Object} formData\r\n             * @returns {Object}\r\n             */\r\n            formAddressDataToQuoteAddress: function(formData) {\r\n                // clone address form data to new object\r\n                var addressData = $.extend(true, {}, formData),\r\n                    region,\r\n                    regionName = addressData.region;\r\n                if (mageUtils.isObject(addressData.street)) {\r\n                    addressData.street = this.objectToArray(addressData.street);\r\n                }\r\n\r\n                addressData.region = {\r\n                    region_id: addressData.region_id,\r\n                    region_code: addressData.region_code,\r\n                    region: regionName\r\n                };\r\n\r\n                if (addressData.region_id\r\n                    && countryData()[addressData.country_id]\r\n                    && countryData()[addressData.country_id]['regions']\r\n                ) {\r\n                    region = countryData()[addressData.country_id]['regions'][addressData.region_id];\r\n                    if (region) {\r\n                        addressData.region.region_id = addressData['region_id'];\r\n                        addressData.region.region_code = region['code'];\r\n                        addressData.region.region = region['name'];\r\n                    }\r\n                } else if (\r\n                    !addressData.region_id\r\n                    && countryData()[addressData.country_id]\r\n                    && countryData()[addressData.country_id]['regions']\r\n                ) {\r\n                    addressData.region.region_code = '';\r\n                    addressData.region.region = '';\r\n                }\r\n                delete addressData.region_id;\r\n\r\n                return address(addressData);\r\n            },\r\n\r\n            /**\r\n             * Convert Address object to address form data\r\n             * @param {Object} address\r\n             * @returns {Object}\r\n             */\r\n            quoteAddressToFormAddressData: function (address) {\r\n                var self = this;\r\n                var output = {};\r\n\r\n                if ($.isArray(address.street)) {\r\n                    var streetObject = {};\r\n                    address.street.forEach(function(value, index) {\r\n                        streetObject[index] = value;\r\n                    });\r\n                    address.street = streetObject;\r\n                }\r\n\r\n                $.each(address, function (key) {\r\n                    if (address.hasOwnProperty(key) && !$.isFunction(address[key])) {\r\n                        output[self.toUnderscore(key)] = address[key];\r\n                    }\r\n                });\r\n                return output;\r\n            },\r\n\r\n            toUnderscore: function (string) {\r\n                return string.replace(/([A-Z])/g, function($1){return \"_\"+$1.toLowerCase();});\r\n            },\r\n\r\n            formDataProviderToFlatData: function(formProviderData, formIndex) {\r\n                var addressData = {};\r\n                $.each(formProviderData, function(path, value) {\r\n                    var pathComponents = path.split('.');\r\n                    pathComponents.splice(pathComponents.indexOf(formIndex), 1);\r\n                    pathComponents.reverse();\r\n                    var dataObject = {};\r\n                    $.each(pathComponents, function(index, pathPart) {\r\n                        if (index == 0) {\r\n                            dataObject[pathPart] = value;\r\n                        } else {\r\n                            var parent = {};\r\n                            parent[pathPart] = dataObject;\r\n                            dataObject = parent;\r\n                        }\r\n                    });\r\n                    $.extend(true, addressData, dataObject);\r\n                });\r\n                return addressData;\r\n            },\r\n\r\n            /**\r\n             * Convert object to array\r\n             * @param {Object} object\r\n             * @returns {Array}\r\n             */\r\n            objectToArray: function (object) {\r\n                var convertedArray = [];\r\n\r\n                $.each(object, function (key) {\r\n                    return typeof object[key] === 'string' ? convertedArray.push(object[key]) : false;\r\n                });\r\n\r\n                return convertedArray.slice(0);\r\n            },\r\n\r\n            addressToEstimationAddress: function (address) {\r\n                var self = this;\r\n                var estimatedAddressData = {};\r\n\r\n                $.each(address, function (key) {\r\n                    estimatedAddressData[self.toUnderscore(key)] = address[key];\r\n                });\r\n                return this.formAddressDataToQuoteAddress(estimatedAddressData);\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/authentication-messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'Magento_Ui/js/model/messages'\r\n], function (ko, Messages) {\r\n    'use strict';\r\n\r\n    return new Messages();\r\n});\r\n\r\n","Magento_Checkout/js/model/checkout-data-resolver.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\n/*global alert*/\r\n/**\r\n * Checkout adapter for customer data storage\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Customer/js/model/address-list',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/action/create-shipping-address',\r\n        'Magento_Checkout/js/action/select-shipping-address',\r\n        'Magento_Checkout/js/action/select-shipping-method',\r\n        'Magento_Checkout/js/model/payment-service',\r\n        'Magento_Checkout/js/action/select-payment-method',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'Magento_Checkout/js/action/select-billing-address',\r\n        'Magento_Checkout/js/action/create-billing-address',\r\n        'underscore'\r\n    ],\r\n    function (\r\n        addressList,\r\n        quote,\r\n        checkoutData,\r\n        createShippingAddress,\r\n        selectShippingAddress,\r\n        selectShippingMethodAction,\r\n        paymentService,\r\n        selectPaymentMethodAction,\r\n        addressConverter,\r\n        selectBillingAddress,\r\n        createBillingAddress,\r\n        _\r\n    ) {\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            /**\r\n             * Resolve estimation address. Used local storage\r\n             */\r\n            resolveEstimationAddress: function () {\r\n                var address;\r\n\r\n                if (checkoutData.getShippingAddressFromData()) {\r\n                    address = addressConverter.formAddressDataToQuoteAddress(checkoutData.getShippingAddressFromData());\r\n                    selectShippingAddress(address);\r\n                } else {\r\n                    this.resolveShippingAddress();\r\n                }\r\n\r\n                if (quote.isVirtual()) {\r\n                    if (checkoutData.getBillingAddressFromData()) {\r\n                        address = addressConverter.formAddressDataToQuoteAddress(\r\n                            checkoutData.getBillingAddressFromData()\r\n                        );\r\n                        selectBillingAddress(address);\r\n                    } else {\r\n                        this.resolveBillingAddress();\r\n                    }\r\n                }\r\n\r\n            },\r\n\r\n            /**\r\n             * Resolve shipping address. Used local storage\r\n             */\r\n            resolveShippingAddress: function () {\r\n                var newCustomerShippingAddress = checkoutData.getNewCustomerShippingAddress();\r\n\r\n                if (newCustomerShippingAddress) {\r\n                    createShippingAddress(newCustomerShippingAddress);\r\n                }\r\n                this.applyShippingAddress();\r\n            },\r\n\r\n            /**\r\n             * Apply resolved estimated address to quote\r\n             *\r\n             * @param {Object} isEstimatedAddress\r\n             */\r\n            applyShippingAddress: function (isEstimatedAddress) {\r\n                var address,\r\n                    shippingAddress,\r\n                    isConvertAddress,\r\n                    addressData,\r\n                    isShippingAddressInitialized;\r\n\r\n                if (addressList().length == 0) {\r\n                    address = addressConverter.formAddressDataToQuoteAddress(\r\n                        checkoutData.getShippingAddressFromData()\r\n                    );\r\n                    selectShippingAddress(address);\r\n                }\r\n                shippingAddress = quote.shippingAddress();\r\n                isConvertAddress = isEstimatedAddress || false;\r\n\r\n                if (!shippingAddress) {\r\n                    isShippingAddressInitialized = addressList.some(function (addressFromList) {\r\n                        if (checkoutData.getSelectedShippingAddress() == addressFromList.getKey()) {\r\n                            addressData = isConvertAddress ?\r\n                                addressConverter.addressToEstimationAddress(addressFromList)\r\n                                : addressFromList;\r\n                            selectShippingAddress(addressData);\r\n\r\n                            return true;\r\n                        }\r\n\r\n                        return false;\r\n                    });\r\n\r\n                    if (!isShippingAddressInitialized) {\r\n                        isShippingAddressInitialized = addressList.some(function (address) {\r\n                            if (address.isDefaultShipping()) {\r\n                                addressData = isConvertAddress ?\r\n                                    addressConverter.addressToEstimationAddress(address)\r\n                                    : address;\r\n                                selectShippingAddress(addressData);\r\n\r\n                                return true;\r\n                            }\r\n\r\n                            return false;\r\n                        });\r\n                    }\r\n\r\n                    if (!isShippingAddressInitialized && addressList().length == 1) {\r\n                        addressData = isConvertAddress ?\r\n                            addressConverter.addressToEstimationAddress(addressList()[0])\r\n                            : addressList()[0];\r\n                        selectShippingAddress(addressData);\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {Object} ratesData\r\n             */\r\n            resolveShippingRates: function (ratesData) {\r\n                var selectedShippingRate = checkoutData.getSelectedShippingRate(),\r\n                    availableRate = false;\r\n\r\n                if (ratesData.length == 1) {\r\n                    //set shipping rate if we have only one available shipping rate\r\n                    selectShippingMethodAction(ratesData[0]);\r\n\r\n                    return;\r\n                }\r\n\r\n                if (quote.shippingMethod()) {\r\n                    availableRate = _.find(ratesData, function (rate) {\r\n                        return rate.carrier_code == quote.shippingMethod().carrier_code &&\r\n                            rate.method_code == quote.shippingMethod().method_code;\r\n                    });\r\n                }\r\n\r\n                if (!availableRate && selectedShippingRate) {\r\n                    availableRate = _.find(ratesData, function (rate) {\r\n                        return rate.carrier_code + '_' + rate.method_code === selectedShippingRate;\r\n                    });\r\n                }\r\n\r\n                if (!availableRate && window.checkoutConfig.selectedShippingMethod) {\r\n                    availableRate = window.checkoutConfig.selectedShippingMethod;\r\n                    selectShippingMethodAction(window.checkoutConfig.selectedShippingMethod);\r\n                }\r\n\r\n                //Unset selected shipping method if not available\r\n                if (!availableRate) {\r\n                    selectShippingMethodAction(null);\r\n                } else {\r\n                    selectShippingMethodAction(availableRate);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Resolve payment method. Used local storage\r\n             */\r\n            resolvePaymentMethod: function () {\r\n                var availablePaymentMethods = paymentService.getAvailablePaymentMethods(),\r\n                    selectedPaymentMethod = checkoutData.getSelectedPaymentMethod();\r\n\r\n                if (selectedPaymentMethod) {\r\n                    availablePaymentMethods.some(function (payment) {\r\n                        if (payment.method == selectedPaymentMethod) {\r\n                            selectPaymentMethodAction(payment);\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Resolve billing address. Used local storage\r\n             */\r\n            resolveBillingAddress: function () {\r\n                var selectedBillingAddress = checkoutData.getSelectedBillingAddress(),\r\n                    newCustomerBillingAddressData = checkoutData.getNewCustomerBillingAddress();\r\n\r\n                if (selectedBillingAddress) {\r\n                    if (selectedBillingAddress == 'new-customer-address' && newCustomerBillingAddressData) {\r\n                        selectBillingAddress(createBillingAddress(newCustomerBillingAddressData));\r\n                    } else {\r\n                        addressList.some(function (address) {\r\n                            if (selectedBillingAddress == address.getKey()) {\r\n                                selectBillingAddress(address);\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.applyBillingAddress();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Apply resolved billing address to quote\r\n             */\r\n            applyBillingAddress: function () {\r\n                var shippingAddress;\r\n\r\n                if (quote.billingAddress()) {\r\n                    selectBillingAddress(quote.billingAddress());\r\n\r\n                    return;\r\n                }\r\n                shippingAddress = quote.shippingAddress();\r\n\r\n                if (shippingAddress &&\r\n                    shippingAddress.canUseForBilling() &&\r\n                    (shippingAddress.isDefaultShipping() || !quote.isVirtual())\r\n                ) {\r\n                    //set billing address same as shipping by default if it is not empty\r\n                    selectBillingAddress(quote.shippingAddress());\r\n                }\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/customer-email-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Customer/js/model/customer',\r\n        'mage/validation'\r\n    ],\r\n    function ($, customer) {\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            /**\r\n             * Validate checkout agreements\r\n             *\r\n             * @returns {Boolean}\r\n             */\r\n            validate: function () {\r\n                var emailValidationResult = customer.isLoggedIn(),\r\n                    loginFormSelector = 'form[data-role=email-with-possible-login]';\r\n\r\n                if (!customer.isLoggedIn()) {\r\n                    $(loginFormSelector).validation();\r\n                    emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());\r\n                }\r\n\r\n                return emailValidationResult;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/error-processor.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'mage/url',\r\n        'Magento_Ui/js/model/messageList'\r\n    ],\r\n    function (url, globalMessageList) {\r\n        'use strict';\r\n\r\n        return {\r\n            process: function (response, messageContainer) {\r\n                messageContainer = messageContainer || globalMessageList;\r\n                if (response.status == 401) {\r\n                    window.location.replace(url.build('customer/account/login/'));\r\n                } else {\r\n                    var error = JSON.parse(response.responseText);\r\n                    messageContainer.addErrorMessage(error);\r\n                }\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/full-screen-loader.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'rjsResolver'\r\n], function ($, resolver) {\r\n        'use strict';\r\n\r\n        var containerId = '#checkout';\r\n\r\n        return {\r\n\r\n            /**\r\n             * Start full page loader action\r\n             */\r\n            startLoader: function () {\r\n                $(containerId).trigger('processStart');\r\n            },\r\n\r\n            /**\r\n             * Stop full page loader action\r\n             *\r\n             * @param {Boolean} [forceStop]\r\n             */\r\n            stopLoader: function (forceStop) {\r\n                var $elem = $(containerId),\r\n                    stop = $elem.trigger.bind($elem, 'processStop');\r\n\r\n                forceStop ? stop() : resolver(stop);\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/new-customer-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} addressData\r\n     * Returns new address object\r\n     */\r\n    return function (addressData) {\r\n        var identifier = Date.now(),\r\n            regionId;\r\n\r\n        if (addressData.region && addressData.region.region_id) {\r\n            regionId = addressData.region.region_id;\r\n        } else if (addressData.country_id && addressData.country_id == window.checkoutConfig.defaultCountryId) {\r\n            regionId = window.checkoutConfig.defaultRegionId || undefined;\r\n        }\r\n\r\n        return {\r\n            email: addressData.email,\r\n            countryId: addressData['country_id'] || addressData.countryId || window.checkoutConfig.defaultCountryId,\r\n            regionId: regionId || addressData.regionId,\r\n            regionCode: (addressData.region) ? addressData.region.region_code : null,\r\n            region: (addressData.region) ? addressData.region.region : null,\r\n            customerId: addressData.customer_id || addressData.customerId,\r\n            street: addressData.street ? _.compact(addressData.street) : addressData.street,\r\n            company: addressData.company,\r\n            telephone: addressData.telephone,\r\n            fax: addressData.fax,\r\n            postcode: addressData.postcode ? addressData.postcode : window.checkoutConfig.defaultPostcode || undefined,\r\n            city: addressData.city,\r\n            firstname: addressData.firstname,\r\n            lastname: addressData.lastname,\r\n            middlename: addressData.middlename,\r\n            prefix: addressData.prefix,\r\n            suffix: addressData.suffix,\r\n            vatId: addressData.vat_id,\r\n            saveInAddressBook: addressData.save_in_address_book,\r\n            customAttributes: addressData.custom_attributes,\r\n            isDefaultShipping: function () {\r\n                return addressData.default_shipping;\r\n            },\r\n            isDefaultBilling: function () {\r\n                return addressData.default_billing;\r\n            },\r\n            getType: function () {\r\n                return 'new-customer-address';\r\n            },\r\n            getKey: function () {\r\n                return this.getType();\r\n            },\r\n            getCacheKey: function () {\r\n                return this.getType() + identifier;\r\n            },\r\n            isEditable: function () {\r\n                return true;\r\n            },\r\n            canUseForBilling: function () {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n});\r\n","Magento_Checkout/js/model/payment-service.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'underscore',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/payment/method-list',\r\n        'Magento_Checkout/js/action/select-payment-method'\r\n    ], function (_, quote, methodList, selectPaymentMethod) {\r\n        'use strict';\r\n\r\n        /**\r\n         * Free method filter\r\n         * @param {Object} paymentMethod\r\n         * @return {Boolean}\r\n         */\r\n        var isFreePaymentMethod = function (paymentMethod) {\r\n                return paymentMethod.method === 'free';\r\n            },\r\n\r\n            /**\r\n             * Grabs the grand total from quote\r\n             * @return {Number}\r\n             */\r\n            getGrandTotal = function () {\r\n                return quote.totals()['grand_total'];\r\n            };\r\n\r\n        return {\r\n            isFreeAvailable: false,\r\n            /**\r\n             * Populate the list of payment methods\r\n             * @param {Array} methods\r\n             */\r\n            setPaymentMethods: function (methods) {\r\n                var freeMethod,\r\n                    filteredMethods,\r\n                    methodIsAvailable,\r\n                    methodNames;\r\n\r\n                freeMethod = _.find(methods, isFreePaymentMethod);\r\n                this.isFreeAvailable = !!freeMethod;\r\n\r\n                if (freeMethod && getGrandTotal() <= 0) {\r\n                    methods.splice(0, methods.length, freeMethod);\r\n                    selectPaymentMethod(freeMethod);\r\n                }\r\n\r\n                filteredMethods = _.without(methods, freeMethod);\r\n\r\n                if (filteredMethods.length === 1) {\r\n                    selectPaymentMethod(filteredMethods[0]);\r\n                } else if (quote.paymentMethod()) {\r\n                    methodIsAvailable = methods.some(function (item) {\r\n                        return item.method === quote.paymentMethod().method;\r\n                    });\r\n                    //Unset selected payment method if not available\r\n                    if (!methodIsAvailable) {\r\n                        selectPaymentMethod(null);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Overwrite methods with existing methods to preserve ko array references.\r\n                 * This prevent ko from re-rendering those methods.\r\n                 */\r\n                methodNames = _.pluck(methods, 'method');\r\n                _.map(methodList(), function (existingMethod) {\r\n                    var existingMethodIndex = methodNames.indexOf(existingMethod.method);\r\n\r\n                    if (existingMethodIndex !== -1) {\r\n                        methods[existingMethodIndex] = existingMethod;\r\n                    }\r\n                });\r\n\r\n                methodList(methods);\r\n            },\r\n            /**\r\n             * Get the list of available payment methods.\r\n             * @return {Array}\r\n             */\r\n            getAvailablePaymentMethods: function () {\r\n                var allMethods = methodList().slice(),\r\n                    grandTotalOverZero = getGrandTotal() > 0;\r\n\r\n                if (!this.isFreeAvailable) {\r\n                    return allMethods;\r\n                }\r\n                if (grandTotalOverZero) {\r\n                    return _.reject(allMethods, isFreePaymentMethod);\r\n                }\r\n                return _.filter(allMethods, isFreePaymentMethod);\r\n\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/place-order.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function (storage, errorProcessor, fullScreenLoader) {\r\n        'use strict';\r\n\r\n        return function (serviceUrl, payload, messageContainer) {\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.post(\r\n                serviceUrl, JSON.stringify(payload)\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/postcode-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(['mageUtils'], function (utils) {\r\n    'use strict';\r\n    return {\r\n        validatedPostCodeExample: [],\r\n        validate: function(postCode, countryId) {\r\n            var patterns = window.checkoutConfig.postCodes[countryId];\r\n            this.validatedPostCodeExample = [];\r\n\r\n            if (!utils.isEmpty(postCode) && !utils.isEmpty(patterns)) {\r\n                for (var pattern in patterns) {\r\n                    if (patterns.hasOwnProperty(pattern)) {\r\n                        this.validatedPostCodeExample.push(patterns[pattern]['example']);\r\n                        var regex = new RegExp(patterns[pattern]['pattern']);\r\n                        if (regex.test(postCode)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n});\r\n","Magento_Checkout/js/model/quote.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    ['ko'],\r\n    function (ko) {\r\n        'use strict';\r\n        var billingAddress = ko.observable(null);\r\n        var shippingAddress = ko.observable(null);\r\n        var shippingMethod = ko.observable(null);\r\n        var paymentMethod = ko.observable(null);\r\n        var quoteData = window.checkoutConfig.quoteData;\r\n        var basePriceFormat = window.checkoutConfig.basePriceFormat;\r\n        var priceFormat = window.checkoutConfig.priceFormat;\r\n        var storeCode = window.checkoutConfig.storeCode;\r\n        var totalsData = window.checkoutConfig.totalsData;\r\n        var totals = ko.observable(totalsData);\r\n        var collectedTotals = ko.observable({});\r\n        return {\r\n            totals: totals,\r\n            shippingAddress: shippingAddress,\r\n            shippingMethod: shippingMethod,\r\n            billingAddress: billingAddress,\r\n            paymentMethod: paymentMethod,\r\n            guestEmail: null,\r\n\r\n            getQuoteId: function() {\r\n                return quoteData.entity_id;\r\n            },\r\n            isVirtual: function() {\r\n                return !!Number(quoteData.is_virtual);\r\n            },\r\n            getPriceFormat: function() {\r\n                return priceFormat;\r\n            },\r\n            getBasePriceFormat: function() {\r\n                return basePriceFormat;\r\n            },\r\n            getItems: function() {\r\n                return window.checkoutConfig.quoteItemData;\r\n            },\r\n            getTotals: function() {\r\n                return totals;\r\n            },\r\n            setTotals: function(totalsData) {\r\n                if (_.isObject(totalsData) && _.isObject(totalsData.extension_attributes)) {\r\n                    _.each(totalsData.extension_attributes, function(element, index) {\r\n                        totalsData[index] = element;\r\n                    });\r\n                }\r\n                totals(totalsData);\r\n                this.setCollectedTotals('subtotal_with_discount', parseFloat(totalsData.subtotal_with_discount));\r\n            },\r\n            setPaymentMethod: function(paymentMethodCode) {\r\n                paymentMethod(paymentMethodCode);\r\n            },\r\n            getPaymentMethod: function() {\r\n                return paymentMethod;\r\n            },\r\n            getStoreCode: function() {\r\n                return storeCode;\r\n            },\r\n            setCollectedTotals: function(code, value) {\r\n                var totals = collectedTotals();\r\n                totals[code] = value;\r\n                collectedTotals(totals);\r\n            },\r\n            getCalculatedTotal: function() {\r\n                var total = 0.;\r\n                _.each(collectedTotals(), function(value) {\r\n                    total += value;\r\n                });\r\n                return total;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/resource-url-manager.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mageUtils'\r\n    ],\r\n    function(customer, urlBuilder, utils) {\r\n        \"use strict\";\r\n        return {\r\n            getUrlForTotalsEstimationForNewAddress: function(quote) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {cartId: quote.getQuoteId()} : {};\r\n                var urls = {\r\n                    'guest': '/guest-carts/:cartId/totals-information',\r\n                    'customer': '/carts/mine/totals-information'\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            getUrlForEstimationShippingMethodsForNewAddress: function(quote) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quote.getQuoteId()} : {};\r\n                var urls = {\r\n                    'guest': '/guest-carts/:quoteId/estimate-shipping-methods',\r\n                    'customer': '/carts/mine/estimate-shipping-methods'\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            getUrlForEstimationShippingMethodsByAddressId: function(quote) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quote.getQuoteId()} : {};\r\n                var urls = {\r\n                    'default': '/carts/mine/estimate-shipping-methods-by-address-id'\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            getApplyCouponUrl: function(couponCode, quoteId) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quoteId} : {};\r\n                var urls = {\r\n                    'guest': '/guest-carts/' + quoteId + '/coupons/' + couponCode,\r\n                    'customer': '/carts/mine/coupons/' + couponCode\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            getCancelCouponUrl: function(quoteId) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quoteId} : {};\r\n                var urls = {\r\n                    'guest': '/guest-carts/' + quoteId + '/coupons/',\r\n                    'customer': '/carts/mine/coupons/'\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            getUrlForCartTotals: function(quote) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quote.getQuoteId()} : {};\r\n                var urls = {\r\n                    'guest': '/guest-carts/:quoteId/totals',\r\n                    'customer': '/carts/mine/totals'\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            getUrlForSetShippingInformation: function(quote) {\r\n                var params = (this.getCheckoutMethod() == 'guest') ? {cartId: quote.getQuoteId()} : {};\r\n                var urls = {\r\n                    'guest': '/guest-carts/:cartId/shipping-information',\r\n                    'customer': '/carts/mine/shipping-information'\r\n                };\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /** Get url for service */\r\n            getUrl: function(urls, urlParams) {\r\n                var url;\r\n\r\n                if (utils.isEmpty(urls)) {\r\n                    return 'Provided service call does not exist.';\r\n                }\r\n\r\n                if (!utils.isEmpty(urls['default'])) {\r\n                    url = urls['default'];\r\n                } else {\r\n                    url = urls[this.getCheckoutMethod()];\r\n                }\r\n                return urlBuilder.createUrl(url, urlParams);\r\n            },\r\n\r\n            getCheckoutMethod: function() {\r\n                return customer.isLoggedIn() ? 'customer' : 'guest';\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rate-registry.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [],\r\n    function() {\r\n        \"use strict\";\r\n        var cache = [];\r\n        return {\r\n            get: function(addressKey) {\r\n                if (cache[addressKey]) {\r\n                    return cache[addressKey];\r\n                }\r\n                return false;\r\n            },\r\n            set: function(addressKey, data) {\r\n                cache[addressKey] = data;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rate-service.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/shipping-rate-processor/new-address',\r\n        'Magento_Checkout/js/model/shipping-rate-processor/customer-address'\r\n    ],\r\n    function (quote, defaultProcessor, customerAddressProcessor) {\r\n        'use strict';\r\n\r\n        var processors = [];\r\n\r\n        processors.default =  defaultProcessor;\r\n        processors['customer-address'] = customerAddressProcessor;\r\n\r\n        quote.shippingAddress.subscribe(function () {\r\n            var type = quote.shippingAddress().getType();\r\n\r\n            if (processors[type]) {\r\n                processors[type].getRates(quote.shippingAddress());\r\n            } else {\r\n                processors.default.getRates(quote.shippingAddress());\r\n            }\r\n        });\r\n\r\n        return {\r\n            registerProcessor: function (type, processor) {\r\n                processors[type] = processor;\r\n            }\r\n        }\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    ['jquery'],\r\n    function ($) {\r\n        'use strict';\r\n\r\n        var ratesRules = {},\r\n            checkoutConfig = window.checkoutConfig;\r\n\r\n        return {\r\n            registerRules: function (carrier, rules) {\r\n                if (checkoutConfig.activeCarriers.indexOf(carrier) !== -1) {\r\n                    ratesRules[carrier] = rules.getRules();\r\n                }\r\n            },\r\n            getRules: function () {\r\n                return ratesRules;\r\n            },\r\n            getObservableFields: function () {\r\n                var self = this,\r\n                    observableFields = [];\r\n\r\n                $.each(self.getRules(), function (carrier, fields) {\r\n                    $.each(fields, function (field, rules) {\r\n                        if (observableFields.indexOf(field) === -1) {\r\n                            observableFields.push(field);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                return observableFields;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        './shipping-rates-validation-rules',\r\n        '../model/address-converter',\r\n        '../action/select-shipping-address',\r\n        './postcode-validator',\r\n        'mage/translate',\r\n        'uiRegistry',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/shipping-address/form-popup-state'\r\n    ],\r\n    function (\r\n        $,\r\n        ko,\r\n        shippingRatesValidationRules,\r\n        addressConverter,\r\n        selectShippingAddress,\r\n        postcodeValidator,\r\n        $t,\r\n        uiRegistry,\r\n        quote,\r\n        formPopUpState\r\n    ) {\r\n        'use strict';\r\n\r\n        var checkoutConfig = window.checkoutConfig,\r\n            validators = [],\r\n            observedElements = [],\r\n            postcodeElement = null,\r\n            postcodeElementName = 'postcode';\r\n\r\n        return {\r\n            validateAddressTimeout: 0,\r\n            validateDelay: 2000,\r\n\r\n            /**\r\n             * @param {String} carrier\r\n             * @param {Object} validator\r\n             */\r\n            registerValidator: function (carrier, validator) {\r\n                if (checkoutConfig.activeCarriers.indexOf(carrier) !== -1) {\r\n                    validators.push(validator);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {Object} address\r\n             * @return {Boolean}\r\n             */\r\n            validateAddressData: function (address) {\r\n                return validators.some(function (validator) {\r\n                    return validator.validate(address);\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Perform postponed binding for fieldset elements\r\n             *\r\n             * @param {String} formPath\r\n             */\r\n            initFields: function (formPath) {\r\n                var self = this,\r\n                    elements = shippingRatesValidationRules.getObservableFields();\r\n\r\n                if ($.inArray(postcodeElementName, elements) === -1) {\r\n                    // Add postcode field to observables if not exist for zip code validation support\r\n                    elements.push(postcodeElementName);\r\n                }\r\n\r\n                $.each(elements, function (index, field) {\r\n                    uiRegistry.async(formPath + '.' + field)(self.doElementBinding.bind(self));\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Bind shipping rates request to form element\r\n             *\r\n             * @param {Object} element\r\n             * @param {Boolean} force\r\n             * @param {Number} delay\r\n             */\r\n            doElementBinding: function (element, force, delay) {\r\n                var observableFields = shippingRatesValidationRules.getObservableFields();\r\n\r\n                if (element && (observableFields.indexOf(element.index) !== -1 || force)) {\r\n                    if (element.index !== postcodeElementName) {\r\n                        this.bindHandler(element, delay);\r\n                    }\r\n                }\r\n\r\n                if (element.index === postcodeElementName) {\r\n                    this.bindHandler(element, delay);\r\n                    postcodeElement = element;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {*} elements\r\n             * @param {Boolean} force\r\n             * @param {Number} delay\r\n             */\r\n            bindChangeHandlers: function (elements, force, delay) {\r\n                var self = this;\r\n\r\n                $.each(elements, function (index, elem) {\r\n                    self.doElementBinding(elem, force, delay);\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @param {Object} element\r\n             * @param {Number} delay\r\n             */\r\n            bindHandler: function (element, delay) {\r\n                var self = this;\r\n\r\n                delay = typeof delay === 'undefined' ? self.validateDelay : delay;\r\n\r\n                if (element.component.indexOf('/group') !== -1) {\r\n                    $.each(element.elems(), function (index, elem) {\r\n                        self.bindHandler(elem);\r\n                    });\r\n                } else {\r\n                    element.on('value', function () {\r\n                        if (!formPopUpState.isVisible()) {\r\n                            clearTimeout(self.validateAddressTimeout);\r\n                            self.validateAddressTimeout = setTimeout(function () {\r\n                                if (self.postcodeValidation()) {\r\n                                    self.validateFields();\r\n                                }\r\n                            }, delay);\r\n                        }\r\n                    });\r\n                    observedElements.push(element);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            postcodeValidation: function () {\r\n                var countryId = $('select[name=\"country_id\"]').val(),\r\n                    validationResult,\r\n                    warnMessage;\r\n\r\n                if (postcodeElement == null || postcodeElement.value() == null) {\r\n                    return true;\r\n                }\r\n\r\n                postcodeElement.warn(null);\r\n                validationResult = postcodeValidator.validate(postcodeElement.value(), countryId);\r\n\r\n                if (!validationResult) {\r\n                    warnMessage = $t('Provided Zip/Postal Code seems to be invalid.');\r\n\r\n                    if (postcodeValidator.validatedPostCodeExample.length) {\r\n                        warnMessage += $t(' Example: ') + postcodeValidator.validatedPostCodeExample.join('; ') + '. ';\r\n                    }\r\n                    warnMessage += $t('If you believe it is the right one you can ignore this notice.');\r\n                    postcodeElement.warn(warnMessage);\r\n                }\r\n\r\n                return validationResult;\r\n            },\r\n\r\n            /**\r\n             * Convert form data to quote address and validate fields for shipping rates\r\n             */\r\n            validateFields: function () {\r\n                var addressFlat = addressConverter.formDataProviderToFlatData(\r\n                        this.collectObservedData(),\r\n                        'shippingAddress'\r\n                    ),\r\n                    address;\r\n\r\n                if (this.validateAddressData(addressFlat)) {\r\n                    addressFlat = uiRegistry.get('checkoutProvider').shippingAddress;\r\n                    address = addressConverter.formAddressDataToQuoteAddress(addressFlat);\r\n                    selectShippingAddress(address);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Collect observed fields data to object\r\n             *\r\n             * @returns {*}\r\n             */\r\n            collectObservedData: function () {\r\n                var observedValues = {};\r\n\r\n                $.each(observedElements, function (index, field) {\r\n                    observedValues[field.dataScope] = field.value();\r\n                });\r\n\r\n                return observedValues;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-save-processor.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/shipping-save-processor/default'\r\n    ],\r\n    function(defaultProcessor) {\r\n        'use strict';\r\n        var processors = [];\r\n        processors['default'] =  defaultProcessor;\r\n\r\n        return {\r\n            registerProcessor: function(type, processor) {\r\n                processors[type] = processor;\r\n            },\r\n            saveShippingInformation: function (type) {\r\n                var rates = [];\r\n                if (processors[type]) {\r\n                    rates = processors[type].saveShippingInformation();\r\n                } else {\r\n                    rates = processors['default'].saveShippingInformation();\r\n                }\r\n                return rates;\r\n            }\r\n        }\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-service.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        'Magento_Checkout/js/model/checkout-data-resolver'\r\n    ],\r\n    function (ko, checkoutDataResolver) {\r\n        \"use strict\";\r\n        var shippingRates = ko.observableArray([]);\r\n        return {\r\n            isLoading: ko.observable(false),\r\n            /**\r\n             * Set shipping rates\r\n             *\r\n             * @param ratesData\r\n             */\r\n            setShippingRates: function(ratesData) {\r\n                shippingRates(ratesData);\r\n                shippingRates.valueHasMutated();\r\n                checkoutDataResolver.resolveShippingRates(ratesData);\r\n            },\r\n\r\n            /**\r\n             * Get shipping rates\r\n             *\r\n             * @returns {*}\r\n             */\r\n            getShippingRates: function() {\r\n                return shippingRates;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/sidebar.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function() {\r\n        'use strict';\r\n        return {\r\n            popUp: false,\r\n            setPopup: function(popUp) {\r\n                this.popUp = popUp;\r\n            },\r\n            show: function() {\r\n                if (this.popUp) {\r\n                    this.popUp.modal('openModal');\r\n                }\r\n            },\r\n            hide: function() {\r\n                if (this.popUp) {\r\n                    this.popUp.modal('closeModal');\r\n                }\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/step-navigator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko'\r\n    ],\r\n    function($, ko) {\r\n        var steps = ko.observableArray();\r\n        return {\r\n            steps: steps,\r\n            stepCodes: [],\r\n            validCodes: [],\r\n\r\n            handleHash: function () {\r\n                var hashString = window.location.hash.replace('#', '');\r\n                if (hashString == '') {\r\n                    return false;\r\n                }\r\n\r\n                if (-1 == $.inArray(hashString, this.validCodes)) {\r\n                    window.location.href = window.checkoutConfig.pageNotFoundUrl;\r\n                    return false;\r\n                }\r\n\r\n                var isRequestedStepVisible = steps.sort(this.sortItems).some(function(element) {\r\n                    return (element.code == hashString || element.alias == hashString) && element.isVisible();\r\n                });\r\n\r\n                //if requested step is visible, then we don't need to load step data from server\r\n                if (isRequestedStepVisible) {\r\n                    return false;\r\n                }\r\n\r\n                steps.sort(this.sortItems).forEach(function(element) {\r\n                    if (element.code == hashString || element.alias == hashString) {\r\n                        element.navigate();\r\n                    } else {\r\n                        element.isVisible(false);\r\n                    }\r\n\r\n                });\r\n                return false;\r\n            },\r\n\r\n            registerStep: function(code, alias, title, isVisible, navigate, sortOrder) {\r\n                if (-1 != $.inArray(code, this.validCodes)) {\r\n                    throw new DOMException('Step code [' + code + '] already registered in step navigator');\r\n                }\r\n                if (alias != null) {\r\n                    if (-1 != $.inArray(alias, this.validCodes)) {\r\n                        throw new DOMException('Step code [' + alias + '] already registered in step navigator');\r\n                    }\r\n                    this.validCodes.push(alias);\r\n                }\r\n                this.validCodes.push(code);\r\n                steps.push({\r\n                    code: code,\r\n                    alias: alias != null ? alias : code,\r\n                    title : title,\r\n                    isVisible: isVisible,\r\n                    navigate: navigate,\r\n                    sortOrder: sortOrder\r\n                });\r\n                this.stepCodes.push(code);\r\n                var hash = window.location.hash.replace('#', '');\r\n                if (hash != '' && hash != code) {\r\n                    //Force hiding of not active step\r\n                    isVisible(false);\r\n                }\r\n            },\r\n\r\n            sortItems: function(itemOne, itemTwo) {\r\n                return itemOne.sortOrder > itemTwo.sortOrder ? 1 : -1\r\n            },\r\n\r\n            getActiveItemIndex: function() {\r\n                var activeIndex = 0;\r\n                steps.sort(this.sortItems).forEach(function(element, index) {\r\n                    if (element.isVisible()) {\r\n                        activeIndex = index;\r\n                    }\r\n                });\r\n                return activeIndex;\r\n            },\r\n\r\n            isProcessed: function(code) {\r\n                var activeItemIndex = this.getActiveItemIndex();\r\n                var sortedItems = steps.sort(this.sortItems);\r\n                var requestedItemIndex = -1;\r\n                sortedItems.forEach(function(element, index) {\r\n                    if (element.code == code) {\r\n                        requestedItemIndex = index;\r\n                    }\r\n                });\r\n                return activeItemIndex > requestedItemIndex;\r\n            },\r\n\r\n            navigateTo: function(code, scrollToElementId) {\r\n                var sortedItems = steps.sort(this.sortItems);\r\n                var bodyElem = $.browser.safari || $.browser.chrome ? $(\"body\") : $(\"html\");\r\n                scrollToElementId = scrollToElementId || null;\r\n\r\n                if (!this.isProcessed(code)) {\r\n                    return;\r\n                }\r\n                sortedItems.forEach(function(element) {\r\n                    if (element.code == code) {\r\n                        element.isVisible(true);\r\n                        bodyElem.animate({scrollTop: $('#' + code).offset().top}, 0, function () {\r\n                            window.location = window.checkoutConfig.checkoutUrl + \"#\" + code;\r\n                        });\r\n                        if (scrollToElementId && $('#' + scrollToElementId).length) {\r\n                            bodyElem.animate({scrollTop: $('#' + scrollToElementId).offset().top}, 0);\r\n                        }\r\n                    } else {\r\n                        element.isVisible(false);\r\n                    }\r\n\r\n                });\r\n            },\r\n\r\n            next: function() {\r\n                var activeIndex = 0;\r\n                steps.sort(this.sortItems).forEach(function(element, index) {\r\n                    if (element.isVisible()) {\r\n                        element.isVisible(false);\r\n                        activeIndex = index;\r\n                    }\r\n                });\r\n                if (steps().length > activeIndex + 1) {\r\n                    var code = steps()[activeIndex + 1].code;\r\n                    steps()[activeIndex + 1].isVisible(true);\r\n                    window.location = window.checkoutConfig.checkoutUrl + \"#\" + code;\r\n                    document.body.scrollTop = document.documentElement.scrollTop = 0;\r\n                }\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (ko, quote) {\r\n        'use strict';\r\n\r\n        var quoteItems = ko.observable(quote.totals().items);\r\n\r\n        quote.totals.subscribe(function (newValue) {\r\n            quoteItems(newValue.items);\r\n        });\r\n\r\n        return {\r\n            totals: quote.totals,\r\n            isLoading: ko.observable(false),\r\n\r\n            /**\r\n             * @return {Function}\r\n             */\r\n            getItems: function () {\r\n                return quoteItems;\r\n            },\r\n\r\n            /**\r\n             * @param code\r\n             * @return {*}\r\n             */\r\n            getSegment: function (code) {\r\n                if (!this.totals()) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i in this.totals().total_segments) {\r\n                    var total = this.totals().total_segments[i];\r\n\r\n                    if (total.code == code) {\r\n                        return total;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/url-builder.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    ['jquery'],\r\n    function($) {\r\n        return {\r\n            method: \"rest\",\r\n            storeCode: window.checkoutConfig.storeCode,\r\n            version: 'V1',\r\n            serviceUrl: ':method/:storeCode/:version',\r\n\r\n            createUrl: function(url, params) {\r\n                var completeUrl = this.serviceUrl + url;\r\n                return this.bindParams(completeUrl, params);\r\n            },\r\n            bindParams: function(url, params) {\r\n                params.method = this.method;\r\n                params.storeCode = this.storeCode;\r\n                params.version = this.version;\r\n\r\n                var urlParts = url.split(\"/\");\r\n                urlParts = urlParts.filter(Boolean);\r\n\r\n                $.each(urlParts, function(key, part) {\r\n                    part = part.replace(':', '');\r\n                    if (params[part] != undefined) {\r\n                        urlParts[key] = params[part];\r\n                    }\r\n                });\r\n                return urlParts.join('/');\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/cart/cache.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Cart adapter for customer data storage.\r\n * It stores cart data in customer data(localStorage) without saving on server.\r\n * Adapter is created for shipping rates and totals data caching. It eliminates unneeded calculations requests.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Customer/js/customer-data',\r\n    'mageUtils'\r\n], function (_, storage, utils) {\r\n    'use strict';\r\n\r\n    var cacheKey = 'cart-data',\r\n        cartData = {\r\n            totals: null,\r\n            address: null,\r\n            cartVersion: null,\r\n            shippingMethodCode: null,\r\n            shippingCarrierCode: null,\r\n            rates: null\r\n        },\r\n\r\n        /**\r\n         * Set data to local storage.\r\n         *\r\n         * @param {Object} checkoutData\r\n         */\r\n        setData = function (checkoutData) {\r\n            storage.set(cacheKey, checkoutData);\r\n        },\r\n\r\n        /**\r\n         * Get data from local storage.\r\n         *\r\n         * @param {String} [key]\r\n         * @returns {*}\r\n         */\r\n        getData = function (key) {\r\n            var data = key ? storage.get(cacheKey)()[key] : storage.get(cacheKey)();\r\n\r\n            if (_.isEmpty(storage.get(cacheKey)())) {\r\n                setData(utils.copy(cartData));\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Build method name base on name, prefix and suffix.\r\n         *\r\n         * @param {String} name\r\n         * @param {String} prefix\r\n         * @param {String} suffix\r\n         * @return {String}\r\n         */\r\n        getMethodName = function (name, prefix, suffix) {\r\n            prefix = prefix || '';\r\n            suffix = suffix || '';\r\n\r\n            return prefix + name.charAt(0).toUpperCase() + name.slice(1) + suffix;\r\n        };\r\n\r\n    /**\r\n     * Provides get/set/isChanged/clear methods for work with cart data.\r\n     * Can be customized via mixin functionality.\r\n     */\r\n    return {\r\n        cartData: cartData,\r\n\r\n        /**\r\n         * Array of required address fields.\r\n         */\r\n        requiredFields: ['countryId', 'region', 'regionId', 'postcode'],\r\n\r\n        /**\r\n         * Get data from customer data.\r\n         * Concatenate provided key with method name and call method if it exist or makes get by key.\r\n         *\r\n         * @param {String} key\r\n         * @return {*}\r\n         */\r\n        get: function (key) {\r\n            var methodName = getMethodName(key, '_get');\r\n\r\n            if (key === cacheKey) {\r\n                return getData();\r\n            }\r\n\r\n            if (this[methodName]) {\r\n                return this[methodName]();\r\n            }\r\n\r\n            return getData(key);\r\n        },\r\n\r\n        /**\r\n         * Set data to customer data.\r\n         * Concatenate provided key with method name and call method if it exist or makes set by key.\r\n         * @example _setCustomAddress method will be called, if it exists.\r\n         *  set('address', customAddressValue)\r\n         * @example Will set value by provided key.\r\n         *  set('rates', ratesToCompare)\r\n         *\r\n         * @param {String} key\r\n         * @param {*} value\r\n         */\r\n        set: function (key, value) {\r\n            var methodName = getMethodName(key, '_set'),\r\n                obj;\r\n\r\n            if (key === cacheKey) {\r\n                _.each(value, function (val, k) {\r\n                    this.set(k, val);\r\n                }, this);\r\n\r\n                return;\r\n            }\r\n\r\n            if (this[methodName]) {\r\n                this[methodName](value);\r\n            } else {\r\n                obj = getData();\r\n                obj[key] = value;\r\n                setData(obj);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear data in cache.\r\n         * Concatenate provided key with method name and call method if it exist or clear by key.\r\n         * @example _clearCustomAddress method will be called, if it exist.\r\n         *  clear('customAddress')\r\n         * @example Will clear data by provided key.\r\n         *  clear('rates')\r\n         *\r\n         * @param {String} key\r\n         */\r\n        clear: function (key) {\r\n            var methodName = getMethodName(key, '_clear');\r\n\r\n            if (key === cacheKey) {\r\n                setData(this.cartData);\r\n\r\n                return;\r\n            }\r\n\r\n            if (this[methodName]) {\r\n                this[methodName]();\r\n            } else {\r\n                this.set(key, null);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if provided data has difference with cached data.\r\n         * Concatenate provided key with method name and call method if it exist or makes strict equality.\r\n         * @example Will call existing _isAddressChanged.\r\n         *  isChanged('address', addressToCompare)\r\n         * @example Will get data by provided key and make strict equality with provided value.\r\n         *  isChanged('rates', ratesToCompare)\r\n         *\r\n         * @param {String} key\r\n         * @param {*} value\r\n         * @return {Boolean}\r\n         */\r\n        isChanged: function (key, value) {\r\n            var methodName = getMethodName(key, '_is', 'Changed');\r\n\r\n            if (this[methodName]) {\r\n                return this[methodName](value);\r\n            }\r\n\r\n            return this.get(key) !== value;\r\n        },\r\n\r\n        /**\r\n         * Compare cached address with provided.\r\n         * Custom method for check object equality.\r\n         *\r\n         * @param {Object} address\r\n         * @returns {Boolean}\r\n         */\r\n        _isAddressChanged: function (address) {\r\n            return JSON.stringify(_.pick(this.get('address'), this.requiredFields)) !==\r\n                JSON.stringify(_.pick(address, this.requiredFields));\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/cart/estimate-service.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/shipping-rate-processor/new-address',\r\n    'Magento_Checkout/js/model/cart/totals-processor/default',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Checkout/js/model/cart/cache',\r\n    'Magento_Customer/js/customer-data'\r\n], function (quote, defaultProcessor, totalsDefaultProvider, shippingService, cartCache, customerData) {\r\n    'use strict';\r\n\r\n    var rateProcessors = [],\r\n        totalsProcessors = [];\r\n\r\n    quote.shippingAddress.subscribe(function () {\r\n        var type = quote.shippingAddress().getType();\r\n        \r\n        if (quote.isVirtual()) {\r\n            // update totals block when estimated address was set\r\n            totalsProcessors['default'] = totalsDefaultProvider;\r\n            totalsProcessors[type] ?\r\n                totalsProcessors[type].estimateTotals(quote.shippingAddress()) :\r\n                totalsProcessors['default'].estimateTotals(quote.shippingAddress());\r\n        } else {\r\n            // check if user data not changed -> load rates from cache\r\n            if (!cartCache.isChanged('address', quote.shippingAddress()) &&\r\n                !cartCache.isChanged('cartVersion', customerData.get('cart')()['data_id']) &&\r\n                cartCache.get('rates')\r\n            ) {\r\n                shippingService.setShippingRates(cartCache.get('rates'));\r\n\r\n                return;\r\n            }\r\n\r\n            // update rates list when estimated address was set\r\n            rateProcessors['default'] = defaultProcessor;\r\n            rateProcessors[type] ?\r\n                rateProcessors[type].getRates(quote.shippingAddress()) :\r\n                rateProcessors['default'].getRates(quote.shippingAddress());\r\n\r\n            // save rates to cache after load\r\n            shippingService.getShippingRates().subscribe(function (rates) {\r\n                cartCache.set('rates', rates);\r\n            });\r\n        }\r\n    });\r\n    quote.shippingMethod.subscribe(function () {\r\n        totalsDefaultProvider.estimateTotals(quote.shippingAddress());\r\n    });\r\n    quote.billingAddress.subscribe(function () {\r\n        var type = quote.billingAddress().getType();\r\n\r\n        if (quote.isVirtual()) {\r\n            // update totals block when estimated address was set\r\n            totalsProcessors['default'] = totalsDefaultProvider;\r\n            totalsProcessors[type] ?\r\n                totalsProcessors[type].estimateTotals(quote.billingAddress()) :\r\n                totalsProcessors['default'].estimateTotals(quote.billingAddress());\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/model/cart/totals-processor/default.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Checkout/js/model/resource-url-manager',\r\n    'Magento_Checkout/js/model/quote',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'Magento_Checkout/js/model/cart/cache',\r\n    'Magento_Customer/js/customer-data',\r\n], function (_, resourceUrlManager, quote, storage, totalsService, errorProcessor, cartCache, customerData) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Load data from server.\r\n     *\r\n     * @param {Object} address\r\n     */\r\n    var loadFromServer = function (address) {\r\n        var serviceUrl,\r\n            payload;\r\n\r\n        // Start loader for totals block\r\n        totalsService.isLoading(true);\r\n        serviceUrl = resourceUrlManager.getUrlForTotalsEstimationForNewAddress(quote);\r\n        payload = {\r\n            addressInformation: {\r\n                address: _.pick(address, cartCache.requiredFields)\r\n            }\r\n        };\r\n\r\n        if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\r\n            payload.addressInformation['shipping_method_code'] = quote.shippingMethod()['method_code'];\r\n            payload.addressInformation['shipping_carrier_code'] = quote.shippingMethod()['carrier_code'];\r\n        }\r\n\r\n        storage.post(\r\n            serviceUrl, JSON.stringify(payload), false\r\n        ).done(function (result) {\r\n            var data = {\r\n                totals: result,\r\n                address: address,\r\n                cartVersion: customerData.get('cart')()['data_id'],\r\n                shippingMethodCode: null,\r\n                shippingCarrierCode: null\r\n            };\r\n\r\n            if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\r\n                data.shippingMethodCode = quote.shippingMethod()['method_code'];\r\n                data.shippingCarrierCode = quote.shippingMethod()['carrier_code'];\r\n            }\r\n\r\n            quote.setTotals(result);\r\n            cartCache.set('cart-data', data);\r\n        }).fail(function (response) {\r\n            errorProcessor.process(response);\r\n        }).always(function () {\r\n            // Stop loader for totals block\r\n            totalsService.isLoading(false);\r\n        });\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Array of required address fields.\r\n         * \r\n         * @property {Array.String} requiredFields\r\n         * @deprecated Use cart cache.\r\n         */\r\n        requiredFields: cartCache.requiredFields,\r\n\r\n        /**\r\n         * Get shipping rates for specified address.\r\n         * \r\n         * @param {Object} address\r\n         */\r\n        estimateTotals: function (address) {\r\n            var data = {\r\n                shippingMethodCode: null,\r\n                shippingCarrierCode: null\r\n            };\r\n\r\n            if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\r\n                data.shippingMethodCode = quote.shippingMethod()['method_code'];\r\n                data.shippingCarrierCode = quote.shippingMethod()['carrier_code'];\r\n            }\r\n\r\n            if (!cartCache.isChanged('cartVersion', customerData.get('cart')()['data_id']) &&\r\n                !cartCache.isChanged('shippingMethodCode', data.shippingMethodCode) &&\r\n                !cartCache.isChanged('shippingCarrierCode', data.shippingCarrierCode) &&\r\n                !cartCache.isChanged('address', address) &&\r\n                cartCache.get('totals')\r\n            ) {\r\n                quote.setTotals(cartCache.get('totals'));\r\n            } else {\r\n                loadFromServer(address);\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/payment/additional-validators.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [],\r\n    function() {\r\n        'use strict';\r\n        var validators = [];\r\n        return {\r\n            /**\r\n             * Register unique validator\r\n             *\r\n             * @param validator\r\n             */\r\n            registerValidator: function(validator) {\r\n                validators.push(validator);\r\n            },\r\n\r\n            /**\r\n             * Returns array of registered validators\r\n             *\r\n             * @returns {Array}\r\n             */\r\n            getValidators: function() {\r\n                return validators;\r\n            },\r\n\r\n            /**\r\n             * Process validators\r\n             *\r\n             * @returns {boolean}\r\n             */\r\n            validate: function() {\r\n                var validationResult = true;\r\n\r\n                if (validators.length <= 0) {\r\n                    return validationResult;\r\n                }\r\n\r\n                validators.forEach(function(item) {\r\n                    if (item.validate() == false) {\r\n                        validationResult = false;\r\n                        return false;\r\n                    }\r\n                });\r\n                return validationResult;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/payment/method-converter.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'underscore'\r\n    ],\r\n    function (_) {\r\n        'use strict';\r\n\r\n        return function (methods) {\r\n            _.each(methods, function(method) {\r\n                if (method.hasOwnProperty('code')) {\r\n                    method.method = method.code;\r\n                    delete method.code;\r\n                }\r\n            });\r\n\r\n            return methods;\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/payment/method-group.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n        'uiElement',\r\n        'mage/translate'\r\n], function (Element, $t) {\r\n    'use strict';\r\n\r\n    var DEFAULT_GROUP_ALIAS = 'default';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            alias: DEFAULT_GROUP_ALIAS,\r\n            title: $t('Payment Method'),\r\n            sortOrder: 100,\r\n            displayArea: 'payment-methods-items-${ $.alias }'\r\n        },\r\n\r\n        /**\r\n         * Checks if group instance is default\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isDefault: function () {\r\n            return this.alias === DEFAULT_GROUP_ALIAS;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/model/payment/method-list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'ko'\r\n    ],\r\n    function(ko) {\r\n        'use strict';\r\n        return ko.observableArray([]);\r\n    }\r\n);\r\n","Magento_Checkout/js/model/payment/renderer-list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'ko'\r\n    ],\r\n    function(ko) {\r\n        'use strict';\r\n        return ko.observableArray([]);\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-address/form-popup-state.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'ko'\r\n    ],\r\n    function(ko) {\r\n        'use strict';\r\n        return {\r\n            isVisible: ko.observable(false)\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rate-processor/customer-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/resource-url-manager',\r\n        'Magento_Checkout/js/model/quote',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/shipping-service',\r\n        'Magento_Checkout/js/model/shipping-rate-registry',\r\n        'Magento_Checkout/js/model/error-processor'\r\n    ],\r\n    function (resourceUrlManager, quote, storage, shippingService, rateRegistry, errorProcessor) {\r\n        \"use strict\";\r\n        return {\r\n            getRates: function(address) {\r\n                shippingService.isLoading(true);\r\n                var cache = rateRegistry.get(address.getKey());\r\n                if (cache) {\r\n                    shippingService.setShippingRates(cache);\r\n                    shippingService.isLoading(false);\r\n                } else {\r\n                    storage.post(\r\n                        resourceUrlManager.getUrlForEstimationShippingMethodsByAddressId(),\r\n                        JSON.stringify({\r\n                            addressId: address.customerAddressId\r\n                        }),\r\n                        false\r\n                    ).done(\r\n                        function(result) {\r\n                            rateRegistry.set(address.getKey(), result);\r\n                            shippingService.setShippingRates(result);\r\n                        }\r\n\r\n                    ).fail(\r\n                        function(response) {\r\n                            shippingService.setShippingRates([]);\r\n                            errorProcessor.process(response);\r\n                        }\r\n                    ).always(\r\n                        function () {\r\n                            shippingService.isLoading(false);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rate-processor/new-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/model/resource-url-manager',\r\n        'Magento_Checkout/js/model/quote',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/shipping-service',\r\n        'Magento_Checkout/js/model/shipping-rate-registry',\r\n        'Magento_Checkout/js/model/error-processor'\r\n    ],\r\n    function (resourceUrlManager, quote, storage, shippingService, rateRegistry, errorProcessor) {\r\n        'use strict';\r\n\r\n        return {\r\n            /**\r\n             * Get shipping rates for specified address.\r\n             * @param {Object} address\r\n             */\r\n            getRates: function (address) {\r\n                shippingService.isLoading(true);\r\n                var cache = rateRegistry.get(address.getCacheKey()),\r\n                    serviceUrl = resourceUrlManager.getUrlForEstimationShippingMethodsForNewAddress(quote),\r\n                    payload = JSON.stringify({\r\n                            address: {\r\n                                'street': address.street,\r\n                                'city': address.city,\r\n                                'region_id': address.regionId,\r\n                                'region': address.region,\r\n                                'country_id': address.countryId,\r\n                                'postcode': address.postcode,\r\n                                'email': address.email,\r\n                                'customer_id': address.customerId,\r\n                                'firstname': address.firstname,\r\n                                'lastname': address.lastname,\r\n                                'middlename': address.middlename,\r\n                                'prefix': address.prefix,\r\n                                'suffix': address.suffix,\r\n                                'vat_id': address.vatId,\r\n                                'company': address.company,\r\n                                'telephone': address.telephone,\r\n                                'fax': address.fax,\r\n                                'custom_attributes': address.customAttributes,\r\n                                'save_in_address_book': address.saveInAddressBook\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                if (cache) {\r\n                    shippingService.setShippingRates(cache);\r\n                    shippingService.isLoading(false);\r\n                } else {\r\n                    storage.post(\r\n                        serviceUrl, payload, false\r\n                    ).done(\r\n                        function (result) {\r\n                            rateRegistry.set(address.getCacheKey(), result);\r\n                            shippingService.setShippingRates(result);\r\n                        }\r\n                    ).fail(\r\n                        function (response) {\r\n                            shippingService.setShippingRates([]);\r\n                            errorProcessor.process(response);\r\n                        }\r\n                    ).always(\r\n                        function () {\r\n                            shippingService.isLoading(false);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-save-processor/default.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define,alert*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/resource-url-manager',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/payment-service',\r\n        'Magento_Checkout/js/model/payment/method-converter',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Checkout/js/action/select-billing-address'\r\n    ],\r\n    function (\r\n        ko,\r\n        quote,\r\n        resourceUrlManager,\r\n        storage,\r\n        paymentService,\r\n        methodConverter,\r\n        errorProcessor,\r\n        fullScreenLoader,\r\n        selectBillingAddressAction\r\n    ) {\r\n        'use strict';\r\n\r\n        return {\r\n            saveShippingInformation: function () {\r\n                var payload;\r\n\r\n                if (!quote.billingAddress()) {\r\n                    selectBillingAddressAction(quote.shippingAddress());\r\n                }\r\n\r\n                payload = {\r\n                    addressInformation: {\r\n                        shipping_address: quote.shippingAddress(),\r\n                        billing_address: quote.billingAddress(),\r\n                        shipping_method_code: quote.shippingMethod().method_code,\r\n                        shipping_carrier_code: quote.shippingMethod().carrier_code\r\n                    }\r\n                };\r\n\r\n                fullScreenLoader.startLoader();\r\n\r\n                return storage.post(\r\n                    resourceUrlManager.getUrlForSetShippingInformation(quote),\r\n                    JSON.stringify(payload)\r\n                ).done(\r\n                    function (response) {\r\n                        quote.setTotals(response.totals);\r\n                        paymentService.setPaymentMethods(methodConverter(response.payment_methods));\r\n                        fullScreenLoader.stopLoader();\r\n                    }\r\n                ).fail(\r\n                    function (response) {\r\n                        errorProcessor.process(response);\r\n                        fullScreenLoader.stopLoader();\r\n                    }\r\n                );\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/view/authentication-messages.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/view/messages',\r\n    'Magento_Checkout/js/model/authentication-messages'\r\n], function (Component, messageContainer) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        initialize: function (config) {\r\n            return this._super(config, messageContainer);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/authentication.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Ui/js/form/form',\r\n        'Magento_Customer/js/action/login',\r\n        'Magento_Customer/js/model/customer',\r\n        'mage/validation',\r\n        'Magento_Checkout/js/model/authentication-messages',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function($, Component, loginAction, customer, validation, messageContainer, fullScreenLoader) {\r\n        'use strict';\r\n        var checkoutConfig = window.checkoutConfig;\r\n\r\n        return Component.extend({\r\n            isGuestCheckoutAllowed: checkoutConfig.isGuestCheckoutAllowed,\r\n            isCustomerLoginRequired: checkoutConfig.isCustomerLoginRequired,\r\n            registerUrl: checkoutConfig.registerUrl,\r\n            forgotPasswordUrl: checkoutConfig.forgotPasswordUrl,\r\n            autocomplete: checkoutConfig.autocomplete,\r\n            defaults: {\r\n                template: 'Magento_Checkout/authentication'\r\n            },\r\n\r\n            /** Is login form enabled for current customer */\r\n            isActive: function() {\r\n                return !customer.isLoggedIn();\r\n            },\r\n\r\n            /** Provide login action */\r\n            login: function(loginForm) {\r\n                var loginData = {},\r\n                    formDataArray = $(loginForm).serializeArray();\r\n\r\n                formDataArray.forEach(function (entry) {\r\n                    loginData[entry.name] = entry.value;\r\n                });\r\n\r\n                if($(loginForm).validation()\r\n                    && $(loginForm).validation('isValid')\r\n                ) {\r\n                    fullScreenLoader.startLoader();\r\n                    loginAction(loginData, checkoutConfig.checkoutUrl, undefined, messageContainer).always(function() {\r\n                        fullScreenLoader.stopLoader();\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/beforePlaceOrder.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    ['uiComponent'],\r\n    function (Component) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                displayArea: 'beforePlaceOrder'\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/billing-address.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'ko',\r\n        'underscore',\r\n        'Magento_Ui/js/form/form',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Customer/js/model/address-list',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/action/create-billing-address',\r\n        'Magento_Checkout/js/action/select-billing-address',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'Magento_Customer/js/customer-data',\r\n        'Magento_Checkout/js/action/set-billing-address',\r\n        'Magento_Ui/js/model/messageList',\r\n        'mage/translate'\r\n    ],\r\n    function (\r\n        ko,\r\n        _,\r\n        Component,\r\n        customer,\r\n        addressList,\r\n        quote,\r\n        createBillingAddress,\r\n        selectBillingAddress,\r\n        checkoutData,\r\n        checkoutDataResolver,\r\n        customerData,\r\n        setBillingAddressAction,\r\n        globalMessageList,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        var lastSelectedBillingAddress = null,\r\n            newAddressOption = {\r\n                /**\r\n                 * Get new address label\r\n                 * @returns {String}\r\n                 */\r\n                getAddressInline: function () {\r\n                    return $t('New Address');\r\n                },\r\n                customerAddressId: null\r\n            },\r\n            countryData = customerData.get('directory-data'),\r\n            addressOptions = addressList().filter(function (address) {\r\n                return address.getType() == 'customer-address';\r\n            });\r\n\r\n        addressOptions.push(newAddressOption);\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/billing-address'\r\n            },\r\n            currentBillingAddress: quote.billingAddress,\r\n            addressOptions: addressOptions,\r\n            customerHasAddresses: addressOptions.length > 1,\r\n\r\n            /**\r\n             * Init component\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                quote.paymentMethod.subscribe(function () {\r\n                    checkoutDataResolver.resolveBillingAddress();\r\n                }, this);\r\n            },\r\n\r\n            /**\r\n             * @return {exports.initObservable}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe({\r\n                        selectedAddress: null,\r\n                        isAddressDetailsVisible: quote.billingAddress() != null,\r\n                        isAddressFormVisible: !customer.isLoggedIn() || addressOptions.length == 1,\r\n                        isAddressSameAsShipping: false,\r\n                        saveInAddressBook: 1\r\n                    });\r\n\r\n                quote.billingAddress.subscribe(function (newAddress) {\r\n                    if (quote.isVirtual()) {\r\n                        this.isAddressSameAsShipping(false);\r\n                    } else {\r\n                        this.isAddressSameAsShipping(\r\n                            newAddress != null &&\r\n                            newAddress.getCacheKey() == quote.shippingAddress().getCacheKey()\r\n                        );\r\n                    }\r\n\r\n                    if (newAddress != null && newAddress.saveInAddressBook !== undefined) {\r\n                        this.saveInAddressBook(newAddress.saveInAddressBook);\r\n                    } else {\r\n                        this.saveInAddressBook(1);\r\n                    }\r\n                    this.isAddressDetailsVisible(true);\r\n                }, this);\r\n\r\n                return this;\r\n            },\r\n\r\n            canUseShippingAddress: ko.computed(function () {\r\n                return !quote.isVirtual() && quote.shippingAddress() && quote.shippingAddress().canUseForBilling();\r\n            }),\r\n\r\n            /**\r\n             * @param {Object} address\r\n             * @return {*}\r\n             */\r\n            addressOptionsText: function (address) {\r\n                return address.getAddressInline();\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            useShippingAddress: function () {\r\n                if (this.isAddressSameAsShipping()) {\r\n                    selectBillingAddress(quote.shippingAddress());\r\n\r\n                    this.updateAddresses();\r\n                    this.isAddressDetailsVisible(true);\r\n                } else {\r\n                    lastSelectedBillingAddress = quote.billingAddress();\r\n                    quote.billingAddress(null);\r\n                    this.isAddressDetailsVisible(false);\r\n                }\r\n                checkoutData.setSelectedBillingAddress(null);\r\n\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * Update address action\r\n             */\r\n            updateAddress: function () {\r\n                if (this.selectedAddress() && this.selectedAddress() != newAddressOption) {\r\n                    selectBillingAddress(this.selectedAddress());\r\n                    checkoutData.setSelectedBillingAddress(this.selectedAddress().getKey());\r\n                } else {\r\n                    this.source.set('params.invalid', false);\r\n                    this.source.trigger(this.dataScopePrefix + '.data.validate');\r\n\r\n                    if (this.source.get(this.dataScopePrefix + '.custom_attributes')) {\r\n                        this.source.trigger(this.dataScopePrefix + '.custom_attributes.data.validate');\r\n                    }\r\n\r\n                    if (!this.source.get('params.invalid')) {\r\n                        var addressData = this.source.get(this.dataScopePrefix),\r\n                            newBillingAddress;\r\n\r\n                        if (customer.isLoggedIn() && !this.customerHasAddresses) {\r\n                            this.saveInAddressBook(1);\r\n                        }\r\n                        addressData['save_in_address_book'] = this.saveInAddressBook() ? 1 : 0;\r\n                        newBillingAddress = createBillingAddress(addressData);\r\n\r\n                        // New address must be selected as a billing address\r\n                        selectBillingAddress(newBillingAddress);\r\n                        checkoutData.setSelectedBillingAddress(newBillingAddress.getKey());\r\n                        checkoutData.setNewCustomerBillingAddress(addressData);\r\n                    }\r\n                }\r\n                this.updateAddresses();\r\n            },\r\n\r\n            /**\r\n             * Edit address action\r\n             */\r\n            editAddress: function () {\r\n                lastSelectedBillingAddress = quote.billingAddress();\r\n                quote.billingAddress(null);\r\n                this.isAddressDetailsVisible(false);\r\n            },\r\n\r\n            /**\r\n             * Cancel address edit action\r\n             */\r\n            cancelAddressEdit: function () {\r\n                this.restoreBillingAddress();\r\n\r\n                if (quote.billingAddress()) {\r\n                    // restore 'Same As Shipping' checkbox state\r\n                    this.isAddressSameAsShipping(\r\n                        quote.billingAddress() != null &&\r\n                            quote.billingAddress().getCacheKey() == quote.shippingAddress().getCacheKey() &&\r\n                            !quote.isVirtual()\r\n                    );\r\n                    this.isAddressDetailsVisible(true);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Restore billing address\r\n             */\r\n            restoreBillingAddress: function () {\r\n                if (lastSelectedBillingAddress != null) {\r\n                    selectBillingAddress(lastSelectedBillingAddress);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {Object} address\r\n             */\r\n            onAddressChange: function (address) {\r\n                this.isAddressFormVisible(address == newAddressOption);\r\n            },\r\n\r\n            /**\r\n             * @param {int} countryId\r\n             * @return {*}\r\n             */\r\n            getCountryName: function (countryId) {\r\n                return countryData()[countryId] != undefined ? countryData()[countryId].name : '';\r\n            },\r\n\r\n            /**\r\n             * Trigger action to update shipping and billing addresses\r\n             */\r\n            updateAddresses: function () {\r\n                if (window.checkoutConfig.reloadOnBillingAddress ||\r\n                    !window.checkoutConfig.displayBillingOnPaymentMethod\r\n                ) {\r\n                    setBillingAddressAction(globalMessageList);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get code\r\n             * @param {Object} parent\r\n             * @returns {String}\r\n             */\r\n            getCode: function (parent) {\r\n                return _.isFunction(parent.getCode) ? parent.getCode() : 'shared';\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/estimation.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Catalog/js/price-utils',\r\n        'Magento_Checkout/js/model/totals',\r\n        'Magento_Checkout/js/model/sidebar'\r\n    ],\r\n    function (Component, quote, priceUtils, totals, sidebarModel) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            isLoading: totals.isLoading,\r\n            getQuantity: function () {\r\n                if (totals.totals()) {\r\n                    return parseFloat(totals.totals()['items_qty']);\r\n                }\r\n\r\n                return 0;\r\n            },\r\n            getPureValue: function () {\r\n                if (totals.totals()) {\r\n                    return parseFloat(totals.getSegment('grand_total').value);\r\n                }\r\n\r\n                return 0;\r\n            },\r\n            showSidebar: function () {\r\n                sidebarModel.show();\r\n            },\r\n            getFormattedPrice: function (price) {\r\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n            },\r\n            getValue: function () {\r\n                return this.getFormattedPrice(this.getPureValue());\r\n            }\r\n        });\r\n    }\r\n);\r\n\r\n","Magento_Checkout/js/view/minicart.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    'sidebar',\r\n    'mage/translate',\r\n    'mage/dropdown'\r\n], function (Component, customerData, $, ko, _) {\r\n    'use strict';\r\n\r\n    var sidebarInitialized = false,\r\n        addToCartCalls = 0,\r\n        miniCart;\r\n\r\n    miniCart = $('[data-block=\\'minicart\\']');\r\n    miniCart.on('dropdowndialogopen', function () {\r\n        initSidebar();\r\n    });\r\n\r\n    /**\r\n     * @return {Boolean}\r\n     */\r\n    function initSidebar() {\r\n        if (miniCart.data('mageSidebar')) {\r\n            miniCart.sidebar('update');\r\n        }\r\n\r\n        if (!$('[data-role=product-item]').length) {\r\n            return false;\r\n        }\r\n        miniCart.trigger('contentUpdated');\r\n\r\n        if (sidebarInitialized) {\r\n            return false;\r\n        }\r\n        sidebarInitialized = true;\r\n        miniCart.sidebar({\r\n            'targetElement': 'div.block.block-minicart',\r\n            'url': {\r\n                'checkout': window.checkout.checkoutUrl,\r\n                'update': window.checkout.updateItemQtyUrl,\r\n                'remove': window.checkout.removeItemUrl,\r\n                'loginUrl': window.checkout.customerLoginUrl,\r\n                'isRedirectRequired': window.checkout.isRedirectRequired\r\n            },\r\n            'button': {\r\n                'checkout': '#top-cart-btn-checkout',\r\n                'remove': '#mini-cart a.action.delete',\r\n                'close': '#btn-minicart-close'\r\n            },\r\n            'showcart': {\r\n                'parent': 'span.counter',\r\n                'qty': 'span.counter-number',\r\n                'label': 'span.counter-label'\r\n            },\r\n            'minicart': {\r\n                'list': '#mini-cart',\r\n                'content': '#minicart-content-wrapper',\r\n                'qty': 'div.items-total',\r\n                'subtotal': 'div.subtotal span.price',\r\n                'maxItemsVisible': window.checkout.minicartMaxItemsVisible\r\n            },\r\n            'item': {\r\n                'qty': ':input.cart-item-qty',\r\n                'button': ':button.update-cart-item'\r\n            },\r\n            'confirmMessage': $.mage.__('Are you sure you would like to remove this item from the shopping cart?')\r\n        });\r\n    }\r\n\r\n    return Component.extend({\r\n        shoppingCartUrl: window.checkout.shoppingCartUrl,\r\n        maxItemsToDisplay: window.checkout.maxItemsToDisplay,\r\n        cart: {},\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            var self = this,\r\n                cartData = customerData.get('cart');\r\n\r\n            this.update(cartData());\r\n            cartData.subscribe(function (updatedCart) {\r\n                addToCartCalls--;\r\n                this.isLoading(addToCartCalls > 0);\r\n                sidebarInitialized = false;\r\n                this.update(updatedCart);\r\n                initSidebar();\r\n            }, this);\r\n            $('[data-block=\"minicart\"]').on('contentLoading', function (event) {\r\n                addToCartCalls++;\r\n                self.isLoading(true);\r\n            });\r\n            if (cartData().website_id !== window.checkout.websiteId) {\r\n                customerData.reload(['cart'], false);\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n        isLoading: ko.observable(false),\r\n        initSidebar: initSidebar,\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        closeSidebar: function () {\r\n            var minicart = $('[data-block=\"minicart\"]');\r\n            minicart.on('click', '[data-action=\"close\"]', function (event) {\r\n                event.stopPropagation();\r\n                minicart.find('[data-role=\"dropdownDialog\"]').dropdownDialog('close');\r\n            });\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @param {String} productType\r\n         * @return {*|String}\r\n         */\r\n        getItemRenderer: function (productType) {\r\n            return this.itemRenderer[productType] || 'defaultRenderer';\r\n        },\r\n\r\n        /**\r\n         * Update mini shopping cart content.\r\n         *\r\n         * @param {Object} updatedCart\r\n         * @returns void\r\n         */\r\n        update: function (updatedCart) {\r\n            _.each(updatedCart, function (value, key) {\r\n                if (!this.cart.hasOwnProperty(key)) {\r\n                    this.cart[key] = ko.observable();\r\n                }\r\n                this.cart[key](value);\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Get cart param by name.\r\n         *\r\n         * @param {String} name\r\n         * @returns {*}\r\n         */\r\n        getCartParam: function (name) {\r\n            if (!_.isUndefined(name)) {\r\n                if (!this.cart.hasOwnProperty(name)) {\r\n                    this.cart[name] = ko.observable();\r\n                }\r\n            }\r\n\r\n            return this.cart[name]();\r\n        },\r\n\r\n        /**\r\n         * Returns array of cart items, limited by 'maxItemsToDisplay' setting.\r\n         *\r\n         * @returns []\r\n         */\r\n        getCartItems: function () {\r\n            var items = this.getCartParam('items') || [];\r\n            items = items.slice(parseInt(-this.maxItemsToDisplay, 10));\r\n\r\n            return items;\r\n        },\r\n\r\n        /**\r\n         * Returns count of cart line items.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getCartLineItemsCount: function () {\r\n            var items = this.getCartParam('items') || [];\r\n\r\n            return parseInt(items.length, 10);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/payment.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        \"underscore\",\r\n        'uiComponent',\r\n        'ko',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/step-navigator',\r\n        'Magento_Checkout/js/model/payment-service',\r\n        'Magento_Checkout/js/model/payment/method-converter',\r\n        'Magento_Checkout/js/action/get-payment-information',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'mage/translate'\r\n    ],\r\n    function (\r\n        $,\r\n        _,\r\n        Component,\r\n        ko,\r\n        quote,\r\n        stepNavigator,\r\n        paymentService,\r\n        methodConverter,\r\n        getPaymentInformation,\r\n        checkoutDataResolver,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        /** Set payment methods to collection */\r\n        paymentService.setPaymentMethods(methodConverter(window.checkoutConfig.paymentMethods));\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/payment',\r\n                activeMethod: ''\r\n            },\r\n            isVisible: ko.observable(quote.isVirtual()),\r\n            quoteIsVirtual: quote.isVirtual(),\r\n            isPaymentMethodsAvailable: ko.computed(function () {\r\n                return paymentService.getAvailablePaymentMethods().length > 0;\r\n            }),\r\n\r\n            initialize: function () {\r\n                this._super();\r\n                checkoutDataResolver.resolvePaymentMethod();\r\n                stepNavigator.registerStep(\r\n                    'payment',\r\n                    null,\r\n                    $t('Review & Payments'),\r\n                    this.isVisible,\r\n                    _.bind(this.navigate, this),\r\n                    20\r\n                );\r\n                return this;\r\n            },\r\n\r\n            navigate: function () {\r\n                var self = this;\r\n                getPaymentInformation().done(function () {\r\n                    self.isVisible(true);\r\n                });\r\n            },\r\n\r\n            getFormKey: function() {\r\n                return window.checkoutConfig.formKey;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/progress-bar.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        \"underscore\",\r\n        'ko',\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/step-navigator',\r\n        'jquery/jquery.hashchange'\r\n    ],\r\n    function ($, _, ko, Component, stepNavigator) {\r\n        var steps = stepNavigator.steps;\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/progress-bar',\r\n                visible: true\r\n            },\r\n            steps: steps,\r\n\r\n            initialize: function() {\r\n                this._super();\r\n                $(window).hashchange(_.bind(stepNavigator.handleHash, stepNavigator));\r\n                stepNavigator.handleHash();\r\n            },\r\n\r\n            sortItems: function(itemOne, itemTwo) {\r\n                return stepNavigator.sortItems(itemOne, itemTwo);\r\n            },\r\n\r\n            navigateTo: function(step) {\r\n                stepNavigator.navigateTo(step.code);\r\n            },\r\n\r\n            isProcessed: function(item) {\r\n                return stepNavigator.isProcessed(item.code);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/registration.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'Magento_Ui/js/model/messageList'\r\n    ],\r\n    function ($, Component, messageList) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/registration',\r\n                accountCreated: false,\r\n                creationStarted: false,\r\n                isFormVisible: true\r\n            },\r\n\r\n            /**\r\n             * Initialize observable properties\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe('accountCreated')\r\n                    .observe('isFormVisible')\r\n                    .observe('creationStarted');\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            getEmailAddress: function () {\r\n                return this.email;\r\n            },\r\n\r\n            /**\r\n             * Create new user account\r\n             */\r\n            createAccount: function () {\r\n                this.creationStarted(true);\r\n                $.post(\r\n                    this.registrationUrl\r\n                ).done(\r\n                    function (response) {\r\n\r\n                        if (response.errors == false) {\r\n                            this.accountCreated(true)\r\n                        } else {\r\n                            messageList.addErrorMessage(response);\r\n                        }\r\n                        this.isFormVisible(false);\r\n                    }.bind(this)\r\n                ).fail(\r\n                    function (response) {\r\n                        this.accountCreated(false)\r\n                        this.isFormVisible(false);\r\n                        messageList.addErrorMessage(response);\r\n                    }.bind(this)\r\n                );\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/shipping-information.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/step-navigator',\r\n        'Magento_Checkout/js/model/sidebar'\r\n    ],\r\n    function($, Component, quote, stepNavigator, sidebarModel) {\r\n        'use strict';\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/shipping-information'\r\n            },\r\n\r\n            isVisible: function() {\r\n                return !quote.isVirtual() && stepNavigator.isProcessed('shipping');\r\n            },\r\n\r\n            getShippingMethodTitle: function() {\r\n                var shippingMethod = quote.shippingMethod();\r\n                return shippingMethod ? shippingMethod.carrier_title + \" - \" + shippingMethod.method_title : '';\r\n            },\r\n\r\n            back: function() {\r\n                sidebarModel.hide();\r\n                stepNavigator.navigateTo('shipping');\r\n            },\r\n\r\n            backToShippingMethod: function() {\r\n                sidebarModel.hide();\r\n                stepNavigator.navigateTo('shipping', 'opc-shipping_method');\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/shipping.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'underscore',\r\n        'Magento_Ui/js/form/form',\r\n        'ko',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Customer/js/model/address-list',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/action/create-shipping-address',\r\n        'Magento_Checkout/js/action/select-shipping-address',\r\n        'Magento_Checkout/js/model/shipping-rates-validator',\r\n        'Magento_Checkout/js/model/shipping-address/form-popup-state',\r\n        'Magento_Checkout/js/model/shipping-service',\r\n        'Magento_Checkout/js/action/select-shipping-method',\r\n        'Magento_Checkout/js/model/shipping-rate-registry',\r\n        'Magento_Checkout/js/action/set-shipping-information',\r\n        'Magento_Checkout/js/model/step-navigator',\r\n        'Magento_Ui/js/modal/modal',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'uiRegistry',\r\n        'mage/translate',\r\n        'Magento_Checkout/js/model/shipping-rate-service'\r\n    ],\r\n    function (\r\n        $,\r\n        _,\r\n        Component,\r\n        ko,\r\n        customer,\r\n        addressList,\r\n        addressConverter,\r\n        quote,\r\n        createShippingAddress,\r\n        selectShippingAddress,\r\n        shippingRatesValidator,\r\n        formPopUpState,\r\n        shippingService,\r\n        selectShippingMethodAction,\r\n        rateRegistry,\r\n        setShippingInformationAction,\r\n        stepNavigator,\r\n        modal,\r\n        checkoutDataResolver,\r\n        checkoutData,\r\n        registry,\r\n        $t\r\n    ) {\r\n        'use strict';\r\n\r\n        var popUp = null;\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/shipping'\r\n            },\r\n            visible: ko.observable(!quote.isVirtual()),\r\n            errorValidationMessage: ko.observable(false),\r\n            isCustomerLoggedIn: customer.isLoggedIn,\r\n            isFormPopUpVisible: formPopUpState.isVisible,\r\n            isFormInline: addressList().length == 0,\r\n            isNewAddressAdded: ko.observable(false),\r\n            saveInAddressBook: 1,\r\n            quoteIsVirtual: quote.isVirtual(),\r\n\r\n            /**\r\n             * @return {exports}\r\n             */\r\n            initialize: function () {\r\n                var self = this,\r\n                    hasNewAddress,\r\n                    fieldsetName = 'checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset';\r\n\r\n                this._super();\r\n\r\n                if (!quote.isVirtual()) {\r\n                    stepNavigator.registerStep(\r\n                        'shipping',\r\n                        '',\r\n                        $t('Shipping'),\r\n                        this.visible, _.bind(this.navigate, this),\r\n                        10\r\n                    );\r\n                }\r\n                checkoutDataResolver.resolveShippingAddress();\r\n\r\n                hasNewAddress = addressList.some(function (address) {\r\n                    return address.getType() == 'new-customer-address';\r\n                });\r\n\r\n                this.isNewAddressAdded(hasNewAddress);\r\n\r\n                this.isFormPopUpVisible.subscribe(function (value) {\r\n                    if (value) {\r\n                        self.getPopUp().openModal();\r\n                    }\r\n                });\r\n\r\n                quote.shippingMethod.subscribe(function () {\r\n                    self.errorValidationMessage(false);\r\n                });\r\n\r\n                registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                    var shippingAddressData = checkoutData.getShippingAddressFromData();\r\n\r\n                    if (shippingAddressData) {\r\n                        checkoutProvider.set(\r\n                            'shippingAddress',\r\n                            $.extend(true, {}, checkoutProvider.get('shippingAddress'), shippingAddressData)\r\n                        );\r\n                    }\r\n                    checkoutProvider.on('shippingAddress', function (shippingAddressData) {\r\n                        checkoutData.setShippingAddressFromData(shippingAddressData);\r\n                    });\r\n                    shippingRatesValidator.initFields(fieldsetName);\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Load data from server for shipping step\r\n             */\r\n            navigate: function () {\r\n                //load data from server for shipping step\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            getPopUp: function () {\r\n                var self = this,\r\n                    buttons;\r\n\r\n                if (!popUp) {\r\n                    buttons = this.popUpForm.options.buttons;\r\n                    this.popUpForm.options.buttons = [\r\n                        {\r\n                            text: buttons.save.text ? buttons.save.text : $t('Save Address'),\r\n                            class: buttons.save.class ? buttons.save.class : 'action primary action-save-address',\r\n                            click: self.saveNewAddress.bind(self)\r\n                        },\r\n                        {\r\n                            text: buttons.cancel.text ? buttons.cancel.text : $t('Cancel'),\r\n                            class: buttons.cancel.class ? buttons.cancel.class : 'action secondary action-hide-popup',\r\n\r\n                            /** @inheritdoc */\r\n                            click: this.onClosePopUp.bind(this)\r\n                        }\r\n                    ];\r\n                    this.popUpForm.options.closed = function () {\r\n                        self.isFormPopUpVisible(false);\r\n                    };\r\n\r\n                    this.popUpForm.options.modalCloseBtnHandler = this.onClosePopUp.bind(this);\r\n                    this.popUpForm.options.keyEventHandlers = {\r\n                        escapeKey: this.onClosePopUp.bind(this)\r\n                    };\r\n\r\n                    /** @inheritdoc */\r\n                    this.popUpForm.options.opened = function () {\r\n                        // Store temporary address for revert action in case when user click cancel action\r\n                        self.temporaryAddress = $.extend(true, {}, checkoutData.getShippingAddressFromData());\r\n                    };\r\n                    popUp = modal(this.popUpForm.options, $(this.popUpForm.element));\r\n                }\r\n\r\n                return popUp;\r\n            },\r\n\r\n            /**\r\n             * Revert address and close modal.\r\n             */\r\n            onClosePopUp: function () {\r\n                checkoutData.setShippingAddressFromData($.extend(true, {}, this.temporaryAddress));\r\n                this.getPopUp().closeModal();\r\n            },\r\n\r\n            /**\r\n             * Show address form popup\r\n             */\r\n            showFormPopUp: function () {\r\n                this.isFormPopUpVisible(true);\r\n            },\r\n\r\n            /**\r\n             * Save new shipping address\r\n             */\r\n            saveNewAddress: function () {\r\n                var addressData,\r\n                    newShippingAddress;\r\n\r\n                this.source.set('params.invalid', false);\r\n                this.source.trigger('shippingAddress.data.validate');\r\n\r\n                if (!this.source.get('params.invalid')) {\r\n                    addressData = this.source.get('shippingAddress');\r\n                    // if user clicked the checkbox, its value is true or false. Need to convert.\r\n                    addressData.save_in_address_book = this.saveInAddressBook ? 1 : 0;\r\n\r\n                    // New address must be selected as a shipping address\r\n                    newShippingAddress = createShippingAddress(addressData);\r\n                    selectShippingAddress(newShippingAddress);\r\n                    checkoutData.setSelectedShippingAddress(newShippingAddress.getKey());\r\n                    checkoutData.setNewCustomerShippingAddress($.extend(true, {}, addressData));\r\n                    this.getPopUp().closeModal();\r\n                    this.isNewAddressAdded(true);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Shipping Method View\r\n             */\r\n            rates: shippingService.getShippingRates(),\r\n            isLoading: shippingService.isLoading,\r\n            isSelected: ko.computed(function () {\r\n                    return quote.shippingMethod() ?\r\n                        quote.shippingMethod().carrier_code + '_' + quote.shippingMethod().method_code\r\n                        : null;\r\n                }\r\n            ),\r\n\r\n            /**\r\n             * @param {Object} shippingMethod\r\n             * @return {Boolean}\r\n             */\r\n            selectShippingMethod: function (shippingMethod) {\r\n                selectShippingMethodAction(shippingMethod);\r\n                checkoutData.setSelectedShippingRate(shippingMethod.carrier_code + '_' + shippingMethod.method_code);\r\n\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * Set shipping information handler\r\n             */\r\n            setShippingInformation: function () {\r\n                if (this.validateShippingInformation()) {\r\n                    setShippingInformationAction().done(\r\n                        function () {\r\n                            stepNavigator.next();\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            validateShippingInformation: function () {\r\n                var shippingAddress,\r\n                    addressData,\r\n                    loginFormSelector = 'form[data-role=email-with-possible-login]',\r\n                    emailValidationResult = customer.isLoggedIn();\r\n\r\n                if (!quote.shippingMethod()) {\r\n                    this.errorValidationMessage($t('Please specify a shipping method.'));\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (!customer.isLoggedIn()) {\r\n                    $(loginFormSelector).validation();\r\n                    emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());\r\n                }\r\n\r\n                if (this.isFormInline) {\r\n                    this.source.set('params.invalid', false);\r\n                    this.source.trigger('shippingAddress.data.validate');\r\n\r\n                    if (this.source.get('shippingAddress.custom_attributes')) {\r\n                        this.source.trigger('shippingAddress.custom_attributes.data.validate');\r\n                    }\r\n\r\n                    if (this.source.get('params.invalid') ||\r\n                        !quote.shippingMethod().method_code ||\r\n                        !quote.shippingMethod().carrier_code ||\r\n                        !emailValidationResult\r\n                    ) {\r\n                        return false;\r\n                    }\r\n\r\n                    shippingAddress = quote.shippingAddress();\r\n                    addressData = addressConverter.formAddressDataToQuoteAddress(\r\n                        this.source.get('shippingAddress')\r\n                    );\r\n\r\n                    //Copy form data to quote shipping address object\r\n                    for (var field in addressData) {\r\n\r\n                        if (addressData.hasOwnProperty(field) &&\r\n                            shippingAddress.hasOwnProperty(field) &&\r\n                            typeof addressData[field] != 'function' &&\r\n                            _.isEqual(shippingAddress[field], addressData[field])\r\n                        ) {\r\n                            shippingAddress[field] = addressData[field];\r\n                        } else if (typeof addressData[field] != 'function' &&\r\n                            !_.isEqual(shippingAddress[field], addressData[field])) {\r\n                            shippingAddress = addressData;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (customer.isLoggedIn()) {\r\n                        shippingAddress.save_in_address_book = 1;\r\n                    }\r\n                    selectShippingAddress(shippingAddress);\r\n                }\r\n\r\n                if (!emailValidationResult) {\r\n                    $(loginFormSelector + ' input[name=username]').focus();\r\n\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/sidebar.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'ko',\r\n        'jquery',\r\n        'Magento_Checkout/js/model/sidebar'\r\n    ],\r\n    function(Component, ko, $, sidebarModel) {\r\n        'use strict';\r\n        return Component.extend({\r\n            setModalElement: function(element) {\r\n                sidebarModel.setPopup($(element));\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/totals'\r\n    ],\r\n    function(Component, totals) {\r\n        'use strict';\r\n        return Component.extend({\r\n            isLoading: totals.isLoading\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/cart/shipping-estimation.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Ui/js/form/form',\r\n        'Magento_Checkout/js/action/select-shipping-address',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'Magento_Checkout/js/model/cart/estimate-service',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/model/shipping-rates-validator',\r\n        'uiRegistry',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'mage/validation'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        selectShippingAddress,\r\n        addressConverter,\r\n        estimateService,\r\n        checkoutData,\r\n        shippingRatesValidator,\r\n        registry,\r\n        quote,\r\n        checkoutDataResolver\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/cart/shipping-estimation'\r\n            },\r\n            isVirtual: quote.isVirtual(),\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                    var address, estimatedAddress;\r\n\r\n                    checkoutDataResolver.resolveEstimationAddress();\r\n                    address = quote.isVirtual() ? quote.billingAddress() : quote.shippingAddress();\r\n\r\n                    if (address) {\r\n                        estimatedAddress = address.isEditable() ?\r\n                            addressConverter.quoteAddressToFormAddressData(address) :\r\n                            addressConverter.quoteAddressToFormAddressData(\r\n                                addressConverter.addressToEstimationAddress(address)\r\n                            );\r\n                        checkoutProvider.set(\r\n                            'shippingAddress',\r\n                            $.extend({}, checkoutProvider.get('shippingAddress'), estimatedAddress)\r\n                        );\r\n                    }\r\n\r\n                    if (!quote.isVirtual()) {\r\n                        checkoutProvider.on('shippingAddress', function (shippingAddressData) {\r\n                            checkoutData.setShippingAddressFromData(shippingAddressData);\r\n                        });\r\n                    } else {\r\n                        checkoutProvider.on('shippingAddress', function (shippingAddressData) {\r\n                            checkoutData.setBillingAddressFromData(shippingAddressData);\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            initElement: function (element) {\r\n                this._super();\r\n\r\n                if (element.index === 'address-fieldsets') {\r\n                    shippingRatesValidator.bindChangeHandlers(element.elems(), true, 500);\r\n                    element.elems.subscribe(function (elems) {\r\n                        shippingRatesValidator.doElementBinding(elems[elems.length - 1], true, 500);\r\n                    });\r\n                }\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Returns shipping rates for address\r\n             * @returns void\r\n             */\r\n            getEstimationInfo: function () {\r\n                var addressData = null;\r\n\r\n                this.source.set('params.invalid', false);\r\n                this.source.trigger('shippingAddress.data.validate');\r\n\r\n                if (!this.source.get('params.invalid')) {\r\n                    addressData = this.source.get('shippingAddress');\r\n                    selectShippingAddress(addressConverter.formAddressDataToQuoteAddress(addressData));\r\n                }\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/cart/shipping-rates.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'ko',\r\n        'underscore',\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/shipping-service',\r\n        'Magento_Catalog/js/price-utils',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/action/select-shipping-method',\r\n        'Magento_Checkout/js/checkout-data'\r\n    ],\r\n    function (\r\n        ko,\r\n        _,\r\n        Component,\r\n        shippingService,\r\n        priceUtils,\r\n        quote,\r\n        selectShippingMethodAction,\r\n        checkoutData\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/cart/shipping-rates'\r\n            },\r\n            isVisible: ko.observable(!quote.isVirtual()),\r\n            isLoading: shippingService.isLoading,\r\n            shippingRates: shippingService.getShippingRates(),\r\n            shippingRateGroups: ko.observableArray([]),\r\n            selectedShippingMethod: ko.computed(function () {\r\n                    return quote.shippingMethod() ?\r\n                        quote.shippingMethod()['carrier_code'] + '_' + quote.shippingMethod()['method_code'] :\r\n                        null;\r\n                }\r\n            ),\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            initObservable: function () {\r\n                var self = this;\r\n                this._super();\r\n\r\n                this.shippingRates.subscribe(function (rates) {\r\n                    self.shippingRateGroups([]);\r\n                    _.each(rates, function (rate) {\r\n                        var carrierTitle = rate['carrier_title'];\r\n\r\n                        if (self.shippingRateGroups.indexOf(carrierTitle) === -1) {\r\n                            self.shippingRateGroups.push(carrierTitle);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Get shipping rates for specific group based on title.\r\n             * @returns Array\r\n             */\r\n            getRatesForGroup: function (shippingRateGroupTitle) {\r\n                return _.filter(this.shippingRates(), function (rate) {\r\n                    return shippingRateGroupTitle === rate['carrier_title'];\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Format shipping price.\r\n             * @returns {String}\r\n             */\r\n            getFormattedPrice: function (price) {\r\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n            },\r\n\r\n            /**\r\n             * Set shipping method.\r\n             * @param {String} methodData\r\n             * @returns bool\r\n             */\r\n            selectShippingMethod: function (methodData) {\r\n                selectShippingMethodAction(methodData);\r\n                checkoutData.setSelectedShippingRate(methodData['carrier_code'] + '_' + methodData['method_code']);\r\n\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/cart/totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Checkout/js/model/shipping-service'\r\n], function ($, Component, totalsService, shippingService) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        isLoading: totalsService.isLoading,\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            totalsService.totals.subscribe(function () {\r\n                $(window).trigger('resize');\r\n            });\r\n            shippingService.getShippingRates().subscribe(function () {\r\n                $(window).trigger('resize');\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/cart/totals/shipping.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/shipping',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            isCalculated: function () {\r\n                return !!quote.shippingMethod();\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (ko, Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        displaySubtotal: ko.observable(true),\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.cart = customerData.get('cart');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/configure/product-customer-data.js":"require([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, customerData) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n        qtySelector: '#product_addtocart_form [name=\"qty\"]',\r\n        productIdSelector: '#product_addtocart_form [name=\"product\"]'\r\n    },\r\n    cartData = customerData.get('cart'),\r\n    productId = $(selectors.productIdSelector).val(),\r\n    productQty,\r\n    productQtyInput,\r\n\r\n    /**\r\n    * Updates product's qty input value according to actual data\r\n    */\r\n    updateQty = function () {\r\n\r\n        if (productQty || productQty === 0) {\r\n            productQtyInput = productQtyInput || $(selectors.qtySelector);\r\n\r\n            if (productQtyInput && productQty.toString() !== productQtyInput.val()) {\r\n                productQtyInput.val(productQty);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Sets productQty according to cart data from customer-data\r\n    *\r\n    * @param {Object} data - cart data from customer-data\r\n    */\r\n    setProductQty = function (data) {\r\n        var product;\r\n\r\n        if (!(data && data.items && data.items.length && productId)) {\r\n            return;\r\n        }\r\n        product = data.items.find(function (item) {\r\n            return item['product_id'] === productId ||\r\n                item['item_id'] === productId;\r\n        });\r\n\r\n        if (!product) {\r\n            return;\r\n        }\r\n        productQty = product.qty;\r\n    };\r\n\r\n    cartData.subscribe(function (updateCartData) {\r\n        setProductQty(updateCartData);\r\n        updateQty();\r\n    });\r\n\r\n    setProductQty(cartData());\r\n    updateQty();\r\n});\r\n","Magento_Checkout/js/view/form/element/email.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'ko',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Customer/js/action/check-email-availability',\r\n    'Magento_Customer/js/action/login',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'mage/validation'\r\n], function ($, Component, ko, customer, checkEmailAvailability, loginAction, quote, checkoutData, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    var validatedEmail = checkoutData.getValidatedEmailValue();\r\n\r\n    if (validatedEmail && !customer.isLoggedIn()) {\r\n        quote.guestEmail = validatedEmail;\r\n    }\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/form/element/email',\r\n            email: checkoutData.getInputFieldEmailValue(),\r\n            emailFocused: false,\r\n            isLoading: false,\r\n            isPasswordVisible: false,\r\n            listens: {\r\n                email: 'emailHasChanged',\r\n                emailFocused: 'validateEmail'\r\n            }\r\n        },\r\n        checkDelay: 2000,\r\n        checkRequest: null,\r\n        isEmailCheckComplete: null,\r\n        isCustomerLoggedIn: customer.isLoggedIn,\r\n        forgotPasswordUrl: window.checkoutConfig.forgotPasswordUrl,\r\n        emailCheckTimeout: 0,\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.isPasswordVisible = this.resolveInitialPasswordVisibility();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['email', 'emailFocused', 'isLoading', 'isPasswordVisible']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Callback on changing email property\r\n         */\r\n        emailHasChanged: function () {\r\n            var self = this;\r\n\r\n            clearTimeout(this.emailCheckTimeout);\r\n\r\n            if (self.validateEmail()) {\r\n                quote.guestEmail = self.email();\r\n                checkoutData.setValidatedEmailValue(self.email());\r\n            }\r\n            this.emailCheckTimeout = setTimeout(function () {\r\n                if (self.validateEmail()) {\r\n                    self.checkEmailAvailability();\r\n                } else {\r\n                    self.isPasswordVisible(false);\r\n                }\r\n            }, self.checkDelay);\r\n\r\n            checkoutData.setInputFieldEmailValue(self.email());\r\n        },\r\n\r\n        /**\r\n         * Check email existing.\r\n         */\r\n        checkEmailAvailability: function () {\r\n            this.validateRequest();\r\n            this.isEmailCheckComplete = $.Deferred();\r\n            this.isLoading(true);\r\n            this.checkRequest = checkEmailAvailability(this.isEmailCheckComplete, this.email());\r\n\r\n            $.when(this.isEmailCheckComplete).done(function () {\r\n                this.isPasswordVisible(false);\r\n                }.bind(this)).fail(function () {\r\n                    this.isPasswordVisible(true);\r\n                    checkoutData.setCheckedEmailValue(this.email());\r\n\t            }.bind(this)).always(function () {\r\n                this.isLoading(false);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * If request has been sent -> abort it.\r\n         * ReadyStates for request aborting:\r\n         * 1 - The request has been set up\r\n         * 2 - The request has been sent\r\n         * 3 - The request is in process\r\n         */\r\n        validateRequest: function () {\r\n            if (this.checkRequest != null && $.inArray(this.checkRequest.readyState, [1, 2, 3])) {\r\n                this.checkRequest.abort();\r\n                this.checkRequest = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Local email validation.\r\n         *\r\n         * @param {Boolean} focused - input focus.\r\n         * @returns {Boolean} - validation result.\r\n         */\r\n        validateEmail: function (focused) {\r\n            var loginFormSelector = 'form[data-role=email-with-possible-login]',\r\n                usernameSelector = loginFormSelector + ' input[name=username]',\r\n                loginForm = $(loginFormSelector),\r\n                validator;\r\n\r\n            loginForm.validation();\r\n\r\n            if (focused === false && !!this.email()) {\r\n                return !!$(usernameSelector).valid();\r\n            }\r\n\r\n            validator = loginForm.validate();\r\n\r\n            return validator.check(usernameSelector);\r\n        },\r\n\r\n        /**\r\n         * Log in form submitting callback.\r\n         *\r\n         * @param {HTMLElement} loginForm - form element.\r\n         */\r\n        login: function (loginForm) {\r\n            var loginData = {},\r\n                formDataArray = $(loginForm).serializeArray();\r\n\r\n            formDataArray.forEach(function (entry) {\r\n                loginData[entry.name] = entry.value;\r\n            });\r\n\r\n            if (this.isPasswordVisible() && $(loginForm).validation() && $(loginForm).validation('isValid')) {\r\n                fullScreenLoader.startLoader();\r\n                loginAction(loginData).always(function () {\r\n                    fullScreenLoader.stopLoader();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolves an initial sate of a login form.\r\n         *\r\n         * @returns {Boolean} - initial visibility state.\r\n         */\r\n         resolveInitialPasswordVisibility: function () {\r\n                if (checkoutData.getInputFieldEmailValue() !== '') {\r\n\t                return checkoutData.getInputFieldEmailValue() === checkoutData.getCheckedEmailValue();\r\n                }\r\n\r\n            return false;\r\n        },\r\n    });\r\n});\r\n","Magento_Checkout/js/view/payment/default.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'ko',\r\n        'jquery',\r\n        'uiComponent',\r\n        'Magento_Checkout/js/action/place-order',\r\n        'Magento_Checkout/js/action/select-payment-method',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/payment-service',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'uiRegistry',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Ui/js/model/messages',\r\n        'uiLayout',\r\n        'Magento_Checkout/js/action/redirect-on-success'\r\n    ],\r\n    function (\r\n        ko,\r\n        $,\r\n        Component,\r\n        placeOrderAction,\r\n        selectPaymentMethodAction,\r\n        quote,\r\n        customer,\r\n        paymentService,\r\n        checkoutData,\r\n        checkoutDataResolver,\r\n        registry,\r\n        additionalValidators,\r\n        Messages,\r\n        layout,\r\n        redirectOnSuccessAction\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            redirectAfterPlaceOrder: true,\r\n            isPlaceOrderActionAllowed: ko.observable(quote.billingAddress() != null),\r\n\r\n            /**\r\n             * After place order callback\r\n             */\r\n            afterPlaceOrder: function () {\r\n                // Override this function and put after place order logic here\r\n            },\r\n\r\n            /**\r\n             * Initialize view.\r\n             *\r\n             * @return {exports}\r\n             */\r\n            initialize: function () {\r\n                var billingAddressCode,\r\n                    billingAddressData,\r\n                    defaultAddressData;\r\n\r\n                this._super().initChildren();\r\n                quote.billingAddress.subscribe(function (address) {\r\n                    this.isPlaceOrderActionAllowed(address !== null);\r\n                }, this);\r\n                checkoutDataResolver.resolveBillingAddress();\r\n\r\n                billingAddressCode = 'billingAddress' + this.getCode();\r\n                registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                    defaultAddressData = checkoutProvider.get(billingAddressCode);\r\n\r\n                    if (defaultAddressData === undefined) {\r\n                        // Skip if payment does not have a billing address form\r\n                        return;\r\n                    }\r\n                    billingAddressData = checkoutData.getBillingAddressFromData();\r\n\r\n                    if (billingAddressData) {\r\n                        checkoutProvider.set(\r\n                            billingAddressCode,\r\n                            $.extend(true, {}, defaultAddressData, billingAddressData)\r\n                        );\r\n                    }\r\n                    checkoutProvider.on(billingAddressCode, function (providerBillingAddressData) {\r\n                        checkoutData.setBillingAddressFromData(providerBillingAddressData);\r\n                    }, billingAddressCode);\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Initialize child elements\r\n             *\r\n             * @returns {Component} Chainable.\r\n             */\r\n            initChildren: function () {\r\n                this.messageContainer = new Messages();\r\n                this.createMessagesComponent();\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Create child message renderer component\r\n             *\r\n             * @returns {Component} Chainable.\r\n             */\r\n            createMessagesComponent: function () {\r\n\r\n                var messagesComponent = {\r\n                    parent: this.name,\r\n                    name: this.name + '.messages',\r\n                    displayArea: 'messages',\r\n                    component: 'Magento_Ui/js/view/messages',\r\n                    config: {\r\n                        messageContainer: this.messageContainer\r\n                    }\r\n                };\r\n\r\n                layout([messagesComponent]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Place order.\r\n             */\r\n            placeOrder: function (data, event) {\r\n                var self = this;\r\n\r\n                if (event) {\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if (this.validate() && additionalValidators.validate()) {\r\n                    this.isPlaceOrderActionAllowed(false);\r\n\r\n                    this.getPlaceOrderDeferredObject()\r\n                        .fail(\r\n                            function () {\r\n                                self.isPlaceOrderActionAllowed(true);\r\n                            }\r\n                        ).done(\r\n                            function () {\r\n                                self.afterPlaceOrder();\r\n\r\n                                if (self.redirectAfterPlaceOrder) {\r\n                                    redirectOnSuccessAction.execute();\r\n                                }\r\n                            }\r\n                        );\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n\r\n            getPlaceOrderDeferredObject: function () {\r\n                return $.when(\r\n                    placeOrderAction(this.getData(), this.messageContainer)\r\n                );\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            selectPaymentMethod: function () {\r\n                selectPaymentMethodAction(this.getData());\r\n                checkoutData.setSelectedPaymentMethod(this.item.method);\r\n\r\n                return true;\r\n            },\r\n\r\n            isChecked: ko.computed(function () {\r\n                return quote.paymentMethod() ? quote.paymentMethod().method : null;\r\n            }),\r\n\r\n            isRadioButtonVisible: ko.computed(function () {\r\n                return paymentService.getAvailablePaymentMethods().length !== 1;\r\n            }),\r\n\r\n            /**\r\n             * Get payment method data\r\n             */\r\n            getData: function () {\r\n                return {\r\n                    'method': this.item.method,\r\n                    'po_number': null,\r\n                    'additional_data': null\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Get payment method type.\r\n             */\r\n            getTitle: function () {\r\n                return this.item.title;\r\n            },\r\n\r\n            /**\r\n             * Get payment method code.\r\n             */\r\n            getCode: function () {\r\n                return this.item.method;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            validate: function () {\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getBillingAddressFormName: function () {\r\n                return 'billing-address-form-' + this.item.method;\r\n            },\r\n\r\n            /**\r\n             * Dispose billing address subscriptions\r\n             */\r\n            disposeSubscriptions: function () {\r\n                // dispose all active subscriptions\r\n                var billingAddressCode = 'billingAddress' + this.getCode();\r\n\r\n                registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                    checkoutProvider.off(billingAddressCode);\r\n                });\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/payment/email-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Checkout/js/model/customer-email-validator'\r\n    ],\r\n    function (Component, additionalValidators, agreementValidator) {\r\n        'use strict';\r\n\r\n        additionalValidators.registerValidator(agreementValidator);\r\n\r\n        return Component.extend({});\r\n    }\r\n);\r\n","Magento_Checkout/js/view/payment/list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/method-list',\r\n    'Magento_Checkout/js/model/payment/renderer-list',\r\n    'uiLayout',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'mage/translate',\r\n    'uiRegistry'\r\n], function (_, ko, utils, Component, paymentMethods, rendererList, layout, checkoutDataResolver, $t, registry) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/payment-methods/list',\r\n            visible: paymentMethods().length > 0,\r\n            configDefaultGroup: {\r\n                name: 'methodGroup',\r\n                component: 'Magento_Checkout/js/model/payment/method-group'\r\n            },\r\n            paymentGroupsList: [],\r\n            defaultGroupTitle: $t('Select a new payment method')\r\n        },\r\n\r\n        /**\r\n         * Initialize view.\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super().initDefaulGroup().initChildren();\r\n            paymentMethods.subscribe(\r\n                function (changes) {\r\n                    checkoutDataResolver.resolvePaymentMethod();\r\n                    //remove renderer for \"deleted\" payment methods\r\n                    _.each(changes, function (change) {\r\n                        if (change.status === 'deleted') {\r\n                            this.removeRenderer(change.value.method);\r\n                        }\r\n                    }, this);\r\n                    //add renderer for \"added\" payment methods\r\n                    _.each(changes, function (change) {\r\n                        if (change.status === 'added') {\r\n                            this.createRenderer(change.value);\r\n                        }\r\n                    }, this);\r\n                }, this, 'arrayChange');\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super().\r\n                observe(['paymentGroupsList']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates default group\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initDefaulGroup: function() {\r\n            layout([\r\n                this.configDefaultGroup\r\n            ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create renders for child payment methods.\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initChildren: function () {\r\n            var self = this;\r\n\r\n            _.each(paymentMethods(), function (paymentMethodData) {\r\n                self.createRenderer(paymentMethodData);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @returns\r\n         */\r\n        createComponent: function (payment) {\r\n            var rendererTemplate,\r\n                rendererComponent,\r\n                templateData;\r\n\r\n            templateData = {\r\n                parentName: this.name,\r\n                name: payment.name\r\n            };\r\n            rendererTemplate = {\r\n                parent: '${ $.$data.parentName }',\r\n                name: '${ $.$data.name }',\r\n                displayArea: payment.displayArea,\r\n                component: payment.component\r\n            };\r\n            rendererComponent = utils.template(rendererTemplate, templateData);\r\n            utils.extend(rendererComponent, {\r\n                item: payment.item,\r\n                config: payment.config\r\n            });\r\n\r\n            return rendererComponent;\r\n        },\r\n\r\n        /**\r\n         * Create renderer.\r\n         *\r\n         * @param {Object} paymentMethodData\r\n         */\r\n        createRenderer: function (paymentMethodData) {\r\n            var isRendererForMethod = false,\r\n                currentGroup;\r\n\r\n            registry.get(this.configDefaultGroup.name, function (defaultGroup) {\r\n                _.each(rendererList(), function (renderer) {\r\n\r\n                    if (renderer.hasOwnProperty('typeComparatorCallback') &&\r\n                        typeof renderer.typeComparatorCallback == 'function'\r\n                    ) {\r\n                        isRendererForMethod = renderer.typeComparatorCallback(renderer.type, paymentMethodData.method);\r\n                    } else {\r\n                        isRendererForMethod = renderer.type === paymentMethodData.method;\r\n                    }\r\n\r\n                    if (isRendererForMethod) {\r\n                        currentGroup = renderer.group ? renderer.group : defaultGroup;\r\n\r\n                        this.collectPaymentGroups(currentGroup);\r\n\r\n                        layout([\r\n                            this.createComponent(\r\n                                {\r\n                                    config: renderer.config,\r\n                                    component: renderer.component,\r\n                                    name: renderer.type,\r\n                                    method: paymentMethodData.method,\r\n                                    item: paymentMethodData,\r\n                                    displayArea: currentGroup.displayArea\r\n                                }\r\n                            )]);\r\n                    }\r\n                }.bind(this));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Collects unique groups of available payment methods\r\n         *\r\n         * @param {Object} group\r\n         */\r\n        collectPaymentGroups: function (group) {\r\n            var groupsList = this.paymentGroupsList(),\r\n                isGroupExists = _.some(groupsList, function (existsGroup) {\r\n                    return existsGroup.alias === group.alias;\r\n                });\r\n\r\n            if (!isGroupExists) {\r\n                groupsList.push(group);\r\n                groupsList = _.sortBy(groupsList, function (existsGroup) {\r\n                    return existsGroup.sortOrder;\r\n                });\r\n                this.paymentGroupsList(groupsList);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns payment group title\r\n         *\r\n         * @param {Object} group\r\n         * @returns {String}\r\n         */\r\n        getGroupTitle: function (group) {\r\n            var title = group().title;\r\n\r\n            if (group().isDefault() && this.paymentGroupsList().length > 1) {\r\n                title = this.defaultGroupTitle;\r\n            }\r\n\r\n            return title + ':';\r\n        },\r\n\r\n        /**\r\n         * Checks if at least one payment method available\r\n         *\r\n         * @returns {String}\r\n         */\r\n        isPaymentMethodsAvailable: function () {\r\n            return _.some(this.paymentGroupsList(), function (group) {\r\n                return this.getRegion(group.displayArea)().length;\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Remove view renderer.\r\n         *\r\n         * @param {String} paymentMethodCode\r\n         */\r\n        removeRenderer: function (paymentMethodCode) {\r\n            var items;\r\n\r\n            _.each(this.paymentGroupsList(), function (group) {\r\n                items = this.getRegion(group.displayArea);\r\n\r\n                _.find(items(), function (value) {\r\n                    if (value.item.method.indexOf(paymentMethodCode) === 0) {\r\n                        value.disposeSubscriptions();\r\n                        value.destroy();\r\n                    }\r\n                });\r\n            }, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/review/actions.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/review/actions',\r\n                displayArea: 'actions'\r\n            },\r\n            getActiveView: function() {\r\n                var view = this.getViewByCode(quote.paymentMethod());\r\n                return view ? view : this.getDefaultView();\r\n            },\r\n            getViewByCode: function(code) {\r\n                return _.find(this.elems(), function(elem) {\r\n                    return elem.index == code && !elem.isDefault;\r\n                });\r\n            },\r\n            getDefaultView: function() {\r\n                return _.find(this.elems(), function(elem) {\r\n                    return elem.isDefault;\r\n                });\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/review/actions/default.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent'\r\n    ],\r\n    function (Component) {\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/review/actions/default'\r\n            },\r\n            placeOrder: function(parent) {\r\n                return parent.placeOrder.bind(parent);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/shipping-address/list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'uiComponent',\r\n    'uiLayout',\r\n    'Magento_Customer/js/model/address-list'\r\n], function (_, ko, utils, Component, layout, addressList) {\r\n    'use strict';\r\n    var defaultRendererTemplate = {\r\n        parent: '${ $.$data.parentName }',\r\n        name: '${ $.$data.name }',\r\n        component: 'Magento_Checkout/js/view/shipping-address/address-renderer/default'\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-address/list',\r\n            visible: addressList().length > 0,\r\n            rendererTemplates: []\r\n        },\r\n\r\n        initialize: function () {\r\n            this._super()\r\n                .initChildren();\r\n\r\n            addressList.subscribe(\r\n                function(changes) {\r\n                    var self = this;\r\n                    changes.forEach(function(change) {\r\n                        if (change.status === 'added') {\r\n                           self.createRendererComponent(change.value, change.index);\r\n                        }\r\n                    });\r\n                },\r\n                this,\r\n                'arrayChange'\r\n            );\r\n            return this;\r\n        },\r\n\r\n        initConfig: function () {\r\n            this._super();\r\n            // the list of child components that are responsible for address rendering\r\n            this.rendererComponents = [];\r\n            return this;\r\n        },\r\n\r\n        initChildren: function () {\r\n            _.each(addressList(), this.createRendererComponent, this);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create new component that will render given address in the address list\r\n         *\r\n         * @param address\r\n         * @param index\r\n         */\r\n        createRendererComponent: function (address, index) {\r\n            if (index in this.rendererComponents) {\r\n                this.rendererComponents[index].address(address);\r\n            } else {\r\n                // rendererTemplates are provided via layout\r\n                var rendererTemplate = (address.getType() != undefined && this.rendererTemplates[address.getType()] != undefined)\r\n                    ? utils.extend({}, defaultRendererTemplate, this.rendererTemplates[address.getType()])\r\n                    : defaultRendererTemplate;\r\n                var templateData = {\r\n                    parentName: this.name,\r\n                    name: index\r\n                };\r\n                var rendererComponent = utils.template(rendererTemplate, templateData);\r\n                utils.extend(rendererComponent, {address: ko.observable(address)});\r\n                layout([rendererComponent]);\r\n                this.rendererComponents[index] = rendererComponent;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-address/address-renderer/default.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/action/select-shipping-address',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/shipping-address/form-popup-state',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Customer/js/customer-data'\r\n], function($, ko, Component, selectShippingAddressAction, quote, formPopUpState, checkoutData, customerData) {\r\n    'use strict';\r\n    var countryData = customerData.get('directory-data');\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-address/address-renderer/default'\r\n        },\r\n\r\n        initObservable: function () {\r\n            this._super();\r\n            this.isSelected = ko.computed(function() {\r\n                var isSelected = false;\r\n                var shippingAddress = quote.shippingAddress();\r\n                if (shippingAddress) {\r\n                    isSelected = shippingAddress.getKey() == this.address().getKey();\r\n                }\r\n                return isSelected;\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        getCountryName: function(countryId) {\r\n            return (countryData()[countryId] != undefined) ? countryData()[countryId].name : \"\";\r\n        },\r\n\r\n        /** Set selected customer shipping address  */\r\n        selectAddress: function() {\r\n            selectShippingAddressAction(this.address());\r\n            checkoutData.setSelectedShippingAddress(this.address().getKey());\r\n        },\r\n\r\n        editAddress: function() {\r\n            formPopUpState.isVisible(true);\r\n            this.showPopup();\r\n\r\n        },\r\n        showPopup: function() {\r\n            $('[data-open-modal=\"opc-new-shipping-address\"]').trigger('click');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-information/list.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'mageUtils',\r\n    'uiComponent',\r\n    'uiLayout',\r\n    'Magento_Checkout/js/model/quote'\r\n], function ($, ko, utils, Component, layout, quote) {\r\n    'use strict';\r\n    var defaultRendererTemplate = {\r\n        parent: '${ $.$data.parentName }',\r\n        name: '${ $.$data.name }',\r\n        component: 'Magento_Checkout/js/view/shipping-information/address-renderer/default'\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-information/list',\r\n            rendererTemplates: {}\r\n        },\r\n\r\n        initialize: function () {\r\n            this._super()\r\n                .initChildren();\r\n\r\n            var self = this;\r\n            quote.shippingAddress.subscribe(function(address) {\r\n                self.createRendererComponent(address);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        initConfig: function () {\r\n            this._super();\r\n            // the list of child components that are responsible for address rendering\r\n            this.rendererComponents = {};\r\n            return this;\r\n        },\r\n\r\n        initChildren: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create new component that will render given address in the address list\r\n         *\r\n         * @param address\r\n         */\r\n        createRendererComponent: function (address) {\r\n\r\n            $.each(this.rendererComponents, function(index, component) {\r\n                component.visible(false);\r\n            });\r\n\r\n            if (this.rendererComponents[address.getType()]) {\r\n                this.rendererComponents[address.getType()].address(address);\r\n                this.rendererComponents[address.getType()].visible(true);\r\n            } else {\r\n                // rendererTemplates are provided via layout\r\n                var rendererTemplate =\r\n                    (address.getType() != undefined && this.rendererTemplates[address.getType()] != undefined)\r\n                    ? utils.extend({}, defaultRendererTemplate, this.rendererTemplates[address.getType()])\r\n                    : defaultRendererTemplate;\r\n                var templateData = {\r\n                    parentName: this.name,\r\n                    name: address.getType()\r\n                };\r\n\r\n                var rendererComponent = utils.template(rendererTemplate, templateData);\r\n                utils.extend(\r\n                    rendererComponent,\r\n                    {address: ko.observable(address), visible: ko.observable(true)}\r\n                );\r\n                layout([rendererComponent]);\r\n                this.rendererComponents[address.getType()] = rendererComponent;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-information/address-renderer/default.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function(Component, customerData) {\r\n    'use strict';\r\n    var countryData = customerData.get('directory-data');\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-information/address-renderer/default'\r\n        },\r\n\r\n        getCountryName: function(countryId) {\r\n            return (countryData()[countryId] != undefined) ? countryData()[countryId].name : \"\";\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/abstract-total.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Catalog/js/price-utils',\r\n        'Magento_Checkout/js/model/totals',\r\n        'Magento_Checkout/js/model/step-navigator'\r\n    ],\r\n    function (Component, quote, priceUtils, totals, stepNavigator) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            getFormattedPrice: function (price) {\r\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n            },\r\n            getTotals: function() {\r\n                return totals.totals();\r\n            },\r\n            isFullMode: function() {\r\n                if (!this.getTotals()) {\r\n                    return false;\r\n                }\r\n                return stepNavigator.isProcessed('shipping');\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/cart-items.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/model/totals',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (ko, totals, Component, stepNavigator, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/cart-items'\r\n        },\r\n        totals: totals.totals(),\r\n        items: ko.observable([]),\r\n        maxCartItemsToDisplay: window.checkoutConfig.maxCartItemsToDisplay,\r\n        cartUrl: window.checkoutConfig.cartUrl,\r\n\r\n        /**\r\n         * @deprecated Please use observable property (this.items())\r\n         */\r\n        getItems: totals.getItems(),\r\n\r\n        /**\r\n         * Returns cart items qty.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getItemsQty: function () {\r\n            return parseFloat(this.totals['items_qty']);\r\n        },\r\n\r\n        /**\r\n         * Returns count of cart line items.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getCartLineItemsCount: function () {\r\n            return parseInt(totals.getItems()().length, 10);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            // Set initial items to observable field\r\n            this.setItems(totals.getItems()());\r\n            // Subscribe for items data changes and refresh items in view\r\n            totals.getItems().subscribe(function (items) {\r\n                this.setItems(items);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Set items to observable field.\r\n         *\r\n         * @param {Object} items\r\n         */\r\n        setItems: function (items) {\r\n            if (items && items.length > 0) {\r\n                items = items.slice(parseInt(-this.maxCartItemsToDisplay, 10));\r\n            }\r\n            this.items(items);\r\n        },\r\n\r\n        /**\r\n         * Returns bool value for items block state (expanded or not).\r\n         *\r\n         * @returns {*|Boolean}\r\n         */\r\n        isItemsBlockExpanded: function () {\r\n            return quote.isVirtual() || stepNavigator.isProcessed('shipping');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/grand-total.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/summary/grand-total'\r\n            },\r\n            isDisplayed: function() {\r\n                return this.isFullMode();\r\n            },\r\n            getPureValue: function() {\r\n                var totals = quote.getTotals()();\r\n                if (totals) {\r\n                    return totals.grand_total;\r\n                }\r\n                return quote.grand_total;\r\n            },\r\n            getValue: function() {\r\n                return this.getFormattedPrice(this.getPureValue());\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/shipping.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function ($, Component, quote) {\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/summary/shipping'\r\n            },\r\n            quoteIsVirtual: quote.isVirtual(),\r\n            totals: quote.getTotals(),\r\n            getShippingMethodTitle: function() {\r\n                if (!this.isCalculated()) {\r\n                    return '';\r\n                }\r\n                var shippingMethod = quote.shippingMethod();\r\n                return shippingMethod ? shippingMethod.carrier_title + \" - \" + shippingMethod.method_title : '';\r\n            },\r\n            isCalculated: function() {\r\n                return this.totals() && this.isFullMode() && null != quote.shippingMethod();\r\n            },\r\n            getValue: function() {\r\n                if (!this.isCalculated()) {\r\n                    return this.notCalculatedMessage;\r\n                }\r\n                var price =  this.totals().shipping_amount;\r\n                return this.getFormattedPrice(price);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/subtotal.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/summary/subtotal'\r\n            },\r\n            getPureValue: function() {\r\n                var totals = quote.getTotals()();\r\n                if (totals) {\r\n                    return totals.subtotal;\r\n                }\r\n                return quote.subtotal;\r\n            },\r\n            getValue: function () {\r\n                return this.getFormattedPrice(this.getPureValue());\r\n            }\r\n\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDisplayed: function () {\r\n                return this.isFullMode();\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/item/details.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'uiComponent'\r\n    ],\r\n    function (Component) {\r\n        \"use strict\";\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/summary/item/details'\r\n            },\r\n            getValue: function(quoteItem) {\r\n                return quoteItem.name;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/item/details/subtotal.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/summary/abstract-total'\r\n    ],\r\n    function (viewModel) {\r\n        \"use strict\";\r\n        return viewModel.extend({\r\n            defaults: {\r\n                displayArea: 'after_details',\r\n                template: 'Magento_Checkout/summary/item/details/subtotal'\r\n            },\r\n            getValue: function(quoteItem) {\r\n                return this.getFormattedPrice(quoteItem.row_total);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/summary/item/details/thumbnail.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'uiComponent'\r\n    ],\r\n    function (Component) {\r\n        \"use strict\";\r\n        var imageData = window.checkoutConfig.imageData;\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/summary/item/details/thumbnail'\r\n            },\r\n            displayArea: 'before_details',\r\n            imageData: imageData,\r\n            getImageItem: function(item) {\r\n                if (this.imageData[item.item_id]) {\r\n                    return this.imageData[item.item_id];\r\n                }\r\n                return [];\r\n            },\r\n            getSrc: function(item) {\r\n                if (this.imageData[item.item_id]) {\r\n                    return this.imageData[item.item_id]['src'];\r\n                }\r\n                return null;\r\n            },\r\n            getWidth: function(item) {\r\n                if (this.imageData[item.item_id]) {\r\n                    return this.imageData[item.item_id]['width'];\r\n                }\r\n                return null;\r\n            },\r\n            getHeight: function(item) {\r\n                if (this.imageData[item.item_id]) {\r\n                    return this.imageData[item.item_id]['height'];\r\n                }\r\n                return null;\r\n            },\r\n            getAlt: function(item) {\r\n                if (this.imageData[item.item_id]) {\r\n                    return this.imageData[item.item_id]['alt'];\r\n                }\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Payment/cc-type.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.creditCardType', {\r\n        options: {\r\n            typeCodes: ['SS', 'SM', 'SO'] // Type codes for Switch/Maestro/Solo credit cards.\r\n        },\r\n\r\n        /**\r\n         * Bind change handler to select element and trigger the event to show/hide\r\n         * the Switch/Maestro or Solo credit card type container for those credit card types.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.element.on('change', $.proxy(this._toggleCardType, this)).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Toggle the Switch/Maestro and Solo credit card type container depending on which\r\n         * credit card type is selected.\r\n         * @private\r\n         */\r\n        _toggleCardType: function() {\r\n            $(this.options.creditCardTypeContainer)\r\n                .toggle($.inArray(this.element.val(), this.options.typeCodes) !== -1);\r\n        }\r\n    });\r\n\r\n    return $.mage.creditCardType;\r\n});\r\n","Magento_Payment/transparent.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery/ui',\r\n    'Magento_Payment/js/model/credit-card-validation/validator'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.transparent', {\r\n        options: {\r\n            context: null,\r\n            placeOrderSelector: '[data-role=\"review-save\"]',\r\n            paymentFormSelector: '#co-payment-form',\r\n            updateSelectorPrefix: '#checkout-',\r\n            updateSelectorSuffix: '-load',\r\n            hiddenFormTmpl:\r\n                '<form target=\"<%= data.target %>\" action=\"<%= data.action %>\" method=\"POST\" ' +\r\n                'hidden enctype=\"application/x-www-form-urlencoded\" class=\"no-display\">' +\r\n                    '<% _.each(data.inputs, function(val, key){ %>' +\r\n                    '<input value=\"<%= val %>\" name=\"<%= key %>\" type=\"hidden\">' +\r\n                    '<% }); %>' +\r\n                '</form>',\r\n            reviewAgreementForm: '#checkout-agreements',\r\n            cgiUrl: null,\r\n            orderSaveUrl: null,\r\n            controller: null,\r\n            gateway: null,\r\n            dateDelim: null,\r\n            cardFieldsMap: null,\r\n            expireYearLength: 2\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.hiddenFormTmpl = mageTemplate(this.options.hiddenFormTmpl);\r\n\r\n            if (this.options.context) {\r\n                this.options.context.setPlaceOrderHandler($.proxy(this._orderSave, this));\r\n                this.options.context.setValidateHandler($.proxy(this._validateHandler, this));\r\n            } else {\r\n                $(this.options.placeOrderSelector)\r\n                    .off('click')\r\n                    .on('click', $.proxy(this._placeOrderHandler, this));\r\n            }\r\n\r\n            this.element.validation();\r\n            $('[data-container=\"' + this.options.gateway + '-cc-number\"]').on('focusout', function () {\r\n                $(this).valid();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * handler for credit card validation\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _validateHandler: function () {\r\n            return this.element.validation && this.element.validation('isValid');\r\n        },\r\n\r\n        /**\r\n         * handler for Place Order button to call gateway for credit card validation\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _placeOrderHandler: function () {\r\n            if (this._validateHandler()) {\r\n                this._orderSave();\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Save order and generate post data for gateway call\r\n         * @private\r\n         */\r\n        _orderSave: function () {\r\n            var postData = $(this.options.paymentFormSelector).serialize();\r\n\r\n            if ($(this.options.reviewAgreementForm).length) {\r\n                postData += '&' + $(this.options.reviewAgreementForm).serialize();\r\n            }\r\n            postData += '&controller=' + this.options.controller;\r\n            postData += '&cc_type=' + this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-type\"]'\r\n            ).val();\r\n\r\n            return $.ajax({\r\n                url: this.options.orderSaveUrl,\r\n                type: 'post',\r\n                context: this,\r\n                data: postData,\r\n                dataType: 'json',\r\n\r\n                /**\r\n                 * {Function}\r\n                 */\r\n                beforeSend: function () {\r\n                    this.element.trigger('showAjaxLoader');\r\n                }.bind(this),\r\n\r\n                /**\r\n                 * {Function}\r\n                 */\r\n                success: function (response) {\r\n                    var preparedData,\r\n                        msg,\r\n\r\n                        /**\r\n                         * {Function}\r\n                         */\r\n                        alertActionHandler = function () {\r\n                            // default action\r\n                        };\r\n\r\n                    if (response.success && response[this.options.gateway]) {\r\n                        preparedData = this._preparePaymentData(\r\n                            response[this.options.gateway].fields,\r\n                            this.options.cardFieldsMap\r\n                        );\r\n                        this._postPaymentToGateway(preparedData);\r\n                    } else {\r\n                        msg = response['error_messages'];\r\n\r\n                        if (this.options.context) {\r\n                            this.options.context.clearTimeout().fail();\r\n                            alertActionHandler = this.options.context.alertActionHandler;\r\n                        }\r\n\r\n                        if (typeof msg === 'object') {\r\n                            msg = msg.join('\\n');\r\n                        }\r\n\r\n                        if (msg) {\r\n                            alert(\r\n                                {\r\n                                    content: msg,\r\n                                    actions: {\r\n\r\n                                        /**\r\n                                         * {Function}\r\n                                         */\r\n                                        always: alertActionHandler\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }.bind(this)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Post data to gateway for credit card validation\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _postPaymentToGateway: function (data) {\r\n            var tmpl,\r\n                iframeSelector = '[data-container=\"' + this.options.gateway + '-transparent-iframe\"]';\r\n\r\n            tmpl = this.hiddenFormTmpl({\r\n                data: {\r\n                    target: $(iframeSelector).attr('name'),\r\n                    action: this.options.cgiUrl,\r\n                    inputs: data\r\n                }\r\n            });\r\n            $(tmpl).appendTo($(iframeSelector)).submit();\r\n        },\r\n\r\n        /**\r\n         * Add credit card fields to post data for gateway\r\n         * @param {Object} data\r\n         * @param {Object} ccfields\r\n         * @private\r\n         */\r\n        _preparePaymentData: function (data, ccfields) {\r\n            var preparedata;\r\n\r\n            if (this.element.find('[data-container=\"' + this.options.gateway + '-cc-cvv\"]').length) {\r\n                data[ccfields.cccvv] = this.element.find(\r\n                    '[data-container=\"' + this.options.gateway + '-cc-cvv\"]'\r\n                ).val();\r\n            }\r\n            preparedata = this._prepareExpDate();\r\n            data[ccfields.ccexpdate] = preparedata.month + this.options.dateDelim + preparedata.year;\r\n            data[ccfields.ccnum] = this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-number\"]'\r\n            ).val();\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Grab Month and Year into one\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _prepareExpDate: function () {\r\n            var year = this.element.find('[data-container=\"' + this.options.gateway + '-cc-year\"]').val(),\r\n                month = parseInt(\r\n                    this.element.find('[data-container=\"' + this.options.gateway + '-cc-month\"]').val(),\r\n                    10\r\n                );\r\n\r\n            if (year.length > this.options.expireYearLength) {\r\n                year = year.substring(year.length - this.options.expireYearLength);\r\n            }\r\n\r\n            if (month < 10) {\r\n                month = '0' + month;\r\n            }\r\n\r\n            return {\r\n                month: month, year: year\r\n            };\r\n        }\r\n    });\r\n\r\n    return $.mage.transparent;\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-data.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function () {\r\n        'use strict';\r\n\r\n        return {\r\n            creditCard: null,\r\n            creditCardNumber: null,\r\n            expirationMonth: null,\r\n            expirationYear: null,\r\n            cvvCode: null\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'mageUtils',\r\n        'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator',\r\n        'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type'\r\n    ],\r\n    function (utils, luhn10, creditCardTypes) {\r\n        'use strict';\r\n\r\n        /**\r\n         * Validation result wrapper\r\n         * @param {Object} card\r\n         * @param {Boolean} isPotentiallyValid\r\n         * @param {Boolean} isValid\r\n         * @returns {Object}\r\n         */\r\n        function resultWrapper(card, isPotentiallyValid, isValid) {\r\n            return {\r\n                card: card,\r\n                isValid: isValid,\r\n                isPotentiallyValid: isPotentiallyValid\r\n            };\r\n        }\r\n\r\n        return function (value) {\r\n            var potentialTypes,\r\n                cardType,\r\n                valid,\r\n                i,\r\n                maxLength;\r\n\r\n            if (utils.isEmpty(value)) {\r\n                return resultWrapper(null, false, false);\r\n            }\r\n\r\n            value = value.replace(/\\-|\\s/g, '');\r\n\r\n            if (!/^\\d*$/.test(value)) {\r\n                return resultWrapper(null, false, false);\r\n            }\r\n\r\n            potentialTypes = creditCardTypes.getCardTypes(value);\r\n\r\n            if (potentialTypes.length === 0) {\r\n                return resultWrapper(null, false, false);\r\n            } else if (potentialTypes.length !== 1) {\r\n                return resultWrapper(null, true, false);\r\n            }\r\n\r\n            cardType = potentialTypes[0];\r\n\r\n            if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant\r\n                valid = true;\r\n            } else {\r\n                valid = luhn10(value);\r\n            }\r\n\r\n            for (i = 0; i < cardType.lengths.length; i++) {\r\n                if (cardType.lengths[i] === value.length) {\r\n                    return resultWrapper(cardType, valid, valid);\r\n                }\r\n            }\r\n\r\n            maxLength = Math.max.apply(null, cardType.lengths);\r\n\r\n            if (value.length < maxLength) {\r\n                return resultWrapper(cardType, true, false);\r\n            }\r\n\r\n            return resultWrapper(cardType, false, false);\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/cvv-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function () {\r\n        'use strict';\r\n\r\n        /**\r\n         * Validation result wrapper\r\n         * @param {Boolean} isValid\r\n         * @param {Boolean} isPotentiallyValid\r\n         * @returns {Object}\r\n         */\r\n        function resultWrapper(isValid, isPotentiallyValid) {\r\n            return {\r\n                isValid: isValid,\r\n                isPotentiallyValid: isPotentiallyValid\r\n            };\r\n        }\r\n\r\n        /**\r\n         * CVV number validation\r\n         * validate digit count fot CVV code\r\n         */\r\n        return function (value, maxLength) {\r\n            var DEFAULT_LENGTH = 3;\r\n\r\n            maxLength = maxLength || DEFAULT_LENGTH;\r\n\r\n            if (!/^\\d*$/.test(value)) {\r\n                return resultWrapper(false, false);\r\n            }\r\n\r\n            if (value.length === maxLength) {\r\n                return resultWrapper(true, true);\r\n            }\r\n\r\n            if (value.length < maxLength) {\r\n                return resultWrapper(false, true);\r\n            }\r\n\r\n            if (value.length > maxLength) {\r\n                return resultWrapper(false, false);\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'mageUtils',\r\n        'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date',\r\n        'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n        'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator'\r\n    ],\r\n    function (utils, parseDate, expirationMonth, expirationYear) {\r\n        'use strict';\r\n\r\n        /**\r\n         * Validation result wrapper\r\n         * @param {Boolean} isValid\r\n         * @param {Boolean} isPotentiallyValid\r\n         * @param {String} month\r\n         * @param {String} year\r\n         * @returns {Object}\r\n         */\r\n        function resultWrapper(isValid, isPotentiallyValid, month, year) {\r\n            return {\r\n                isValid: isValid,\r\n                isPotentiallyValid: isPotentiallyValid,\r\n                month: month,\r\n                year: year\r\n            };\r\n        }\r\n\r\n        return function (value) {\r\n            var date,\r\n                monthValid,\r\n                yearValid;\r\n\r\n            if (utils.isEmpty(value)) {\r\n                return resultWrapper(false, false, null, null);\r\n            }\r\n\r\n            value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\r\n            date = parseDate(value);\r\n            monthValid = expirationMonth(date.month);\r\n            yearValid = expirationYear(date.year);\r\n\r\n            if (monthValid.isValid && yearValid.isValid) {\r\n                return resultWrapper(true, true, date.month, date.year);\r\n            }\r\n\r\n            if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\r\n                return resultWrapper(false, true, null, null);\r\n            }\r\n\r\n            return resultWrapper(false, false, null, null);\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\n(function (factory) {\r\n    'use strict';\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define([\r\n            'jquery',\r\n            'Magento_Payment/js/model/credit-card-validation/cvv-validator',\r\n            'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n            'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator',\r\n            'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n            'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n            'mage/translate'\r\n        ], factory);\r\n    } else {\r\n        factory(jQuery);\r\n    }\r\n}(function ($, cvvValidator, creditCardNumberValidator, expirationDateValidator, monthValidator, creditCardData) {\r\n    'use strict';\r\n\r\n    $.each({\r\n        'validate-card-type': [\r\n            function (number, item, allowedTypes) {\r\n                var cardInfo,\r\n                    i,\r\n                    l;\r\n\r\n                if (!creditCardNumberValidator(number).isValid) {\r\n                    return false;\r\n                } else {\r\n                    cardInfo = creditCardNumberValidator(number).card;\r\n\r\n                    for (i = 0, l = allowedTypes.length; i < l; i++) {\r\n                        if (cardInfo.title == allowedTypes[i].type) {\r\n                            return true;\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            $.mage.__('Please enter a valid credit card type number.')\r\n        ],\r\n        'validate-card-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             * @param {String} number - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (number) {\r\n                return creditCardNumberValidator(number).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-card-date': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             * @param {String} date - month\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return monthValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration month.')\r\n        ],\r\n        'validate-card-cvv': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             * @param {String} cvv - month\r\n             * @return {Boolean}\r\n             */\r\n            function (cvv) {\r\n                var maxLength = creditCardData.creditCard ? creditCardData.creditCard.code.size : 3;\r\n\r\n                return cvvValidator(cvv, maxLength).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        'validate-card-year': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             * @param {String} date - month\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return monthValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration year.')\r\n        ]\r\n\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n}));\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'mageUtils'\r\n    ],\r\n    function ($, utils) {\r\n        'use strict';\r\n\r\n        var types = [\r\n            {\r\n                title: 'Visa',\r\n                type: 'VI',\r\n                pattern: '^4\\\\d*$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [16],\r\n                code: {\r\n                    name: 'CVV',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'MasterCard',\r\n                type: 'MC',\r\n                pattern: '^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [16],\r\n                code: {\r\n                    name: 'CVC',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'American Express',\r\n                type: 'AE',\r\n                pattern: '^3([47]\\\\d*)?$',\r\n                isAmex: true,\r\n                gaps: [4, 10],\r\n                lengths: [15],\r\n                code: {\r\n                    name: 'CID',\r\n                    size: 4\r\n                }\r\n            },\r\n            {\r\n                title: 'Diners',\r\n                type: 'DN',\r\n                pattern: '^(3(0[0-5]|095|6|[8-9]))\\\\d*$',\r\n                gaps: [4, 10],\r\n                lengths: [14, 16, 17, 18, 19],\r\n                code: {\r\n                    name: 'CVV',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'Discover',\r\n                type: 'DI',\r\n                pattern: '^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [16, 17, 18, 19],\r\n                code: {\r\n                    name: 'CID',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'JCB',\r\n                type: 'JCB',\r\n                pattern: '^35(2[8-9]|[3-8])\\\\d*$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [16, 17, 18, 19],\r\n                code: {\r\n                    name: 'CVV',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'UnionPay',\r\n                type: 'UN',\r\n                pattern: '^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [16, 17, 18, 19],\r\n                code: {\r\n                    name: 'CVN',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'Maestro International',\r\n                type: 'MI',\r\n                pattern: '^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n                code: {\r\n                    name: 'CVC',\r\n                    size: 3\r\n                }\r\n            },\r\n            {\r\n                title: 'Maestro Domestic',\r\n                type: 'MD',\r\n                pattern: '^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$',\r\n                gaps: [4, 8, 12],\r\n                lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n                code: {\r\n                    name: 'CVC',\r\n                    size: 3\r\n                }\r\n            }\r\n        ];\r\n\r\n        return {\r\n            /**\r\n             * Get credit card type\r\n             * @param {String} cardNumber\r\n             * @returns {Array}\r\n             */\r\n            getCardTypes: function (cardNumber) {\r\n                var i, value,\r\n                    result = [];\r\n\r\n                if (utils.isEmpty(cardNumber)) {\r\n                    return result;\r\n                }\r\n\r\n                if (cardNumber === '') {\r\n                    return $.extend(true, {}, types);\r\n                }\r\n\r\n                for (i = 0; i < types.length; i++) {\r\n                    value = types[i];\r\n\r\n                    if (new RegExp(value.pattern).test(cardNumber)) {\r\n                        result.push($.extend(true, {}, value));\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function () {\r\n        'use strict';\r\n\r\n        /**\r\n         * Luhn algorithm verification\r\n         */\r\n        return function (a, b, c, d, e) {\r\n            for (d = +a[b = a.length - 1], e = 0; b--;) {\r\n                c = +a[b];\r\n                d += ++e % 2 ? 2 * c % 10 + (c > 4) : c;\r\n            }\r\n\r\n            return !(d % 10);\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function () {\r\n        'use strict';\r\n\r\n        /**\r\n         * Validation result wrapper\r\n         * @param {Boolean} isValid\r\n         * @param {Boolean} isPotentiallyValid\r\n         * @returns {Object}\r\n         */\r\n        function resultWrapper(isValid, isPotentiallyValid) {\r\n            return {\r\n                isValid: isValid,\r\n                isPotentiallyValid: isPotentiallyValid\r\n            };\r\n        }\r\n\r\n        return function (value) {\r\n            var month,\r\n                monthValid;\r\n\r\n            if (value.replace(/\\s/g, '') === '' || value === '0') {\r\n                return resultWrapper(false, true);\r\n            }\r\n\r\n            if (!/^\\d*$/.test(value)) {\r\n                return resultWrapper(false, false);\r\n            }\r\n\r\n            if (isNaN(value)) {\r\n                return resultWrapper(false, false);\r\n            }\r\n\r\n            month = parseInt(value, 10);\r\n            monthValid = month > 0 && month < 13;\r\n\r\n            return resultWrapper(monthValid, monthValid);\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function () {\r\n        'use strict';\r\n\r\n        /**\r\n         * Validation result wrapper\r\n         * @param {Boolean} isValid\r\n         * @param {Boolean} isPotentiallyValid\r\n         * @returns {Object}\r\n         */\r\n        function resultWrapper(isValid, isPotentiallyValid) {\r\n            return {\r\n                isValid: isValid,\r\n                isPotentiallyValid: isPotentiallyValid\r\n            };\r\n        }\r\n\r\n        return function (value) {\r\n            var currentYear = new Date().getFullYear(),\r\n                len = value.length,\r\n                valid,\r\n                expMaxLifetime = 19;\r\n\r\n            if (value.replace(/\\s/g, '') === '') {\r\n                return resultWrapper(false, true);\r\n            }\r\n\r\n            if (!/^\\d*$/.test(value)) {\r\n                return resultWrapper(false, false);\r\n            }\r\n\r\n            if (len !== 4) {\r\n                return resultWrapper(false, true);\r\n            }\r\n\r\n            value = parseInt(value, 10);\r\n            valid = value >= currentYear && value <= currentYear + expMaxLifetime;\r\n\r\n            return resultWrapper(valid, valid);\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [],\r\n    function () {\r\n        'use strict';\r\n\r\n        return function (value) {\r\n            var month, len;\r\n\r\n            if (value.match('/')) {\r\n                value = value.split(/\\s*\\/\\s*/g);\r\n\r\n                return {\r\n                    month: value[0],\r\n                    year: value.slice(1).join()\r\n                };\r\n            }\r\n\r\n            len = value[0] === '0' || value.length > 5 || value.length === 4 || value.length === 3 ? 2 : 1;\r\n            month = value.substr(0, len);\r\n\r\n            return {\r\n                month: month,\r\n                year: value.substr(month.length, 4)\r\n            };\r\n        };\r\n    }\r\n);\r\n","Magento_Payment/js/view/payment/cc-form.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'underscore',\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n        'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n        'mage/translate'\r\n    ],\r\n    function (_, Component, creditCardData, cardNumberValidator, $t) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                creditCardType: '',\r\n                creditCardExpYear: '',\r\n                creditCardExpMonth: '',\r\n                creditCardNumber: '',\r\n                creditCardSsStartMonth: '',\r\n                creditCardSsStartYear: '',\r\n                creditCardSsIssue: '',\r\n                creditCardVerificationNumber: '',\r\n                selectedCardType: null\r\n            },\r\n\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([\r\n                        'creditCardType',\r\n                        'creditCardExpYear',\r\n                        'creditCardExpMonth',\r\n                        'creditCardNumber',\r\n                        'creditCardVerificationNumber',\r\n                        'creditCardSsStartMonth',\r\n                        'creditCardSsStartYear',\r\n                        'creditCardSsIssue',\r\n                        'selectedCardType'\r\n                    ]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Init component\r\n             */\r\n            initialize: function () {\r\n                var self = this;\r\n\r\n                this._super();\r\n\r\n                //Set credit card number to credit card data object\r\n                this.creditCardNumber.subscribe(function (value) {\r\n                    var result;\r\n\r\n                    self.selectedCardType(null);\r\n\r\n                    if (value === '' || value === null) {\r\n                        return false;\r\n                    }\r\n                    result = cardNumberValidator(value);\r\n\r\n                    if (!result.isPotentiallyValid && !result.isValid) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (result.card !== null) {\r\n                        self.selectedCardType(result.card.type);\r\n                        creditCardData.creditCard = result.card;\r\n                    }\r\n\r\n                    if (result.isValid) {\r\n                        creditCardData.creditCardNumber = value;\r\n                        self.creditCardType(result.card.type);\r\n                    }\r\n                });\r\n\r\n                //Set expiration year to credit card data object\r\n                this.creditCardExpYear.subscribe(function (value) {\r\n                    creditCardData.expirationYear = value;\r\n                });\r\n\r\n                //Set expiration month to credit card data object\r\n                this.creditCardExpMonth.subscribe(function (value) {\r\n                    creditCardData.expirationMonth = value;\r\n                });\r\n\r\n                //Set cvv code to credit card data object\r\n                this.creditCardVerificationNumber.subscribe(function (value) {\r\n                    creditCardData.cvvCode = value;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Get code\r\n             * @returns {String}\r\n             */\r\n            getCode: function () {\r\n                return 'cc';\r\n            },\r\n\r\n            /**\r\n             * Get data\r\n             * @returns {Object}\r\n             */\r\n            getData: function () {\r\n                return {\r\n                    'method': this.item.method,\r\n                    'additional_data': {\r\n                        'cc_cid': this.creditCardVerificationNumber(),\r\n                        'cc_ss_start_month': this.creditCardSsStartMonth(),\r\n                        'cc_ss_start_year': this.creditCardSsStartYear(),\r\n                        'cc_ss_issue': this.creditCardSsIssue(),\r\n                        'cc_type': this.creditCardType(),\r\n                        'cc_exp_year': this.creditCardExpYear(),\r\n                        'cc_exp_month': this.creditCardExpMonth(),\r\n                        'cc_number': this.creditCardNumber()\r\n                    }\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Get list of available credit card types\r\n             * @returns {Object}\r\n             */\r\n            getCcAvailableTypes: function () {\r\n                return window.checkoutConfig.payment.ccform.availableTypes[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * Get payment icons\r\n             * @param {String} type\r\n             * @returns {Boolean}\r\n             */\r\n            getIcons: function (type) {\r\n                return window.checkoutConfig.payment.ccform.icons.hasOwnProperty(type) ?\r\n                    window.checkoutConfig.payment.ccform.icons[type]\r\n                    : false;\r\n            },\r\n\r\n            /**\r\n             * Get list of months\r\n             * @returns {Object}\r\n             */\r\n            getCcMonths: function () {\r\n                return window.checkoutConfig.payment.ccform.months[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * Get list of years\r\n             * @returns {Object}\r\n             */\r\n            getCcYears: function () {\r\n                return window.checkoutConfig.payment.ccform.years[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * Check if current payment has verification\r\n             * @returns {Boolean}\r\n             */\r\n            hasVerification: function () {\r\n                return window.checkoutConfig.payment.ccform.hasVerification[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @deprecated\r\n             * @returns {Boolean}\r\n             */\r\n            hasSsCardType: function () {\r\n                return window.checkoutConfig.payment.ccform.hasSsCardType[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * Get image url for CVV\r\n             * @returns {String}\r\n             */\r\n            getCvvImageUrl: function () {\r\n                return window.checkoutConfig.payment.ccform.cvvImageUrl[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * Get image for CVV\r\n             * @returns {String}\r\n             */\r\n            getCvvImageHtml: function () {\r\n                return '<img src=\"' + this.getCvvImageUrl() +\r\n                    '\" alt=\"' + $t('Card Verification Number Visual Reference') +\r\n                    '\" title=\"' + $t('Card Verification Number Visual Reference') +\r\n                    '\" />';\r\n            },\r\n\r\n            /**\r\n             * @deprecated\r\n             * @returns {Object}\r\n             */\r\n            getSsStartYears: function () {\r\n                return window.checkoutConfig.payment.ccform.ssStartYears[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * Get list of available credit card types values\r\n             * @returns {Object}\r\n             */\r\n            getCcAvailableTypesValues: function () {\r\n                return _.map(this.getCcAvailableTypes(), function (value, key) {\r\n                    return {\r\n                        'value': key,\r\n                        'type': value\r\n                    };\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Get list of available month values\r\n             * @returns {Object}\r\n             */\r\n            getCcMonthsValues: function () {\r\n                return _.map(this.getCcMonths(), function (value, key) {\r\n                    return {\r\n                        'value': key,\r\n                        'month': value\r\n                    };\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Get list of available year values\r\n             * @returns {Object}\r\n             */\r\n            getCcYearsValues: function () {\r\n                return _.map(this.getCcYears(), function (value, key) {\r\n                    return {\r\n                        'value': key,\r\n                        'year': value\r\n                    };\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @deprecated\r\n             * @returns {Object}\r\n             */\r\n            getSsStartYearsValues: function () {\r\n                return _.map(this.getSsStartYears(), function (value, key) {\r\n                    return {\r\n                        'value': key,\r\n                        'year': value\r\n                    };\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Is legend available to display\r\n             * @returns {Boolean}\r\n             */\r\n            isShowLegend: function () {\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * Get available credit card type by code\r\n             * @param {String} code\r\n             * @returns {String}\r\n             */\r\n            getCcTypeTitleByCode: function (code) {\r\n                var title = '',\r\n                    keyValue = 'value',\r\n                    keyType = 'type';\r\n\r\n                _.each(this.getCcAvailableTypesValues(), function (value) {\r\n                    if (value[keyValue] === code) {\r\n                        title = value[keyType];\r\n                    }\r\n                });\r\n\r\n                return title;\r\n            },\r\n\r\n            /**\r\n             * Prepare credit card number to output\r\n             * @param {String} number\r\n             * @returns {String}\r\n             */\r\n            formatDisplayCcNumber: function (number) {\r\n                return 'xxxx-' + number.substr(-4);\r\n            },\r\n\r\n            /**\r\n             * Get credit card details\r\n             * @returns {Array}\r\n             */\r\n            getInfo: function () {\r\n                return [\r\n                    {\r\n                        'name': 'Credit Card Type', value: this.getCcTypeTitleByCode(this.creditCardType())\r\n                    },\r\n                    {\r\n                        'name': 'Credit Card Number', value: this.formatDisplayCcNumber(this.creditCardNumber())\r\n                    }\r\n                ];\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Payment/js/view/payment/iframe.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Payment/js/view/payment/cc-form',\r\n        'Magento_Ui/js/model/messageList',\r\n        'mage/translate',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Checkout/js/action/set-payment-information',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Ui/js/modal/alert'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        messageList,\r\n        $t,\r\n        fullScreenLoader,\r\n        setPaymentInformationAction,\r\n        additionalValidators,\r\n        alert\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Payment/payment/iframe',\r\n                timeoutId: null,\r\n                timeoutMessage: 'Sorry, but something went wrong.'\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getSource: function () {\r\n                return window.checkoutConfig.payment.iframe.source[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getControllerName: function () {\r\n                return window.checkoutConfig.payment.iframe.controllerName[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getPlaceOrderUrl: function () {\r\n                return window.checkoutConfig.payment.iframe.placeOrderUrl[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getCgiUrl: function () {\r\n                return window.checkoutConfig.payment.iframe.cgiUrl[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getSaveOrderUrl: function () {\r\n                return window.checkoutConfig.payment.iframe.saveOrderUrl[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getDateDelim: function () {\r\n                return window.checkoutConfig.payment.iframe.dateDelim[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getCardFieldsMap: function () {\r\n                return window.checkoutConfig.payment.iframe.cardFieldsMap[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getExpireYearLength: function () {\r\n                return window.checkoutConfig.payment.iframe.expireYearLength[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @param {Object} parent\r\n             * @returns {Function}\r\n             */\r\n            originalPlaceOrder: function (parent) {\r\n                return parent.placeOrder.bind(parent);\r\n            },\r\n\r\n            /**\r\n             * @returns {Number}\r\n             */\r\n            getTimeoutTime: function () {\r\n                return window.checkoutConfig.payment.iframe.timeoutTime[this.getCode()];\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getTimeoutMessage: function () {\r\n                return $t(this.timeoutMessage);\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            placeOrder: function () {\r\n                if (this.validateHandler() && additionalValidators.validate()) {\r\n\r\n                    fullScreenLoader.startLoader();\r\n\r\n                    this.isPlaceOrderActionAllowed(false);\r\n\r\n                    $.when(\r\n                        setPaymentInformationAction(\r\n                            this.messageContainer,\r\n                            {\r\n                                method: this.getCode()\r\n                            }\r\n                        )\r\n                    ).done(this.done.bind(this))\r\n                        .fail(this.fail.bind(this));\r\n\r\n                    this.initTimeoutHandler();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * {Function}\r\n             */\r\n            initTimeoutHandler: function () {\r\n                this.timeoutId = setTimeout(\r\n                    this.timeoutHandler.bind(this),\r\n                    this.getTimeoutTime()\r\n                );\r\n\r\n                $(window).off('clearTimeout')\r\n                    .on('clearTimeout', this.clearTimeout.bind(this));\r\n            },\r\n\r\n            /**\r\n             * {Function}\r\n             */\r\n            clearTimeout: function () {\r\n                clearTimeout(this.timeoutId);\r\n                this.fail();\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * {Function}\r\n             */\r\n            timeoutHandler: function () {\r\n                this.clearTimeout();\r\n\r\n                alert(\r\n                    {\r\n                        content: this.getTimeoutMessage(),\r\n                        actions: {\r\n\r\n                            /**\r\n                             * {Function}\r\n                             */\r\n                            always: this.alertActionHandler.bind(this)\r\n                        }\r\n                    }\r\n                );\r\n\r\n                this.fail();\r\n            },\r\n\r\n            /**\r\n             * {Function}\r\n             */\r\n            alertActionHandler: function () {\r\n                fullScreenLoader.startLoader();\r\n                window.location.reload();\r\n            },\r\n\r\n            /**\r\n             * {Function}\r\n             */\r\n            fail: function () {\r\n                fullScreenLoader.stopLoader();\r\n                this.isPlaceOrderActionAllowed(true);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * {Function}\r\n             */\r\n            done: function () {\r\n                this.placeOrderHandler().fail(function () {\r\n                    fullScreenLoader.stopLoader();\r\n                });\r\n\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Payment/js/view/payment/payments.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/payment/renderer-list'\r\n    ],\r\n    function (\r\n        Component,\r\n        rendererList\r\n    ) {\r\n        'use strict';\r\n        rendererList.push(\r\n            {\r\n                type: 'free',\r\n                component: 'Magento_Payment/js/view/payment/method-renderer/free-method'\r\n            }\r\n        );\r\n        /** Add view logic here if needed */\r\n        return Component.extend({});\r\n    }\r\n);\r\n","Magento_Payment/js/view/payment/method-renderer/free-method.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (Component, quote) {\r\n        'use strict';\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Payment/payment/free'\r\n            },\r\n\r\n            /** Returns is method available */\r\n            isAvailable: function() {\r\n                return quote.totals().grand_total <= 0;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_GiftMessage/extra-options.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.extraOptions', {\r\n        options: {\r\n            events: 'billingSave shippingSave',\r\n            additionalContainer: '#onepage-checkout-shipping-method-additional-load'\r\n        },\r\n\r\n        /**\r\n         * Set up event handler for requesting any additional extra options from the backend.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.element.on(this.options.events, $.proxy(this._addExtraOptions, this));\r\n        },\r\n\r\n        /**\r\n         * Fetch the extra options using an Ajax call. Extra options include Gift Receipt and\r\n         * Printed Card.\r\n         * @private\r\n         */\r\n        _addExtraOptions: function() {\r\n            $.ajax({\r\n                url: this.options.additionalUrl,\r\n                context: this,\r\n                type: 'post',\r\n                async: false,\r\n                success: function(response) {\r\n                    $(this.options.additionalContainer).html(response).trigger('contentUpdated');\r\n                }\r\n            });\r\n        }\r\n    });\r\n    \r\n    return $.mage.extraOptions;\r\n});\r\n","Magento_GiftMessage/gift-options.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.giftOptions', {\r\n        options: {\r\n            mageError: 'mage-error',\r\n            noDisplay: 'no-display',\r\n            requiredEntry: 'required-entry'\r\n        },\r\n\r\n        /**\r\n         * Initial toggle of the various gift options after widget instantiation.\r\n         * @private\r\n         */\r\n        _init: function() {\r\n            this._toggleVisibility();\r\n        },\r\n\r\n        /**\r\n         * Bind a click handler to the widget's context element.\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this.element.on('click', $.proxy(this._toggleVisibility, this));\r\n            $(this.element.data('selector').id).find('.giftmessage-area')\r\n                .on('change', $.proxy(this._toggleRequired, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the visibility of the widget's context element's selector(s).\r\n         * @private\r\n         * @param event {Object} - Click event. Target is a checkbox.\r\n         */\r\n        _toggleVisibility: function(event) {\r\n            var checkbox = event ? $(event.target) : this.element,\r\n                container = $(checkbox.data('selector').id);\r\n            if (checkbox.is(':checked')) {\r\n                container.show()\r\n                    .find('.giftmessage-area:not(:visible)').each(function(x, element) {\r\n                        if ($(element).val().length > 0) {\r\n                            $(element).change();\r\n                            container.find('a').click();\r\n                        }\r\n                    });\r\n            } else {\r\n                var _this = this;\r\n                container.hide()\r\n                    .find('.input-text:not(.giftmessage-area)').each(function(x, element) {\r\n                        $(element).val(element.defaultValue).removeClass(_this.options.mageError)\r\n                            .next('div.' + _this.options.mageError).remove();\r\n                    }).end()\r\n                    .find('.giftmessage-area').val('').change().end()\r\n                    .find('.select').val('').change().end()\r\n                    .find('.checkbox:checked').prop('checked', false).click().prop('checked', false).end()\r\n                    .find('.price-box').addClass(this.options.noDisplay).end();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the From and To input fields required if a gift message has been written.\r\n         * @private\r\n         * @param event {Object} - Change event. Target is a textarea.\r\n         */\r\n        _toggleRequired: function(event) {\r\n            var textArea = $(event.target),\r\n                length = textArea.val().length;\r\n            textArea.closest('li').prev('.fields')\r\n                .find('.input-text').toggleClass(this.options.requiredEntry, length > 0);\r\n        }\r\n    });\r\n    \r\n    return $.mage.giftOptions;\r\n});\r\n","Magento_GiftMessage/js/action/gift-options.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_GiftMessage/js/model/url-builder',\r\n        'mage/storage',\r\n        'Magento_Ui/js/model/messageList',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'mage/url',\r\n        'Magento_Checkout/js/model/quote'\r\n    ],\r\n    function (urlBuilder, storage, messageList, errorProcessor, url, quote) {\r\n        'use strict';\r\n\r\n        return function (giftMessage, remove) {\r\n            var serviceUrl;\r\n\r\n            url.setBaseUrl(giftMessage.getConfigValue('baseUrl'));\r\n\r\n            if (giftMessage.getConfigValue('isCustomerLoggedIn')) {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message', {});\r\n\r\n                if (giftMessage.itemId != 'orderLevel') {\r\n                    serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message/:itemId', {\r\n                        itemId: giftMessage.itemId\r\n                    });\r\n                }\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/gift-message', {\r\n                    cartId: quote.getQuoteId()\r\n                });\r\n\r\n                if (giftMessage.itemId != 'orderLevel') {\r\n                    serviceUrl = urlBuilder.createUrl(\r\n                        '/guest-carts/:cartId/gift-message/:itemId',\r\n                        {\r\n                            cartId: quote.getQuoteId(), itemId: giftMessage.itemId\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            messageList.clear();\r\n\r\n            storage.post(\r\n                serviceUrl,\r\n                JSON.stringify({\r\n                    gift_message: giftMessage.getSubmitParams(remove)\r\n                })\r\n            ).done(\r\n                function (response) {\r\n                    giftMessage.reset();\r\n                    _.each(giftMessage.getAfterSubmitCallbacks(), function (callback) {\r\n                        if (_.isFunction(callback)) {\r\n                            callback();\r\n                        }\r\n                    });\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response);\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_GiftMessage/js/model/gift-message.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(['uiElement', 'underscore', 'mage/url'],\r\n    function (uiElement, _, url) {\r\n        'use strict';\r\n\r\n        var provider = uiElement();\r\n\r\n        return function (itemId) {\r\n            var model = {\r\n                id: 'message-' + itemId,\r\n                itemId: itemId,\r\n                observables: {},\r\n                additionalOptions: [],\r\n                submitParams: [\r\n                    'recipient',\r\n                    'sender',\r\n                    'message'\r\n                ],\r\n                initialize: function() {\r\n                    this.getObservable('alreadyAdded')(false);\r\n                    var message = false;\r\n\r\n                    if (this.itemId == 'orderLevel') {\r\n                        message = window.giftOptionsConfig.giftMessage.hasOwnProperty(this.itemId)\r\n                            ? window.giftOptionsConfig.giftMessage[this.itemId]\r\n                            : null;\r\n                    } else {\r\n                        message =\r\n                            window.giftOptionsConfig.giftMessage.hasOwnProperty('itemLevel')\r\n                            && window.giftOptionsConfig.giftMessage['itemLevel'].hasOwnProperty(this.itemId)\r\n                            ? window.giftOptionsConfig.giftMessage['itemLevel'][this.itemId]['message']\r\n                            : null;\r\n                    }\r\n                    if (_.isObject(message)) {\r\n                        this.getObservable('recipient')(message.recipient);\r\n                        this.getObservable('sender')(message.sender);\r\n                        this.getObservable('message')(message.message);\r\n                        this.getObservable('alreadyAdded')(true);\r\n                    }\r\n                },\r\n                getObservable: function(key) {\r\n                    this.initObservable(this.id, key);\r\n                    return provider[this.getUniqueKey(this.id, key)];\r\n                },\r\n                initObservable: function(node, key) {\r\n                    if (node && !this.observables.hasOwnProperty(node)) {\r\n                        this.observables[node] = [];\r\n                    }\r\n                    if (key && this.observables[node].indexOf(key) == -1) {\r\n                        this.observables[node].push(key);\r\n                        provider.observe(this.getUniqueKey(node, key));\r\n                    }\r\n                },\r\n                getUniqueKey: function(node, key) {\r\n                    return node + '-' + key;\r\n                },\r\n                getConfigValue: function(key) {\r\n                    return window.giftOptionsConfig.hasOwnProperty(key) ?\r\n                        window.giftOptionsConfig[key]\r\n                        : null;\r\n                },\r\n                reset: function() {\r\n                    this.getObservable('isClear')(true);\r\n                },\r\n                getAfterSubmitCallbacks: function() {\r\n                    var callbacks = [];\r\n                    callbacks.push(this.afterSubmit);\r\n                    _.each(this.additionalOptions, function(option) {\r\n                        if (_.isFunction(option.afterSubmit)) {\r\n                            callbacks.push(option.afterSubmit);\r\n                        }\r\n                    });\r\n                    return callbacks;\r\n                },\r\n                afterSubmit: function() {\r\n                    window.location.href = url.build('checkout/cart/updatePost')\r\n                        + '?form_key=' + window.checkoutConfig.formKey\r\n                        + '&cart[]';\r\n                },\r\n                getSubmitParams: function(remove) {\r\n                    var params = {},\r\n                        self = this;\r\n                    _.each(this.submitParams, function(key) {\r\n                        var observable = provider[self.getUniqueKey(self.id, key)];\r\n                        if (_.isFunction(observable)) {\r\n                            params[key] = remove ? null : observable();\r\n                        }\r\n                    });\r\n\r\n                    if(this.additionalOptions.length) {\r\n                        params['extension_attributes'] = {};\r\n                    }\r\n                    _.each(this.additionalOptions, function(option) {\r\n                        if (_.isFunction(option.getSubmitParams)) {\r\n                            params['extension_attributes'] = _.extend(\r\n                                params['extension_attributes'],\r\n                                option.getSubmitParams(remove)\r\n                            );\r\n                        }\r\n                    });\r\n                    return params;\r\n                },\r\n\r\n                /**\r\n                 * Check if gift message can be displayed\r\n                 *\r\n                 * @returns {Boolean}\r\n                 */\r\n                isGiftMessageAvailable: function () {\r\n                    var isGloballyAvailable,\r\n                        giftMessageConfig,\r\n                        itemConfig;\r\n\r\n                    // itemId represent gift message level: 'orderLevel' constant or cart item ID\r\n                    if (this.itemId === 'orderLevel') {\r\n                        return this.getConfigValue('isOrderLevelGiftOptionsEnabled');\r\n                    }\r\n\r\n                    // gift message product configuration must override system configuration\r\n                    isGloballyAvailable = this.getConfigValue('isItemLevelGiftOptionsEnabled');\r\n                    giftMessageConfig = window.giftOptionsConfig.giftMessage;\r\n                    itemConfig = giftMessageConfig.hasOwnProperty('itemLevel') &&\r\n                        giftMessageConfig.itemLevel.hasOwnProperty(this.itemId) ?\r\n                        giftMessageConfig.itemLevel[this.itemId] :\r\n                        {};\r\n\r\n                    return itemConfig.hasOwnProperty('is_available') ? itemConfig['is_available'] : isGloballyAvailable;\r\n                }\r\n            };\r\n            model.initialize();\r\n            return model;\r\n        }\r\n    }\r\n);\r\n","Magento_GiftMessage/js/model/gift-options.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(['underscore', 'ko'],\r\n    function (_, ko) {\r\n\r\n        'use strict';\r\n\r\n        return {\r\n            options: ko.observableArray([]),\r\n            addOption: function (option) {\r\n                if (!this.options().hasOwnProperty(option.itemId)) {\r\n                    this.options.push({\r\n                            id: option.itemId, value: option\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n            getOptionByItemId: function (itemId) {\r\n                var option = null;\r\n                _.each(this.options(), function (data) {\r\n                    if (data.id === itemId) {\r\n                        option = data.value;\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return option;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_GiftMessage/js/model/url-builder.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/url-builder'\r\n    ],\r\n    function ($, urlBuilder) {\r\n        'use strict';\r\n\r\n        return $.extend(\r\n            urlBuilder,\r\n            {\r\n                storeCode: window.giftOptionsConfig.storeCode\r\n            }\r\n        );\r\n    }\r\n);\r\n","Magento_GiftMessage/js/view/gift-message.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_GiftMessage/js/model/gift-message',\r\n        'Magento_GiftMessage/js/model/gift-options',\r\n        'Magento_GiftMessage/js/action/gift-options'\r\n    ],\r\n    function (Component, GiftMessage, giftOptions, giftOptionsService) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            formBlockVisibility: null,\r\n            resultBlockVisibility: null,\r\n            model: {},\r\n\r\n            /**\r\n             * Component init\r\n             */\r\n            initialize: function () {\r\n                var self = this,\r\n                    model;\r\n\r\n                this._super()\r\n                    .observe('formBlockVisibility')\r\n                    .observe({\r\n                        'resultBlockVisibility': false\r\n                    });\r\n\r\n                this.itemId = this.itemId || 'orderLevel';\r\n                model = new GiftMessage(this.itemId);\r\n                giftOptions.addOption(model);\r\n                this.model = model;\r\n\r\n                this.model.getObservable('isClear').subscribe(function (value) {\r\n                    if (value == true) {\r\n                        self.formBlockVisibility(false);\r\n                        self.model.getObservable('alreadyAdded')(true);\r\n                    }\r\n                });\r\n\r\n                this.isResultBlockVisible();\r\n            },\r\n\r\n            /**\r\n             * Is reslt block visible\r\n             */\r\n            isResultBlockVisible: function () {\r\n                var self = this;\r\n\r\n                if (this.model.getObservable('alreadyAdded')()) {\r\n                    this.resultBlockVisibility(true);\r\n                }\r\n                this.model.getObservable('additionalOptionsApplied').subscribe(function (value) {\r\n                    if (value == true) {\r\n                        self.resultBlockVisibility(true);\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @param {String} key\r\n             * @return {*}\r\n             */\r\n            getObservable: function (key) {\r\n                return this.model.getObservable(key);\r\n            },\r\n\r\n            /**\r\n             * Hide\\Show form block\r\n             */\r\n            toggleFormBlockVisibility: function () {\r\n                if (!this.model.getObservable('alreadyAdded')()) {\r\n                    this.formBlockVisibility(!this.formBlockVisibility());\r\n                } else {\r\n                    this.resultBlockVisibility(!this.resultBlockVisibility());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Edit options\r\n             */\r\n            editOptions: function () {\r\n                this.resultBlockVisibility(false);\r\n                this.formBlockVisibility(true);\r\n            },\r\n\r\n            /**\r\n             * Delete options\r\n             */\r\n            deleteOptions: function () {\r\n                giftOptionsService(this.model, true);\r\n            },\r\n\r\n            /**\r\n             * Hide form block\r\n             */\r\n            hideFormBlock: function () {\r\n                this.formBlockVisibility(false);\r\n\r\n                if (this.model.getObservable('alreadyAdded')()) {\r\n                    this.resultBlockVisibility(true);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            hasActiveOptions: function () {\r\n                var regionData = this.getRegion('additionalOptions'),\r\n                    options = regionData();\r\n\r\n                for (var i = 0; i < options.length; i++) {\r\n                    if (options[i].isActive()) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            isActive: function () {\r\n                return this.model.isGiftMessageAvailable();\r\n            },\r\n\r\n            /**\r\n             * Submit options\r\n             */\r\n            submitOptions: function () {\r\n                giftOptionsService(this.model);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Downloadable/downloadable.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true expr:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\",\r\n    \"Magento_Catalog/js/price-box\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.downloadable', {\r\n        options: {\r\n            priceHolderSelector: '.price-box'\r\n        },\r\n\r\n        _create: function() {\r\n            var self = this;\r\n\r\n            this.element.find(this.options.linkElement).on('change', $.proxy(function() {\r\n                this._reloadPrice();\r\n            }, this));\r\n\r\n            this.element.find(this.options.allElements).on('change', function() {\r\n                if (this.checked) {\r\n                    $('label[for=\"' + this.id + '\"] > span').text($(this).attr('data-checked'));\r\n                    self.element.find(self.options.linkElement + ':not(:checked)').each(function(){\r\n                        $(this).trigger('click');\r\n                    });\r\n                } else {\r\n                    $('[for=\"' + this.id + '\"] > span').text($(this).attr('data-notchecked'));\r\n                    self.element.find(self.options.linkElement + ':checked').each(function(){\r\n                        $(this).trigger('click');\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Reload product price with selected link price included\r\n         * @private\r\n         */\r\n        _reloadPrice: function() {\r\n            var finalPrice = 0;\r\n            var basePrice = 0;\r\n            this.element.find(this.options.linkElement + ':checked').each($.proxy(function(index, element) {\r\n                finalPrice += this.options.config.links[$(element).val()].finalPrice;\r\n                basePrice += this.options.config.links[$(element).val()].basePrice;\r\n            }, this));\r\n\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', {\r\n                'prices': {\r\n                    'finalPrice': { 'amount': finalPrice },\r\n                    'basePrice': { 'amount': basePrice }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    \r\n    return $.mage.downloadable;\r\n});\r\n","Magento_Msrp/js/msrp.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery/ui',\r\n    'mage/dropdown',\r\n    'mage/template'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addToCart', {\r\n        options: {\r\n            showAddToCart: true,\r\n            submitUrl: '',\r\n            cartButtonId: '',\r\n            singleOpenDropDown: true,\r\n            dialog: {}, // Options for mage/dropdown\r\n            dialogDelay: 500, // Delay in ms after resize dropdown shown again\r\n            origin: '', //Required, type of popup: 'msrp', 'tier' or 'info' popup\r\n\r\n            // Selectors\r\n            cartForm: '.form.map.checkout',\r\n            msrpLabelId: '#map-popup-msrp',\r\n            priceLabelId: '#map-popup-price',\r\n            popUpAttr: '[data-role=msrp-popup-template]',\r\n            popupCartButtonId: '#map-popup-button',\r\n            paypalCheckoutButons: '[data-action=checkout-form-submit]',\r\n            popupId: '',\r\n            realPrice: '',\r\n            isSaleable: '',\r\n            msrpPrice: '',\r\n            helpLinkId: '',\r\n            addToCartButton: '',\r\n\r\n            // Text options\r\n            productName: '',\r\n            addToCartUrl: ''\r\n        },\r\n\r\n        openDropDown: null,\r\n        triggerClass: 'dropdown-active',\r\n\r\n        popUpOptions: {\r\n            appendTo: 'body',\r\n            dialogContentClass: 'active',\r\n            closeOnMouseLeave: false,\r\n            autoPosition: true,\r\n            closeOnClickOutside: false,\r\n            'dialogClass': 'popup map-popup-wrapper',\r\n            position: {\r\n                my: 'left top',\r\n                collision: 'fit none',\r\n                at: 'left bottom',\r\n                within: 'body'\r\n            },\r\n            shadowHinter: 'popup popup-pointer'\r\n        },\r\n        popupOpened: false,\r\n\r\n        /**\r\n         * Creates widget instance\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (this.options.origin === 'msrp') {\r\n                this.initMsrpPopup();\r\n            } else if (this.options.origin === 'info') {\r\n                this.initInfoPopup();\r\n            } else if (this.options.origin === 'tier') {\r\n                this.initTierPopup();\r\n            }\r\n            $(this.options.cartButtonId).on('click', this._addToCartSubmit.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Init msrp popup\r\n         * @private\r\n         */\r\n        initMsrpPopup: function () {\r\n            var popupDOM = $(this.options.popUpAttr)[0],\r\n                $msrpPopup = $(popupDOM.innerHTML.trim());\r\n\r\n            $msrpPopup.find(this.options.productIdInput).val(this.options.productId);\r\n            $('body').append($msrpPopup);\r\n            $msrpPopup.trigger('contentUpdated');\r\n\r\n            $msrpPopup.find('button')\r\n                .on('click',\r\n                this.handleMsrpAddToCart.bind(this))\r\n                .filter(this.options.popupCartButtonId)\r\n                .text($(this.options.addToCartButton).text());\r\n\r\n            $msrpPopup.find(this.options.paypalCheckoutButons).on('click',\r\n                this.handleMsrpPaypalCheckout.bind(this));\r\n\r\n            $(this.options.popupId).on('click',\r\n                this.openPopup.bind(this));\r\n\r\n            this.$popup = $msrpPopup;\r\n        },\r\n\r\n        /**\r\n         * Init info popup\r\n         * @private\r\n         */\r\n        initInfoPopup: function () {\r\n            var infoPopupDOM = $('[data-role=msrp-info-template]')[0],\r\n                $infoPopup = $(infoPopupDOM.innerHTML.trim());\r\n\r\n            $('body').append($infoPopup);\r\n\r\n            $(this.options.helpLinkId).on('click', function (e) {\r\n                this.popUpOptions.position.of = $(e.target);\r\n                $infoPopup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\r\n                this._toggle($infoPopup);\r\n            }.bind(this));\r\n\r\n            this.$popup = $infoPopup;\r\n        },\r\n\r\n        /**\r\n         * Init tier price popup\r\n         * @private\r\n         */\r\n        initTierPopup: function () {\r\n            var popupDOM = $(this.options.popUpAttr)[0],\r\n                $tierPopup = $(popupDOM.innerHTML.trim());\r\n\r\n            $('body').append($tierPopup);\r\n            $tierPopup.find(this.options.productIdInput).val(this.options.productId);\r\n            this.popUpOptions.position.of = $(this.options.helpLinkId);\r\n\r\n            $tierPopup.find('button').on('click',\r\n                this.handleTierAddToCart.bind(this))\r\n                .filter(this.options.popupCartButtonId)\r\n                .text($(this.options.addToCartButton).text());\r\n\r\n            $tierPopup.find(this.options.paypalCheckoutButons).on('click',\r\n                this.handleTierPaypalCheckout.bind(this));\r\n\r\n            $(this.options.attr).on('click', function (e) {\r\n                this.$popup = $tierPopup;\r\n                this.tierOptions = $(e.target).data('tier-price');\r\n                this.openPopup(e);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * handle 'AddToCart' click on Msrp popup\r\n         * @param {Object} ev\r\n         *\r\n         * @private\r\n         */\r\n        handleMsrpAddToCart: function (ev) {\r\n            ev.preventDefault();\r\n\r\n            if (this.options.addToCartButton) {\r\n                $(this.options.addToCartButton).click();\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * handle 'paypal checkout buttons' click on Msrp popup\r\n         *\r\n         * @private\r\n         */\r\n        handleMsrpPaypalCheckout: function () {\r\n            this.closePopup(this.$popup);\r\n        },\r\n\r\n        /**\r\n         * handle 'AddToCart' click on Tier popup\r\n         *\r\n         * @param {Object} ev\r\n         * @private\r\n         */\r\n        handleTierAddToCart: function (ev) {\r\n            ev.preventDefault();\r\n\r\n            if (this.options.addToCartButton &&\r\n                this.options.inputQty && !isNaN(this.tierOptions.qty)\r\n            ) {\r\n                $(this.options.inputQty).val(this.tierOptions.qty);\r\n                $(this.options.addToCartButton).click();\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * handle 'paypal checkout buttons' click on Tier popup\r\n         *\r\n         * @private\r\n         */\r\n        handleTierPaypalCheckout: function () {\r\n            if (this.options.inputQty && !isNaN(this.tierOptions.qty)\r\n            ) {\r\n                $(this.options.inputQty).val(this.tierOptions.qty);\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open and set up popup\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        openPopup: function (event) {\r\n            var options = this.tierOptions || this.options;\r\n\r\n            this.popUpOptions.position.of = $(event.target);\r\n            this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\r\n            this.$popup.find(this.options.priceLabelId).html(options.realPrice);\r\n            this.$popup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\r\n            this._toggle(this.$popup);\r\n\r\n            if (!this.options.isSaleable) {\r\n                this.$popup.find('form').hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         * @private\r\n         */\r\n        _toggle: function ($elem) {\r\n            $(document).on('mouseup.msrp touchend.msrp', function (e) {\r\n                if (!$elem.is(e.target) && $elem.has(e.target).length === 0) {\r\n                    this.closePopup($elem);\r\n                }\r\n            }.bind(this));\r\n            $(window).on('resize', function () {\r\n                this.closePopup($elem);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         */\r\n        closePopup: function ($elem) {\r\n            $elem.dropdownDialog('close');\r\n            $(document).off('mouseup.msrp touchend.msrp');\r\n        },\r\n\r\n        /**\r\n         * Handler for addToCart action\r\n         */\r\n        _addToCartSubmit: function () {\r\n            this.element.trigger('addToCart', this.element);\r\n\r\n            if (this.element.data('stop-processing')) {\r\n                return false;\r\n            }\r\n\r\n            if (this.options.addToCartButton) {\r\n                $(this.options.addToCartButton).click();\r\n\r\n                return false;\r\n            }\r\n\r\n            if (this.options.addToCartUrl) {\r\n                $('.mage-dropdown-dialog > .ui-dialog-content').dropdownDialog('close');\r\n            }\r\n            $(this.options.cartForm).submit();\r\n\r\n        }\r\n    });\r\n\r\n    return $.mage.addToCart;\r\n});\r\n","Magento_Msrp/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Tax/js/view/checkout/minicart/subtotal/totals',\r\n    'underscore'\r\n], function (Component, _) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.displaySubtotal(this.isMsrpApplied(this.cart().items));\r\n            this.cart.subscribe(function (updatedCart) {\r\n\r\n                this.displaySubtotal(this.isMsrpApplied(updatedCart.items));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Determine if subtotal should be hidden.\r\n         * @param {Array} cartItems\r\n         * @return {Boolean}\r\n         */\r\n        isMsrpApplied: function (cartItems) {\r\n            return !_.find(cartItems, function (item) {\r\n                if (_.has(item, 'canApplyMsrp')) {\r\n                    return item.canApplyMsrp;\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_ConfigurableProduct/js/configurable.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'mage/translate',\r\n    'priceUtils',\r\n    'priceBox',\r\n    'jquery/ui',\r\n    'jquery/jquery.parsequery'\r\n], function ($, _, mageTemplate, $t, priceUtils) {\r\n    'use strict';\r\n\r\n    $.widget('mage.configurable', {\r\n        options: {\r\n            superSelector: '.super-attribute-select',\r\n            selectSimpleProduct: '[name=\"selected_configurable_option\"]',\r\n            priceHolderSelector: '.price-box',\r\n            spConfig: {},\r\n            state: {},\r\n            priceFormat: {},\r\n            optionTemplate: '<%- data.label %>' +\r\n            '<% if (typeof data.finalPrice.value !== \"undefined\") { %>' +\r\n            ' <%- data.finalPrice.formatted %>' +\r\n            '<% } %>',\r\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\r\n            mediaGalleryInitial: null,\r\n            slyOldPriceSelector: '.sly-old-price',\r\n            normalPriceLabelSelector: '.normal-price .price-label',\r\n\r\n            /**\r\n             * Defines the mechanism of how images of a gallery should be\r\n             * updated when user switches between configurations of a product.\r\n             *\r\n             * As for now value of this option can be either 'replace' or 'prepend'.\r\n             *\r\n             * @type {String}\r\n             */\r\n            gallerySwitchStrategy: 'replace',\r\n            tierPriceTemplateSelector: '#tier-prices-template',\r\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\r\n            tierPriceTemplate: ''\r\n        },\r\n\r\n        /**\r\n         * Creates widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            // Initial setting of various option values\r\n            this._initializeOptions();\r\n\r\n            // Override defaults with URL query parameters and/or inputs values\r\n            this._overrideDefaults();\r\n\r\n            // Change events to check select reloads\r\n            this._setupChangeEvents();\r\n\r\n            // Fill state\r\n            this._fillState();\r\n\r\n            // Setup child and prev/next settings\r\n            this._setChildSettings();\r\n\r\n            // Setup/configure values to inputs\r\n            this._configureForValues();\r\n\r\n            $(this.element).trigger('configurable.initialized');\r\n        },\r\n\r\n        /**\r\n         * Initialize tax configuration, initial settings, and options values.\r\n         * @private\r\n         */\r\n        _initializeOptions: function () {\r\n            var options = this.options,\r\n                gallery = $(options.mediaGallerySelector),\r\n                priceBoxOptions = $(this.options.priceHolderSelector).priceBox('option').priceConfig || null;\r\n\r\n            if (priceBoxOptions && priceBoxOptions.optionTemplate) {\r\n                options.optionTemplate = priceBoxOptions.optionTemplate;\r\n            }\r\n\r\n            if (priceBoxOptions && priceBoxOptions.priceFormat) {\r\n                options.priceFormat = priceBoxOptions.priceFormat;\r\n            }\r\n            options.optionTemplate = mageTemplate(options.optionTemplate);\r\n            options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\r\n\r\n            options.settings = options.spConfig.containerId ?\r\n                $(options.spConfig.containerId).find(options.superSelector) :\r\n                $(options.superSelector);\r\n\r\n            options.values = options.spConfig.defaultValues || {};\r\n            options.parentImage = $('[data-role=base-image-container] img').attr('src');\r\n\r\n            this.inputSimpleProduct = this.element.find(options.selectSimpleProduct);\r\n\r\n            gallery.data('gallery') ?\r\n                this._onGalleryLoaded(gallery) :\r\n                gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\r\n\r\n        },\r\n\r\n        /**\r\n         * Override default options values settings with either URL query parameters or\r\n         * initialized inputs values.\r\n         * @private\r\n         */\r\n        _overrideDefaults: function () {\r\n            var hashIndex = window.location.href.indexOf('#');\r\n\r\n            if (hashIndex !== -1) {\r\n                this._parseQueryParams(window.location.href.substr(hashIndex + 1));\r\n            }\r\n\r\n            if (this.options.spConfig.inputsInitialized) {\r\n                this._setValuesByAttribute();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse query parameters from a query string and set options values based on the\r\n         * key value pairs of the parameters.\r\n         * @param {*} queryString - URL query string containing query parameters.\r\n         * @private\r\n         */\r\n        _parseQueryParams: function (queryString) {\r\n            var queryParams = $.parseQuery({\r\n                query: queryString\r\n            });\r\n\r\n            $.each(queryParams, $.proxy(function (key, value) {\r\n                this.options.values[key] = value;\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Override default options values with values based on each element's attribute\r\n         * identifier.\r\n         * @private\r\n         */\r\n        _setValuesByAttribute: function () {\r\n            this.options.values = {};\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                var attributeId;\r\n\r\n                if (element.value) {\r\n                    attributeId = element.id.replace(/[a-z]*/, '');\r\n                    this.options.values[attributeId] = element.value;\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set up .on('change') events for each option element to configure the option.\r\n         * @private\r\n         */\r\n        _setupChangeEvents: function () {\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                $(element).on('change', this, this._configure);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Iterate through the option settings and set each option's element configuration,\r\n         * attribute identifier. Set the state based on the attribute identifier.\r\n         * @private\r\n         */\r\n        _fillState: function () {\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                var attributeId = element.id.replace(/[a-z]*/, '');\r\n\r\n                if (attributeId && this.options.spConfig.attributes[attributeId]) {\r\n                    element.config = this.options.spConfig.attributes[attributeId];\r\n                    element.attributeId = attributeId;\r\n                    this.options.state[attributeId] = false;\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set each option's child settings, and next/prev option setting. Fill (initialize)\r\n         * an option's list of selections as needed or disable an option's setting.\r\n         * @private\r\n         */\r\n        _setChildSettings: function () {\r\n            var childSettings = [],\r\n                settings = this.options.settings,\r\n                index = settings.length,\r\n                option;\r\n\r\n            while (index--) {\r\n                option = settings[index];\r\n\r\n                if (index) {\r\n                    option.disabled = true;\r\n                } else {\r\n                    this._fillSelect(option);\r\n                }\r\n\r\n                _.extend(option, {\r\n                    childSettings: childSettings.slice(),\r\n                    prevSetting: settings[index - 1],\r\n                    nextSetting: settings[index + 1]\r\n                });\r\n\r\n                childSettings.push(option);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup for all configurable option settings. Set the value of the option and configure\r\n         * the option, which sets its state, and initializes the option's choices, etc.\r\n         * @private\r\n         */\r\n        _configureForValues: function () {\r\n            if (this.options.values) {\r\n                this.options.settings.each($.proxy(function (index, element) {\r\n                    var attributeId = element.attributeId;\r\n\r\n                    element.value = this.options.values[attributeId] || '';\r\n                    this._configureElement(element);\r\n                }, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event handler for configuring an option.\r\n         * @private\r\n         * @param {Object} event - Event triggered to configure an option.\r\n         */\r\n        _configure: function (event) {\r\n            event.data._configureElement(this);\r\n        },\r\n\r\n        /**\r\n         * Configure an option, initializing it's state and enabling related options, which\r\n         * populates the related option's selection and resets child option selections.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _configureElement: function (element) {\r\n            this.simpleProduct = this._getSimpleProductId(element);\r\n\r\n            if (element.value) {\r\n                this.options.state[element.config.id] = element.value;\r\n\r\n                if (element.nextSetting) {\r\n                    element.nextSetting.disabled = false;\r\n                    this._fillSelect(element.nextSetting);\r\n                    this._resetChildren(element.nextSetting);\r\n                } else {\r\n                    if (!!document.documentMode) { //eslint-disable-line\r\n                        this.inputSimpleProduct.val(element.options[element.selectedIndex].config.allowedProducts[0]);\r\n                    } else {\r\n                        this.inputSimpleProduct.val(element.selectedOptions[0].config.allowedProducts[0]);\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetChildren(element);\r\n            }\r\n\r\n            this._reloadPrice();\r\n            this._displayRegularPriceBlock(this.simpleProduct);\r\n            this._displayTierPriceBlock(this.simpleProduct);\r\n            this._displayNormalPriceLabel();\r\n            this._changeProductImage();\r\n        },\r\n\r\n        /**\r\n         * Change displayed product image according to chosen options of configurable product\r\n         *\r\n         * @private\r\n         */\r\n        _changeProductImage: function () {\r\n            var images,\r\n                initialImages = this.options.mediaGalleryInitial,\r\n                galleryObject = $(this.options.mediaGallerySelector).data('gallery');\r\n\r\n            if (!galleryObject) {\r\n                return;\r\n            }\r\n\r\n            images = this.options.spConfig.images[this.simpleProduct];\r\n\r\n            if (images) {\r\n                if (this.options.gallerySwitchStrategy === 'prepend') {\r\n                    images = images.concat(initialImages);\r\n                }\r\n\r\n                images = $.extend(true, [], images);\r\n                images = this._setImageIndex(images);\r\n\r\n                galleryObject.updateData(images);\r\n\r\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\r\n                    selectedOption: this.simpleProduct,\r\n                    dataMergeStrategy: this.options.gallerySwitchStrategy\r\n                });\r\n            } else {\r\n                galleryObject.updateData(initialImages);\r\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\r\n            }\r\n\r\n            galleryObject.first();\r\n        },\r\n\r\n        /**\r\n         * Set correct indexes for image set.\r\n         *\r\n         * @param {Array} images\r\n         * @private\r\n         */\r\n        _setImageIndex: function (images) {\r\n            var length = images.length,\r\n                i;\r\n\r\n            for (i = 0; length > i; i++) {\r\n                images[i].i = i + 1;\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * For a given option element, reset all of its selectable options. Clear any selected\r\n         * index, disable the option choice, and reset the option's state if necessary.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _resetChildren: function (element) {\r\n            if (element.childSettings) {\r\n                _.each(element.childSettings, function (set) {\r\n                    set.selectedIndex = 0;\r\n                    set.disabled = true;\r\n                });\r\n\r\n                if (element.config) {\r\n                    this.options.state[element.config.id] = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Populates an option's selectable choices.\r\n         * @private\r\n         * @param {*} element - Element associated with a configurable option.\r\n         */\r\n        _fillSelect: function (element) {\r\n            var attributeId = element.id.replace(/[a-z]*/, ''),\r\n                options = this._getAttributeOptions(attributeId),\r\n                prevConfig,\r\n                index = 1,\r\n                allowedProducts,\r\n                i,\r\n                j;\r\n\r\n            this._clearSelect(element);\r\n            element.options[0] = new Option('', '');\r\n            element.options[0].innerHTML = this.options.spConfig.chooseText;\r\n            prevConfig = false;\r\n\r\n            if (element.prevSetting) {\r\n                prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\r\n            }\r\n\r\n            if (options) {\r\n                for (i = 0; i < options.length; i++) {\r\n                    allowedProducts = [];\r\n\r\n                    /* eslint-disable max-depth */\r\n                    if (prevConfig) {\r\n                        for (j = 0; j < options[i].products.length; j++) {\r\n                            // prevConfig.config can be undefined\r\n                            if (prevConfig.config &&\r\n                                prevConfig.config.allowedProducts &&\r\n                                prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1) {\r\n                                allowedProducts.push(options[i].products[j]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        allowedProducts = options[i].products.slice(0);\r\n                    }\r\n\r\n                    if (allowedProducts.length > 0) {\r\n                        options[i].allowedProducts = allowedProducts;\r\n                        element.options[index] = new Option(this._getOptionLabel(options[i]), options[i].id);\r\n\r\n                        if (typeof options[i].price !== 'undefined') {\r\n                            element.options[index].setAttribute('price', options[i].prices);\r\n                        }\r\n\r\n                        element.options[index].config = options[i];\r\n                        index++;\r\n                    }\r\n\r\n                    /* eslint-enable max-depth */\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate the label associated with a configurable option. This includes the option's\r\n         * label or value and the option's price.\r\n         * @private\r\n         * @param {*} option - A single choice among a group of choices for a configurable option.\r\n         * @return {String} The option label with option value and price (e.g. Black +1.99)\r\n         */\r\n        _getOptionLabel: function (option) {\r\n            return option.label;\r\n        },\r\n\r\n        /**\r\n         * Removes an option's selections.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _clearSelect: function (element) {\r\n            var i;\r\n\r\n            for (i = element.options.length - 1; i >= 0; i--) {\r\n                element.remove(i);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Retrieve the attribute options associated with a specific attribute Id.\r\n         * @private\r\n         * @param {Number} attributeId - The id of the attribute whose configurable options are sought.\r\n         * @return {Object} Object containing the attribute options.\r\n         */\r\n        _getAttributeOptions: function (attributeId) {\r\n            if (this.options.spConfig.attributes[attributeId]) {\r\n                return this.options.spConfig.attributes[attributeId].options;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reload the price of the configurable product incorporating the prices of all of the\r\n         * configurable product's option selections.\r\n         */\r\n        _reloadPrice: function () {\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', this._getPrices());\r\n        },\r\n\r\n        /**\r\n         * Get product various prices\r\n         * @returns {{}}\r\n         * @private\r\n         */\r\n        _getPrices: function () {\r\n            var prices = {},\r\n                elements = _.toArray(this.options.settings),\r\n                hasProductPrice = false;\r\n\r\n            _.each(elements, function (element) {\r\n                var selected = element.options[element.selectedIndex],\r\n                    config = selected && selected.config,\r\n                    priceValue = {};\r\n\r\n                if (config && config.allowedProducts.length === 1 && !hasProductPrice) {\r\n                    priceValue = this._calculatePrice(config);\r\n                    hasProductPrice = true;\r\n                }\r\n\r\n                prices[element.attributeId] = priceValue;\r\n            }, this);\r\n\r\n            return prices;\r\n        },\r\n\r\n        /**\r\n         * Returns prices for configured products\r\n         *\r\n         * @param {*} config - Products configuration\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _calculatePrice: function (config) {\r\n            var displayPrices = $(this.options.priceHolderSelector).priceBox('option').prices,\r\n                newPrices = this.options.spConfig.optionPrices[_.first(config.allowedProducts)];\r\n\r\n            _.each(displayPrices, function (price, code) {\r\n                if (newPrices[code]) {\r\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\r\n                }\r\n            });\r\n\r\n            return displayPrices;\r\n        },\r\n\r\n        /**\r\n         * Returns Simple product Id\r\n         *  depending on current selected option.\r\n         *\r\n         * @private\r\n         * @param {HTMLElement} element\r\n         * @returns {String|undefined}\r\n         */\r\n        _getSimpleProductId: function (element) {\r\n            // TODO: Rewrite algorithm. It should return ID of\r\n            //        simple product based on selected options.\r\n            var allOptions = element.config.options,\r\n                value = element.value,\r\n                config;\r\n\r\n            config = _.filter(allOptions, function (option) {\r\n                return option.id === value;\r\n            });\r\n            config = _.first(config);\r\n\r\n            return _.isEmpty(config) ?\r\n                undefined :\r\n                _.first(config.allowedProducts);\r\n\r\n        },\r\n\r\n        /**\r\n         * Show or hide regular price block\r\n         *\r\n         * @param {*} optionId\r\n         * @private\r\n         */\r\n        _displayRegularPriceBlock: function (optionId) {\r\n            var shouldBeShown = true;\r\n\r\n            _.each(this.options.settings, function (element) {\r\n                if (element.value === '') {\r\n                    shouldBeShown = false;\r\n                }\r\n            });\r\n\r\n            if (shouldBeShown\r\n                && this.options.spConfig.optionPrices[optionId].oldPrice.amount\r\n                !== this.options.spConfig.optionPrices[optionId].finalPrice.amount\r\n            ) {\r\n                $(this.options.slyOldPriceSelector).show();\r\n            } else {\r\n                $(this.options.slyOldPriceSelector).hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show or hide normal price label\r\n         *\r\n         * @private\r\n         */\r\n        _displayNormalPriceLabel: function () {\r\n            var shouldBeShown = false;\r\n\r\n            _.each(this.options.settings, function (element) {\r\n                if (element.value === '') {\r\n                    shouldBeShown = true;\r\n                }\r\n            });\r\n\r\n            if (shouldBeShown) {\r\n                $(this.options.normalPriceLabelSelector).show();\r\n            } else {\r\n                $(this.options.normalPriceLabelSelector).hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback which fired after gallery gets initialized.\r\n         *\r\n         * @param {HTMLElement} element - DOM element associated with gallery.\r\n         */\r\n        _onGalleryLoaded: function (element) {\r\n            var galleryObject = element.data('gallery');\r\n\r\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\r\n        },\r\n\r\n        /**\r\n         * Show or hide tier price block\r\n         *\r\n         * @param {*} optionId\r\n         * @private\r\n         */\r\n        _displayTierPriceBlock: function (optionId) {\r\n            var options, tierPriceHtml;\r\n\r\n            if (typeof optionId != 'undefined' &&\r\n                this.options.spConfig.optionPrices[optionId].tierPrices != [] // eslint-disable-line eqeqeq\r\n            ) {\r\n                options = this.options.spConfig.optionPrices[optionId];\r\n\r\n                if (this.options.tierPriceTemplate) {\r\n                    tierPriceHtml = mageTemplate(this.options.tierPriceTemplate, {\r\n                        'tierPrices': options.tierPrices,\r\n                        '$t': $t,\r\n                        'currencyFormat': this.options.spConfig.currencyFormat,\r\n                        'priceUtils': priceUtils\r\n                    });\r\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\r\n                }\r\n            } else {\r\n                $(this.options.tierPriceBlockSelector).hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.configurable;\r\n});\r\n","Magento_ConfigurableProduct/js/options-updater.js":"define([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, customerData) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n        formSelector: '#product_addtocart_form',\r\n        productIdSelector: '#product_addtocart_form [name=\"product\"]'\r\n    },\r\n    cartData = customerData.get('cart'),\r\n    productId = $(selectors.productIdSelector).val(),\r\n\r\n    /**\r\n    * set productOptions according to cart data from customer-data\r\n    *\r\n    * @param {Object} data - cart data from customer-data\r\n    * @returns {Boolean} - whether the new options differ from previous\r\n    */\r\n    setProductOptions = function (data) {\r\n        var changedProductOptions;\r\n\r\n        if (!(data && data.items && data.items.length && productId)) {\r\n            return false;\r\n        }\r\n        changedProductOptions = data.items.find(function (item) {\r\n            return item['product_id'] === productId;\r\n        });\r\n        changedProductOptions = changedProductOptions && changedProductOptions.options &&\r\n            changedProductOptions.options.reduce(function (obj, val) {\r\n                obj[val['option_id']] = val['option_value'];\r\n\r\n                return obj;\r\n            }, {});\r\n\r\n        if (JSON.stringify(this.productOptions || {}) === JSON.stringify(changedProductOptions || {})) {\r\n            return false;\r\n        }\r\n\r\n        this.productOptions = changedProductOptions;\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n    * Listens to update of cart data or options initialization and update selected option according to customer data\r\n    *\r\n    */\r\n    listen = function () {\r\n        cartData.subscribe(function (updateCartData) {\r\n            if (this.setProductOptions(updateCartData)) {\r\n                this.updateOptions();\r\n            }\r\n        }.bind(this));\r\n        $(selectors.formSelector).on(this.eventName, function () {\r\n            this.setProductOptions(cartData());\r\n            this.updateOptions();\r\n        }.bind(this));\r\n    },\r\n\r\n    /**\r\n    * Updater constructor function\r\n    *\r\n    */\r\n    Updater = function (eventName, updateOptionsCallback) {\r\n        if (this instanceof Updater) {\r\n            this.eventName = eventName;\r\n            this.updateOptions = updateOptionsCallback;\r\n            this.productOptions = {};\r\n        }\r\n    };\r\n\r\n    Updater.prototype.setProductOptions = setProductOptions;\r\n    Updater.prototype.listen = listen;\r\n\r\n    return Updater;\r\n});\r\n","Magento_Wishlist/wishlist.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true sub:true*/\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery/ui',\r\n    'mage/validation/validation',\r\n\r\n    'mage/dataPost'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.wishlist', {\r\n        options: {\r\n            dataAttribute: 'item-id',\r\n            nameFormat: 'qty[{0}]',\r\n            btnRemoveSelector: '[data-role=remove]',\r\n            qtySelector: '[data-role=qty]',\r\n            addToCartSelector: '[data-role=tocart]',\r\n            addAllToCartSelector: '[data-role=all-tocart]',\r\n            commentInputType: 'textarea',\r\n            infoList: false\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to events.\r\n         */\r\n        _create: function () {\r\n            var _this = this;\r\n            if (!this.options.infoList) {\r\n                this.element\r\n                    .on('addToCart', function (event, context) {\r\n                        event.stopPropagation(event);\r\n                        $(context).data('stop-processing', true);\r\n                        var urlParams = _this._getItemsToCartParams(\r\n                            $(context).parents('[data-row=product-item]').find(_this.options.addToCartSelector)\r\n                        );\r\n                        $.mage.dataPost().postData(urlParams);\r\n                        return false;\r\n                    })\r\n                    .on('click', this.options.btnRemoveSelector, $.proxy(function (event) {\r\n                        event.preventDefault();\r\n                        $.mage.dataPost().postData($(event.currentTarget).data('post-remove'));\r\n                    }, this))\r\n                    .on('click', this.options.addToCartSelector, $.proxy(this._beforeAddToCart, this))\r\n                    .on('click', this.options.addAllToCartSelector, $.proxy(this._addAllWItemsToCart, this))\r\n                    .on('focusin focusout', this.options.commentInputType, $.proxy(this._focusComment, this));\r\n            }\r\n\r\n            // Setup validation for the form\r\n            this.element.mage('validation', {\r\n                errorPlacement: function (error, element) {\r\n                    error.insertAfter(element.next());\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Process data before add to cart\r\n         *\r\n         * - update item's qty value.\r\n         *\r\n         * @param {Event} event\r\n         * @private\r\n         */\r\n        _beforeAddToCart: function(event) {\r\n            var elem = $(event.currentTarget),\r\n                itemId = elem.data(this.options.dataAttribute),\r\n                qtyName = $.validator.format(this.options.nameFormat, itemId),\r\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val(),\r\n                params = elem.data('post');\r\n\r\n            if (params) {\r\n                params.data = $.extend({}, params.data, {'qty': qtyValue});\r\n                elem.data('post', params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add wish list items to cart.\r\n         * @private\r\n         * @param {jQuery object} elem - clicked 'add to cart' button\r\n         */\r\n        _getItemsToCartParams: function (elem) {\r\n            if (elem.data(this.options.dataAttribute)) {\r\n                var itemId = elem.data(this.options.dataAttribute),\r\n                    url = this.options.addToCartUrl,\r\n                    qtyName = $.validator.format(this.options.nameFormat, itemId),\r\n                    qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val();\r\n                url.data.item = itemId;\r\n                url.data.qty = qtyValue;\r\n                return url;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add all wish list items to cart\r\n         * @private\r\n         */\r\n        _addAllWItemsToCart: function () {\r\n            var urlParams = this.options.addAllToCartUrl,\r\n                separator = (urlParams.action.indexOf('?') >= 0) ? '&' : '?';\r\n\r\n            this.element.find(this.options.qtySelector).each(function (index, element) {\r\n                urlParams.action += separator + $(element).prop('name') + '=' + encodeURIComponent($(element).val());\r\n                separator = '&';\r\n            });\r\n            $.mage.dataPost().postData(urlParams);\r\n        },\r\n\r\n        /**\r\n         * Toggle comment string.\r\n         * @private\r\n         * @param {Event} e\r\n         */\r\n        _focusComment: function (e) {\r\n            var commentInput = e.currentTarget;\r\n\r\n            if (commentInput.value === '' || commentInput.value === this.options.commentString) {\r\n                commentInput.value = commentInput.value === this.options.commentString ?\r\n                    '' : this.options.commentString;\r\n            }\r\n        }\r\n    });\r\n\r\n    // Extension for mage.wishlist - Select All checkbox\r\n    $.widget('mage.wishlist', $.mage.wishlist, {\r\n        options: {\r\n            selectAllCheckbox: '#select-all',\r\n            parentContainer: '#wishlist-table'\r\n        },\r\n\r\n        _create: function () {\r\n            this._super();\r\n            var selectAllCheckboxParent = $(this.options.selectAllCheckbox).parents(this.options.parentContainer),\r\n                checkboxCount = selectAllCheckboxParent.find('input:checkbox:not(' + this.options.selectAllCheckbox + ')').length;\r\n            // If Select all checkbox is checked, check all item checkboxes, if unchecked, uncheck all item checkboxes\r\n            $(this.options.selectAllCheckbox).on('click', function () {\r\n                selectAllCheckboxParent.find('input:checkbox').attr('checked', $(this).is(':checked'));\r\n            });\r\n            // If all item checkboxes are checked, check select all checkbox,\r\n            // if not all item checkboxes are checked, uncheck select all checkbox\r\n            selectAllCheckboxParent.on('click', 'input:checkbox:not(' + this.options.selectAllCheckbox + ')', $.proxy(function () {\r\n                var checkedCount = selectAllCheckboxParent.find('input:checkbox:checked:not(' + this.options.selectAllCheckbox + ')').length;\r\n                $(this.options.selectAllCheckbox).attr('checked', checkboxCount === checkedCount);\r\n            }, this));\r\n        }\r\n    });\r\n    // Extension for mage.wishlist info add to cart\r\n    $.widget('mage.wishlist', $.mage.wishlist, {\r\n        _create: function () {\r\n            this._super();\r\n\r\n            if (this.options.infoList) {\r\n                this.element.on('addToCart', $.proxy(function (event, context) {\r\n                    this.element.find('input:checkbox').attr('checked', false);\r\n                    $(context).closest('tr').find('input:checkbox').attr('checked', true);\r\n                    this.element.submit();\r\n                }, this));\r\n                this._checkBoxValidate();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * validate checkbox selection.\r\n         * @private\r\n         */\r\n        _checkBoxValidate: function () {\r\n            this.element.validation({\r\n                submitHandler: $.proxy(function (form) {\r\n                    if ($(form).find('input:checkbox:checked').length) {\r\n                        form.submit();\r\n                    } else {\r\n                        alert({\r\n                            content: this.options.checkBoxValidationMessage\r\n                        });\r\n                    }\r\n                }, this)\r\n            });\r\n        }\r\n    });\r\n\r\n    // Extension for mage.wishlist - Add Wishlist item to Gift Registry\r\n    $.widget('mage.wishlist', $.mage.wishlist, {\r\n        options: {\r\n            formTmplSelector: '#form-tmpl',\r\n            formTmplId: '#wishlist-hidden-form'\r\n        },\r\n\r\n        _create: function () {\r\n            this._super();\r\n            var _this = this;\r\n            this.element.on('click', '[data-wishlist-to-giftregistry]', function () {\r\n                var json = $(this).data('wishlist-to-giftregistry'),\r\n                    tmplJson = {\r\n                        item: json.itemId,\r\n                        entity: json.entity,\r\n                        url: json.url\r\n                    },\r\n                    html = mageTemplate(_this.options.formTmplSelector, {\r\n                        data: tmplJson\r\n                    });\r\n\r\n                $(html).appendTo('body');\r\n                $(_this.options.formTmplId).submit();\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.wishlist;\r\n});\r\n","Magento_Wishlist/js/add-to-wishlist.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.addToWishlist', {\r\n        options: {\r\n            bundleInfo: 'div.control [name^=bundle_option]',\r\n            configurableInfo: '.super-attribute-select',\r\n            groupedInfo: '#super-product-table input',\r\n            downloadableInfo: '#downloadable-links-list input',\r\n            customOptionsInfo: '.product-custom-option',\r\n            qtyInfo: '#qty'\r\n        },\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n        _bind: function() {\r\n            var options = this.options,\r\n                dataUpdateFunc = '_updateWishlistData',\r\n                changeCustomOption = 'change ' + options.customOptionsInfo,\r\n                changeQty = 'change ' + options.qtyInfo,\r\n                events = {};\r\n\r\n            if ('productType' in options) {\r\n                if (typeof options.productType === 'string') {\r\n                    options.productType = [options.productType];\r\n                }\r\n            } else {\r\n                options.productType = [];\r\n            }\r\n\r\n            events[changeCustomOption] = dataUpdateFunc;\r\n            events[changeQty] = dataUpdateFunc;\r\n\r\n            for (var key in options.productType) {\r\n                if (options.productType.hasOwnProperty(key) && options.productType[key] + 'Info' in options) {\r\n                    events['change ' + options[options.productType[key] + 'Info']] = dataUpdateFunc;\r\n                }\r\n            }\r\n            this._on(events);\r\n        },\r\n        _updateWishlistData: function(event) {\r\n            var dataToAdd = {},\r\n                isFileUploaded = false;\r\n            if (event.handleObj.selector == this.options.qtyInfo) {\r\n                this._updateAddToWishlistButton({});\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            var self = this;\r\n            $(event.handleObj.selector).each(function(index, element){\r\n                if ($(element).is('input[type=text]')\r\n                    || $(element).is('input[type=email]')\r\n                    || $(element).is('input[type=number]')\r\n                    || $(element).is('input[type=hidden]')\r\n                    || $(element).is('input[type=checkbox]:checked')\r\n                    || $(element).is('input[type=radio]:checked')\r\n                    || $(element).is('textarea')\r\n                    || $('#' + element.id + ' option:selected').length\r\n                ) {\r\n                    dataToAdd = $.extend({}, dataToAdd, self._getElementData(element));\r\n                    return;\r\n                }\r\n                if ($(element).is('input[type=file]') && $(element).val()) {\r\n                    isFileUploaded = true;\r\n                }\r\n            });\r\n            if (isFileUploaded) {\r\n                this.bindFormSubmit();\r\n            }\r\n            this._updateAddToWishlistButton(dataToAdd);\r\n            event.stopPropagation();\r\n        },\r\n        _updateAddToWishlistButton: function(dataToAdd) {\r\n            var self = this;\r\n            $('[data-action=\"add-to-wishlist\"]').each(function(index, element) {\r\n                var params = $(element).data('post');\r\n                if (!params)\r\n                    params = {'data': {}};\r\n\r\n                if (!$.isEmptyObject(dataToAdd)) {\r\n                    self._removeExcessiveData(params, dataToAdd);\r\n                }\r\n\r\n                params.data = $.extend({}, params.data, dataToAdd, {'qty': $(self.options.qtyInfo).val()});\r\n                $(element).data('post', params);\r\n            });\r\n        },\r\n        _arrayDiffByKeys: function(array1, array2) {\r\n            var result = {};\r\n            $.each(array1, function(key, value) {\r\n                if (key.indexOf('option') === -1) {\r\n                    return;\r\n                }\r\n                if (!array2[key])\r\n                    result[key] = value;\r\n            });\r\n            return result;\r\n        },\r\n        _getElementData: function(element) {\r\n            element = $(element);\r\n            var data = {},\r\n                elementName = element.data('selector') ? element.data('selector') : element.attr('name'),\r\n                elementValue = element.val();\r\n            if (element.is('select[multiple]') && elementValue !== null) {\r\n                if (elementName.substr(elementName.length - 2) == '[]') {\r\n                    elementName = elementName.substring(0, elementName.length - 2);\r\n                }\r\n                $.each(elementValue, function (key, option) {\r\n                    data[elementName + '[' + option + ']'] = option;\r\n                });\r\n            } else {\r\n                if (elementValue) {\r\n                    if (elementName.substr(elementName.length - 2) == '[]') {\r\n                        elementName = elementName.substring(0, elementName.length - 2);\r\n                        if (elementValue) {\r\n                            data[elementName + '[' + elementValue + ']'] = elementValue;\r\n                        }\r\n                    } else {\r\n                        data[elementName] = elementValue;\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        _removeExcessiveData: function(params, dataToAdd) {\r\n            var dataToRemove = this._arrayDiffByKeys(params.data, dataToAdd);\r\n            $.each(dataToRemove, function(key, value) {\r\n                delete params.data[key];\r\n            });\r\n        },\r\n        bindFormSubmit: function() {\r\n            var self = this;\r\n            $('[data-action=\"add-to-wishlist\"]').on('click', function(event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                var element = $('input[type=file]' + self.options.customOptionsInfo),\r\n                    params = $(event.currentTarget).data('post'),\r\n                    form = $(element).closest('form'),\r\n                    action = params.action;\r\n                if (params.data.id) {\r\n                    $('<input>', {\r\n                        type: 'hidden',\r\n                        name: 'id',\r\n                        value: params.data.id\r\n                    }).appendTo(form);\r\n                }\r\n                if (params.data.uenc) {\r\n                    action += 'uenc/' + params.data.uenc;\r\n                }\r\n\r\n                $(form).attr('action', action).submit();\r\n            });\r\n        }\r\n    });\r\n    \r\n    return $.mage.addToWishlist;\r\n});\r\n","Magento_Wishlist/js/search.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.wishlistSearch', {\r\n\r\n        /**\r\n         * Bind handlers to events\r\n         */\r\n        _create: function() {\r\n            this.element.on('change', $.proxy(this._toggleForm, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle Form\r\n         * @private\r\n         */\r\n        _toggleForm: function() {\r\n            switch (this.element.val()) {\r\n                case 'name':\r\n                    $(this.options.emailFormSelector).hide();\r\n                    $(this.options.nameFormSelector).show();\r\n                    break;\r\n                case 'email':\r\n                    $(this.options.nameFormSelector).hide();\r\n                    $(this.options.emailFormSelector).show();\r\n                    break;\r\n                default:\r\n                    $(this.options.emailFormSelector).add(this.options.nameFormSelector).hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.wishlistSearch;\r\n});\r\n","Magento_Wishlist/js/view/wishlist.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.wishlist = customerData.get('wishlist');\r\n        }\r\n    });\r\n});\r\n","Magento_Vault/js/customer_account/deleteWidget.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modalToggle',\r\n    'mage/translate'\r\n], function ($, modalToggle) {\r\n    'use strict';\r\n\r\n    return function (config, deleteButton) {\r\n        config.buttons = [\r\n            {\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action secondary cancel'\r\n            }, {\r\n                text: $.mage.__('Delete'),\r\n                class: 'action primary',\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) { //eslint-disable-line no-unused-vars\r\n                    deleteButton.form.submit();\r\n                }\r\n            }\r\n        ];\r\n\r\n        modalToggle(config, deleteButton);\r\n    };\r\n});\r\n","Magento_Vault/js/view/payment/vault-enabler.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiElement'\r\n    ],\r\n    function (\r\n        Component\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                isActivePaymentTokenEnabler: true\r\n            },\r\n\r\n            /**\r\n             * @param {String} paymentCode\r\n             */\r\n            setPaymentCode: function (paymentCode) {\r\n                this.paymentCode = paymentCode;\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([\r\n                        'isActivePaymentTokenEnabler'\r\n                    ]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @param {Object} data\r\n             */\r\n            visitAdditionalData: function (data) {\r\n                if (!this.isVaultEnabled()) {\r\n                    return;\r\n                }\r\n\r\n                if (!('additional_data' in data)) {\r\n                    data['additional_data'] = {};\r\n                }\r\n\r\n                data['additional_data']['is_active_payment_token_enabler'] = this.isActivePaymentTokenEnabler();\r\n            },\r\n\r\n            /**\r\n             * @returns {Boolean}\r\n             */\r\n            isVaultEnabled: function () {\r\n                return typeof window.checkoutConfig.vault[this.paymentCode] !== 'undefined' &&\r\n                    window.checkoutConfig.vault[this.paymentCode]['is_enabled'] === true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Vault/js/view/payment/vault.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list',\r\n    'uiLayout',\r\n    'uiRegistry'\r\n], function (_, Component, rendererList, layout, registry) {\r\n    'use strict';\r\n\r\n    var vaultGroupName = 'vaultGroup';\r\n\r\n    layout([{\r\n        name: vaultGroupName,\r\n        component: 'Magento_Checkout/js/model/payment/method-group',\r\n        alias: 'vault',\r\n        sortOrder: 10\r\n    }]);\r\n\r\n    registry.get(vaultGroupName, function (vaultGroup) {\r\n        _.each(window.checkoutConfig.payment.vault, function (config, index) {\r\n            rendererList.push(\r\n                {\r\n                    type: index,\r\n                    config: config.config,\r\n                    component: config.component,\r\n                    group: vaultGroup,\r\n\r\n                    /**\r\n                     * Custom payment method types comparator\r\n                     * @param {String} typeA\r\n                     * @param {String} typeB\r\n                     * @return {Boolean}\r\n                     */\r\n                    typeComparatorCallback: function (typeA, typeB) {\r\n                        // vault token items have the same name as vault payment without index\r\n                        return typeA.substring(0, typeA.lastIndexOf('_')) === typeB;\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Add view logic here if needed\r\n     */\r\n    return Component.extend({});\r\n});\r\n","Magento_Vault/js/view/payment/method-renderer/vault.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Magento_Checkout/js/action/select-payment-method',\r\n        'Magento_Checkout/js/checkout-data'\r\n    ],\r\n    function (Component, selectPaymentMethod, checkoutData) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Vault/payment/form'\r\n            },\r\n\r\n            /**\r\n             * @returns {exports.initObservable}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns\r\n             */\r\n            selectPaymentMethod: function () {\r\n                selectPaymentMethod(\r\n                    {\r\n                        method: this.getId()\r\n                    }\r\n                );\r\n                checkoutData.setSelectedPaymentMethod(this.getId());\r\n\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getTitle: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getToken: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getId: function () {\r\n                return this.index;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getCode: function () {\r\n                return this.code;\r\n            },\r\n\r\n            /**\r\n             * Get last 4 digits of card\r\n             * @returns {String}\r\n             */\r\n            getMaskedCard: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Get expiration date\r\n             * @returns {String}\r\n             */\r\n            getExpirationDate: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Get card type\r\n             * @returns {String}\r\n             */\r\n            getCardType: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @param {String} type\r\n             * @returns {Boolean}\r\n             */\r\n            getIcons: function (type) {\r\n                return window.checkoutConfig.payment.ccform.icons.hasOwnProperty(type) ?\r\n                    window.checkoutConfig.payment.ccform.icons[type]\r\n                    : false;\r\n            },\r\n\r\n            /**\r\n             * @returns {*}\r\n             */\r\n            getData: function () {\r\n                var data = {\r\n                    method: this.getCode()\r\n                };\r\n\r\n                data['additional_data'] = {};\r\n                data['additional_data']['public_hash'] = this.getToken();\r\n\r\n                return data;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Cookie/js/notices.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\",\r\n    \"mage/cookies\"\r\n], function($){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.cookieNotices', {\r\n        _create: function() {\r\n            if ($.mage.cookies.get(this.options.cookieName)) {\r\n                this.element.hide();\r\n            } else {\r\n                this.element.show();\r\n            }\r\n            $(this.options.cookieAllowButtonSelector).on('click', $.proxy(function() {\r\n                var cookieExpires = new Date(new Date().getTime() + this.options.cookieLifetime * 1000);\r\n\r\n                $.mage.cookies.set(this.options.cookieName, JSON.stringify(this.options.cookieValue), {\r\n                    expires: cookieExpires\r\n                });\r\n\r\n                if ($.mage.cookies.get(this.options.cookieName)) {\r\n                    this.element.hide();\r\n                } else {\r\n                    window.location.href = this.options.noCookiesUrl;\r\n                }\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.cookieNotices;\r\n});\r\n","Magento_Cookie/js/require-cookie.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint evil:true browser:true jquery:true */\r\ndefine([\r\n    \"jquery\",\r\n    \"jquery/ui\"\r\n], function($){\r\n    \"use strict\";\r\n    \r\n    $.widget('mage.requireCookie', {\r\n        options: {\r\n            event: 'click',\r\n            noCookieUrl: 'enable-cookies',\r\n            triggers: ['.action.login', '.action.submit']\r\n        },\r\n\r\n        /**\r\n         * Constructor\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function() {\r\n            var events = {};\r\n\r\n            $.each(this.options.triggers, function(index, value) {\r\n                events['click ' + value] = '_checkCookie';\r\n            });\r\n            this._on(events);\r\n        },\r\n\r\n        /**\r\n         * This method set the url for the redirect.\r\n         * @private\r\n         */\r\n        _checkCookie: function(event) {\r\n            if (navigator.cookieEnabled) {\r\n                return;\r\n            }\r\n            event.preventDefault();\r\n            window.location = this.options.noCookieUrl;\r\n        }\r\n    });\r\n\r\n    return $.mage.requireCookie;\r\n});\r\n","Magento_Review/js/error-placement.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($, mage) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).mage('validation', {\r\n            errorPlacement: function (error, element) {\r\n\r\n                if (element.parents('#product-review-table').length) {\r\n                    $('#product-review-table').siblings(this.errorElement + '.' + this.errorClass).remove();\r\n                    $('#product-review-table').after(error);\r\n                } else {\r\n                    element.after(error);\r\n                }\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_Review/js/process-reviews.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    function processReviews(url, fromPages) {\r\n        $.ajax({\r\n            url: url,\r\n            cache: true,\r\n            dataType: 'html'\r\n        }).done(function (data) {\r\n            $('#product-review-container').html(data);\r\n            $('[data-role=\"product-review\"] .pages a').each(function (index, element) {\r\n                $(element).click(function (event) {\r\n                    processReviews($(element).attr('href'), true);\r\n                    event.preventDefault();\r\n                });\r\n            });\r\n        }).complete(function () {\r\n            if (fromPages == true) {\r\n                $('html, body').animate({\r\n                    scrollTop: $('#reviews').offset().top - 50\r\n                }, 300);\r\n            }\r\n        });\r\n    }\r\n\r\n    return function (config, element) {\r\n        processReviews(config.productReviewUrl);\r\n        $(function () {\r\n            $('.product-info-main .reviews-actions a').click(function (event) {\r\n                event.preventDefault();\r\n                var acnchor = $(this).attr('href').replace(/^.*?(#|$)/, '');\r\n                $(\".product.data.items [data-role='content']\").each(function(index){\r\n                    if (this.id == 'reviews') {\r\n                        $('.product.data.items').tabs('activate', index);\r\n                        $('html, body').animate({\r\n                            scrollTop: $('#' + acnchor).offset().top - 50\r\n                        }, 300);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n});\r\n","Magento_Review/js/view/review.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/view/customer'\r\n], function (Component, customerData, customer) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.review = customerData.get('review').extend({disposableCustomerData: 'review'});\r\n        },\r\n        nickname: function() {\r\n            return this.review().nickname || customerData.get('customer')().firstname;\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/order-review.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine([\r\n    \"jquery\",\r\n    'Magento_Ui/js/modal/alert',\r\n    \"jquery/ui\",\r\n    \"mage/translate\",\r\n    \"mage/mage\",\r\n    \"mage/validation\"\r\n], function($, alert){\r\n    \"use strict\";\r\n\r\n    $.widget('mage.orderReview', {\r\n        options: {\r\n            orderReviewSubmitSelector: '#review-button',\r\n            shippingSelector: '#shipping_method',\r\n            shippingSubmitFormSelector: null,\r\n            updateOrderSelector: '#update-order',\r\n            billingAsShippingSelector: '#billing\\\\:as_shipping',\r\n            updateContainerSelector: '#details-reload',\r\n            waitLoadingContainer: '#review-please-wait',\r\n            shippingMethodContainer: '#shipping-method-container',\r\n            agreementSelector: 'div.checkout-agreements input',\r\n            isAjax: false,\r\n            updateShippingMethodSubmitSelector: \"#update-shipping-method-submit\",\r\n            reviewSubmitSelector: \"#review-submit\",\r\n            shippingMethodUpdateUrl: null,\r\n            updateOrderSubmitUrl: null,\r\n            canEditShippingMethod: false\r\n        },\r\n\r\n        /**\r\n         * Widget instance properties\r\n         */\r\n        triggerPropertyChange: true,\r\n        isShippingSubmitForm: false,\r\n\r\n        _create: function () {\r\n            //change handler for ajaxEnabled\r\n            if (this.options.isAjax) {\r\n                this._submitOrder = this._ajaxSubmitOrder;\r\n            }\r\n\r\n            this.element.on('click', this.options.orderReviewSubmitSelector, $.proxy(this._submitOrder, this))\r\n                .on('click', this.options.billingAsShippingSelector, $.proxy(this._shippingTobilling, this))\r\n                .on('change', this.options.shippingSelector, $.proxy(this._submitUpdateOrder, this, this.options.updateOrderSubmitUrl, this.options.updateContainerSelector))\r\n                .find(this.options.updateOrderSelector).on('click', $.proxy(this._updateOrderHandler, this)).end()\r\n                .find(this.options.updateShippingMethodSubmitSelector).hide().end()\r\n                .find(this.options.reviewSubmitSelector).hide();\r\n            this._shippingTobilling();\r\n            if ($(this.options.shippingSubmitFormSelector).length && this.options.canEditShippingMethod) {\r\n                this.isShippingSubmitForm = true;\r\n                $(this.options.shippingSubmitFormSelector).find(this.options.updateShippingMethodSubmitSelector).hide().end()\r\n                    .on('change',\r\n                        this.options.shippingSelector, $.proxy(this._submitUpdateOrder, this, $(this.options.shippingSubmitFormSelector).prop('action'), this.options.updateContainerSelector));\r\n                this._updateOrderSubmit(!$(this.options.shippingSubmitFormSelector).find(this.options.shippingSelector).val());\r\n            } else {\r\n                var isDisable = (this.isShippingSubmitForm && this.element.find(this.options.shippingSelector).val());\r\n                this.element.on('input propertychange', \":input[name]\", $.proxy(this._updateOrderSubmit, this, isDisable, this._onShippingChange))\r\n                    .find('select').not(this.options.shippingSelector).on('change', this._propertyChange);\r\n                this._updateOrderSubmit(isDisable);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * show ajax loader\r\n         */\r\n        _ajaxBeforeSend: function () {\r\n            this.element.find(this.options.waitLoadingContainer).show();\r\n        },\r\n\r\n        /**\r\n         * hide ajax loader\r\n         */\r\n        _ajaxComplete: function () {\r\n            this.element.find(this.options.waitLoadingContainer).hide();\r\n        },\r\n\r\n        /**\r\n         * trigger propertychange for input type select\r\n         */\r\n        _propertyChange: function () {\r\n            $(this).trigger('propertychange');\r\n        },\r\n\r\n        /**\r\n         * trigger change for the update of shipping methods from server\r\n         */\r\n        _updateOrderHandler: function () {\r\n            $(this.options.shippingSelector).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Attempt to submit order\r\n         */\r\n        _submitOrder: function () {\r\n            if (this._validateForm()) {\r\n                this.element.find(this.options.updateOrderSelector).fadeTo(0, 0.5)\r\n                    .end().find(this.options.waitLoadingContainer).show()\r\n                    .end().submit();\r\n                this._updateOrderSubmit(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempt to ajax submit order\r\n         */\r\n        _ajaxSubmitOrder: function () {\r\n            if (this.element.find(this.options.waitLoadingContainer).is(\":visible\")) {\r\n                return false;\r\n            }\r\n            $.ajax({\r\n                url: this.element.prop('action'),\r\n                type: 'post',\r\n                context: this,\r\n                data: {isAjax: 1},\r\n                dataType: 'json',\r\n                beforeSend: this._ajaxBeforeSend,\r\n                complete: this._ajaxComplete,\r\n                success: function (response) {\r\n                    if ($.type(response) === 'object' && !$.isEmptyObject(response)) {\r\n                        if (response.error_messages) {\r\n                            this._ajaxComplete();\r\n                            var msg = response.error_messages;\r\n                            if (msg) {\r\n                                if ($.type(msg) === 'array') {\r\n                                    msg = msg.join(\"\\n\");\r\n                                }\r\n                            }\r\n                            alert({\r\n                                content: msg\r\n                            });\r\n                            return false;\r\n                        }\r\n                        if (response.redirect) {\r\n                            $.mage.redirect(response.redirect);\r\n                            return false;\r\n                        }\r\n                        else if (response.success) {\r\n                            $.mage.redirect(this.options.successUrl);\r\n                            return false;\r\n                        }\r\n                        this._ajaxComplete();\r\n                        alert({\r\n                            content: $.mage.__('Sorry, something went wrong.')\r\n                        });\r\n                    }\r\n                },\r\n                error: function () {\r\n                    alert({\r\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\r\n                    });\r\n                    this._ajaxComplete();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate Order form\r\n         */\r\n        _validateForm: function () {\r\n            this.element.find(this.options.agreementSelector).off('change').on('change', $.proxy(function (e) {\r\n                var isValid = this._validateForm();\r\n                this._updateOrderSubmit(!isValid);\r\n            }, this));\r\n\r\n            if (this.element.data('mageValidation')) {\r\n                return this.element.validation().valid();\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Check/Set whether order can be submitted\r\n         * Also disables form submission element, if any\r\n         * @param shouldDisable - whether should prevent order submission explicitly\r\n         * @param optional function for shipping change handler\r\n         * @param optional if true the property change will be set to true\r\n         */\r\n        _updateOrderSubmit: function (shouldDisable, fn) {\r\n            this._toggleButton(this.options.orderReviewSubmitSelector, shouldDisable);\r\n            if ($.type(fn) === 'function') {\r\n                fn.call(this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Enable/Disable button\r\n         * @param button button selector to be toggled\r\n         * @param disable  boolean for toggling\r\n         */\r\n        _toggleButton: function (button, disable) {\r\n            $(button).prop({\"disabled\": disable}).toggleClass('no-checkout', disable).fadeTo(0, disable ? 0.5 : 1);\r\n        },\r\n\r\n        /**\r\n         * Copy element value from shipping to billing address\r\n         * @param e optional\r\n         */\r\n        _shippingTobilling: function (e) {\r\n            if (this.options.shippingSubmitFormSelector) {\r\n                return false;\r\n            }\r\n            var isChecked = $(this.options.billingAsShippingSelector).is(':checked'),\r\n                opacity = isChecked ? 0.5 : 1;\r\n            if (isChecked) {\r\n                this.element.validation(\"clearError\", ':input[name^=\"billing\"]');\r\n            }\r\n            $(':input[name^=\"shipping\"]', this.element).each($.proxy(function (key, value) {\r\n                var fieldObj = $(value.id.replace('shipping:', '#billing\\\\:'));\r\n                if (isChecked) {\r\n                    fieldObj = fieldObj.val($(value).val());\r\n                }\r\n                fieldObj.prop({\"readonly\": isChecked, \"disabled\": isChecked}).fadeTo(0, opacity);\r\n                if (fieldObj.is(\"select\")) {\r\n                    this.triggerPropertyChange = false;\r\n                    fieldObj.trigger('change');\r\n                }\r\n            }, this));\r\n            if (isChecked || e) {\r\n                this._updateOrderSubmit(true);\r\n            }\r\n            this.triggerPropertyChange = true;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an ajax request of Update Order submission\r\n         * @param url - url where to submit shipping method\r\n         * @param resultId - id of element to be updated\r\n         */\r\n        _submitUpdateOrder: function (url, resultId) {\r\n            if (this.element.find(this.options.waitLoadingContainer).is(\":visible\")) {\r\n                return false;\r\n            }\r\n            var isChecked = $(this.options.billingAsShippingSelector).is(':checked'),\r\n                formData = null,\r\n                callBackResponseHandler = null,\r\n                shippingMethod = $.trim($(this.options.shippingSelector).val());\r\n            this._shippingTobilling();\r\n\r\n            if (url && resultId && shippingMethod) {\r\n                this._updateOrderSubmit(true);\r\n                this._toggleButton(this.options.updateOrderSelector, true);\r\n\r\n                // form data and callBack updated based on the shipping Form element\r\n                if (this.isShippingSubmitForm) {\r\n                    formData = $(this.options.shippingSubmitFormSelector).serialize() + \"&isAjax=true\";\r\n                    callBackResponseHandler = function (response) {\r\n                        $(resultId).html(response);\r\n                        this._updateOrderSubmit(false);\r\n                        this._ajaxComplete();\r\n                    };\r\n                } else {\r\n                    formData = this.element.serialize() + \"&isAjax=true\";\r\n                    callBackResponseHandler = function (response) {\r\n                        $(resultId).html(response);\r\n                        this._ajaxShippingUpdate(shippingMethod);\r\n                    };\r\n                }\r\n                if (isChecked) {\r\n                    $(this.options.shippingSelect).prop('disabled', true);\r\n                }\r\n                $.ajax({\r\n                    url: url,\r\n                    type: 'post',\r\n                    context: this,\r\n                    beforeSend: this._ajaxBeforeSend,\r\n                    data: formData,\r\n                    success: callBackResponseHandler\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update Shipping Methods Element from server\r\n         * @param shippingMethod\r\n         */\r\n        _ajaxShippingUpdate: function (shippingMethod) {\r\n            $.ajax({\r\n                    url: this.options.shippingMethodUpdateUrl,\r\n                    data: {isAjax: true, shipping_method: shippingMethod},\r\n                    type: 'post',\r\n                    context: this,\r\n                    success: function (response) {\r\n                        $(this.options.shippingMethodContainer).parent().html(response);\r\n                        this._toggleButton(this.options.updateOrderSelector, false);\r\n                        this._updateOrderSubmit(false);\r\n                    },\r\n                    complete: this._ajaxComplete\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Actions on change Shipping Address data\r\n         */\r\n        _onShippingChange: function () {\r\n            if (this.triggerPropertyChange && $.trim($(this.options.shippingSelector).val())) {\r\n                this.element.find(this.options.shippingSelector).hide().end()\r\n                    .find(this.options.shippingSelector + '_update').show();\r\n            }\r\n        }\r\n    });\r\n    \r\n    return $.mage.orderReview;\r\n});\r\n","Magento_Paypal/js/paypal-checkout.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true*/\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery/ui',\r\n    'mage/mage'\r\n], function ($, confirm, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.paypalCheckout', {\r\n        options: {\r\n            originalForm:\r\n                'form:not(#product_addtocart_form_from_popup):has(input[name=\"product\"][value=%1])',\r\n            productId: 'input[type=\"hidden\"][name=\"product\"]',\r\n            ppCheckoutSelector: '[data-role=pp-checkout-url]',\r\n            ppCheckoutInput: '<input type=\"hidden\" data-role=\"pp-checkout-url\" name=\"return_url\" value=\"\"/>'\r\n        },\r\n\r\n        /**\r\n         * Initialize store credit events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', '[data-action=\"checkout-form-submit\"]', $.proxy(function (e) {\r\n                var $target = $(e.target),\r\n                    returnUrl = $target.data('checkout-url'),\r\n                    productId = $target.closest('form').find(this.options.productId).val(),\r\n                    originalForm = this.options.originalForm.replace('%1', productId),\r\n                    self = this,\r\n                    billingAgreement = customerData.get('paypal-billing-agreement');\r\n\r\n                e.preventDefault();\r\n\r\n                if (billingAgreement().askToCreate) {\r\n                    confirm({\r\n                        content: billingAgreement().confirmMessage,\r\n                        actions: {\r\n\r\n                            /**\r\n                             * Confirmation handler\r\n                             *\r\n                             */\r\n                            confirm: function () {\r\n                                returnUrl = billingAgreement().confirmUrl;\r\n                                self._redirect(returnUrl, originalForm);\r\n                            },\r\n\r\n                            /**\r\n                             * Cancel confirmation handler\r\n                             *\r\n                             */\r\n                            cancel: function (event) {\r\n                                if (event && !$(event.target).hasClass('action-close')) {\r\n                                    self._redirect(returnUrl);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    this._redirect(returnUrl, originalForm);\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Redirect to certain url, with optional form\r\n         * @param {String} returnUrl\r\n         * @param {HTMLElement} originalForm\r\n         *\r\n         */\r\n        _redirect: function (returnUrl, originalForm) {\r\n            var $form,\r\n                ppCheckoutInput;\r\n\r\n            if (this.options.isCatalogProduct) {\r\n                // find the form from which the button was clicked\r\n                $form = originalForm ? $(originalForm) : $($(this.options.shortcutContainerClass).closest('form'));\r\n\r\n                ppCheckoutInput = $form.find(this.options.ppCheckoutSelector)[0];\r\n\r\n                if (!ppCheckoutInput) {\r\n                    ppCheckoutInput = $(this.options.ppCheckoutInput);\r\n                    ppCheckoutInput.appendTo($form);\r\n                }\r\n                $(ppCheckoutInput).val(returnUrl);\r\n\r\n                $form.submit();\r\n            } else {\r\n                $.mage.redirect(returnUrl);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.paypalCheckout;\r\n});\r\n","Magento_Paypal/js/action/set-payment-method.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function ($, quote, urlBuilder, storage, errorProcessor, customer, fullScreenLoader) {\r\n        'use strict';\r\n\r\n        return function (messageContainer) {\r\n            var serviceUrl,\r\n                payload,\r\n                method = 'put',\r\n                paymentData = quote.paymentMethod();\r\n\r\n            /**\r\n             * Checkout for guest and registered customer.\r\n             */\r\n            if (!customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/set-payment-information', {\r\n                    cartId: quote.getQuoteId()\r\n                });\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    email: quote.guestEmail,\r\n                    paymentMethod: paymentData\r\n                };\r\n                method = 'post';\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/selected-payment-method', {});\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    method: paymentData\r\n                };\r\n            }\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage[method](\r\n                serviceUrl, JSON.stringify(payload)\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Paypal/js/in-context/billing-agreement.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, confirm, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.billingAgreement', {\r\n        options: {\r\n            invalidateOnLoad: false,\r\n            cancelButtonSelector: '.block-billing-agreements-view button.cancel',\r\n            cancelMessage: '',\r\n            cancelUrl: ''\r\n        },\r\n\r\n        /**\r\n         * Initialize billing agreements events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            if (this.options.invalidateOnLoad) {\r\n                this.invalidate();\r\n            }\r\n            $(this.options.cancelButtonSelector).on('click', function () {\r\n                confirm({\r\n                    content: self.options.cancelMessage,\r\n                    actions: {\r\n                        /**\r\n                         * 'Confirm' action handler.\r\n                         */\r\n                        confirm: function () {\r\n                            self.invalidate();\r\n                            window.location.href = self.options.cancelUrl;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return false;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * clear paypal billing agreement customer data\r\n         * @returns void\r\n         */\r\n        invalidate: function () {\r\n            customerData.invalidate(['paypal-billing-agreement']);\r\n        }\r\n    });\r\n\r\n    return $.mage.billingAgreement;\r\n});\r\n","Magento_Paypal/js/in-context/button.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'jquery',\r\n        'domReady!'\r\n    ],\r\n    function (\r\n        Component,\r\n        $\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {},\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                return this.initEvents();\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initEvents: function () {\r\n                $('#' + this.id).off('click.' + this.id)\r\n                    .on('click.' + this.id, this.click.bind(this));\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @param {Object} event\r\n             * @returns void\r\n             */\r\n            click: function (event) {\r\n                event.preventDefault();\r\n\r\n                $('#' + this.paypalButton).click();\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/in-context/express-checkout.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'underscore',\r\n        'jquery',\r\n        'uiComponent',\r\n        'paypalInContextExpressCheckout',\r\n        'Magento_Customer/js/customer-data',\r\n        'domReady!'\r\n    ],\r\n    function (\r\n        _,\r\n        $,\r\n        Component,\r\n        paypalExpressCheckout,\r\n        customerData\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {\r\n                clientConfig: {\r\n\r\n                    /**\r\n                     * @param {Object} event\r\n                     */\r\n                    click: function (event) {\r\n                        $('body').trigger('processStart');\r\n\r\n                        event.preventDefault();\r\n\r\n                        paypalExpressCheckout.checkout.initXO();\r\n\r\n                        $.getJSON(\r\n                            this.path,\r\n                            {\r\n                                button: 1\r\n                            }\r\n                        ).done(\r\n                            function (response) {\r\n                                if (response && response.url) {\r\n                                    paypalExpressCheckout.checkout.startFlow(response.url);\r\n\r\n                                    return;\r\n                                }\r\n\r\n                                paypalExpressCheckout.checkout.closeFlow();\r\n                            }\r\n                        ).fail(\r\n                            function () {\r\n                                $('body').trigger('processStop');\r\n                                paypalExpressCheckout.checkout.closeFlow();\r\n                            }\r\n                        ).always(\r\n                            function () {\r\n                                customerData.invalidate(['cart']);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                return this.initClient();\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initClient: function () {\r\n                _.each(this.clientConfig, function (fn, name) {\r\n                    if (typeof fn === 'function') {\r\n                        this.clientConfig[name] = fn.bind(this);\r\n                    }\r\n                }, this);\r\n\r\n                paypalExpressCheckout.checkout.setup(this.merchantId, this.clientConfig);\r\n\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/model/iframe-redirect.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'ko',\r\n        'Magento_Paypal/js/model/iframe',\r\n        'Magento_Ui/js/model/messageList'\r\n    ],\r\n    function (ko, iframe, messageList) {\r\n        'use strict';\r\n\r\n        return function (cartUrl, errorMessage, goToSuccessPage, successUrl) {\r\n            if (this === window.self) {\r\n                window.location = cartUrl;\r\n            }\r\n\r\n            if (!!errorMessage.message) {\r\n                document.removeEventListener('click', iframe.stopEventPropagation, true);\r\n                iframe.isInAction(false);\r\n                messageList.addErrorMessage(errorMessage);\r\n            } else if (!!goToSuccessPage) {\r\n                window.location = successUrl;\r\n            } else {\r\n                window.location = cartUrl;\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Paypal/js/model/iframe.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'ko'\r\n    ],\r\n    function (ko) {\r\n        'use strict';\r\n\r\n        var isInAction = ko.observable(false);\r\n\r\n        return {\r\n            isInAction: isInAction,\r\n            stopEventPropagation: function (event) {\r\n                event.stopImmediatePropagation();\r\n                event.preventDefault();\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/paypal-payments.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/payment/renderer-list'\r\n    ],\r\n    function (\r\n        Component,\r\n        rendererList\r\n    ) {\r\n        'use strict';\r\n\r\n        var isContextCheckout = window.checkoutConfig.payment.paypalExpress.isContextCheckout,\r\n            paypalExpress = 'Magento_Paypal/js/view/payment/method-renderer' +\r\n                (isContextCheckout ? '/in-context/checkout-express' : '/paypal-express');\r\n\r\n        rendererList.push(\r\n            {\r\n                type: 'paypal_express',\r\n                component: paypalExpress,\r\n                config: window.checkoutConfig.payment.paypalExpress.inContextConfig\r\n            },\r\n            {\r\n                type: 'paypal_express_bml',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-express-bml'\r\n            },\r\n            {\r\n                type: 'payflow_express',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express'\r\n            },\r\n            {\r\n                type: 'payflow_express_bml',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml'\r\n            },\r\n            {\r\n                type: 'payflowpro',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/payflowpro-method'\r\n            },\r\n            {\r\n                type: 'payflow_link',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n            },\r\n            {\r\n                type: 'payflow_advanced',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n            },\r\n            {\r\n                type: 'hosted_pro',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n            },\r\n            {\r\n                type: 'paypal_billing_agreement',\r\n                component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement'\r\n            }\r\n        );\r\n\r\n        /**\r\n         * Add view logic here if needed\r\n         **/\r\n        return Component.extend({});\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/iframe-methods.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'ko',\r\n        'Magento_Paypal/js/model/iframe',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function (Component, ko, iframe, fullScreenLoader) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/iframe-methods',\r\n                paymentReady: false\r\n            },\r\n            redirectAfterPlaceOrder: false,\r\n            isInAction: iframe.isInAction,\r\n\r\n            /**\r\n             * @return {exports}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe('paymentReady');\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isPaymentReady: function () {\r\n                return this.paymentReady();\r\n            },\r\n\r\n            /**\r\n             * Get action url for payment method iframe.\r\n             * @returns {String}\r\n             */\r\n            getActionUrl: function () {\r\n                return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\r\n            },\r\n\r\n            /**\r\n             * Places order in pending payment status.\r\n             */\r\n            placePendingPaymentOrder: function () {\r\n                if (this.placeOrder()) {\r\n                    fullScreenLoader.startLoader();\r\n                    this.isInAction(true);\r\n                    // capture all click events\r\n                    document.addEventListener('click', iframe.stopEventPropagation, true);\r\n                }\r\n            },\r\n\r\n            getPlaceOrderDeferredObject: function () {\r\n                var self = this;\r\n                return this._super()\r\n                    .fail(\r\n                        function () {\r\n                            fullScreenLoader.stopLoader();\r\n                            self.isInAction(false);\r\n                            document.removeEventListener('click', iframe.stopEventPropagation, true);\r\n                        }\r\n                    );\r\n            },\r\n\r\n            /**\r\n             * After place order callback\r\n             */\r\n            afterPlaceOrder: function () {\r\n                if (this.iframeIsLoaded) {\r\n                    document.getElementById(this.getCode() + '-iframe')\r\n                        .contentWindow.location.reload();\r\n                }\r\n\r\n                this.paymentReady(true);\r\n                this.iframeIsLoaded = true;\r\n                this.isPlaceOrderActionAllowed(true);\r\n                fullScreenLoader.stopLoader();\r\n            },\r\n\r\n            /**\r\n             * Hide loader when iframe is fully loaded.\r\n             */\r\n            iframeLoaded: function () {\r\n                fullScreenLoader.stopLoader();\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/payflow-express-bml'\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/payflow-express'\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro-method.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Payment/js/view/payment/iframe',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Checkout/js/action/set-payment-information',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Vault/js/view/payment/vault-enabler'\r\n    ],\r\n    function ($, Component, additionalValidators, setPaymentInformationAction, fullScreenLoader, VaultEnabler) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/payflowpro-form'\r\n            },\r\n            placeOrderHandler: null,\r\n            validateHandler: null,\r\n\r\n            /**\r\n             * @returns {exports.initialize}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                this.vaultEnabler = new VaultEnabler();\r\n                this.vaultEnabler.setPaymentCode(this.getVaultCode());\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @param {Function} handler\r\n             */\r\n            setPlaceOrderHandler: function(handler) {\r\n                this.placeOrderHandler = handler;\r\n            },\r\n\r\n            /**\r\n             * @param {Function} handler\r\n             */\r\n            setValidateHandler: function (handler) {\r\n                this.validateHandler = handler;\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            context: function () {\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns {Boolean}\r\n             */\r\n            isShowLegend: function () {\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getCode: function () {\r\n                return 'payflowpro';\r\n            },\r\n\r\n            /**\r\n             * @returns {Boolean}\r\n             */\r\n            isActive: function () {\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            placeOrder: function () {\r\n                var self = this;\r\n\r\n                if (this.validateHandler() && additionalValidators.validate()) {\r\n                    this.isPlaceOrderActionAllowed(false);\r\n                    fullScreenLoader.startLoader();\r\n                    $.when(\r\n                        setPaymentInformationAction(this.messageContainer, self.getData())\r\n                    ).done(\r\n                        function () {\r\n                            self.placeOrderHandler().fail(\r\n                                function () {\r\n                                    fullScreenLoader.stopLoader();\r\n                                }\r\n                            );\r\n                        }\r\n                    ).always(\r\n                        function () {\r\n                            self.isPlaceOrderActionAllowed(true);\r\n                            fullScreenLoader.stopLoader();\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            getData: function () {\r\n                var data = {\r\n                    'method': this.getCode(),\r\n                    'additional_data': {\r\n                        'cc_type': this.creditCardType(),\r\n                        'cc_exp_year': this.creditCardExpYear(),\r\n                        'cc_exp_month': this.creditCardExpMonth(),\r\n                        'cc_last_4': this.creditCardNumber().substr(-4)\r\n                    }\r\n                };\r\n\r\n                this.vaultEnabler.visitAdditionalData(data);\r\n\r\n                return data;\r\n            },\r\n\r\n            /**\r\n             * @returns {Bool}\r\n             */\r\n            isVaultEnabled: function () {\r\n                return this.vaultEnabler.isVaultEnabled();\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getVaultCode: function () {\r\n                return 'payflowpro_cc_vault';\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/payment/default',\r\n        \"mage/validation\"\r\n    ],\r\n    function ($, Component) {\r\n        'use strict';\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/paypal_billing_agreement-form',\r\n                selectedBillingAgreement: ''\r\n            },\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe('selectedBillingAgreement');\r\n                return this;\r\n            },\r\n            getTransportName: function() {\r\n                return window.checkoutConfig.payment.paypalBillingAgreement.transportName;\r\n            },\r\n            getBillingAgreements: function() {\r\n                return window.checkoutConfig.payment.paypalBillingAgreement.agreements;\r\n            },\r\n            getData: function() {\r\n\r\n                var additionalData = null;\r\n                if (this.getTransportName()) {\r\n                    additionalData = {};\r\n                    additionalData[this.getTransportName()] = this.selectedBillingAgreement();\r\n                }\r\n                return {'method': this.item.method, 'additional_data': additionalData};\r\n            },\r\n            validate: function() {\r\n                var form = '#billing-agreement-form';\r\n                return $(form).validation() && $(form).validation('isValid');\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Magento_Paypal/js/action/set-payment-method',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Customer/js/customer-data'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        setPaymentMethodAction,\r\n        additionalValidators,\r\n        quote,\r\n        customerData\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/paypal-express-bml',\r\n                billingAgreement: ''\r\n            },\r\n\r\n            /** Init observable variables */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe('billingAgreement');\r\n\r\n                return this;\r\n            },\r\n\r\n            /** Open window with  */\r\n            showAcceptanceWindow: function (data, event) {\r\n                window.open(\r\n                    $(event.target).attr('href'),\r\n                    'olcwhatispaypal',\r\n                    'toolbar=no, location=no,' +\r\n                    ' directories=no, status=no,' +\r\n                    ' menubar=no, scrollbars=yes,' +\r\n                    ' resizable=yes, ,left=0,' +\r\n                    ' top=0, width=400, height=350'\r\n                );\r\n\r\n                return false;\r\n            },\r\n\r\n            /** Returns payment acceptance mark link path */\r\n            getPaymentAcceptanceMarkHref: function () {\r\n                return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkHref;\r\n            },\r\n\r\n            /** Returns payment acceptance mark image path */\r\n            getPaymentAcceptanceMarkSrc: function () {\r\n                return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkSrc;\r\n            },\r\n\r\n            /** Returns billing agreement data */\r\n            getBillingAgreementCode: function () {\r\n                return window.checkoutConfig.payment.paypalExpress.billingAgreementCode[this.item.method];\r\n            },\r\n\r\n            /** Returns payment information data */\r\n            getData: function () {\r\n                var parent = this._super(),\r\n                    additionalData = null;\r\n\r\n                if (this.getBillingAgreementCode()) {\r\n                    additionalData = {};\r\n                    additionalData[this.getBillingAgreementCode()] = this.billingAgreement();\r\n                }\r\n\r\n                return $.extend(true, parent, {\r\n                    'additional_data': additionalData\r\n                });\r\n            },\r\n\r\n            /** Redirect to paypal */\r\n            continueToPayPal: function () {\r\n                if (additionalValidators.validate()) {\r\n                    //update payment method information if additional data was changed\r\n                    this.selectPaymentMethod();\r\n                    setPaymentMethodAction(this.messageContainer).done(\r\n                        function () {\r\n                            customerData.invalidate(['cart']);\r\n                            $.mage.redirect(\r\n                                window.checkoutConfig.payment.paypalExpress.redirectUrl[quote.paymentMethod().method]\r\n                            );\r\n                        }\r\n                    );\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express-bml.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/paypal-express-bml'\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/paypal-express'\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/in-context/checkout-express.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'underscore',\r\n        'jquery',\r\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract',\r\n        'Magento_Paypal/js/action/set-payment-method',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Ui/js/lib/view/utils/dom-observer',\r\n        'paypalInContextExpressCheckout',\r\n        'Magento_Customer/js/customer-data'\r\n    ],\r\n    function (\r\n        _,\r\n        $,\r\n        Component,\r\n        setPaymentMethodAction,\r\n        additionalValidators,\r\n        domObserver,\r\n        paypalExpressCheckout,\r\n        customerData\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            defaults: {\r\n                template: 'Magento_Paypal/payment/paypal-express-in-context',\r\n                clientConfig: {\r\n\r\n                    /**\r\n                     * @param {Object} event\r\n                     */\r\n                    click: function (event) {\r\n                        event.preventDefault();\r\n\r\n                        if (additionalValidators.validate()) {\r\n                            paypalExpressCheckout.checkout.initXO();\r\n                            this.selectPaymentMethod();\r\n                            setPaymentMethodAction(this.messageContainer).done(\r\n                                function () {\r\n                                    $('body').trigger('processStart');\r\n\r\n                                    $.getJSON(\r\n                                        this.path,\r\n                                        {\r\n                                            button: 0\r\n                                        }\r\n                                    ).done(\r\n                                        function (response) {\r\n                                            if (response && response.url) {\r\n                                                paypalExpressCheckout.checkout.startFlow(response.url);\r\n\r\n                                                return;\r\n                                            }\r\n\r\n                                            paypalExpressCheckout.checkout.closeFlow();\r\n                                            window.location.reload();\r\n                                        }\r\n                                    ).fail(\r\n                                        function () {\r\n                                            paypalExpressCheckout.checkout.closeFlow();\r\n                                            window.location.reload();\r\n                                        }\r\n                                    ).always(\r\n                                        function () {\r\n                                            $('body').trigger('processStop');\r\n                                            customerData.invalidate(['cart']);\r\n                                        }\r\n                                    );\r\n\r\n                                }.bind(this)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n                this.initClient();\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initClient: function () {\r\n                _.each(this.clientConfig, function (fn, name) {\r\n                    if (typeof fn === 'function') {\r\n                        this.clientConfig[name] = fn.bind(this);\r\n                    }\r\n                }, this);\r\n\r\n                domObserver.get('#' + this.getButtonId(), function () {\r\n                    paypalExpressCheckout.checkout.setup(this.merchantId, this.clientConfig);\r\n                }.bind(this));\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getButtonId: function () {\r\n                return this.inContextId;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro/vault.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine([\r\n    'jquery',\r\n    'Magento_Vault/js/view/payment/method-renderer/vault'\r\n], function ($, VaultComponent) {\r\n    'use strict';\r\n\r\n    return VaultComponent.extend({\r\n        defaults: {\r\n            template: 'Magento_Vault/payment/form'\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getToken: function () {\r\n            return this.publicHash;\r\n        },\r\n\r\n        /**\r\n         * Get last 4 digits of card\r\n         * @returns {String}\r\n         */\r\n        getMaskedCard: function () {\r\n            return this.details['cc_last_4'];\r\n        },\r\n\r\n        /**\r\n         * Get expiration date\r\n         * @returns {String}\r\n         */\r\n        getExpirationDate: function () {\r\n            return this.details['cc_exp_month'] + '/' + this.details['cc_exp_year'];\r\n        },\r\n\r\n        /**\r\n         * Get card type\r\n         * @returns {String}\r\n         */\r\n        getCardType: function () {\r\n            return this.details['cc_type'];\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/review/actions/iframe.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n/*global define*/\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'ko',\r\n        'Magento_Paypal/js/model/iframe'\r\n    ],\r\n    function (Component, ko, iframe) {\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Paypal/review/actions/iframe'\r\n            },\r\n            getCode: function() {\r\n                return this.index;\r\n            },\r\n            getActionUrl: function() {\r\n                return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\r\n            },\r\n            afterSave: function() {\r\n                iframe.setIsInAction(true);\r\n                return false;\r\n            },\r\n            isInAction: function() {\r\n                return iframe.getIsInAction()();\r\n            },\r\n            placeOrder: function(context) {\r\n                return context.placeOrder.bind(context, this.afterSave);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Bundle/js/price-bundle.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        optionConfig: null,\r\n        productBundleSelector: 'input.bundle.option, select.bundle.option, textarea.bundle.option',\r\n        qtyFieldSelector: 'input.qty',\r\n        priceBoxSelector: '.price-box',\r\n        optionHandlers: {},\r\n        optionTemplate: '<%- data.label %>' +\r\n        '<% if (data.finalPrice.value) { %>' +\r\n        ' +<%- data.finalPrice.formatted %>' +\r\n        '<% } %>',\r\n        controlContainer: 'dd', // should be eliminated\r\n        priceFormat: {},\r\n        isFixedPrice: false\r\n    };\r\n\r\n    $.widget('mage.priceBundle', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form);\r\n\r\n            options.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function createPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form),\r\n                qty = $(this.options.qtyFieldSelector, form);\r\n\r\n            if (priceBox.data('magePriceBox') && priceBox.priceBox('option') && priceBox.priceBox('option').priceConfig) {\r\n                if (priceBox.priceBox('option').priceConfig.optionTemplate) {\r\n                    this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                }\r\n                this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n                priceBox.priceBox('setDefault', this.options.optionConfig.prices);\r\n            }\r\n\r\n            this._applyOptionNodeFix(options);\r\n\r\n            options.on('change', this._onBundleOptionChanged.bind(this));\r\n            qty.on('change', this._onQtyFieldChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Handle change on bundle option inputs\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onBundleOptionChanged: function onBundleOptionChanged(event) {\r\n            var changes,\r\n                bundleOption = $(event.target),\r\n                priceBox = $(this.options.priceBoxSelector, this.element),\r\n                handler = this.options.optionHandlers[bundleOption.data('role')];\r\n\r\n            bundleOption.data('optionContainer', bundleOption.closest(this.options.controlContainer));\r\n            bundleOption.data('qtyField', bundleOption.data('optionContainer').find(this.options.qtyFieldSelector));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(bundleOption, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(bundleOption, this.options.optionConfig);\r\n            }\r\n\r\n            if (changes) {\r\n                priceBox.trigger('updatePrice', changes);\r\n            }\r\n            this.updateProductSummary();\r\n        },\r\n\r\n        /**\r\n         * Handle change on qty inputs near bundle option\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onQtyFieldChanged: function onQtyFieldChanged(event) {\r\n            var field = $(event.target),\r\n                optionInstance,\r\n                optionConfig;\r\n\r\n            if (field.data('optionId') && field.data('optionValueId')) {\r\n                optionInstance = field.data('option');\r\n                optionConfig = this.options.optionConfig\r\n                    .options[field.data('optionId')]\r\n                    .selections[field.data('optionValueId')];\r\n                optionConfig.qty = field.val();\r\n\r\n                optionInstance.trigger('change');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix backend behavior:\r\n         *  - if default qty large than 1 then backend multiply price in config\r\n         *\r\n         * @private\r\n         */\r\n        _applyQtyFix: function applyQtyFix() {\r\n            var config = this.options.optionConfig;\r\n            if (config.isFixedPrice) {\r\n                _.each(config.options, function (option) {\r\n                    _.each(option.selections, function (item) {\r\n                        if (item.qty && item.qty !== 1) {\r\n                            _.each(item.prices, function (price) {\r\n                                price.amount = price.amount / item.qty;\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionName = $element.prop('name'),\r\n                    optionType = $element.prop('type'),\r\n                    optionConfig = config.optionConfig && config.optionConfig.options[optionId].selections;\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue].prices;\r\n\r\n                    _.each(prices, function (price, type) {\r\n                        var value = +(price.amount);\r\n                        value += _.reduce(price.adjustments, function (sum, x) {\r\n                            return sum + x;\r\n                        }, 0);\r\n                        toTemplate.data[type] = {\r\n                            value: value,\r\n                            formatted: utils.formatPrice(value, format)\r\n                        };\r\n                    });\r\n\r\n                    $option.html(template(toTemplate));\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            this._super(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handler to update productSummary box\r\n         */\r\n        updateProductSummary: function updateProductSummary() {\r\n            this.element.trigger('updateProductSummary', {\r\n                config: this.options.optionConfig\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBundle;\r\n\r\n    /**\r\n     * Converts option value to priceBox object\r\n     *\r\n     * @param   {jQuery} element\r\n     * @param   {Object} config\r\n     * @returns {Object|null} - priceBox object with additional prices\r\n     */\r\n    function defaultGetOptionValue(element, config) {\r\n        var changes = {},\r\n            optionHash,\r\n            tempChanges,\r\n            qtyField,\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionValue = element.val() || null,\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = config.options[optionId].selections,\r\n            optionQty = 0,\r\n            canQtyCustomize = false,\r\n            selectedIds = config.selected;\r\n\r\n        switch (optionType) {\r\n            case 'radio':\r\n\r\n            case 'select-one':\r\n\r\n                if (optionType === 'radio' && !element.is(':checked')) {\r\n                    return null;\r\n                }\r\n\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n\r\n                if (optionValue) {\r\n                    optionQty = optionConfig[optionValue].qty || 0;\r\n                    canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                    toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);\r\n                    tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig[optionValue]);\r\n                    tempChanges = applyQty(tempChanges, optionQty);\r\n                } else {\r\n                    tempChanges = {};\r\n                    toggleQtyField(qtyField, '0', optionId, optionValue, false);\r\n                }\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                optionValue = _.compact(optionValue);\r\n\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = 'bundle-option-' + optionName + '##' + optionValueCode;\r\n                    optionQty = row.qty || 0;\r\n                    tempChanges = utils.deepClone(row.prices);\r\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);\r\n                    tempChanges = applyQty(tempChanges, optionQty);\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? tempChanges : {};\r\n                });\r\n\r\n                selectedIds[optionId] = optionValue || [];\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);\r\n                tempChanges = applyQty(tempChanges, optionQty);\r\n                changes[optionHash] = element.is(':checked') ? tempChanges : {};\r\n\r\n                selectedIds[optionId] = selectedIds[optionId] || [];\r\n\r\n                if (!_.contains(selectedIds[optionId], optionValue) && element.is(':checked')) {\r\n                    selectedIds[optionId].push(optionValue);\r\n                } else if (!element.is(':checked')) {\r\n                    selectedIds[optionId] = _.without(selectedIds[optionId], optionValue);\r\n                }\r\n                break;\r\n\r\n            case 'hidden':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);\r\n                tempChanges = applyQty(tempChanges, optionQty);\r\n\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    /**\r\n     * Helper to toggle qty field\r\n     * @param {jQuery} element\r\n     * @param {String|Number} value\r\n     * @param {String|Number} optionId\r\n     * @param {String|Number} optionValueId\r\n     * @param {Boolean} canEdit\r\n     */\r\n    function toggleQtyField(element, value, optionId, optionValueId, canEdit) {\r\n        element\r\n            .val(value)\r\n            .data('optionId', optionId)\r\n            .data('optionValueId', optionValueId)\r\n            .attr('disabled', !canEdit);\r\n\r\n        if (canEdit) {\r\n            element.removeClass('qty-disabled');\r\n        } else {\r\n            element.addClass('qty-disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper to multiply on qty\r\n     *\r\n     * @param   {Object} prices\r\n     * @param   {Number} qty\r\n     * @returns {Object}\r\n     */\r\n    function applyQty(prices, qty) {\r\n        _.each(prices, function (everyPrice) {\r\n            everyPrice.amount *= qty;\r\n            _.each(everyPrice.adjustments, function (el, index) {\r\n                everyPrice.adjustments[index] *= qty;\r\n            });\r\n        });\r\n\r\n        return prices;\r\n    }\r\n\r\n    /**\r\n     * Helper to limit price with tier price\r\n     *\r\n     * @param {Object} oneItemPrice\r\n     * @param {Number} qty\r\n     * @param {Object} optionConfig\r\n     * @returns {Object}\r\n     */\r\n    function applyTierPrice(oneItemPrice, qty, optionConfig) {\r\n        var tiers = optionConfig.tierPrice,\r\n            magicKey = _.keys(oneItemPrice)[0],\r\n            lowest = false;\r\n\r\n        _.each(tiers, function (tier, index) {\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (tier.price_qty > qty) {\r\n                return;\r\n            }\r\n            // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n\r\n            if (tier.prices[magicKey].amount < oneItemPrice[magicKey].amount) {\r\n                lowest = index;\r\n            }\r\n        });\r\n\r\n        if (lowest !== false) {\r\n            oneItemPrice = utils.deepClone(tiers[lowest].prices);\r\n        }\r\n\r\n        return oneItemPrice;\r\n    }\r\n});\r\n","Magento_Bundle/js/float.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*jshint browser:true jquery:true expr:true*/\r\ndefine([\"jquery\",\"jquery/ui\"], function($){\r\n\r\n    $.widget('mage.float', {\r\n        options: {\r\n            productOptionsSelector: '#product-options-wrapper'\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to scroll event\r\n         * @private\r\n         */\r\n        _create: function() {\r\n            $(window).on('scroll', $.proxy(this._setTop, this));\r\n        },\r\n\r\n        /**\r\n         * float bundleSummary on windowScroll\r\n         * @private\r\n         */\r\n        _setTop: function() {\r\n            if ((this.element).is(':visible')) {\r\n                var starTop = $(this.options.productOptionsSelector).offset().top,\r\n                    offset = $(document).scrollTop(),\r\n                    maxTop = this.element.parent().offset().top;\r\n                if (!this.options.top) {\r\n                    this.options.top = this.element.position().top;\r\n                    this.element.css('top', this.options.top);\r\n                }\r\n\r\n                if (starTop > offset) {\r\n                    return false;\r\n                }\r\n\r\n                if (offset < this.options.top) {\r\n                    offset = this.options.top;\r\n                }\r\n\r\n                var allowedTop = this.options.top + offset - starTop;\r\n\r\n                if (allowedTop < maxTop) {\r\n                    this.element.css('top', allowedTop);\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Bundle/js/product-summary.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery/ui',\r\n    'Magento_Bundle/js/price-bundle'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Widget product Summary:\r\n     * Handles rendering of Bundle options and displays them in the Summary box\r\n     */\r\n    $.widget('mage.productSummary', {\r\n        options: {\r\n            mainContainer:          '#product_addtocart_form',\r\n            templates: {\r\n                summaryBlock:       '[data-template=\"bundle-summary\"]',\r\n                optionBlock:        '[data-template=\"bundle-option\"]'\r\n            },\r\n            optionSelector:         '[data-container=\"options\"]',\r\n            summaryContainer:       '[data-container=\"product-summary\"]',\r\n            bundleSummaryContainer: '.bundle-summary'\r\n        },\r\n        cache: {},\r\n        /**\r\n         * Method attaches event observer to the product form\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element\r\n                .closest(this.options.mainContainer)\r\n                .on('updateProductSummary', $.proxy(this._renderSummaryBox, this))\r\n                .priceBundle({})\r\n            ;\r\n        },\r\n        /**\r\n         * Method extracts data from the event and renders Summary box\r\n         * using jQuery template mechanism\r\n         * @param {Event} event\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _renderSummaryBox: function (event, data) {\r\n            this.cache.currentElement = data.config;\r\n            this.cache.currentElementCount = 0;\r\n\r\n            // Clear Summary box\r\n            this.element.html('');\r\n\r\n            $.each(this.cache.currentElement.selected, $.proxy(this._renderOption, this));\r\n            this.element\r\n                .parents(this.options.bundleSummaryContainer)\r\n                .toggleClass('empty', !this.cache.currentElementCount); // Zero elements equal '.empty' container\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {String} row\r\n         * @private\r\n         */\r\n        _renderOption: function (key, row) {\r\n            var template;\r\n\r\n            if (row && row.length > 0 && row[0] !== null) {\r\n                template = this.element\r\n                    .closest(this.options.summaryContainer)\r\n                    .find(this.options.templates.summaryBlock)\r\n                    .html();\r\n                template = mageTemplate($.trim(template), {\r\n                    data: {\r\n                        _label_: this.cache.currentElement.options[key].title\r\n                    }\r\n                });\r\n\r\n                this.cache.currentKey = key;\r\n                this.cache.summaryContainer = $(template);\r\n                this.element.append(this.cache.summaryContainer);\r\n\r\n                $.each(row, this._renderOptionRow.bind(this));\r\n                this.cache.currentElementCount += row.length;\r\n\r\n                //Reset Cache\r\n                this.cache.currentKey = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {String} optionIndex\r\n         * @private\r\n         */\r\n        _renderOptionRow: function (key, optionIndex) {\r\n            var template;\r\n\r\n            template = this.element\r\n                .closest(this.options.summaryContainer)\r\n                .find(this.options.templates.optionBlock)\r\n                .html();\r\n            template = mageTemplate($.trim(template), {\r\n                data: {\r\n                    _quantity_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].qty,\r\n                    _label_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].name\r\n                }\r\n            });\r\n            this.cache.summaryContainer\r\n                .find(this.options.optionSelector)\r\n                .append(template);\r\n        }\r\n    });\r\n\r\n    return $.mage.productSummary;\r\n});\r\n","Magento_Translation/add-class.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).addClass(config.class);\r\n    };\r\n});\r\n","Magento_Translation/js/i18n-config.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n'use strict';\r\n\r\n(function () {\r\n    require.config({\r\n        config: {\r\n            'Magento_Ui/js/lib/knockout/bindings/i18n': {\r\n                inlineTranslation: true\r\n            }\r\n        }\r\n    });\r\n})();\r\n","Magento_Weee/js/view/cart/totals/weee.js":"/**\r\n * Copyright \u00c2\u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'Magento_Weee/js/view/checkout/summary/weee'\r\n    ],\r\n    function (Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            isFullMode: function () {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n);\r\n"}
    }
});
